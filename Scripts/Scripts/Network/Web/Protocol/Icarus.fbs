
namespace WebNet;

enum Version: uint { Num = 3322562213 }

// code range: ushort (0 ~ 65535)
enum Code: ushort {
// 0 ~ 1000
// ######################### [Common] #########################
// [공용] 어느 서버에서나 사용 가능
    COMMON_GET_ALL_CHAR_INFO_BUNDLE = 6,                // 케릭터 모든 정보 묶음 정보

    COMMON_PARTY_CHECK = 10,                            // 파티 여부 확인
    COMMON_PARTY_MEMBER_INFO = 11,                      // 파티 멤버 정보 요청
    COMMON_PARTY_CREATE = 12,                           // 파티 생성
    COMMON_PARTY_INVITE = 13,                           // 파티 초대
    COMMON_PARTY_JOIN = 14,                             // 파티 가입
    COMMON_PARTY_REFUSE = 15,                           // 파티 거절
    COMMON_PARTY_OUT = 16,                              // 파티 탈퇴
    COMMON_PARTY_KICK_OUT = 17,                         // 파티 강퇴
    COMMON_PARTY_CHANGE_MASTER = 18,                    // 파티장 위임

    COMMON_GET_CHARACTER_OPTION = 100,                  // 케릭터 옵션 하나 정보
    COMMON_SET_CHARACTER_OPTION = 103,                  // 케릭터 옵션 저장 한다.

// COLOSSEUM
    COMMON_ADD_COLOSSEUM_SERVER = 104,                  // 콜로세움 서버 추가
    COMMON_REWARD_COLOSSEUM_SERVER = 105,               // 콜로세움 서버에서 보상을 받는다.

// 마스터 - 클러스터용 (서버 전용)
    COMMON_WHITE_INFO_LIST = 500,                       // 화이트 유저 정보 리스트
    COMMON_CLOSE_SOCKET_CLEAR = 501,                    // 닫힌 소켓 삭제

    COMMON_CLUSTER_UPDATE_COLOSSEUM_STATE = 502,        // 콜로세움 서버 상태값
    COMMON_CLUSTER_REWARD_COLOSSEUM_SERVER = 503,       // 콜로세움 서버 보상

    COMMON_CLUSTER_ADD_COLOSSEUM_QUEUE = 504,           // 콜로세움 큐에 등록
    COMMON_CLUSTER_LEAVE_COLOSSEUM_QUEUE = 505,         // 콜로세움 큐에 등록 취소

    COMMON_CLUSTER_LEAVE_COLOSSEUM = 506,               // 콜로세움 플레이중 끊김

    COMMON_CLUSTER_JOIN_COLOSSEUM_SERVER = 507,         // 콜로세움 매칭이 되었으니 게임을 플레이한다.
    COMMON_CLUSTER_REJOIN_COLOSSEUM_SERVER = 508,       // 콜로세움 매칭이 되었으니 게임을 플레이한다.

    COMMON_CLUSTER_SERVER_MAPPER_CONFIG = 509,          // 서버 정보

    COMMON_CLUSTER_CHECK_USER_CONNECT = 510,            // 받았을 때 해당 유저 접속 중인지 체크
    COMMON_CLUSTER_COLOSSEUM_MATCHING_END = 511,        // 콜로세움 매칭 종료 알림 - [char_id] 처리 되어야 함

// 1000 ~ 19999
// ######################### [Game] #########################
// [계정]
    GS_ACCOUNT_LOGIN = 1000,					        // 로그인
    GS_CHANGE_NICK = 1001,                              // 닉네임 변경
    GS_COMBINE_CHANGE_NICK = 1002,                      // 통합 닉네임 변경
    GS_ACCOUNT_LEAVE = 1003,                            // 계정 탈퇴

// [케릭터]
    GS_CHARACTER_CREATE = 2000,		    			    // 케릭터 생성
    GS_CHARACTER_DELETE = 2001,		    			    // 케릭터 삭제
    GS_CHARACTER_DELETE_ROLLBACK = 2002,	   			// 케릭터 삭제 롤백
    GS_CHARACTER_LIST = 2003,						    // 케릭터 목록
    GS_CHARACTER_REVIVE = 2006,						    // 케릭터 부활

    GS_USE_STAT_POINT = 2007,                           // 스탯 포인트 사용
    GS_RESET_STAT_POINT = 2008,                         // 스탯 포인트 초기화
    GS_USE_SPECIAL_SKILL_POINT = 2009,                  // 궁극기 스킬 포인트 사용
    GS_RESET_SPECIAL_SKILL_POINT = 2010,                // 궁극기 스킬 포인트 초기화
    GS_RESTORE_EXP_LIST = 2011,  						// 복구해야할 경험치 정보
    GS_RESTORE_EXP = 2012,  						    // 경험치 복구
    GS_CHARACTER_SLOT_EXTEND = 2013,  					// 케릭터 슬롯 확장
    GS_RING_SLOT_EXTEND = 2014,  					    // 반지 슬롯 확장
    GS_INVEN_SLOT_EXTEND = 2015,                        // 인벤 슬롯 확장
    GS_QUICK_SLOT_EXTEND = 2016,                        // 퀵 슬롯 확장
    GS_SPECIAL_SKILL_EXTEND = 2017,                     // 궁극기 스킬 확장
    GS_GET_PK_LOG_LIST = 2018,                          // pk 로그
    GS_PK_SNEER = 2019,                                 // pk 조롱하기
//
    GS_CHARACTER_BLOCK_LIST = 2100,                     // 케릭 블럭 리스트
    GS_CHARACTER_BLOCK_SET = 2101,                      // 케릭 블럭 유저 추가
    GS_CHARACTER_BLOCK_DEL = 2102,                      // 케릭 블럭 유저 삭제
    GS_SET_SKILL_USE_ORDER = 2103,                      // 스킬 사용 순서 셋팅
    GS_SET_RUNE_OPTION = 2104,                          // 룬 옵션 셋팅
    GS_SET_ITEM_OPTION = 2105,                          // 아이템 옵션 셋팅

    GS_CLASS_CHANGE = 2110,                             // 클레스 체인지

// [스테이지]
    GS_SCENARIO_DUNGEON_REWARD = 2520,                      // 시나리오 던전 보상
    GS_MMO_CHANNEL_LIST = 2521,                             // MMO 채널 리스트 요청
    GS_MMO_STAGE_ENTER = 2522,                              // MMO 로그인시 스테이지 입장.
    GS_MMO_CHANGE_CHANNEL_ENTER = 2523,                     // MMO 스테이지 채널 변경
    GS_MMO_PORTAL_ENTER = 2524,                             // MMO 포탈 입장
    GS_TEMPLE_ITEM_OPEN = 2525,                             // 아이템으로 유적 오픈
    GS_TEMPLE_GIMMICK_OPEN = 2526,                          // 기믹으로 유적 오픈
    GS_TEMPLE_GACHA_ITEM = 2527,                            // 유적 상자 오픈
    GS_TEMPLE_CLEAR_REWARD = 2528,                          // 유적 클리어
    GS_INFINITY_DUNGEON_GET_OPEN_INFO = 2529,               // 오픈된 무한의 탑 정보
    GS_INFINITY_DUNGEON_CLEAR_REWARD = 2530,                // 무한의탑 클리어 보상
    GS_INFINITY_DUNGEON_DAILY_REWARD = 2531,                // 무한의 탑 일일 보상
    GS_INFINITY_DUNGEON_RESET = 2532,                       // 무한의 탑 초기화
    GS_GET_INFINITY_DUNGEON_SELECT_BUFF_LIST = 2533,        // 무한의 탑 선택할수있는 버프 리스트
    GS_INFINITY_DUNGEON_SELECT_BUFF = 2534,                 // 무한의 탑 버프 선택
    GS_GET_INFINITY_DUNGEON_BUFF_LIST = 2535,               // 무한의 탑 버프 리스트

    GS_FIELD_BOSS_KILLER_GUILD_ALL = 2536,                  // 필드 보스를 잡은 길드 정보 (전체 스테이지)

    GS_GOD_LAND_GET_INFO = 2537,                            // 성역 정보
    GS_GOD_LAND_FIGHT_MATCH = 2538,                         // 성역 인스턴스 전투 시작
    GS_GOD_LAND_GATHERING_REWARD = 2539,                    // 성역 채집 보상
    GS_GOD_LAND_FIGHT_RECODE = 2540,                        // 성역 전투 결과 기록 요청

    GS_GET_SERVER_BOSS_INFO = 2541,                         // 서버 보스 정보 요청
    GS_INTER_STAGE_CAMP_ENTER = 2542,                       // 인터서버 캠프 입장.
    GS_INTER_STAGE_FIELD_ENTER = 2543,                      // 인터서버 필드 입장.

    GS_GOD_LAND_SELF_INFO = 2544,                           // 내 성역 정보
    GS_GOD_LAND_DISCARD = 2545,                             // 내 성역 포기

// [아이템]
    GS_ITEM_EQUIP = 3001,				                // 아이템 장착
    GS_ITEM_UNEQUIP = 3002,				                // 아이템 탈착
    GS_ITEM_USE = 3003,                                 // 아이템 사용(물약 제외)
    GS_ITEM_UPGRADE = 3004,                             // 아이템 승급
    GS_ITEM_ENCHANT = 3005,                             // 아이템 강화
    GS_ITEM_MAKE = 3006,                                // 아이템 제작
    GS_ITEM_BREAK = 3007,                               // 아이템 분해
    GS_ITEM_DELETE = 3008,                              // 아이템 삭제
    GS_ITEM_GACHA = 3009,                               // 아이템 가챠
    GS_EXP_HONOR_COIN_TRADE = 3010,                     // 경험치를 명예코인 변환
    GS_ITEM_LOCK_TOGGLE = 3011,                         // 아이템 락 토글
    GS_ITEM_USE_TENDENCY = 3012,                        // 면죄부 아이템 사용
    GS_GET_MAKE_ITEM_LIMIT_LIST = 3013,                 // 아이템 제작 횟수 정보
    GS_GET_CHECK_ITEM = 3014,                           // 확인해야할 아이템
    GS_SKILL_ITEM_USE = 3015,                           // 스킬 아이템 사용
    GS_RECOVERY_ITEM_INFO = 3016,                       // 복구 가능한 아이템 정보
    GS_RECOVERY_ITEM = 3017,                            // 아이템 복구
    GS_RUNE_VERSION = 3018,                             // 룬 인벤 버전 요청
    GS_RUNE_EQUIP = 3019,                               // 룬 아이템 장착
    GS_RUNE_DELETE = 3020,                              // 룬 아이템 삭제
    GS_RUNE_UNEQUIP = 3021,                             // 룬 아이템 장착 해제
    GS_RUNE_SELL = 3022,                                // 룬 아이템 판매
    GS_RUNE_ENCHANT = 3023,                             // 룬 아이템 강화
    GS_GET_ITEM_SMELT_INFO = 3024,                      // 아이템 제련 정보
    GS_ITEM_SMELT_START = 3025,                         // 아이템 제련 시작
    GS_ITEM_SMELT_END = 3026,                           // 아이템 제련 확정
    GS_ITEM_SHOP_GACHA = 3027,                          // 아이템 상점 가챠

    GS_ITEM_SMELT_CANCEL = 3028,                        // 아이템 제련 취소
    GS_MAKE_ARTIFACT_ITEM = 3029,                       // 아티팩트 아이템 제작
    GS_GEM_ITEM_EQUIP = 3030,                           // 잼 아이템 장착
    GS_GEM_ITEM_UNEQUIP = 3031,                         // 잼 아이템 탈착
    GS_ARTIFACT_EQUIP = 3032,                           // 아티팩트 장착
    GS_ARTIFACT_UNEQUIP = 3033,                         // 아티팩트 탈착
    GS_MAKE_COOK_ITEM = 3034,                           // 요리 아이템 제작
    GS_MAKE_COOK_ITEM_NO_RECIPE = 3035,                 // 요리 아이템 제작(레시피 없음)

// [상점]
    GS_GET_ITEM_BUY_LIMIT_LIST = 3200,                  // 아이템 구매 횟수 정보
    GS_ITEM_SELL = 3201,                                // 아이템 판매
    GS_SPECIAL_SHOP_BUY = 3202,                         // 스페셜 상점 구매
    GS_MILEAGE_SHOP_BUY = 3203,                         // 마일리 상점 구매
    GS_NORMAL_SHOP_BUY = 3204,                          // 일반 상점 구매
    GS_GET_CASH_COIN_BALANCE = 3205,                    // 캐쉬 코인 잔여량 가져오기

// [창고]
    GS_STORAGE_ITEM_LIST = 3400,                        // 창고 아이템 리스트
    GS_STORAGE_ITEM_PUT = 3401,                         // 창고 아이템 맡기기
    GS_STORAGE_ITEM_GET = 3402,                         // 창고 아이템 찾기
    GS_STORAGE_SLOT_EXTEND = 3403,                      // 창고 슬롯 확장

// [수집]
    GS_ITEM_COLLECT_MAKE = 3600,                        // 아이템 수집 추가
    GS_CHANGE_COLLECT_MAKE = 3601,                      // 변신체 수집 추가
    GS_PET_COLLECT_MAKE = 3602,                         // 팻 수집 추가

// [변신체]
    GS_CHANGE_COMPOSE = 3700,                           // 변신체 합성
    GS_CHANGE_EQUIP = 3701,                             // 변신체 장착
    GS_CHANGE_UNEQUIP = 3702,                           // 변신체 탈착
    GS_CHANGE_ENCHANT = 3703,                           // 변신체 강화
    GS_CHANGE_RETRY_GACHA_KEEP = 3704,                  // 변신체 다시 뽑기
    GS_CHANGE_TAKE_GACHA_KEEP = 3705,                   // 변신체 다시 확정
    GS_CHANGE_EXTRACTION = 3706,                        // 변신체 추출

// [변신체 퀘스트]
    GS_CHANGE_QUEST_DAILY_RESET = 3750,                 // 변신체 퀘스트 일일 리셋
    GS_CHANGE_QUEST_REGIST_CHANGE = 3751,               // 변신체 퀘스트 파견
    GS_CHANGE_QUEST_REWARD = 3752,                      // 변신체 퀘스트 완료 보상 요청
    GS_CHANGE_QUEST_LEVEL_UP = 3753,                    // 변신체 퀘스트 레벨 업

// [팻]
    GS_PET_COMPOSE = 3800,                              // 팻 합성
    GS_PET_EQUIP = 3801,                                // 팻 장착
    GS_PET_UNEQUIP = 3802,                              // 팻 탈착(탈것 제외)
    GS_PET_ENCHANT = 3803,                              // 팻 강화(탈것 제외)
    GS_PET_RETRY_GACHA_KEEP = 3804,                     // 팻 다시 뽑기
    GS_PET_TAKE_GACHA_KEEP = 3805,                      // 팻 다시 확정
    GS_PET_GROWTH = 3806,                               // 팻 성장
    GS_PET_EXTRACTION = 3807,                           // 펫 추출
    GS_TAKE_PET_ADV_INFO = 3808,                        // 새로운 팻 모험 받기
    GS_PET_ADV_START = 3809,                            // 팻 탐험 시작
    GS_PET_ADV_REWARD = 3810,                           // 팻 탐험 보상 요청
    GS_PET_ADV_CANCEL = 3811,                           // 펫 탐험 취소
    GS_PET_ADV_RESET = 3812,                            // 펫 탐험 쿨타임 리셋

// [문양]
    GS_MARK_ENCHANT = 3900,                             // 문양 강화

// [속성]
    GS_ATTRIBUTE_ENCHANT = 3950,                        // 속성 강화

// [거래소]
    GS_EXCHANGE_SELL = 4000,                            // 거래소 아이템 판매
    GS_EXCHANGE_SEARCH_ITEM = 4001,                     // 거래소 아이템 검색
    GS_EXCHANGE_SEARCH_PRICE = 4002,                    // 거래소 시세 확인
    GS_EXCHANGE_BUY = 4003,                             // 거래소 아이템 구매
    GS_EXCHANGE_WITHDRAW = 4004,                        // 거래소 판매 안된 아이템 회수
    GS_EXCHANGE_SELL_LIST = 4005,                       // 거래소 판매중인 리스트
    GS_EXCHANGE_SOLD_OUT_LIST = 4006,                   // 거래소 판매완료 리스트
    GS_EXCHANGE_TAKE_MONEY = 4007,                      // 거래소 정산 금액 받기
    GS_EXCHANGE_ITEM_DETAIL_INFO = 4008,                // 거래소 아이템 상세 정보

// [1:1 거래]
    //GS_TRADE_SELL = 4100,                               // 거래 아이템 판매 (BI_TRADE_SELL로 변경)
    GS_TRADE_BUY = 4101,                                // 거래 아이템 구매
    GS_TRADE_WITHDRAW = 4102,                           // 거래 판매 안된 아이템 회수
    GS_TRADE_SELL_LIST = 4103,                          // 거래 판매 리스트
    GS_TRADE_BUY_LIST = 4104,                           // 거래 구매 리스트
    GS_TRADE_TAKE_MONEY = 4105,                         // 거래 정산 금액 받기

// [메일]
    GS_GET_MAIL_REFRESH_TIME = 5000,                    // 우편 갱신 시간
    GS_GET_MAIL_LIST = 5001,                            // 우편 리스트 요청
    GS_TAKE_MAIL_ITEM = 5002,                           // 우편 아이템 수령 요청
    GS_GET_MESSAGE_LIST = 5003,                         // 쪽지 리스트 요청
    GS_READ_MESSAGE = 5004,                             // 쪽지 읽기
    GS_SEND_MESSAGE = 5005,                             // 쪽지 보내기
    GS_DEL_MESSAGE = 5006,                              // 쪽지 삭제
    GS_GET_EXCHANGE_MESSAGE_LIST = 5007,                // 거래소 쪽지 리스트 요청
    GS_READ_EXCHANGE_MESSAGE = 5008,                    // 거래소 쪽지 읽기
    GS_SEND_EXCHANGE_MESSAGE = 5009,                    // 거래소 쪽지 보내기
    GS_DEL_EXCHANGE_MESSAGE = 5010,                     // 거래소 쪽지 삭제

    GS_GET_CASH_MAIL_LIST = 5011,                       // 케쉬 우편 리스트 요청
    GS_TAKE_CASH_MAIL_ITEM = 5012,                      // 케쉬 우편 아이템 수령 요청

// [랭킹]
    GS_GET_EXP_RANK_LIST = 5100,                        // exp 랭킹
    GS_GET_PK_RANK_LIST = 5101,                         // pk 랭킹
    GS_GET_COLOSSEUM_RANK = 5102,                       // 콜로세움 랭킹 정보

// [이벤트]
    GS_DAILY_ATTEND_EVENT = 5200,                       // 계정 출석
    GS_CHECK_DAILY_RESET_EVENT = 5201,                  // 일간, 주간, 월간 이벤트 초기화
    GS_CHECK_LOGIN_EVENT = 5202,                        // 로그인 이벤트
    GS_REGIST_COUPON = 5203,                            // 쿠폰 등록
    GS_GET_SERVER_EVENT_LIST = 5204,                    // 서버에서 진행하는 이벤트 정보
    GS_GAME_SURVEY = 5205,                              // 게임 설문조사
    GS_GET_ACCOUNT_ATTEND_INFO_LIST = 5206,                  // 계정 출석 목록
    GS_GET_ACCOUNT_ATTEND_REWARD = 5207,                // 계정 출석 보상 요청

// [친구]
    GS_GET_FRIEND_LIST = 5300,                          // 친구 정보
    GS_FIND_FRIEND = 5301,                              // 친구 찾기
    GS_REQUEST_FRIEND = 5302,                           // 친구 요청
    GS_REQUEST_FRIEND_LIST = 5303,                      // 친구 요청 정보
    GS_REQUEST_FRIEND_ACCEPT = 5304,                    // 친구 요청 승인
    GS_REQUEST_FRIEND_CANCEL = 5305,                    // 친구 요청 취소
    GS_DEL_FRIEND = 5306,                               // 친구 삭제
    GS_ADD_ALERT_FRIEND = 5307,                         // 경계대상 추가

// [시스템]
    GS_HACK_USER = 5500,                                // 해킹 의심 유저

// [옵션]
   GS_GET_CHARACTER_OPTION_LIST = 5700,                 // 케릭터 옵션 리스트
   GS_SET_ACCOUNT_OPTION = 5703,                        // 계정 옵션 저장 한다.

// [길드]
   GS_CREATE_GUILD = 5800,                              // 길드 생성
   GS_DISMISS_GUILD = 5801,                             // 길드 해산
   GS_APPOINT_GUILD_MEMBER = 5802,                      // 길드원 임명
   GS_GUILD_REQUEST_LIST_FOR_GUILD = 5803,              // 길드 가입 요청 정보(길드 기준)
   GS_GUILD_REQUEST_LIST_FOR_CHAR = 5804,               // 길드 가입 요청 정보(케릭터 기준)
   GS_GUILD_REQUEST_ACCEPT = 5805,                      // 길드원 가입 수락
   GS_GUILD_REQUEST_REJECT = 5806,                      // 길드원 가입 거절
   GS_GUILD_MEMBER_BAN = 5807,                          // 길드원 추방
   GS_GUILD_MEMBER_LEAVE = 5808,                        // 길드원 탈퇴
   GS_UPDATE_GUILD_INFO = 5809,                         // 길드 소개 혹은 공지 수정
   GS_UPDATE_GUILD_MARK = 5810,                         // 길드 소개 혹은 공지 수정
   GS_GUILD_REQUEST_JOIN = 5811,                        // 길드에 가입 요청
   GS_GUILD_REQUEST_JOIN_CANCEL = 5812,                 // 길드에 가입 요청 취소
   GS_RECOMMEND_GUILD_INFO = 5813,                      // 추천 길드
   GS_FIND_GUILD_INFO = 5814,                           // 길드 찾기
   GS_GET_GUILD_INFO = 5815,                            // 길드 정보
   GS_GUILD_ATTEND_REWARD = 5816,                       // 길드 출석 보상
   GS_GET_GUILD_EXP_RANK = 5817,                        // 길드 경험치 랭킹
   GS_GET_GUILD_ALLIANCE_LIST = 5818,                   // 길드 연맹 정보
   GS_GUILD_ALLIANCE_REQUEST = 5819,                    // 길드 연맹 추가 요청
   GS_GUILD_ALLIANCE_ACCEPT = 5820,                     // 길드 연맹 추가 요청 승인
   GS_GUILD_ALLIANCE_REJECT = 5821,                     // 길드 연맹 추가 요청 거부
   GS_GUILD_ALLIANCE_REMOVE = 5822,                     // 길드 연맹 삭제
   GS_GUILD_DONATION = 5823,                            // 길드 기부
   GS_GET_GUILD_BUFF_LIST = 5824,                       // 길드 버프 정보
   GS_GUILD_AUTO_BUY_BUFF_TOGGLE = 5825,                // 길드 버프 자동 구매 토글
   GS_GUILD_BUY_BUFF = 5826,                            // 길드 버프 구매
   GS_UPDATE_GUILD_MEMBER_COMMENT = 5827,               // 길드 맴버 남긴말 업데이트
   GS_GUILD_ALLIANCE_CREATE_CHAT = 5828,                // 길드 연맹 채팅 생성
   GS_GUILD_ALLIANCE_REQUEST_CHAT = 5829,               // 길드 연맹 채팅 입장 요청
   GS_GUILD_ALLIANCE_CANCEL_CHAT = 5830,                // 길드 연맹 채팅 입장 요청 취소
   GS_GUILD_ALLIANCE_ACCEPT_CHAT = 5831,                // 길드 연맹 채팅 입장 수락
   GS_GUILD_ALLIANCE_REJECT_CHAT = 5832,                // 길드 연맹 채팅 입장 거절
   GS_GUILD_ALLIANCE_INVITE_REQUEST_CHAT = 5833,        // 길드 연맹 채팅 초대 요청
   GS_GUILD_ALLIANCE_INVITE_CANCEL_CHAT = 5834,         // 길드 연맹 채팅 초대 요청 취소
   GS_GUILD_ALLIANCE_INVITE_ACCEPT_CHAT = 5835,         // 길드 연맹 채팅 초대 수락
   GS_GUILD_ALLIANCE_LEAVE_CHAT = 5836,                 // 길드 연맹 채팅 탈퇴
   GS_GUILD_ALLIANCE_BAN_CHAT = 5837,                   // 길드 연맹 채팅 강퇴
   GS_GUILD_ALLIANCE_CHANGE_MASTER = 5838,              // 길드 연맹 채팅장 변경
   GS_GUILD_DUNGEON_INFO = 5839,                        // 길드 던전 정보 요청
   GS_GUILD_DUNGEON_OPEN = 5840,                        // 길드 던전 오픈 요청
   GS_GUILD_DUNGEON_ENTER = 5841,                       // 길드 던전 입장 요청
   GS_GUILD_DUNGEON_CLOSE = 5842,                       // 길드 던전 강제 닫기 요청

// [퀘스트]
    GS_TUTORIAL_LOG = 5900,                             // 튜토리얼 로그
    GS_QUEST_ACCEPT = 5901,                             // 퀘스트 수락
    GS_QUEST_CANCEL = 5902,                             // 퀘스트 취소
    GS_QUEST_REWARD = 5903,                             // 퀘스트 보상 요청
    GS_QUEST_EVENT_REWARD = 5904,                       // 이벤트 퀘스트 보상 요청
    // GS_QUEST_DAILY_LIST = 5903,                      // 일일 퀘스트 리스트 요청
    // GS_QUEST_DAILY_ISSUE = 5904,                     // 일일 퀘스트 발급
    // GS_QUEST_DAILY_REWARD = 5905,                    // 일일 퀘스트 보상 요청
    // GS_QUEST_DAILY_FAST_CLEAR = 5906,                // 일일 퀘스트 즉시 완료


// [콜로세움]
    GS_ADD_COLOSSEUM_QUEUE = 6000,                      // 콜로세움 큐에 등록
    GS_LEAVE_COLOSSEUM_QUEUE = 6001,                    // 콜로세움 큐에 등록 취소
    GS_REWARD_COLOSSEUM = 6002,                         // 콜로세움 매칭이 끝났으니 플레이 보상을 지급한다.
    GS_SEASON_REWARD_COLOSSEUM = 6003,                  // 콜로세움 시즌 보상 받기

// [치트]
    // 19500 ~ 19999 고정! 수정시 BaseHandler 의 치트 유효성 검사의 범위도 변경할 것
    GS_CHEAT_MIN = 19500,                               // 치트 최소값
    GS_CHEAT = 19501,                                   // 치트
    GS_CHEAT_MAX = 19599,                               // 치트 최대값

// [클러스터간 통신 프로토콜] (서버 전용)
    GS_CLUSTER_EXP_RANK = 19600,                        // master => cluser exp 랭킹 정보 전달
    GS_CLUSTER_PK_RANK = 19601,                         // master => cluser pk 랭킹 정보 전달
    GS_CLUSTER_GUILD_EXP_RANK = 19602,                  // master => cluser 길드 랭킹 정보 전달
    GS_CLUSTER_EVENT_LIST = 19603,                      // master => cluser 서버 이벤트 정보
    GS_CLUSTER_STAGE_CONFIG = 19604,                    // master => cluser 스테이지 컨피그
    GS_CLUSTER_COLOSSEUM_RANK = 19605,                  // master => cluser 콜로세움 랭킹 정보
    GS_CLUSTER_OLD_EXP_RANK = 19606,                    // master => cluser old exp 랭킹 정보 전달

// 20000 ~ 20199
// ######################### [Gateway] #########################
    GW_SERVER_LIST = 20000,                             // 서버 정보 리스트를 받는다.
    GW_SERVER_CHAR_LIST = 20001,					    // 서버별 케릭터 리스트를 받는다.
    GW_GET_ACCOUNT = 20002,					            // 계정 정보를 가져온다.
    GW_CREATE_ACCOUNT = 20003,					        // 계정 생성을 한다.
    GW_LOGIN_ACCOUNT = 20004,					        // 계정 로그인을 한다.
    GW_LOGIN_WAIT_USERS = 20005,					    // 로그인 대기 인원수
    GW_ACCOUNT_LEAVE_CANCEL = 20006,                    // 계정 탈퇴 취소

// 20200 ~ 20499
// ######################### [Billing] #########################
    BI_PAYMENT_INIT = 20200,                            // 케쉬 구매 초기화
    BI_PAYMENT_PURCHASE = 20201,                        // 케쉬 구매

    // 1:1 거래 패킷
    BI_TRADE_SELL = 20401,                              // 거래 아이템 판매 (GS_TRADE_SELL에서 변경)

// 25000 ~29999
// ######################### [Chat] #############################
    CT_USER_CONNECT = 25000,                            // 유저 세션 생성

    CT_ENTER_CHAT = 25001,                              // 채팅 입장.
    CT_OUT_CHAT = 25002,                                // 채팅 퇴장

    CT_SERVER_CHAT = 25020,                              // 서버 채팅 전송
    CT_NORMAL_CHAT = 25021,                              // 일반 채팅 전송
    CT_PARTY_CHAT = 25022,                               // 파티 채팅 전송
    CT_GUILD_CHAT = 25023,                               // 길드 채팅 전송
    CT_ALLIANCE_CHAT = 25024,                            // 연합 채팅 전송
    CT_USER_CHAT = 25025,                                // 유저 채팅 (귓속말)  전송
    CT_INTER_NORMAL_CHAT = 25026,                        // 인터서버 일반 채팅 전송
    CT_INTER_PARTY_CHAT = 25027,                         // 인터서버 파티 채팅 전송
    CT_TRADE_CHAT = 25028,                               // 거래 채팅 전송

// 마스터 - 클러스터용 (서버 전용)
    CT_CLUSTER_CHAT = 29998,                              // 채팅 클로스터 전송 (서버전용)
    CT_CLUSTER_CCU = 29999,                               // 클러스터 동접자 동기화 (서버전용)


// 30000 ~ 49999
// ######################### [Match] #########################

// 마스터 - 클러스터용 (서버 전용)
    MT_CLUSTER_REMOVE_TO_BE_DEL_PARTY = 48004,          // 파티 삭제 후보군 등록
    MT_CLUSTER_EVENT_LIST = 48005,                      // 이벤트 리스트
    MT_CLUSTER_STAGE_CONFIG = 48006,                    // 스테이지 컨피그 리스트
    MT_CLUSTER_SERVER_DELETE_WAIT = 48007,              // MMO 서버의 소켓이 종료되어 삭제 후보로 등록

// 60000 ~ 61000
// ######################### 브로드 캐스팅 ####################################
    BROADCAST_REWARD = 60000,                           // 리워드 받은 품목 정보 전송
    BROADCAST_PARTY_INVITE = 60001,                     // 파티 초대 브로드 캐스팅
    BROADCAST_PARTY_JOIN = 60002,                       // 파티 가입 브로드 캐스팅
    BROADCAST_PARTY_REFUSE = 60003,                     // 파티 거절 브로드 캐스팅
    BROADCAST_PARTY_OUT = 60004,                        // 파티 탈퇴 브로드 캐스팅
    BROADCAST_PARTY_KICK_OUT = 60005,                   // 파티 강퇴 브로드 캐스팅
    BROADCAST_PARTY_CHANGE_MASTER = 60006,              // 파티장 위임 브로드 캐스팅

    BROADCAST_SERVER_CHAT = 60050,                      // 전체 채팅
    BROADCAST_NORMAL_CHAT = 60051,                      // 일반 채팅
    BROADCAST_PARTY_CHAT = 60052,                       // 파티 채팅
    BROADCAST_GUILD_CHAT = 60053,                       // 길드 채팅
    BROADCAST_ALLIANCE_CHAT = 60054,                    // 연합 채팅
    BROADCAST_USER_CHAT = 60055,                        // 유저 채팅
    BROADCAST_INTER_NORMAL_CHAT = 60056,                // 인터서버 일반 채팅
    BROADCAST_INTER_PARTY_CHAT = 60057,                 // 인터서버 파티 채팅
    BROADCAST_GLOBAL_CHAT = 60058,                      // 전체 서버 채팅
    BROADCAST_CHAT_BLOCK = 60059,                       // 채팅 블럭

    BROADCAST_KILL_MONSTER_REWARD = 60100,              // 킬 몬스터 파티 보상
    BROADCAST_QUEST_UPDATE = 60101,                     // 퀘스트 업데이트
    BROADCAST_NEW_QUEST = 60102,                        // 신규 퀘스트 발급
    BROADCAST_SERVER_BOSS_DAMAGE_BORDER = 60103,		// 인터보스 데미지 랭킹 브로드캐스트
    BROADCAST_BOSS_RESET_SIGNAL = 60104,                // 보스 리셋
    BROADCAST_QUEST_EVENT_UPDATE = 60105,               // 이벤트 퀘스트 업데이트
    //BROADCAST_QUEST_DAILY_UPDATE = 60106,               // 일일 퀘스트 업데이트

// COLOSSEUM
    BROADCAST_JOIN_COLOSSEUM_SERVER = 60150,            // 콜로세움 매칭이 되었으니 게임을 플레이를 알려준다.
    BROADCAST_REWARD_COLOSSEUM_SERVER = 60151,          // 콜로세움 매칭이 끝났으니 플레이 보상을 지급한다.
    BROADCAST_JOIN_COLOSSEUM = 60152,                   // 콜로세움 매칭이 되었으니 게임을 플레이를 알려준다.
    BROADCAST_LEAVE_COLOSSEUM = 60153,                  // 콜로세움 강제로 퇴장을 알려준다.
    BROADCAST_LEAVE_COLOSSEUM_QUEUE = 60154,            // 콜로세움 강제로 큐 퇴장을 알려준다.

// GOD_LAND
    BROADCAST_GOD_LAND_FIGHT_RESULT = 60200,              // 성역 전투 결과

// MMO
    G2M_PUB_MESSAGE_MIN = 61000,                        // 아이템 장착 알림

    G2M_ITEM_EQUIP = 61001,                             // 아이템 장착 알림
    G2M_ITEM_UNEQUIP = 61002,                           // 아이템 탈착 알림
    G2M_ITEM_UPDATE = 61003,                            // 아이템 개수 변경

    G2M_ADD_SKILL = 61004,                              // 스킬 추가 알림

    G2M_PET_EQUIP = 61005,                              // 펫 장착
    G2M_PET_UNEQUIP = 61006,                            // 펫 탈착
    G2M_CHANGE_EQUIP = 61007,                           // 변신체 장착
    G2M_CHANGE_UNEQUIP = 61008,                         // 변신체 탈착
    G2M_UPDATE_MARK = 61009,                            // 문양 업데이트 알림
    G2M_UPDATE_ATTRIBUTE = 61010,                       // 속성 업데이트 알림

    G2M_UPDATE_STAT = 61011,                            // 스킬 스텟 업데이트
    G2M_UPDATE_EXP = 61012,                             // 경험치 업데이트

    G2M_ITEM_COLLECT = 61013,                           // 아이템 콜렉트
    G2M_PET_COLLECT = 61014,                            // 팻 콜렉트
    G2M_CHANGE_COLLECT = 61015,                         // 변신체 콜렉트
    G2M_UPDATE_BUFF_INFO = 61016,                       // 버프 정보 업데이트
    G2M_UPDATE_TENDENCY = 61017,                        // 선함 정보 업데이트

    G2M_RUNE_EQUIP = 61018,                             // 룬 장착
    G2M_RUNE_UNEQUIP = 61019,                           // 룬 탈착
    G2M_RUNE_UPDATE = 61020,                            // 룬 탈착
    G2M_PET_UPDATE = 61021,                             // 펫 데이타 변경
    G2M_UPDATE_GUILD_INFO = 61022,                      // 길드 정보 갱신
    G2M_UPDATE_PARTY = 61023,                           // 파티 정보 갱신
    G2M_UPDATE_ARTIFACT = 61024,                        // 아티팩트 정보 갱신
    G2M_EQUIP_ARTIFACT = 61025,                         // 아티팩트 장착
    G2M_UNEQUIP_ARTIFACT = 61026,                       // 아티팩트 탈착
    G2M_SKILL_USE_ORDER = 61027,                        // 스킬 사용 순서 변경
    G2M_PUB_COLO_MKR = 61028,                           // 투기장 방 생성 요청
    G2M_PUB_OBJECT_MKR = 61029,                         // 스테이지 오브젝트 생성 요청 (채집)
    G2M_PUB_OBJECT_GATHERING = 61030,                   // 스테이지 오브젝트 채집 처리 완료 알림
    G2M_UPDATE_ACCOUNT_ETC = 61031,                     // account etc 정보 갱신
    G2M_EXTEND_INVENTORY = 61032,                       // 인벤토리 확장
    G2M_GOD_LAND_GET = 61033,                           // 성지 획득 알림 - 게임서버 -> MMO
    G2M_GOD_LAND_LOST = 61034,                          // 성지 잃음 알림 - 게임서버 -> MMO
    G2M_PUB_COLO_ROOM_CHECK = 61035,                    // 투기장 방 진행 체크
    G2M_CHANGE_UPDATE = 61036,                          // 펫 데이타 변경
    G2M_UPDATE_GUILD_BUFF = 61037,                      // 길드 버프 정보 갱신
	G2M_PUB_GUILD_DUNGEON_MKR = 61038,					// 길드던전 방 생성 요청
	G2M_PUB_GUILD_DUNGEON_CLOSE = 61039,			    // 길드던전 닫기

    G2M_PUB_MESSAGE_MAX = 61040,                        // 멕스

    M2G_PUB_MESSAGE_MIN = 62000,                        // 아이템 장착 알림
    M2G_KILL_MONSTER = 62001,                           // 몬스터Kill
    M2G_USE_POTION = 62002,                             // 포션사용
    M2G_STAGE_ENTER = 62003,                            // 스테이지 입장
    M2G_USER_LEVEL_UPDOWN = 62004,                      // 유저레벨변동
    M2G_PUB_COLO_MKR_FINISH = 62005,                    // 투기장 방 생성 완료
    M2G_PUB_COLO_ROOM_FINISH = 62006,                   // 투기장 방 게임 종료
    M2G_PUB_GOD_LAND_FIGHT_RESULT = 62007,              // 성역 인스턴스 종료
	M2G_KILL_OBEJCT = 62008,              				// 오브젝트 삭제 갱신
	M2G_PUB_COLO_ROOM_CHECK_RESULT = 62009,             // 투기장 방 진행 체크 결과
	M2G_PUB_GUILD_DUNGEON_MKR_FINISH = 62010,           // 길드던전 방 생성 완료
    M2G_PUB_GUILD_DUNGEON_ROOM_FINISH = 62011,          // 길드던전 방 게임 종료
    M2G_PUB_GUILD_DUNGEON_CLOSE_FINISH = 62012,         // 길드 던전 닫기 완료

    M2G_PUB_MESSAGE_MAX = 62013,                        // 멕스
}


// code range: ushort (0 ~ 65535)
enum ERROR: ushort {
// system error code
	NO_ERROR = 0,		        					// 에러 없음
	INVALID_PARAMETER = 1,							// 파라미터 오류
	SYSTEM_ERROR = 2,								// 시스템 오류
	DATABASE_ERROR = 3,								// 데이타 베이스 오류
	SERVER_LOCK = 4,						        // 서버 점검중입니다.
    INVALID_GUUID = 5,								// guuid 오류
	REDIS_ERROR= 6,									// 레디스 오류
	CREATE_SESSION = 7,								// 세션 생성 오류
	SESSION = 8,									// 세션 오류
	NOT_FIND_AUTH = 9,								// 인증정보를 찾을수 없습니다.
	NOT_AVAILABLE_CHEAT_IN_LIVE_ENV= 10,			// 라이브 환경에서는 치트를 사용할 수 없음
	//비여있음XXXX = 11,                            // 서버가 열러 있지 않습니다.
	ACCESS_DENIED = 12,                             // 접근 불가
	INVALID_SERVER_IDX = 13,                        // 잘못된 서버 ID입니다.
	INVALID_TABLE_DATA = 14,                        // 잘못된 테이블 데이터 입니다.
	PROTOCOL_VERSION = 15,                          // 프로토콜 버전이 최신이 아닙니다.
	CACHEING_FAIL = 16,                             // 캐싱 실패
	BEFOR_PACKET_PROCESSING = 17,                   // 이전 패킷 처리중입니다.
	NOT_CONNECTED_USER = 18,                        // 연결되지 않은 유저
	CRITICAL_ERROR = 19,                            // 크리티컬 에러
	DUPLICATE_LOGIN= 20,							// 중복 접속
	KICK_USER= 21,							        // 게임이 종료되었습니다.

	// common error code
	USER_NOT_FIND = 10000, 							// 유저 정보 찾을 수 없다.
	ACCESS_DENY_MEMBER = 10001, 					// 제제 대상 유저
	LOW_NICK = 10002,								// 닉네임이 짧습니다.
	CANNOT_FIND_DATA_IN_TABLE= 10003,				// 테이블 데이터를 찾을 수 없습니다.
	NOT_FIND_ITEM = 10004,							// 디비상에 유효하지 않은 아이템
	INVALID_ITEM = 10005,							// 유효하지 않은 아이템
	ITEM_CANNOT_SELL = 10006,						// 판매 불가 아이템 입니다.
	CHARACTER_NOT_FIND = 10007,						// 케릭터 정보를 찾을 수 없습니다.
	CANNOT_FIND_CHANGE = 10008,			            // 변신체를 찾을수 없습니다.
	CANNOT_FIND_PET = 10009,			            // 팻을 찾을수 없습니다.
	NOT_ENOUGH_GOLD = 10010,						// 골드가 부족합니다.
	NOT_ENOUGH_GOODS = 10011,						// 재화가 부족합니다.
	NOT_ENOUGH_DIAMOND = 10012,						// 다이아가 부족합니다.
	USER_DATA_CHECKING = 10013, 					// 유저 데이타를 확인중입니다.(제제)
	NO_MORE_ENTER_SERVER_CCU_LIMIT = 10014, 		// 인원이 꽉차서 더이상 접속이 불가능합니다.
	NOT_ENOUGH_USE_ITEM = 10015,					// 사용하려는 아이템이 부족 합니다.
	REDIS_WARNING = 10016,                          // 레디스 에러지만. 크리티컬에 넣지 않은 에러

    // 약속된 에러
    DOES_NOT_MATCH_CACHED_DATA = 10900,             // 캐싱된 데이터와 클라에서 준 데이터가 다를때 나는 에러(클라에서 유저를 마을로 보낸다)
    HEADER_ERROR_BUT_IGNORE_PACKET = 10901,         // 해더 에러가 발생했지만 타이밍상 올수있는 에러는 무시해준다.
    CLIENT_DATA_SYNC_FAIL = 10902,                  // 클라이언트와 데이타 동기화 실패했습니다.
    GUILD_DATA_SYNC_FAIL = 10903,                   // 클라이언트와 길드 데이타 동기화 실패했습니다.



	// gateway error code
	NOT_HAVE_ACCOUNT = 11000,						// 계정이 없습니다.
    ACCOUNT_BLOCK = 11001,							// 계정 블럭 상태입니다.


	// Game error code
	MAX_CHARACTER= 12000,							// 케릭터를 더이상 생성할 수 없습니다.
	CHAT_BLOCK_LIST_LIMIT= 12002,					// 채팅 차단 유저 수 제한
	ALREADY_CHAT_BLOCK= 12003,						// 이미 채팅 블럭을 한 유저입니다.
	ITEM_NOT_AVAILABLE= 12004,						// 아이템을 사용할 수 없습니다.
	NOT_FOUND_CHARACTER= 12005,						// 케릭터를 찾을 수 없습니다.
	ITEM_OUT_OF_DATE= 12006,						// 사용 기간이 지난 아이템입니다.
	ITEM_EQUIP_LEVEL_LIMIT = 12007,					// 아이템 장착 레벨 제한에 걸렸습니다.
	ITEM_EQUIP_DUPLICATE_COUNT_LIMIT = 12008,		// 아이템 장착 갯수 제한에 걸렸습니다.
	CHARACTER_TYPE = 12009,							// 직업에 맞지 않습니다.
	ENOUGH_LEVEL= 12010,							// 레벨이 부족합니다. (입장불가/아이템 등)
	NOT_FOUND_MONSTER= 12011,						// 몬스터를 찾을 수 없습니다.
	DUPLICATE_NICKNAME= 12012,						// 중복 닉네임
	CHARACTER_DELETE_LEVEL = 12013,					// 케릭터 삭제 레벨이 아닙니다.
	CANNOT_UPGRADE_ITEM = 12014,					// 승급 불가능한 아이템 입니다.
	CANNOT_ENCHANT_ITEM = 12015,					// 강화 불가능한 아이템 입니다.
	NOT_ENOUGH_EXP= 12016,							// 경험치가 충분하지 않습니다.
	DUPLICATE_LEVEL_UP_REQ= 12017,					// 중복된 레벨업 요청
	NOT_FOUND_SKILL_SLOT= 12018,					// 스킬 슬롯을 찾을 수 없습니다.
	MAKE_MATERIAL_COUNT= 12019,						// 제작 재료 갯수가 맞지 않습니다.
	MESSAGE_TITLE_LENGTH= 12020,					// 쪽지 제목 길이 오류입니다.
	MESSAGE_MESSAGE_LENGTH= 12021,					// 쪽지 내용 길이 오류입니다.
	MESSAGE_SEND_LIMIT= 12022,						// 하루에 보낼수있는 쪽지 갯수 제한에 걸렸습니다.
	CANNOT_FIND_MESSAGE= 12023,						// 메시지를 찾을수 없습니다.
	CANNOT_USE_MESSAGE_LEVEL= 12024,				// 메시지를 사용할수있는 레벨이 아닙니다.
	NOT_HAVE_DAILY_RESET_EVENT = 12025,				// 리셋할 이벤트가 없습니다.
	STORAGE_NOT_PUT_ITEM = 12026,					// 창고 보관이 불가능한 아이템 입니다.
	STORAGE_IS_FULL = 12027,						// 창고가 가득 찼습니다.
	CANNOT_ITEM_DELETE = 12028,						// 삭제할 수 없는 아이템 입니다.
	ITEM_USE_LEVEL_LIMIT = 12029,					// 아이템 사용 레벨 제한에 걸렸습니다.
	INVALID_STORAGE_GET_COST_TYPE = 12030,          // 잘못된 창고 찾기 비용타입
	NOT_FOUND_STORAGE_COST = 12031,                 // 창고 저장 비용을 찾을 수 없습니다.
	CANNOT_STAGE_ENTER_LEVEL = 12032,               // 스테이지 입장불가 (레벨)
	ITEM_BUY_LEVEL_LIMIT = 12033,					// 아이템 장착 레벨 제한에 걸렸습니다.
	ITEM_COLLECT_MATERIAL = 12034,			        // 아이템 수집 재료가 잘못되었습니다.
	CHANGE_MATERIAL_TIER = 12035,			        // 변신체 합성 재료 정보가 잘못되었습니다.
	PET_MATERIAL_TIER = 12036,			            // 팻 합성 재료 정보가 잘못되었습니다.
	MARK_NO_MORE_ENCHANT = 12037,		            // 더이상 문양 강화를 할수없습니다.
	MARK_ENCHANT_RESET_STEP = 12038,		        // 문양 강화 초기화 할수없는 단계입니다.
	STAT_RESET_POINT_ZERO = 12039,		            // 초기화할 스텟 포인트가 0입니다.
	SKILL_RESET_POINT_ZERO = 12040,		            // 초기화할 스킬 포인트가 0입니다.
	SPECIAL_SKILL_DUPLICATE = 12041,		        // 같은 그룹의 스킬을 중복으로 찍을수 없습니다.
	SKILL_CHARACTER_TYPE = 12042,		            // 케릭터 타입이 맞지 않습니다.
	NOT_ENOUGH_SKILL_POINT = 12043,		            // 스킬 포인트가 부족합니다.
	NOT_ENOUGH_SKILL_LEVEL = 12044,		            // 스킬 레벨이 부족합니다.
	NOT_ENOUGH_SPECIAL_SKILL_SPACE = 12045,		    // 궁극기 스킬을 찍을 공간이 부족합니다.
	RESTORE_EXP_EXPIRE_DT = 12046,		            // 경험치 복구 시간이 만료되었습니다.
	CAN_NOT_ENTER_STAGE = 12047,                    // 스테이지 입장 불가
	NO_MORE_SLOT_EXTEND = 12048,                    // 더이상 슬롯을 확장할수없습니다.
	NOT_EQUIP_RING_SLOT = 12049,                    // 확장하지 않은 링 슬롯에 장착을 하려고합니다.
	CAN_NOT_ENTER_DEATH_DEBUFF = 12050,             // 사망 디버프때문에 스테이지에 입장이 불가능합니다.
	ALREADY_ATTEND_REWARD = 12051,                  // 이미 출석채크 보상을 받았습니다.
	NOT_FIND_REQUEST_FRIEND = 12052,                // 친구 요청한 케릭터를 못찾았습니다.
	ALREADY_REQUEST_FRIEND = 12053,                 // 이미 친구 요청을 하엿습니다.
	NO_MORE_FRIEND = 12054,                         // 친구 수가 최대인원수를 넘었습니다.
	NO_MORE_FRIEND_TARGET = 12055,                  // 상대편이 친구 수가 최대인원수를 넘었습니다.
	NO_MORE_REQUEST_FRIEND = 12056,                 // 친구 초대 최대인원수를 넘었습니다.
	NO_MORE_RECEIVE_FRIEND = 12057,                 // 친구 초대 받는 최대인원수를 넘었습니다.
	ALREADY_JOIN_GUILD = 12058,                     // 이미 길드에 가입되어있습니다.
	LOW_GUILD_NAME = 12059,							// 길드 이름이 짧습니다.
	DUPLICATE_GUILD_NAME = 12060,		            // 길드 이름이 중복되었습니다.
	GUILD_MARK_GUILD_LEVEL_LIMIT = 12061,		    // 길드 마크 길드 레벨 제한입니다.
	CANNOT_FIND_GUILD = 12062,		                // 길드를 찾을수없습니다.
	DISMISS_GUILD_REMAIN_MEMBER = 12063,		    // 길드원이 남아있어서 해산을 못합니다.
	GUILD_MASTER_POWER = 12064,		                // 길마의 권한입니다.
	NO_MORE_GUILD_SUB_MASTER = 12065,		        // 부길마를 더이상 늘릴수없습니다.
	NO_MORE_ADD_GUILD_MEMBER = 12066,		        // 더이상 길드원을 늘릴수없습니다.
	GUILD_INTRO_LENGTH_MAX = 12067,					// 길드 소개글 글자수 초과
	GUILD_NOTICE_LENGTH_MAX = 12068,				// 길드 공지글 글자수 초과
	NOT_JOIN_REQUEST_GUILD = 12069,				    // 길드 가입 요청을 하지 않았습니다.
	FRIEND_DELETE_EXPIRE_TIME = 12070,				// 친구 삭제 가능시간이 안되었습니다.
	GUILD_REJOIN_EXPIRE_TIME = 12071,				// 길드 재가입 시간이 안되었습니다.
	ITEM_BUY_NOT_SALE = 12072,				        // 아이템 구매 시간이 아닙니다.
	ITEM_CANNOT_EXCHANGE_SELL = 12073,              // 거래소에 판매할수 없는 아이템입니다.
	NO_MORE_EXCHANGE_SELL_LIMIT = 12074,            // 거래소에 판매할수 있는 개수 제한이 넘었습니다.
	NOT_FIND_EXCHANGE_SELL_ITEM = 12075,            // 거래소에 판매하는 아이템을 찾을수 없습니다.
	CANNOT_FIND_EXCHANGE_TRANSACTION = 12076,       // 거래소에 거래내역을 찾을수 없습니다.
	EXCHANGE_TAKE_MONEY_FAIL = 12077,               // 시스템 오류로 거래 완료 금액을 못 받았습니다.
	CHANGE_DUPLICATE_COLLECT = 12078,			    // 이미 수집한 변신체 입니다.
	PET_DUPLICATE_COLLECT = 12079,			        // 이미 수집한 팻 입니다.
	CHANGE_COLLECT_MATERIAL = 12080,			    // 변신체 수집 재료가 잘못되었습니다.
	PET_COLLECT_MATERIAL = 12081,			        // 팻 수집 재료가 잘못되었습니다.
	NOT_ENOUGH_ITEM_ENTER_STAGE = 12082,			// 맵 입장 비용이 부족합니다.
	NOT_ENOUGH_BUFF_ENTER_STAGE = 12083,			// 맵 입장 버프가 없습니다.
	INVALID_STAGE_BUFF = 12084,			            // 스테이지 버프 정보가 잘못되었습니다.
	REMAIN_STAGE_BUFF = 12085,			            // 스테이지 버프가 끝났습니다.
	ENTER_STAGE_NOT_USE_PRIVATE_BUFF = 12086,		// 전용채널 이용이 불가능한 지역입니다.
	STAGE_TIME_OVER = 12087,                        // 입장 시간 만료
	NOT_ENOUGH_STAGE_POINT = 12088,                 // 보스 소환 포인트 부족
	MARK_ENCHANT_COUNT_ZERO = 12089,		        // 문양 강화 단계가 0입니다.
	MARK_RESET_TID_NOT_SAME = 12090,		        // 문양 리셋 테이블 아이디가 잘못 되었습니다.
	QUEST_IS_NOT_COMPLETED = 12091,                 // 퀘스트가 완료 되지 않았습니다.
	NOT_ENOUGH_POTION = 12092,                      // 포션이 부족합니다.
	NOT_ENOUGH_UPGRADE_MATERIAL_COUNT= 12093,		// 승급 재료 갯수가 부족합니다.
	NOT_ENOUGH_UPGRADE_ITEM = 12094,		        // 승급 아이템을 못 찾았습니다.
	NOT_ENOUGH_ENCHANT_MATERIAL_COUNT= 12095,		// 강화 재료 갯수가 부족합니다.
	NOT_ENOUGH_ENCHANT_ITEM = 12096,		        // 강화 아이템을 못 찾았습니다.
	NOT_ENOUGH_MAKE_MATERIAL_COUNT = 12097,		    // 제작 재료 개수가 부족합니다.
	NOT_FIND_BREAK_ITEM = 12098,		            // 분해할 아이템을 찾을수없습니다.
	NOT_ENOUGH_GACHA_ITEM = 12099,		            // 가챠 재료가 부족합니다.
	NOT_FOR_SALE_SHOP_ITEM = 12100,		            // 판매하지 않는 상품입니다.
	NO_MORE_BUY_ITEM = 12101,                       // 구매 횟수 제한에 걸렸습니다.
	NOT_TUTORIAL_TYPE = 12102,                      // 튜토리얼 타입이 아닙니다.
	JOIN_REQUEST_GUILD = 12103,                     // 길드 가입 요청중입니다.
	GUILD_USE_LEVEL_LIMIT = 12104,                  // 길드 이용 레벨 제한에 걸렸습니다.
	GUILD_MASTER_NOT_LEAVE = 12105,                 // 길마는 탈퇴를 할수없습니다.
	NO_MORE_JOIN_REQUEST_GUILD = 12106,             // 더이상 길드 가입 요청을 보낼수없습니다.
	CACHE_NOT_FOUND_QUEST = 12107,                  // 캐싱된 퀘스트를 찾을 수 없습니다.
	NOT_FOUND_QUEST = 12108,                        // 퀘스트를 찾을 수 없습니다.
	ALREADY_REGIST_GUILD_ALLIANCE = 12109,          // 더이상 길드 가입 요청을 보낼수없습니다.
	NO_MORE_GUILD_ALLIANCE_COUNT_LIMIT = 12110,     // 길드 동맹 신청 개수가 넘쳤습니다.
	NO_MORE_GUILD_ALLIANCE_TARGET_COUNT_LIMIT = 12111,     // 길드 동맹 신청 개수가 넘쳤습니다.
	GUILD_ALLIANCE_REJECT_STATE = 12112,            // 길드 동맹 요청을 취소할수 없는 상태입니다.
	GUILD_ALLIANCE_REMOVE_STATE = 12113,            // 길드 동맹을 삭제할수 없는 상태입니다.
	ALREADY_ISSUED_DAILY_QUEST_TODAY = 12114,       // 이미 일일 퀘스트를 발급 했음.
	NOT_ENOUGH_GUILD_MONEY = 12115,                 // 길드 자금이 부족합니다.
	NOT_ENOUGH_GUILD_LEVEL = 12116,                 // 길드 레벨이 부족합니다.
	ALREADY_FRIEND = 12117,                         // 이미 내 친구이다.
	NOT_FIND_FRIEND = 12118,                        // 친구를 찾을수 없습니다.
	ALREADY_CHANGE_GUILD_GRADE = 12119,             // 이미 길드 등급이 변경되었습니다.
    NO_MORE_GUILD_DONATE_COUNT = 12120,             // 더이상 길드 기부를 할수없습니다.
    CANNOT_FIND_PK_LOG = 12121,                     // pk 로그를 찾을수없습니다.
    ALREADY_PK_SNEER = 12122,                       // 이미 조롱하기를 하였습니다.
    STAGE_ENTER_TTL_OVER = 12123,                   // 입장 시간 초과
    NO_MORE_RECEIVE_MESSAGE = 12124,                // 메시지를 상대편이 메시지함이 꽉차서 받을수없는 상태입니다.
    GUILD_MARK_UPDATE_TIME = 12125,                 // 아직 길드 문양 변경할 시간이 안되었습니다.
    GUILD_BUFF_REMAIN_EXPIRE_TIME = 12126,          // 아직 길드 버프 시간이 남았습니다.
    ALREADY_UPDATE_GUILD_BUFF_TOGGLE = 12127,       // 이미 같은 값으로 길드 버프 자동 구매 토글이 변경되어있습니다.
    QUEST_DAILY_FAST_CLEAR_OVER = 12128,            // 즉시완료 횟수 초과
    EXCHANGE_ITEM_REGIST_FAIL = 12129,              // 거래소 아이템 등록 실패했습니다.
    INVALID_COUPON_CODE = 12130,                    // 쿠폰 프로모 코드 번호가 잘못되었습니다.
    EXPIRED_COUPON = 12131,                         // 쿠폰 기간이 만료된 쿠폰입니다.
    ALREADY_USE_COUPON = 12132,                     // 이미 사용한 쿠폰입니다.
    MESSAGE_IS_TO_LONG = 12133,                     // 메시지가 너무 깁니다.
    ALREADY_GUILD_ALLIANCE_CHAT_JOIN = 12134,       // 길드 연맹 채팅에 이미 조인해 있습니다.
    NOT_GUILD_ALLIANCE_CHAT_JOIN = 12135,           // 길드 연맹이 아니어서 길드 채팅방 입장할수없습니다.
    GUILD_ALLIANCE_NOT_CHAT_MASTER = 12136,         // 길드 연맹 채팅 가입 수락은 마스터만 할수있습니다.
    GUILD_ALLIANCE_CHAT_MASTER_DO_NOT_LEAVE = 12137,// 길드 연맹 채팅방장은 퇴장할수 없습니다(모두 위임하고 탈퇴해야합니다.)
    BILLING_INITIALIZE_FAIL = 12138,                // 결제 초기화 실패
    BILLING_INITIALIZE_INNER_FAIL = 12139,          // 결제 초기화 실패
    CANNOT_FOUND_CHAT_TYPE = 12140,                 // 채팅 타입을 찾을 수 없습니다.
    NOT_ENOUGH_CHANGE_MATERIAL = 12141,             // 변신체 재료가 부족합니다.
	NOT_ENOUGH_CHANGE_USE_ITEM = 12142, 		    // 변신 주문서가 없습니다.
	NOT_ENOUGH_PET_USE_ITEM = 12143, 		        // 팻 소환서가 없습니다.
	NOT_ENOUGH_PET_MATERIAL = 12144, 		        // 팻 재료가 부족합니다.
	NO_MORE_ADD_ABILITY = 12145, 		            // 더이상 어빌리티를 추가할수없습니다.
	ALREADY_CHARACTER_DELETE_STATE = 12146, 		// 이미 삭제 대상 케릭터 입니다.
	CHARACTER_DELETE_FRIEND_DELETE = 12147, 		// 케릭터 삭제하기전에 친구정보를 먼저 정리해야합니다.
	CHARACTER_DELETE_GUILD_DELETE = 12148, 		    // 케릭터 삭제하기전에 길드정보를 먼저 정리해야합니다.
	CANNOT_EXP_TRADE_LEVEL = 12149, 		        // 경험치로 명예코인 변경할수있는 레벨이 아닙니다.
	NOT_ENOUGH_EXP_TRADE = 12150, 		            // 경험치로 명예코인 변경할수있는 경험치가 부족합니다.
	XXXXXXXXXXXXXXXXXXXXXXX = 12151,                // 월드 보스가 이미 잡혔습니다.
	CHARACTER_NOT_DELETE_WAIT_STATE = 12152,        // 케릭터 삭제 대기 상태가 아닙니다.
	NO_DEATH_PENALTY_STAGE = 12153,                 // 데스 페널티를 받는 스테이지가 아닙니다.
	ITEM_MAKE_LEVEL_LIMIT = 12154,                  // 아이템 제작 레벨이 안됩니다.

	INTER_BOSS_IS_NOT_SPAWN = 12155,                // 인터 보스가 출현하지 않았습니다.
	INTER_NOT_MATCHED_SEVER = 12156,                // 매칭이 되지 않은 서버입니다.
	INTER_CAN_NOT_ENTER_STAGE_LEVEL = 12157,        // 스테이지 입장 레벨이 부족합니다.
	INTER_STAGE_IS_FULL = 12158,                    // 입장 인원이 가득 찼습니다.
    INTER_NOT_FOUND_ENTER_INFO = 12159,             // 입장 정보를 찾을 수 없습니다.
    INTER_ALREADY_KILL = 12160,                     // 이미 죽은 대상입니다.
    INTER_KILL_TIME_OVER = 12161,                   // 처치 시간 만료
    INTER_CAN_NOT_ENTER_FIELD = 12162,              // 필드 입장 실패
    INTER_CAN_NOT_ENTER_CAMP = 12163,               // 캠프 입장 실패
    INTER_BOSS_ROOM_EXPIRED = 12164,                // 서버 보스방 만료
    INTER_ENTRY_TIME_EXPIRY = 12165,                // 입장 시간 만료
	NOT_ENOUGH_CHARACTER_STAT_POINT = 12166,        // 케릭터 스텟 포인트가 부족합니다.
	UPGRADE_MATERIAL_LOCK = 12167,                  // 승급 재료가 락에 걸려있습니다.
	ENCHANT_MATERIAL_LOCK = 12168,                  // 강화 재료가 락에 걸려있습니다.
	EXCHANGE_SELL_ITEM_LOCK = 12169,                // 거래소에 등록할 아이템이 락에 걸려있습니다.
	MAKE_MATERIAL_LOCK = 12170,                     // 제작 재료가 락에 걸려있습니다.
    GUILD_DONATION_MATERIAL_LOCK = 12171,           // 길드 기부 아이템이 락에 걸려있습니다.
    SHOP_USE_ITEM_LOCK = 12172,                     // 상점 구매 아이템이 락에 걸려있습니다.
    CHANGE_MATERIAL_LOCK = 12173,                   // 변신체 재료가 락에 걸려있습니다.
    MARK_ENCHANT_ITEM_LOCK = 12174,                 // 문양 강화 재료가 락에 걸려있습니다.
    MARK_RESET_ITEM_LOCK = 12175,                   // 문양 리셋 아이템이 락에 걸려있습니다.
    STAT_RESET_ITEM_LOCK = 12176,                   // 스텟 리셋 아이템이 락에 걸려있습니다.
    STAT_USE_ITEM_LOCK = 12177,                     // 스텟 포인트 사용 아이템이 락에 걸려있습니다.
    SPECIAL_SKILL_RESET_ITEM_LOCK = 12178,          // 궁극기 리셋 아이템이 락에 걸려있습니다.
    EXP_RESTORE_ITEM_LOCK = 12179,                  // 경험치 복구 리셋 아이템이 락에 걸려있습니다.
    INVENTORY_EXTEND_ITEM_LOCK = 12180,             // 인벤토리 확장 리셋 아이템이 락에 걸려있습니다.
    STORAGE_EXTEND_ITEM_LOCK = 12181,               // 창고 확장 리셋 아이템이 락에 걸려있습니다.
    QUICK_EXTEND_ITEM_LOCK = 12182,                 // 퀵슬롯 확장 리셋 아이템이 락에 걸려있습니다.
    GACHA_USE_ITEM_LOCK = 12183,                    // 가차 사용아이템이 락에 걸려있습니다.
    DELETE_ITEM_LOCK = 12184,                       // 삭제 사용아이템이 락에 걸려있습니다.
    PET_EQUIP_ITEM_LOCK = 12185,                    // 펫 장착 아이템이 락에 걸려있습니다.
    CHANGE_EQUIP_ITEM_LOCK = 12186,                 // 변신체 장착 아이템이 락에 걸려있습니다.
    SPECIAL_SKILL_EXTEND_ITEM_LOCK = 12187,         // 궁극기 스킬 확장아이템이 락에 걸려있습니다.
    RING_SLOT_EXTEND_ITEM_LOCK = 12188,             // 링 슬롯 확장아이템이 락에 걸려있습니다.
    CHARACTER_SLOT_EXTEND_ITEM_LOCK = 12189,        // 케릭터 슬롯 확장아이템이 락에 걸려있습니다.
    SPECIAL_SKILL_USE_ITEM_LOCK = 12190,            // 궁극기 스킬 포인트 사용 아이템이 락에 걸려있습니다.
    PET_COMPOSE_LOCK = 12191,                       // 합성 팻이 락이 걸려있습니다.
    CHANGE_COMPOSE_LOCK = 12192,                    // 합성 변신체가 락이 걸려있습니다.
    BREAK_ITEM_LOCK = 12193,                        // 분해할 아이템이 락이 걸려있습니다.
    STORAGE_EQUIP_ITEM_NOT_PUT = 12194,             // 장착 아이템은 창고에 넣을수 없습니다.
    NOT_FIND_BILLING_PAYMENT_ID = 12195,            // 결제 아이디를 찾을수 없습니다.
    BILLING_PAYMENT_STATUS = 12196,                 // 결제 상태가 잘못 되었습니다.
    BILLING_PAYMENT_FAIL = 12197,                   // 결제도중 실패되었습니다.
    GUILD_INTO_NOT_FOUND = 12198,                   // 길드 정보를 찾을 수 없습니다.
    // XXXXX                                           = 12199, // 이번주에 이미 길드 던전을 열었습니다.
    // XXXXX                                           = 12200,           // 권한이 부족하여 길드던전을 열수가 없습니다.
    // XXXXX                                           = 12201,           // 길드 던전 오픈 레벨이 부족합니다.
    // XXXXX                                           = 12202,        // 길드 던전 오픈 요청이 너무 많습니다.
    EVENT_STAGE_NOT_OPEN_TIME = 12203,              // 이벤트 스테이지 오픈 시간이 아닙니다.
    // XXXXX                                           = 12204,                 // 길드 던전이 열리지 않았습니다.
    // XXXXX                                           = 12205, // 길드 보스를 찾을 수 없습니다.
    // XXXXX                                           = 12206,        // 길드 던전 보스가 이미 죽었습니다
    // XXXXX                                           = 12207,             // 이미 종료된 길드 던전입니다.
    // XXXXX                                           = 12208,   // 길드 던전 입장 유저 정보를 찾을 수 없습니다.
    PRIVATE_CHANNEL_TIME_OVER = 12209,              // 전용 채널 버프 만료
    BILLING_SERVICE_NOT_READY = 12210,              // 빌링 서비스 준비가 안되었습니다.
    BILLING_INVALID_RECEIPT = 12211,                // 빌링 영수증이 잘못 되었습니다.
    RESTORE_NOT_SUPPORT_DIE_BUFF_STEP = 12212,      // 복구 불가능한 버프 단계 입니다.
    NO_MORE_USE_TENDENCY_ITEM = 12213,              // 더이상 면죄부 아이템을 사용할수없습니다.(성향치 최대)
    TENDENCY_ITEM_LOCK = 12214,                     // 면죄부 아이템이 락이 걸려있습니다.
    SPECIAL_SHOP_ITEM_BUY_NOT_DO_FIRST = 12215,     // 스페셜 상점에 구매전 해야할 일이 완료되지 않았습니다.
    DO_NOT_ENTER_NOT_HAVE_CHARACTER = 12216,        // 생성 제한이 걸려있는 서버입니다.
    DO_NOT_CHANGE_ENCHANT = 12217,                  // 강화 불가능한 변신체 입니다.
    DO_NOT_PET_ENCHANT = 12218,                     // 강화 불가능한 팻 입니다.
    CHANGE_ENCHANT_LOCK = 12219,                    // 강화할 변신체가 락에 걸려있습니다.
    PET_ENCHANT_LOCK = 12220,                       // 강화할 팻이 락에 걸려있습니다.
    NO_MORE_CHANGE_ENCHANT = 12221,                 // 더이상 변신체를 강화할수 없습니다.
    NO_MORE_PET_ENCHANT = 12222,                    // 더이상 팻을 강화할수 없습니다.
    NOT_ENOUGH_CHANGE_ENCHANT = 12223,              // 강화할 변신체가 부족합니다.
    NOT_ENOUGH_PET_ENCHANT = 12224,                 // 강화할 팻이 부족합니다.
    NO_MORE_MAKE_ITEM_COUNT_LIMIT = 12225,          // 더이상 제작을 할수가 없습니다.(제작 횟수)
    NOT_FOR_MAKE_ITEM_SEASON = 12226,               // 제작 이벤트 기간이 아닙니다.
    NO_MORE_MARK_ENCHANT = 12227,                   // 문양 강화 최대치 입니다.
    DAILY_QUEST_FAST_CLEAR_FAIL_BY_COMPLETE_TYPE = 12228,   // 일일 퀘스트 즉시완료 실패 (완료타입의 퀘스트)
    STORAGE_ITEM_PUT_EQUIPMENT_SLOT_IDX = 12229,   // 장착하고 있는 아이템은 창고에 맏길수 없습니다.
    GUILD_ALLIANCE_CHAT_ONLY_MASTER_BAN = 12230,    // 길드 연맹 채팅방장길드만이 강퇴시킬수 있습니다.
    GUILD_ALLIANCE_CHAT_NOT_JOIN = 12231,           // 길드 연맹 채팅방이 가입되있지 않습니다.
    CHAT_BLOCK = 12232,                             // 채팅 금지 상태입니다.
    NOT_ENOUGH_DELETE_ITEM = 12233,                 // 삭제할 아이템이 부족합니다.
    PET_RETRY_GACHA_CNT = 12234,                    // 팻 다시뽑기 횟수가 부족합니다.
    PET_RETRY_GACHA_TIME_OVER = 12235,              // 팻 다시뽑기 시간이 만료되었습니다.
    CHANGE_RETRY_GACHA_CNT = 12236,                 // 변신체 다시뽑기 횟수가 부족합니다.
    CHANGE_RETRY_GACHA_TIME_OVER = 12237,           // 변신체 다시뽑기 시간이 만료되었습니다.
    //XXXXX                   = 12238,                // 길드 던전을 생성하고 있습니다. 잠시 후 다시 요청해주세요.
    EXCHANGE_ITEM_NOT_BUY_SELF_ITEM = 12239,        // 거래소에 자신이 등록한 아이템은 구매할수없습니다.
    ARTIFECT_USE_LEVEL_LIMIT = 12240,               // 아티팩트 사용 레벨이 안됩니다.
    GUILD_ALLIANCE_REQUEST_ENEMY_NOT_ALLIANCE = 12241,           // 적 길드는 동맹을 신청할수 없습니다.
    GUILD_ALLIANCE_REQUEST_ALLIANCE_NOT_ENEMY = 12242,           // 동맹 길드는 적길드를 신청할수 없습니다.
    GUILD_ALLIANCE_REQUEST_ALLIANCE_REQUESTING = 12243,           // 동맹 신청중인 길드입니다.
    ALREADY_REGIST_GUILD_ENEMY = 12244,           // 이미 적길드에 등록되어있습니다.
    SKILL_USE_LEVEL_LIMIT = 12245,                  // 스킬 사용 레벨이 잘못 되었습니다.
    ALREADY_ANSWER_SURVEY = 12246,                  // 이미 설문조사에 답변하였습니다.
    SURVEY_LEVEL_LIMIT = 12247,                     // 설문조사할 레벨이 안됩니다.
    ALREADY_OTHER_GUILD_JOIN = 12248,               // 가입 신청자가 이미 다른 길드에 가입하였습니다.
    GUILD_REQUEST_JOIN_INFO_NOT_FIND = 12249,       // 길드 가입 신청 정보가 없습니다.
    SAME_ACCOUNT_NOT_FRIEND = 12250,                // 같은 계정의 케릭터는 친구가 될수없습니다.
    // XXXXXXXXXXXXXX                          = 12251, // 이번주에 이미 입장하였습니다.
    DUPLICATE_COLOSSEUM_ADD_QUEUE = 12252,              // 이미 콜로세움 입장 신청되어있습니다.
    ALREADY_GUILD_ALLIANCE_CHAT_REQUEST = 12253,        // 길드 연맹채팅 신청 혹은 요청 리스트가 있습니다.
    UNUSED_STAGE = 12254,                               // 입장 불가 스테이지
    NOT_FIND_COLOSSEUM_SERVER = 12255,                  // 콜로세움 서버를 찾을수 없습니다.
    NOT_LEAVE_COLOSSEUM_PLAY = 12256,                   // 콜로세움 매칭 플레이중에는 나갈수 없습니다.
    NOT_FIND_COLOSSEUM_MATCH_REWARD = 12257,            // 콜로세움 매칭 보상을 찾을수 없습니다.
    NOT_COLOSSEUM_STAGE = 12258,                        // 콜로세움 스테이지가 아닙니다.
    COLOSSEUM_ENTER_LEVEL = 12259,                      // 콜로세움 스테이지가 아닙니다.
    NOT_OPEN_TIME_COLOSSEUM = 12260,                    // 콜로세움 입장 시간이 아닙니다.
    FAIL_NICK_NAME_CHANGE_FRIEND = 12261,               // 친구가 존재하여 닉네임을 변경할 수 없습니다.
    FAIL_NICK_NAME_CHANGE_GUILD = 12262,                // 길드에 가입되어있어 닉네임을 변경할 수 없습니다.
    FAIL_NICK_NAME_CHANGE_CHAR_DELETE_STATE = 12263,    // 삭제 상태의 케릭터는 닉네임을 변경할 수 없습니다.
    FAIL_NICK_NAME_CHANGE_PARTY = 12264,                // 파티 상태의 케릭터는 닉네임을 변경할 수 없습니다.
    COLOSSEUM_PLAY_CHAR_NOT_SAME = 12265,               // 콜로세움 현재 플레이중인 케릭터가 같지 않습니다.
    COLOSSEUM_DAY_PLAY_CNT_MAX = 12266,                 // 콜로세움 플레이를 더이상 할수없습니다.
	ALREADY_CANCEL_FRIEND_REQUEST = 12267,              // 이미 취소된 친구 요청입니다.
	ADD_IMPOSSIBLE_SKILL = 12268,                       // 추가 불가능한 스킬입니다.
	NOT_HAVE_BASE_SKILL = 12269,                        // 궁극기 스킬의 베이스 스킬을 배우고 해야합니다.
	NOT_RECOVERY_MATERIAL_ITEM = 12270,                 // 복구 재료 아이템이 아닙니다.
	NOT_FIND_RECOVERY_ITEM = 12271,                     // 복구 아이템을 찾을수 없습니다.
	LOW_GUILD_COMMENT = 12272,							// 길드 코맨트가 너무 짧습니다.
	NOT_CLASS_CHANGE_ITEM = 12273,						// 클레스 변경 아이템이 아닙니다.
	NOT_ENOUGH_CLASS_CHANGE_ITEM = 12274,				// 클레스 변경 아이템이 부족합니다.
	DO_NOT_SAME_CHARACTER_CLASS_CHANGE = 12275,			// 같은 클레스로는 변경이 불가능합니다.
	CLASS_CHANGE_ITEM_LOCK = 12276,                     // 클레스 변경아이템이 잠겨있습니다.
	NOT_FOUND_PET = 12277,                              // 펫을 찾을 수 없습니다.
	PET_ADV_NOT_FOUND_DUNGEON = 12278,                  // 탐험 지역를 찾을 수 없습니다. 잠시 후 다시 시도해주세요
	PET_ADV_NOT_OPENED_DUNGEON = 12279,                 // 열리지 않은 탐험 지역입니다.
	PET_ADV_NOT_MATCHED_PET = 12280,                    // 탐험에 보낼수 없는 펫이 있습니다.
	PET_ADV_CONDITION_FAILURE = 12281,                  // 탐험 조건 실패
	PET_ADV_ALREADY_EXPLORING = 12282,                  // 이미 탐험중인 던전
	PET_ADV_NOT_MATCHED_PET_TIER = 12283,               // 탐험 펫 티어조건이 맞지 않습니다.
	PET_ADV_NOT_MATCHED_PET_Lv = 12284,                 // 탐험 펫 레벨조건이 맞지 않습니다.
	PET_ADV_NOT_MATCHED_PET_JOIN_TYPE = 12285,          // 탐험 펫 입장 조건이 맞지 않습니다.
	PET_ADV_NOT_FOUND_EXPLORING_DATA = 12286,           // 탐험 정보를 찾을 수 없습니다.
	PET_ADV_NOT_COMPLETE = 12287,                       // 탐험이 아직 완료되지 않았습니다.
	PET_ADV_NOT_SUMMON = 12288,                         // 펫이 탐험중이라 소환할 수 없습니다.
	ITEM_CANNOT_TRADE_SELL = 12289,                     // 1:1 거래에 판매할수 없는 아이템입니다.
	TRADE_SELL_ITEM_LOCK = 12290,                       // 1:1 거래에 등록할 아이템이 락에 걸려있습니다.
	NOT_FIND_TRADE_SELL_ITEM = 12291,                   // 1:1 거래에 판매하는 아이템을 찾을수 없습니다.
    TRADE_ITEM_NOT_BUY_SELF_ITEM = 12292,               // 1:1 거래에 자신이 등록한 아이템은 구매할수없습니다.
    TRADE_ITEM_NOT_SAME_PASSWORD = 12293,               // 1:1 거래에 구매할 아이템 패스워드가 다릅니다.
    TRADE_REGIST_NOT_MINE = 12294,                      // 1:1 거래에 등록할 아이템을 자신에게 등록할수는 없습니다.
	NO_MORE_TRADE_SELL_LIMIT = 12295,                   // 1:1 거래에 판매할수 있는 개수 제한이 넘었습니다.
	CANNOT_FIND_TRADE_TRANSACTION = 12296,              // 1:1 거래에 거래내역을 찾을수 없습니다.
	NOT_FOUND_CHANNEL_INFO = 12297,                     // 채널 정보를 찾을 수 없습니다.
	NOT_HAVE_MINI_GAME_CHARACTER = 12298,               // 미니게임 케릭터가 없습니다.
	LINK_SERVER_IS_CLOSE = 12299,                       // 링크 서버가 닫혀있습니다.
	RUNE_NOT_EQUIP_SLOT = 12300,                        // 장착 슬롯이 다릅니다.
	RUNE_NOT_FOUND_ITEM = 12301,                        // 아이템을 찾을 수 없습니다
	RUNE_DUPLICATE_EQUIP_SLOT = 12302,                  // 중복된 장착 슬롯
	RUNE_NOT_EQUIPPED_SLOT = 12303,                     // 장착되지 않은 룬입니다
	PET_NOT_SETTING_PET_READER = 12304,                 // 대표 펫이 설정되지 않았습니다.
	COLOSSEUM_NOT_FIND_OLD_SEASON_RANK_INFO = 12305,    // 콜로세움 이전 시즌 랭킹 정보가 없습니다.
	ALREADY_TAKE_COLOSSEUM_SEASON_REWARD = 12306,       // 이미 콜로세움 시즌 보상을 받았습니다.
	BOSS_ALREADY_KILL=12307,                            // 보스가 이미 잡혔습니다
	RUNE_IS_EQUIPPED=12308,                             // 장착된 룬입니다.
	NOT_FOUND_REDIS_TYPE=12309,                         // 시스템 에러입니다. (레디스 타입을 못찾을때 나옴)
	NOT_FOUND_AUTO_BUY_POTION_BUFF=12310,               // 물약 자동 구매 기능이 없습니다.
	LUCKY_ALREADY_KILL = 12311,                         // 이미 죽은 대상입니다.
	INSTANCE_DUNGEON_TODAY_PLAY_CNT_MAX = 12312,        // 오늘 인스턴스 던전 플레이 횟수가 최대치
	INSTANCE_DUNGEON_CLEAR_STATE_LIMIT = 12313,         // 인스턴스 던전 클리어 제한에 걸렸습니다.
	NOT_EXTRACTION_PET = 12314,                         // 추출이 불가능한 펫입니다.
	NOT_ENOUGH_EXTRACTION_PET = 12315,                  // 추출할 펫이 부족합니다.
	EXTRACTION_PET_LOCK = 12316,                        // 추출할 펫이 잠겨있습니다.
	EXTRACTION_PET_MATERIAL_COUNT= 12317,				// 추출할 펫 재료가 부족합니다.

	NOT_EXTRACTION_CHANGE = 12318,                      // 추출이 불가능한 변신체입니다.
	NOT_ENOUGH_EXTRACTION_CHANGE = 12319,               // 추출할 변신체이 부족합니다.
	EXTRACTION_CHANGE_LOCK = 12320,                     // 추출할 변신체이 잠겨있습니다.
	EXTRACTION_CHANGE_MATERIAL_COUNT= 12321,			// 추출할 변신체 재료가 부족합니다.

	NOT_GETTING_ITEM=12322,                             // 아이템을 획득한 기록이 없습니다.
	NOT_FIND_SMELT_INFO=12323,                          // 제련 정보가 없습니다.
	NOT_FIND_SMELT_ITEM_INFO=12324,                     // 제련할 장비 아이템 정보가 없습니다.
	SMELT_ITEM_LOCK=12325,                              // 제련할 장비 아이템이 락에 걸려있습니다.
	NOT_ENOUGH_SMELT_MATERIAL_COUNT = 12326,            // 제련 재료가 부족합니다.
	NOT_FIND_SERVER_EVENT_INFO = 12327,                 // 해당 서버 이벤트 정보가 없습니다.
	SERVER_EVENT_EXPIRE_TIME = 12328,                   // 해당 서버 이벤트가 만료되었습니다.
	ALREADY_TAKE_SERVER_EVENT_REWARD = 12329,           // 해당 서버 이벤트보상을 이미 받았습니다.
	NOT_HAVE_NEED_GRADE_SKILL = 12330,                  // 스킬을 배울수있는 이전 등급 개수가 부족합니다.
	SCENARIO_DUNGEON_TODAY_PLAY_CNT_MAX = 12331,        // 오늘 시나리오 던전 플레이 횟수가 최대치
	SCENARIO_DUNGEON_CLEAR_STATE_LIMIT = 12332,         // 시나리오 던전 클리어 제한에 걸렸습니다.

	EVENT_PERIOD_EXPIRED = 12333,                       // 이벤트 기간이 지났습니다.
    TRADE_ITEM_REGIST_FAIL = 12334,                     // 거래소 아이템 등록 실패했습니다.
    COLOSSEUM_SERVER_EMPTY = 12335,                     // 콜로세움 매칭할 서버가 부족합니다.
    COLOSSEUM_WAIT_TIME_OUT = 12336,                    // 콜로세움 대기 시간 만료되었습니다.
    SCENARIO_STAGE_NOT_OPEN_TIME = 12337,               // 시나리오 던전 스테이지 오픈 시간이 아닙니다.
    TRADE_TARGET_CHARACTER_LEVEL_LIMIT = 12338,         // 거래 타겟 케릭터 레벨제한에 걸렸습니다.
    TRADE_LEVEL_LIMIT = 12339,                          // 거래 레벨제한에 내가 걸렸습니다.
    INFINITY_DUNGEON_NOT_HAVE_SCHEDULE = 12340,         // 무한던전 스케쥴이 없습니다.
    INFINITY_DUNGEON_NOT_RESET = 12341,                 // 무한던전 데이타가 초기화 안되었습니다.
    INFINITY_DUNGEON_NO_MORE_STAGE = 12342,             // 무한던전 다음층이 없습니다.
    INFINITY_DUNGEON_CLEAR_STATE_LIMIT = 12343,         // 무한던전 클리어 제한에 걸렸습니다.
    INFINITY_DUNGEON_ALREADY_TAKE_DAILY_REWARD = 12344, // 무한던전 일일 보상을 이미 받았습니다.

    CHANGE_QUEST_ALREADY_DAILY_RESET = 12345,           // 이미 변신체 퀘스트를 리셋 하였습니다.
    CHANGE_QUEST_REGIST_CHANGE_NOT_MATCH = 12346,       // 변신체 퀘스트에 들어가는 변신체 정보가 일치하지 않습니다.
    ALREADY_REGIST_CHANGE_QUEST = 12347,                // 변신체 퀘스트에 이미 등록된 퀘스트 입니다.
    ALREADY_REGIST_CHANGE = 12348,                      // 변신체 퀘스트에 이미 등록된 변신체 입니다.
    CHANGE_QUEST_NOT_REGIST_CHANGE = 12349,             // 변신체 퀘스트에 등록할수없는 변신체 입니다.
    CHANGE_QUEST_NOT_CANCEL_STATUS = 12350,             // 변신체 퀘스트를 취소할수 없는 상태입니다.
    CHANGE_QUEST_ALREADY_COMPLETE = 12351,              // 이미 완료된 변신체 퀘스트입니다.
    CHANGE_QUEST_NOT_REGISTED_CHANGE = 12352,           // 변신체 퀘스트에 등록된 변신체가 아닙니다.
    CHANGE_QUEST_NOT_FIND_COMPLETE = 12353,             // 변신체 퀘스트 완료보상 받을 퀘스트가 없습니다.
    CHANGE_QUEST_NOT_YET_COMPLETE = 12354,              // 아직 변신체 퀘스트가 완료되지 않았습니다.
    NOT_ARTIFACT_MATERIAL_CHANGE = 12355,               // 아티펙트 재료 변신체가 아닙니다.
    NOT_ARTIFACT_MATERIAL_ITEM = 12356,                 // 아티펙트 재료 아이템이 아닙니다.
    NOT_ENOUGH_ARTIFACT_MAKE_MATERIAL_COUNT = 12357,	// 아티팩트 제작 재료 갯수가 맞지 않습니다.
    ARTIFACT_MAKE_MATERIAL_LOCK = 12358,		        // 아티팩트 제작 재료가 락이 걸려있습니다.
    NOT_ENOUGH_INFINITY_DUNGEON_RESET_COST = 12359,		// 무한 던전 리셋 비용이 부족합니다.
    DO_NOT_SELECT_DUNGEON_BUFF_STAGE = 12360,		    // 무한 던전 버프를 선택할수없는 스테이지 입니다.
    DO_NOT_SELECT_DUNGEON_BUFF_TABLE_TID = 12361,		// 무한 던전 버프를 선택할수없는 버프 입니다.
    ALREADY_SELECT_DUNGEON_BUFF = 12362,		        // 무한 던전 버프를 이미 선택하였습니다.
    ALREADY_RESET_DUNGEON = 12363,		                // 무한 던전을 이미 리셋 하였습니다.
    NOT_FIND_EQUIP_GEM_ITEM = 12364,		            // 장착하려는 잼 아이템을 찾을수 없습니다.
    NOT_FIND_UNEQUIP_GEM_ITEM = 12365,		            // 탈착하려는 잼 아이템을 찾을수 없습니다.
    NOT_ENOUGH_UNEQUIP_COST = 12366,		            // 탈착하려는 잼 비용이 부족합니다.
    NOT_MATCH_EQUIP_GEM_ITEM_GRADE = 12367,		        // 장착하려는 잼의 등급이 맞지 않습니다.
    NOT_MATCH_EQUIP_GEM_ITEM_SLOT = 12368,		        // 장착하려는 잼의 슬롯이 맞지 않습니다.
    ALREADY_EQUIP_GEM_TYPE = 12369,		                // 이미 장착하고있는 잼 타입 입니다.
    ALREADY_EQUIP_GEM_SLOT = 12370,		                // 이미 장착하고있는 잼 슬롯 입니다.
    GEM_EQUIP_ITEM_NOT_TRADE = 12371,		            // 잼이 장착되어있는 아이템은 거래할수없습니다.
    GEM_EQUIP_ITEM_NOT_EXCHANGE = 12372,		        // 잼이 장착되어있는 아이템은 거래소 등록을 할수없습니다.
    GEM_EQUIP_ITEM_NOT_STORAGE = 12373,		            // 잼이 장착되어있는 아이템은 창고에 등록을 할수없습니다.
    GEM_EQUIP_ITEM_NOT_SELL = 12374,		            // 잼이 장착되어있는 아이템은 판매할수 없습니다.
    NOT_USE_TELEPORT_STAGE = 12375,		                // 텔레포트를 사용할수없는 스테이지 입니다.

	ATTRIBUTE_NO_MORE_ENCHANT = 12409,		            // 더이상 속성 강화를 할수없습니다.
    ATTRIBUTE_ENCHANT_ITEM_LOCK = 12410,                // 속성 강화 재료가 락에 걸려있습니다.
    ATTRIBUTE_ENCHANT_RATE_UP_MAX = 12411,              // 속성 강화 확률 추가 오버 되었음
    ATTRIBUTE_ENCHANT_ENOUGH_MATERIAL = 12412,          // 속성 강화 재료 부족

    ALREADY_OPEN_TEMPLE_STAGE = 12413,                  // 이미 오픈되어진 유적 스테이지
    ALREADY_TAKE_TEMPLE_BOX_REWARD = 12414,             // 이미 상자 오픈한 유적 스테이지
    NOT_OPEN_TEMPLE_STAGE = 12415,                      // 오픈 안된 유적임
    ALREADY_CLEAR_TEMPLE_STAGE = 12416,                 // 이미 클리어한 유적입니다.
    ENOUGH_PET_ADV_COMBAT_SCORE = 12417,                // 펫 모험 전투련 점수가 부족
    ENOUGH_PET_ADV_RESET_USE_COST = 12418,              // 펫 모험 리셋 비용이 부족합니다.
    NOT_EQUIP_PET_ADV = 12419,                          // 모험중인 펫은 장착할수없습니다.
    ALREADY_HAVE_ARTIFACT_GROUP = 12420,                // 이미 해당 그룹과 같은 아티팩트가 있음
    NOT_FIND_EQUIP_ARTIFACT = 12421,                    // 장착하려는 아티팩트가 없다.
    ALREADY_EQUIP_ARTIFACT = 12422,                     // 아티팩트를 이미 장착하고 있다.
    ALREADY_UNEQUIP_ARTIFACT = 12423,                   // 아티팩트를 이미 탈착하고 있다.
    NO_MORE_UPGRADE_ARTIFACT = 12424,                   // 아티팩트를 더이상 승급할수 없음
    NO_OPEN_COOKING_RECIPE = 12425,                     // 오픈되지 않은 요리 래시피.
    COOKING_MAKE_LEVEL_LIMIT = 12426,                   // 요리 제작 레벨 부족
	COOKING_MAKE_MATERIAL_LOCK = 12427,                 // 요리 제작 재료가 락에 걸려있습니다.
	NOT_ENOUGH_COOKING_MAKE_MATERIAL_COUNT = 12428,     // 요리 제작 재료가 부족합니다.
	ALREADY_HAVE_QUEST = 12429,                         // 이미 진행하고 있는 퀘스트가 있습니다.
	NOT_ENOUGH_ACCEPT_QUEST_CONDITION = 12430,          // 받으려는 퀘스트이 조건이 안됨
    ACCEPT_QUEST_LEVEL_LIMIT = 12431,                   // 받으려는 퀘스트 수락 레벨 부족
    NOT_FIND_CANCEL_QUEST = 12432,                      // 삭제하려는 퀘스트를 찾을수없습니다.
    DO_NOT_CANCEL_REWARD_QUEST = 12433,                 // 진행이 완료된 퀘스트는 삭제할수없음
    NOT_ENOUGH_QUEST_COMPLETE_ITEM = 12434,             // 퀘스트 완료 아이템이 부족합니다.
    NOT_FIND_ACCEPT_QUEST_OPEN_ITEM = 12435,            // 퀘스트 오픈 아이템 없음
	EXCHANGE_LEVEL_LIMIT = 12436,					    // 거래소 레벨 제한에 걸렸습니다.
	ENOUGH_ENCHANT_ATTRIBUTE_CHAIN_LEVEL = 12437,		// 속성 강화시 체인 레벨 부족
	ACCOUNT_LEAVE_WAIT = 12438,                         // 회원탈퇴 진행중입니다.
	ACCOUNT_LEAVE_CANCEL_EXPIRE = 12439,                // 회원탈퇴 취소 가능 기간이 지났습니다.
	ACCOUNT_LEAVE_FAIL_GUILD = 12440,                   // 회원 탈퇴에 실패하였습니다. 길드
	ACCOUNT_LEAVE_FAIL_FRIEND = 12441,                  // 회원 탈퇴에 실패하였습니다. 친구
	NOT_FOUND_MARKET_PRODUCT_ID = 12442,                // 상품 아이디를 찾을 수 없습니다. - 빌링
	NOT_HAVE_ABILITY_ITEM_BREAK_OPTION = 12443,         // 아이템 자동 분해 어빌리티가 없습니다.
	NO_MORE_CHANGE_QUEST_LEVEL_UP = 12444,              // 더이상 강림체 레벨업을 할수없습니다.
	NOT_ENOUGH_CHANGE_QUEST_EXP = 12445,                // 강림체 레벨업 경험치가 부족합니다.
	PORTAL_MOVE_WAIT_TIME = 12446,                      // 포탈 및 채널 이동 대기시간이 안 지났습니다.
	QUEST_EVENT_EXPIRED = 12447,                        // 이벤트 퀘스트 기간이 만료되었습니다.

	GUILD_DUNGEON_ALREADY_OPENED_THIS_WEAK = 12449,     // 이번주에 이미 길드 던전을 열었습니다.
	GUILD_DUNGEON_OPEN_GRADE_LOW = 12450,               // 권한이 부족하여 길드던전을 열수가 없습니다.
    GUILD_DUNGEON_OPEN_LEVEL_LOW = 12451,               // 길드 던전 오픈 레벨이 부족합니다.
    GUILD_DUNGEON_OPEN_REQUEST_MANY = 12452,            // 길드 던전 생성 요청이 너무 많습니다. 잠시 후 다시 요청해주세요.
    GUILD_DUNGEON_NOT_OPEN = 12453,                     // 길드 던전이 열리지 않았습니다.
    GUILD_DUNGEON_BOSS_KILL_ABLE_TIME_OVER = 12454,     // 길드 보스를 찾을 수 없습니다.
    GUILD_DUNGEON_BOSS_ALREADY_KILL = 12455,            // 길드 던전 보스가 이미 죽었습니다
    GUILD_DUNGEON_ALREADY_EXIT = 12456,                 // 이미 종료된 길드 던전입니다.
    GUILD_DUNGEON_ENTER_MEMBER_NOT_FOUND = 12457,       // 길드 던전 입장 유저 정보를 찾을 수 없습니다.
    GUILD_DUNGEON_ONLY_OPEN_ONE_SAME_TIME = 12458,      // 동시에 하나의 던전만 열 수 있다.
    GUILD_DUNGEON_OPEN_MAX = 12459,                     // 더이상 길드 던전을 열 수 없습니다.
    GUILD_DUNGEON_ALREADY_ENTERED_THIS_WEAK = 12460,    // 이번주에 이미 입장하였습니다.
    GUILD_DUNGEON_NOT_READY = 12461,                    // 길드 던전을 생성하고 있습니다. 잠시 후 다시 요청해주세요.
    GUILD_DUNGEON_ENTER_FAIL = 12462,                   // 길드 던전에 입장할 수 없습니다.


	LINE_API_ERROR = 13000,                             // 라인서버에 api 요청 에러
	LINE_NOT_FOUND_USER = 13001,                        // 라인서버에서 유저정보를 찾을 수 없습니다.
	LINE_BAD_WORD = 13002,                              // 사용할 수 없는 단어입니다.

    TEMP_ERROR_CODE_1 = 14000,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_2 = 14001,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_3 = 14002,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_4 = 14003,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_5 = 14004,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_6 = 14005,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_7 = 14006,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_8 = 14007,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_9 = 14008,                          // 임시 대응 에러코드
    TEMP_ERROR_CODE_10 = 14010,                         // 임시 대응 에러코드

	//===== Special error code (20000 ~ ) ======
    USE_POTION_USE_TIME = 20000,                    // 물약 사용을 빠르게 했다.
	UNUSABLE_STATE = 20001,							// 사용 할 수 없는 상태 입니다.
	UNUSABLE_MEZSTATE = 20002,						// 사용 할 수 없는 메즈 상태
	ISNOT_COOLTIME = 20003,							// 쿨타임..
	NOT_ENOUGH_MP = 20004,							// 마나부족
	OUT_OF_RANGE = 20005,							// 사정거리 밖
	INVALID_WEAPON_TYPE = 20006,					// 잘못된 무기 타입
	INVALID_CHARACTER_TYPE = 20007,					// 잘못된 캐릭터 타입
	UNLEARNED_SKILL = 20008,						// 배우지 않은 스킬
	NOT_ENOUGHT_ITEM = 20009,						// 아이템 부족
	INVALID_TARGET = 20010,							// 잘못된 대상	
	NOT_USE_IN_TOWN = 20011,						// 마을에서는 사용할 수 없다.
	IS_NOT_SEASON_PASS = 20012,                     // 시즌패스 아이템이 아니다.
	YOU_HAVE_SEASON_PASS = 20013,                   // 소지 중인 시즌 패스이다.
	DO_NOT_FIND_EVENT_TYPE = 20014,                 // 이벤트 못찾음
    DO_NOT_FIND_EVENT_TABLE = 20015,                // 이벤트 출석 테이블 못가져옴
	SKILL_PRECONDITION_FAIL = 20016,				// 스킬테이블 PreCondition 조건체크 실패

	//===== Match error code (30000 ~ ) ======
	NOT_FOUND_PARTY = 30000,                        // 파티 정보를 찾을 수 없습니다.
	NOT_SEND_PARTY_INVITE = 30001,                  // 파티 초대를 보낼 수 없습니다.
	PARTY_IS_FULL = 30002,                          // 파티가 가득 찼습니다.
	NOT_IS_MASTER = 30003,                          // 파티 마스터가 아닙니다.
	NOT_FOUND_KICK_OUT_MEMBER = 30004,              // 강퇴시킬 유저를 찾을 수 없습니다.
	NOT_FOUND_CHANGE_MASTER_MEMBER = 30005,         // 파티장을 위임받을 유저를 찾지 못했습니다.
	PARTY_ALREADY_JOINED = 30006,                   // 이미 파티에 가입되어있습니다.
	NOT_MATCHED_PARTY_UID = 30007,                  // 파티 키가 다릅니다.

	CHANNEL_IS_FULL = 30008,                        // 채널이 꽉 찼습니다.
	NOT_FOUND_STAGE = 30009,                        // 스테이지를 찾을 수 없습니다.
	STAGE_IS_FULL = 30010,                          // 스테이지가 꽉 찼습니다.
	NOT_CHANGE_CHANNEL_STAGE = 30011,               // 채널을 변경할수 없는 지역입니다.
	ALREADY_ENTERED_CHANNEL = 30012,                // 이미 입장한 채널입니다.
    FIELD_BOSS_KILL_ERROR = 30013,                  // 필드보스 킬관련 에러

    GOD_LAND_SLOT_IS_FULL = 30014,                  // 성역 소지수 초과
    GOD_LAND_USER_NOT_MATCH = 30015,                // 성역 소지자가 일치하지 않습니다.
    NOT_ENOUGH_GOD_LAND_PRODUCT_TIME = 30016,      // 성역 상품의 획득 시간 부족 합니다.
    NOT_ENOUGH_GOD_LAND_RECODE = 30017,            // 성역 전투 기록이 없다.

	INVALID_ROOM_NO,								// 잘못된 방번호.
	INVALID_ROOM_USER,							    // 잘못된 방유저.
	
	NOT_MY_GUILD_DUNGEON,							// 내 길드의 길드던전이 아닙니다.

	CANT_BUY_ITEM_EXPIRE_EVENT,                     // 이벤트 기간이 종료되어 상품을 구매할 수 없습니다.
}
// 한번에 진행할수있는 패킷 array 최대갯수
// 아이템 강화
enum E_ITEM_ENCHANT : ushort {
    LIMIT = 20,
}

// 창고
enum E_ITEM_STORAGE : ushort {
    LIMIT = 25,
}

// 분해
enum E_ITEM_BREAK : ushort {
    LIMIT = 100,
}

// 구매
enum E_ITEM_BUY : ushort {
    LIMIT = 20,
}

// 판매
enum E_ITEM_SELL : ushort {
    LIMIT = 100,
}

// 제작
enum E_ITEM_MAKE : ushort {
    EQUIP_LIMIT = 100,
    LIMIT = 1000,
}

// 가챠
enum E_ITEM_GACHA : ushort {
    LIMIT = 10,
}

// 삭제
enum E_ITEM_DELETE : ushort {
    LIMIT = 100,
}

// 우편 받기
enum E_TAKE_MAIL : ushort {
    LIMIT = 100,
}

// 거래소 관련
enum E_EXCHANGE : ushort {
    LIMIT = 20,
}

// 변신체 합성
enum E_CHANGE_COMPOSE : ushort {
    LIMIT = 100,
}

// 팻 합성
enum E_PET_COMPOSE : ushort {
    LIMIT = 100,
}

// 룬 아이템 장착
enum E_RUNE_EQUIP : ushort {
    LIMIT = 6,
}

// 경험치로 명예코인 변환
enum E_EXP_HONOR_COIN_TRADE : uint {
    LIMIT = 10000000,
}

// 계정 상태
enum E_AccountStateType : ubyte {
    Active = 0,              // 활성 상태
    // DeleteWait = 1,          // 삭제 대기 상태
    Restriction = 100,          // 일반 제제 상태
    // 아래는 다른 사유 타입이 있을수있다.
    CheckUserData = 200,        // 유저 데이타 확인중
    LeaveWait = 201,            // 회원 탈퇴 대기 상태
    Leave = 202,                // 회원 탈퇴
}

// 케릭터 상태
enum E_CharStateType : ubyte {
    Active = 0,         // 활성 상태
    DeleteWait = 1,     // 삭제 대기 상태
    Delete = 2,         // 삭제 상태
}

//캐릭터 옵션 키
enum E_CharacterOptionKey : ubyte {
	QuickSlot_Set1 = 0, //퀵슬롯 1번세트
	QuickSlot_Set2 = 1, //퀵슬롯 2번세트
	Storage_Auto_Put = 2, //창고 자동 보관 리스트
	EQUIP_SET1 = 3, //장비 1번세트 장착 리스트
	EQUIP_SET2 = 4, //장비 2번세트 장착 리스트
	EQUIP_SET3 = 5, //장비 3번세트 장착 리스트
	EQUIP_SELECT_SET = 6, //마지막 선택한 장착 리스트
	BOOK_MARK_PORTAL = 7, //포탈 즐겨찾기 리스트
	CHAT_CHANNEL = 8, //채팅 채널 보기 설정
	GUILD_GREETING = 9, //길드원 인사 메세지
	INVEN_SORT_LIST = 10, //마지막 가방 정리된 정보
	Colosseum_QuickSlot_Set1 = 11, //콜로세움 퀵슬롯 1번세트
    Colosseum_QuickSlot_Set2 = 12, //콜로세움 퀵슬롯 2번세트
	Colosseum_HP_Auto_Per = 13, //콜로세움 hp자동 사용 퍼센트
	RUNE_DROP_SELECT = 14, //룬 드랍 리스트
	Max = 15,       // Max
}

// 장비 아이템 삭제 타입 (서버용)
enum E_EquipmentState: ubyte {
    None= 0,           // 활성화 상태
    Sell= 1,           // 판매로 삭제 상태
    Upgrade= 2,        // 승급
    Enchant= 3,        // 강화
    Make= 4,           // 제작
    Break= 5,          // 분해
    Storage= 6,        // 창고
    Delete= 7,         // 삭제
    Collect= 8,        // 아이템 수집
    Char_Extend= 9,    // 케릭터 확장
    Ring_Extend= 10,   // 반지 확장
    Exchange= 11,      // 거래소 아이템 등록
    Admin=12,          // 운영자 삭제
    Trade=13,          // 거래 삭제
    Artifact=14,       // 아티팩트
}

// 친구 상태
enum E_FriendState: ubyte {
    Friend= 0,          // 친구
    AlertFriend= 1,     // 경계친구
}

// 친구 요청 상태
enum E_FriendRequestState: ubyte {
    Request= 0,         // 요청한 친구
    Receive= 1,         // 요청 받은 친구
}

// 길드 가입 상태
enum E_GuildJoinState: ubyte {
    None= 0,                    // 길드 없음
    Join= 1,                    // 길드 가입중
    Leave= 2,                   // 길드 탈퇴중
    Ban= 3,                     // 길드 강퇴중
}

// 길드의 내 등급
enum E_GuildMemberGrade: ubyte {
    None= 0,                    // 없음
    Normal= 1,                  // 길드원
    SubMaster= 2,               // 부길마
    Master= 3,                  // 길마
}

// 길드 상태
enum E_GuildState: ubyte {
    Active= 0,                    // 활성화 상태
    Delete= 1,                    // 삭제 상태
}

// 길드 가입 타입
enum E_GuildJoinType: ubyte {
    Join= 0,                        // 가입
    Reject= 1,                      // 거절
    Ban= 2,                         // 추방
    Leave= 3,                       // 탈퇴
    RequestJoin= 4,                 // 가입 요청
    RequestJoinCancel= 5,           // 가입 요청 취소
}

// 길드 연맹 상태
enum E_GuildAllianceState: ubyte {
    None= 0,                        // 없음
    RequestAlliance= 1,             // 동맹 요청 상태
    ReceiveAlliance= 2,             // 동맹 받은 상태
    Alliance= 3,                    // 동맹 상태
    Enemy= 4,                       // 적 상태
    Max=5,
}

// 길드 연맹 채팅 상태
enum E_GuildAllianceChatState: ubyte {
    None= 0,                        // 없음
    Request= 1,                     // 채팅 요청 상태
    Receive= 2,                     // 채팅 받은 상태
    Enter= 3,                       // 채팅 입장 상태
    Max=4,
}

// 길드 연맹 채팅 상태
enum E_GuildAllianceChatGrade: ubyte {
    None= 0,                        // 없음
    Normal= 1,                     // 일반 길드
    Master= 2,                     // 마스터 길드
    Max=3,
}

// 길드 기부 타입
enum E_GuildDonationType: ubyte {
    SMALL= 0,                       // 소
    MEDIUM= 1,                      // 중
    LARGE= 2,                       // 대
}

// 거래소 아이템 상태
enum E_ExchangeState: ubyte {
    Sell= 0,                        // 거래 등록 상태
    SoldOut= 1,                     // 거래 판매 완료 상태
    Withdraw= 2,                    // 거래 회수 상태
    Delete= 3,                      // 거래 삭제 상태
}

// 거래소 거래 내역 상태
enum E_ExchangeTransactionState: ubyte {
    SoldOut= 0,                     // 거래 판매 완료 상태
    TakeMoney= 1,                   // 거래 완료후 정산까지 완료한 상태
}

// 거래소 아이템 가격 소팅
enum E_ExchangeSortType : ubyte {
    TotalPriceAsc= 0,               // 총 가격 오름 차순 소팅
    TotalPriceDesc= 1,              // 총 가격 내림 차순 소팅
    PriceAsc= 2,                    // 개별 가격 오름 차순 소팅
    PriceDesc= 4,                   // 개별 가격 내림 차순 소팅
}

// 퀘스트 상태
enum E_QuestState: ubyte {
    None=0,                         // 진행중
    Reward=1,                       // 보상받기 가능
    Complete=2                      // 완료
}

// MMO 입장 타입
enum E_MmoEnterType: ubyte {
    First=0,                        // 처음 입장
    ChangeChannel=1,                // 채널 이동
    Portal=2,                       // 포탈 이동
}

// 입장 채널 타입
enum E_StageChannelType: ushort {
    Single=800,                     // 싱글 채널 (봇입장 가능)
}

enum E_MessageState: ubyte {
    Unread=0,                       // 안 읽음
    Read=1,                         // 읽음
    Delete=2,                       // 삭제
}

enum E_MessageType: ubyte {
	Normal= 0,                      //일반 쪽지
	Guild= 1,                       //길드 쪽지
	Exchange= 2,                    //거래소 쪽지
}


enum E_ChatMgrType: ubyte {
    None =0,
    ChatMaster = 1,
    ChatCluster = 2,
    SendServer = 3,
}



// [Main] 채팅 기능별 메인 타입
enum E_ChatType: ubyte {
    None=0,
    Server=1,           // 단일 서버 채팅
    Normal=2,           // 일반 채팅
    Party=3,            // 파티 채팅
    Guild=4,            // 길드 채팅
    Alliance=5,         // 연합 채팅
    User=6,             // 유저 채팅
    InterNormal=7,      // 인터서버 일반
    InterParty=8,       // 인터서버 파티
    Global=9,           // 전체 서버 채팅
}

// [Sub] 전체 채팅 기능별 서브 타입
enum E_ChatServerSubType: ubyte {
    None=0,
    Chat=1,             // 채팅
    Notice=2,           // 시스템 메시지
    Sneer=3,            // 조롱                // args = [target_char_id, target_char_nick]
    GetItem=4,          // 아이템 획득         // args = [E_ChatServerNoticeLocationType, location_tid, E_GoodsKindType(.xlsx), item_tid]
    EnchantItem=5,      // 강화 성공           // args = [item_tid]
    GetGold=6,          // 골드 획득           // args = [item_tid, E_GoodsKindType(.xlsx)]
    Trade=7,            // 거래 채팅
    KillMonster=8,      // 몬스터 처치 알람     // args = [monster_tid]
    EnchantRune=9,      // 룬 강화 성공        //  args = [item_tid, step]
    ServerBossSpawn=10, // 서버 보스 알림      // args = [stage_tid]
}

enum E_ChatServerNoticeLocationType: ubyte {
    None=0,             // 없음
    Stage=1,            // 스테이지
    Gacha=2,            // 가챠
    PetAdv=3,           // 펫 탐험
}

// [Sub] 일반 채팅 기능별 서브 타입
enum E_ChatNormalSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
}

// [Sub] 파티 채팅 기능별 서브 타입
enum E_ChatPartySubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    GetItem=2,              // 아이템 획득       // args = [item_tid, item_cnt]
}

// [Sub] 길드 채팅 기능별 서브 타입
enum E_ChatGuildSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    Join=2,                 // 가입
    Out=3,                  // 탈퇴
    KickOut=4,              // 강퇴
    NewMaster=5,            // 길드장 임명
    NewSubMaster=6,         // 부 길드장 임명
    DisSubMaster=7,         // 부 길드장 해임
    MarkChange=8,           // 길드 마크 변경
    LevelUp=9,              // 길드 레벨업
    ChangeNotice=10,        // 공지 변경
    SetEnemy=11,            // 적 길드 등록
    ReleaseEnemy=12,        // 적 길드 해제
    SetAlliance=13,         // 동맹 길드 등록
    ReleaseAlliance=14,     // 동맹 길드 해제
    Connect=15,             // 접속
    BuyBuff=16,             // 버프 구매
    RequestJoin=17,         // 가입 신청
    RequestAlliance=18,     // 길드 연맹 가입 초대
    InviteAllianceChat=19,  // 길드 연맹 채팅 가입 초대
    ChangeName=20,          // 길드명 변경
    BossReward=21,          // 보스 킬  args = [stage_tid, monster_tid, killer_nick]
    GuildDungeonOpen=22,    // 길드 던전 오픈  args = [stage_tid, addr, room_no]
    GuildDungeonFinish=23,  // 길드 던전 종료  args = [stage_tid, monster_tid, is_clear]
    GuildDungeonClose=24,   // 길드 던전 강제 닫힘  args = [stage_tid]
}

// [Sub] 연합 채팅 기능별 서브 타입
enum E_ChatAllianceSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    Join=2,                 // 가입
    Out=3,                  // 탈퇴
    Ban=4,                  // 강퇴
    ChangeMaster=5,         // 연맹장 변경
}

// [Sub] 유저 채팅 기능별 서브 타입
enum E_ChatUserSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    FriendConnect=2,        // 친구 접속
    EnemyConnect=3,         // 경계(적) 접속
    RequestFriend=4,        // 친구 요청
    RequestFriendAccept=5,  // 친구 요청 승인
    GuildJoin=6,            // 길드 가입 알림
}

// [Sub] 인터 일반
enum E_ChatInterNormalSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
}


// [Sub] 인터 파티
enum E_ChatInterPartySubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    GetItem=2,              //
}

// [Sub] 전체서버 채팅
enum E_ChatGlobalSubType: ubyte {
    None=0,
    Chat=1,                 // 채팅
    ServerBossSpawn =2,     // 서버 보스 알림  args = [stage_tid]
    Sneer =3,               // args = [target_char_id, target_char_nick]
    GetItem=4,              //
    KillMonster=5,           // 몬스터 처치 알람
}

enum E_MarketType: ubyte {
    None=0,
    Google=1,               // 구글 결제
    OneStore=2,             // 원스토어 결제
    Apple=3,                // 애플 결제
}

enum E_PaymentStatus: ubyte {
    None=0,
    Init=1,                 // 결제 시작
    Purchase=2,             // 결제 영수증 검증
    Complete=3,             // 결제 완료 후 아이템 지급 완료
}

// 계정 옵션 타입
enum E_AccountOptionType: ubyte {
    ItemDropCharacterNickNone=0,                    // 아이템 드랍할때 자신의 케릭터 닉네임 표시 X
    AnswerSurvey=1,                                 // 설문조사 답변함
    CancelSurvey=2,                                 // 설문조사 거부함
    Review=3,                                       // 리뷰 했는지 여부
    Max=4,
}

// 서버 이벤트 메인 카테고리
enum E_ServerEventCategory: ubyte {
    Stage=0,                                        // 스테이지 관련 이벤트
    Event=1,                                        // 이벤트 관련
    Max=2,
}

// 서버 이벤트 서브 카테고리
enum E_ServerEventSubCategory: ubyte {
    EventDungeon=0,              // 이벤트 던전
    Colosseum=1,                 // 콜로세움
    BannerPopUp=2,               // 배너 이벤트
    QuestEvent=3,                // 퀘스트 이벤트
    GoldUpEvent=4,               // 골드 드랍 상승 이벤트
    ExpUpEvent=5,                // 경험치 드랍 상승 이벤트
    ItemDropRateUpEvent=6,       // 아이템 드랍 상승 이벤트
    ItemDropEvent=7,             // 아이템 획득 이벤트
    ScenarioDungeon=8,           // 시나리오 던전
    AttendEvent=9,               // 일반 출석 이벤트
    AttendEventNewUser=10,       // 신규 유저 출석 이벤트
    AttendEventComeback=11,      // 복귀 유저 출석 이벤트
    AttendEventComulative=12,    // 누적 유저 출석 이벤트
    AttendEventContiniuity=13,   // 연속 유저 출석 이벤트
    AttendEventPaidDaily=14,     // 유료 출석 이벤트
    AttendEventPaidLevelUp=15,   // 유료 레벨업 이벤트
    BattlePass=16,               // 배틀패스 - 카오스 -> 페스타,
    BlackMarket=17,              // 암상인
    Collect=18,                  // 수집 이벤트
    EventPopup=19,               // 이벤트 팝업
    Max=20,
}

// 서버 이벤트 상태
enum E_ServerEventState: ubyte {
    DeActive=0,                  // 서버 이벤트 비활성화 상태
    Active=1,                    // 서버 이벤트 활성화 상태
    Max=2,
}

// Colosseum 상태값
enum E_ColosseumStatus: ubyte {
    None=0,                 // 없음
    Ready=1,                // 준비 완료 상태
    MATCHING=2,             // 매칭 중
    Play=3,                 // 던전 플레이
    End=4,                  // 던전 종료
    Max=5,                  // 없음
}

// Colosseum Team
enum E_ColosseumTeam: ubyte {
    Blue=0,
    Red=1,
}

// 서버 혼잡 상태
enum E_ServerTrafficStatus: ubyte {
    None=0,                     // 없음
    Smooth=1,                   // 원활 상태
    Bush=2,                     // 혼잡 상태
    Heavy=3,                    // 포화 상태
    Lock=4,                     // 점검 상태
}

// 변신체 강화 단계
enum E_ChangeEnchant: ubyte {
    Max=11,                      // 강화 최고 단계
}

// 팻 강화 단계
enum E_PetEnchant: ubyte {
    Max=11,                      // 강화 최고 단계
}

// 해킹 의심 카테고리
enum E_HACK_CATEGORY: ubyte {
    Speed=0,            // 스피드핵 (실제 시간 변조)
    SpeedTimeScale=1,   // 스피드핵 (엔진내의 scale 변조)
    Memory=2,           // 메모리 변조
}

// 서버 타입
enum E_ServerType: ubyte {
    GameServer=0,
    MatchServer=1,
    InterServer=2,
    ChatServer=3,
    BillingServer=4,
    GateWayServer=5,
}

enum E_CharInfoReqBit: ubyte {
    CHARACTER=0,
    BLOCK=1,
    RESTORE_EXP=2,
    STORAGE=3,
    ACCOUNT_STACK=4,
    EQUIP=5,
    STACK=6,
    MARK=7,
    CHANGE=8,
    CHANGE_ENCHANT=9,
    CHANGE_GACHA_KEEP=10,
    PET=11,
    PET_ENCHANT=12,
    PET_GACHA_KEEP=13,
    CHANGE_COLLECT=14,
    ITEM_COLLECT=15,
    PET_COLLECT=16,
    GUILD=17,
    GUILD_BUFF=18,
    GUILD_ALLIANCE=19,
    SKILL_BOOK=20,
    PET_ADVENTURE=21,
    OPTION=22,
    QUEST=23,
    DAILY_QUEST=24,
    MAKE_LIMIT=25,
    FRIEND=26,
    REQUEST_FRIEND=27,
    RUNE=28,
    ITEM_ACQ_HISTORY=29,
    EVENT_QUEST=30,
    CHANGE_QUEST=31,
    ATTRIBUTE=32,
    ARTIFACT=33,
    COOK_HISTORY=34,
    TEMPLE_OPEN_INFO=35,
    SKILL_USE_ORDER=36,
    GOD_LAND_PRODUCT=37,
    ENUM_MAX=38,
}

// 거래 아이템 상태
enum E_TradeState: ubyte {
    Sell= 0,                        // 거래 등록 상태
    SoldOut= 1,                     // 거래 판매 완료 상태
    Withdraw= 2,                    // 거래 회수 상태
    Delete= 3,                      // 거래 삭제 상태
    TakeMoney= 4,                   // 거래 완료후 정산까지 완료한 상태
}

// 거래 관련
enum E_TRADE : ushort {
    LIMIT = 20,
}

enum E_RuneStatus: ubyte {
    None= 0,           // 활성화 상태
    Sell= 1,           // 판매로 삭제 상태
    Upgrade= 2,        // 승급
    Enchant= 3,        // 강화
    Make= 4,           // 제작
    Break= 5,          // 분해
    Storage= 6,        // 창고
    Delete= 7,         // 삭제
    Collect= 8,        // 아이템 수집
    Char_Extend= 9,    // 케릭터 확장
    Ring_Extend= 10,   // 반지 확장
    Exchange= 11,      // 거래소 아이템 등록
    Admin=12,          // 운영자 삭제
    Trade=13,          // 거래 삭제
}

// 펫 모험 상태
enum E_PetAdvStatus: ubyte {
    Wait=0,
    Start=1,
    Reward=2,
    Cancel=3,
}

// 채팅 메시지 제한
enum E_CHAT_MSG_LIMIT : ushort {
    LIMIT = 50,
}

// 서버 상태 체크 값
enum E_SERVER_HEALTH_CHECK : ushort {
    INTERVAL_SEC = 10,
    ADD_EXPIRE_SEC = 20,
}

// 승패 처리 값
enum E_GOD_LAND_FIGHT_RESULT : ushort {
    LOSE = 0,   // 졌음
    SUCCESS = 1,    // 획득 성공
    FAIL = 2,   // 획득 실패
}

// 일반 출석 타입
enum E_EVENT_ATTEND_TYPE : ubyte {
    NONE = 0,       // 최초 생성 시
	NORMAL = 1,		// 일반 계정
	NEW = 2, 		// NONE으로 접속한 계정 (최초 생성 후 접속한 계정)
	COMEBACK = 3,	// 접속안한지 20일이 넘은 계정
	CONTINUITY = 4, //
	CUMULATIVE = 5, //
	PAID_ATTEND = 6,//
	PAID_LEVEL = 7, //
}

// 달성 타입
enum E_ATTEND_TYPE : ubyte {
	ATTEND = 0,  	    // 일반 출석
	CUMULATIVE = 1,     // 누적 출석
	CONTINUITY = 2,	    // 연속 출석
	PAID_ATTEND = 3,    // 유료 출석
	EXPIRED_ATTEND = 5, // 만료된 일반 출석
	EXPIRED_CUMULATIVE = 6, // 만료된 누적 출석
	EXPIRED_CONTINUITY = 7, // 만료된 연속 출석
}

// 공격자 / 방어자 구분
enum E_BATTLE_ROLE : ubyte {
    NONE = 0,       // 구분 없음
    ATTACKER = 1,   // 공격자
    DEFENDER = 2,   // 방어자
}


// MMO 상태값
enum E_GuildDungeonStatus: ubyte {
    None=0,                 //
    Generating=1,           // 던전 생성중
    GenerateComp=2,         // 던전 생성 완료
    ForceClose=3,           // 던전 강제 닫기
    Close=4,                // 닫힘
}


// 계정
table Account {
    user_id: ulong;				    // 계정 id
    nid: string;                    // 라인 NID
    gnid: string;			        // 라인 고유 유저 아이디
    country: string;                // 국가
    login_dt: ulong;				// 마지막 로그인
    create_dt: ulong;				// 계정 생성
    state: E_AccountStateType;		// 계정 상태
    last_login_server_idx: uint;	// 마지막 로그인한 서버 index
}


// 케릭터
table Character {
    server_idx: uint;               // 서버 ID
    char_id: ulong;				    // 케릭터 고유 id
    user_id: ulong;				    // 계정 고유 id
    char_tid: uint;				    // 케릭터 테이블 id
    nick: string;					// 닉네임
    lv: uint;						// 레벨
    last_lv: uint;                  // 최고 달성 레벨
    str: uint;					    // 힘 추가 수치
    dex: uint;					    // 민 추가 수치
    intellect: uint;				// 인트 추가 수치
    vit: uint;					    // 바이탈 추가 수치
    wis: uint;					    // 위즈 추가 수치
    last_hp: uint;				    // 마지막 HP
    last_mp: uint;				    // 마지막 MP
    exp: ulong;					    // 경험치
    last_exp: ulong;                // 최고 달성 경험치
    last_area: uint;				// 마지막 접속 지역
    state: E_CharStateType;			// 상태값
    main_pet: uint;				    // 메인 펫
    pet_expire_dt: ulong;			// 메인 펫 사용 만료시간
    main_vehicle: uint;				// 메인 탈것
    flag_ride: uint;				// 메인 탈것 상태(0 : 안탄 상태 / 1 : 탄 상태)
    artifact_pet: ulong;			// 아티팩트 팻
    artifact_vehicle: ulong;		// 아티팩트 탈것
    main_change: uint;				// 메인 변신체
    change_expire_dt: ulong;		// 메인 변신체 사용 만료시간
    pk_cnt: uint;					// pk 횟수
    add_ring_slot: ubyte;           // 반지 슬롯 확장 개수
    inven_max_cnt: uint;            // 인벤 확장 개수
    quick_slot_max_cnt: uint;       // 퀵슬롯 확장 개수
    special_skill_tids: [uint];     // 궁극기 TID
    tendency: int;				    // 성향치
    create_dt: ulong;				// 케릭터 생성날짜
    delete_dt: ulong;				// 케릭터 삭제날짜
    last_logout_dt: ulong;			// 마지막 접속 시간
    daily_reset_dt: ulong;			// 데일리 이벤트 마지막 갱신 시간
    week_reset_dt: ulong;           // 주간 이벤트 마지막 갱신 시간.
    month_reset_dt: ulong;          // 월간 이벤트 마지막 갱신 시간.
    restore_exp_cnt: ubyte;         // 경험치 무료 복구 횟수
    restore_exp_not_free_cnt: ubyte;// 경험치 복구 유료 횟수
    last_portal_tid: uint;          // 마지막 저장된 포탈 테이블 아이디
    last_pos_x: float;              // 마지막 위치 x좌표
    last_pos_y: float;              // 마지막 위치 y좌표
    last_pos_z: float;              // 마지막 위치 Z좌표
    last_channel_id: ushort;        // 마지막 채널 아이디
    colosseum_score: uint;          // 콜로세움 포인트
    is_colosseum_season_reward: bool;// 콜로세움 시즌 보상 유무
    colosseum_rank: uint;           // 콜로세움 rank
    colosseum_old_season_rank: uint;// 콜로세움 이전 rank
    colosseum_old_season_score: uint;// 콜로세움 이전 점수
    instance_dungeon_stage_tid: uint;// 인스턴스 던전 클리어 마지막 스테이지 정보
    instance_dungeon_cnt: uint;      // 인스턴스 던전 클리어 횟수
    guild_id: ulong;                // 길드 아이디
    guild_name: string;             // 길드 이름
    guild_exp: ulong;               // 길드 경험치
    guild_mark_tid: ubyte;           // 길드 마크
    guild_chat_id:ulong;                  // 길드 채팅 고유번호
    guild_chat_grade:E_GuildAllianceChatGrade; // 길드 연맹 채팅 등급
    guild_chat_state:E_GuildAllianceChatState; // 길드 연맹 채팅 상태
    guild_grade: E_GuildMemberGrade; // 길드 맴버 등급
    is_party: bool;                 // 파티 여부 (true: 파티중, false: 파티 아님)
    party_uid: uint;                // 참여중인 파티 고유 ID (파티중일때만 값을 내려줌)
}


// 장비
table ItemEquipment {
    item_id: ulong;				    // 아이템 고유 id
    item_tid: uint;				    // 아이템 테이블 id
    option: [uint];				    // 아이템 옵션
    sockets: [uint];				// 아이템 소켓 고유 id
    slot_idx: ubyte;				// 장착 슬롯 idx
    is_lock: ubyte;                 // 락 여부
    expire_dt: ulong;				// 아이템 만료시간
    create_dt: ulong;
}


// 소비성 아이템
table ItemStack {
    item_id: ulong;				// 아이템 고유 id
    item_tid: uint;				// 아이템 테이블 id
    cnt: uint;					// 수량
    is_lock: ubyte;             // 락 여부
    create_dt: ulong;
}

// 수집 정보
table Collect {
    collect_tid: uint;           // collect 테이블 id
    material_tids: [uint];        // 제료 테이블 아이디
}

// 수집 재료 정보
table MaterialCollect {
    slot_idx: uint;                // 재료 아이템 인덱스
    material_id: ulong;            // 재료 아이템 정보
    material_tid: uint;            // 재료 아이템 정보
}

// 수집 정보
table CollectMake {
    collect_tid: uint;             // 콜렉션 테이블 id
    slot_idx: uint;                // 콜렉션 만들 slot
}

// 변신체
table Change {
    change_id: ulong;				// 변신체 고유 id
    change_tid: uint;				// 변신체 테이블 id
    cnt: uint;					    // 수량
    is_lock: ubyte;                 // 락 여부
    ability_acids: [uint];           // 강화시 붙는 어빌리티 아이디
    create_dt: ulong;
    change_quest_tid: uint;         // 파견중인 퀘스트 테이블 아이디
    change_quest_expire_dt: ulong;  // 파견중인 퀘스트 만료시간
}

// 임시 저장된 변신체
table ChangeGachaKeep {
    change_id: ulong;				// 변신체 고유 id
    change_tid: uint;				// 변신체 테이블 id
    try_cnt: uint;                  // 변신체 변경 시도 횟수
    create_dt: ulong;
}

// 팻
table Pet {
    pet_id: ulong;				    // 팻 고유 id
    pet_tid: uint;				    // 팻 테이블 id
    cnt: uint;					    // 수량
    is_lock: ubyte;                 // 락 여부
    ability_acids: [uint];          // 강화시 붙는 어빌리티 아이디
    create_dt: ulong;               // 생성일
    exp: ulong;                     // 경험치
    adv_id: ulong;                  // 탐험 DB 고유 아이디
}

// 임시 저장된 팻
table PetGachaKeep {
    pet_id: ulong;				    // 팻 고유 id
    pet_tid: uint;				    // 팻 테이블 id
    try_cnt: uint;                  // 팻 변경 시도 횟수
    create_dt: ulong;
}

// 계정 공유 소비성 아이템
table AccountItemStack {
    item_id: ulong;				// 아이템 고유 id
    item_tid: uint;				// 아이템 테이블 id
    cnt: ulong;					// 수량
    is_lock: ubyte;             // 락 여부
    create_dt: ulong;
}

// 케릭터 옵션
table CharacterOption {
    key: uint;				// 옵션 키
    value: string;			// 옵션 값
}

// 문양
table Mark {
    mark_tids: [uint];		// 문양 테이블 아이디
}

// 속성
table Attribute {
    attribute_tids: [uint];		// 속성 테이블 아이디
}

// 아이템 장착시 필요한 Equip
table EquipInfo {
    item_id: ulong;
    item_tid: uint;
    slot_idx: ubyte;
}

// 아이템 장착 결과값
table EquipResultInfo {
    item_id: ulong;	            // 아이템 고유 id
    slot_idx: ubyte;		    // 장착 슬롯 idx
}

// 아이템
table MaterialItem {
    item_id: ulong;				// 아이템 id
    item_tid: uint;				// 아이템 tid
    item_cnt: uint;				// 갯수
}

// 변신체 재료
table MaterialChange {
    change_id: ulong;				// 변신체 id
    change_tid: uint;				// 변신체 tid
    change_cnt: uint;				// 갯수
}

// 아이템 판매 정보
table SellItem {
    item_id: ulong;				// 아이템 id
    item_tid: uint;				// 아이템 tid
    item_cnt: uint;				// 판매 갯수
}

// 아이템 구매 정보
table BuyItem {
    shop_tid: uint;             // 구매 샵 tid
    buy_cnt: uint;              // 구매 갯수
    use_item_id: ulong;			// 사용 아이템 id
    use_item_tid: uint;			// 사용 아이템 tid
    select_shop_list_tid: uint; // 선택 상품 tid
    select_list_group_tid: uint; // 리스트 그룹 tid
}

table ResultBuyItem {
    use_item_tid: uint;			// 구매 아이템 tid
    use_item_cnt: uint;			// 구매 아이템 cnt
    use_item_bonus_cnt: uint;	// 구매후 보너스 cnt
}

// 아이템 강화
table EnchantItemInfo {
    item_id: ulong;
    item_tid: uint;
    item_slot_idx: ubyte;
    use_item_id: ulong;
    use_item_tid: uint;
}

// 아이템 강화 결과
table ResultEnchantInfo {
    result: bool;
    item_id: ulong;
    from_item_tid: uint;
    to_item_tid: uint;
}

// 아이템 분해
table BreakItemInfo {
    item_id: ulong;
    item_tid: uint;
    item_cnt: uint;
}

// 아이템 얻음
table GetItemInfo {
    item_tid: uint;
    item_cnt: uint;
}

// 아이템 삭제
table DelItemInfo {
    item_id: ulong;
    item_tid: uint;
    item_cnt: uint;
}

// 아이템 변화 정보
table ChangeItemInfo {
    from_item_tid: uint;
    to_item_tid: uint;
}

// 팻 얻음
table GetPetInfo {
    pet_tid: uint;
    pet_cnt: uint;
}

// 변신체 얻음
table GetChangeInfo {
    change_tid: uint;
    change_cnt: uint;
}

// 버프
table Buff {
    ability_acid: uint;		// 어빌리티 액션 테이블 아이디
    expire_dt: ulong;		// 만료 날자
    remain_sec: uint;		// 남은 초
}

// 채팅 블록
table CharBlock {
    char_id: ulong; 		// 케릭터 아이디
    char_tid: uint;         // 케릭터 테이블 아이디
    nick: string;			// 케릭터 닉네임
}


// 우편
table MailInfo {
    mail_idx: ulong;				// 우편 고유 id
    type: ushort;					// 우편 타입
    title: string;					// 우편 제목
    item_tid: uint;				    // 아이템 테이블 아이디
    cnt: uint;					    // 수량
    expire_dt: ulong;				// 우편 만료 날짜
}

// 캐쉬 우편
table CashMailInfo {
    mail_idx: ulong;				// 우편 고유 id
    shop_tid: uint;				    // 상점 테이블 아이디
}

// 쪽지
table MessageInfo {
    message_idx: ulong;			    // 쪽지 고유 id
    sender_user_id: ulong;		    // 보낸 사람 이름
    sender_char_id: ulong;		    // 보낸 사람 이름
    sender_char_nick: string;		// 보낸 사람 이름
    type: uint;					    // 메시지 타입(E_MessageType 확인)
    title: string;				    // 제목
    message: string;				// 내용
    is_read: ubyte;				    // 읽음 유무
    expire_dt: ulong;				// 만료 시간
}

// 우편 받기
table TakeMailInfo {
    mail_kind: uint;                      // MailReceiver 우편 종류 참조
    mail_idx: ulong;
    item_tid: uint;
    cnt: uint;
}

// 치트 메일 아이템
table CheatMailItem {
    item_tid: uint;
    cnt: uint;
}

table MakeMaterialItem {
    material_items: [MaterialItem];
}

table ResultMakeInfo {
    result: bool;
    item_cnt: uint;
    fail_items: [GetItemInfo];
}

table ChangeComposeMaterial {
    change_id: ulong;
    change_tid: uint;
    cnt: uint;
}

table ResultChangeCompose {
    result: bool;
    change_tid: uint;
    fail_item_tid: uint;
    fail_item_cnt: uint;
}

table PetComposeMaterial {
    pet_id: ulong;
    pet_tid: uint;
    cnt: uint;
}

table ResultPetCompose {
    result: bool;
    pet_tid: uint;
    fail_item_tid: uint;
    fail_item_cnt: uint;
}

table UseStatPoint {
    stat: uint;             // BASE_STR BASE_DEX BASE_INT BASE_WIS BASE_VIT
    cnt: uint;              // 포인트 사용 갯수
}

// MMO 서버 정보
table MmoChannel {
    num_user: ushort;                           // 접속 유저
    channel_id: ushort;                         // 채널 정보
    actual_server_addr: string;                 // 서버 주소
    is_pk_zone: bool;                           // PK 가능
    is_field_boss_spawn_zone: bool;             // 필드 보스 소환 지역 여부
    bonus_exp_rate: uint;                       // 추가시킬 보너스 경험치 확률 (1/백만)
    bonus_gold_rate: uint;                      // 추가시킬 보너스 골드 확률 (1/백만)
    field_boss_killer_guild_name: string;       // 필드보스를 잡은 길드 이름
    field_boss_killer_guild_mark_tid: uint;     // 필드보스를 잡은 길드 마크
}

table RestoreExp {
    restore_id: ulong;      // 복구 고유번호
    exp: ulong;             // 복구해야할 경험치량
    tendency: int;         // 성향
    expire_dt: ulong;       // 복구 만료시간
    killer_server_idx:uint; // 죽인 유저 서버 인덱스
    killer_char_nick:string;// 죽인 유저 닉네임
}

// 파티 멤버 정보
table PartyMemberDetail {
    char_id: ulong;             // 케릭터 ID
    char_tid: uint;             // 클래스
    nick: string;               // 닉네임
    server_idx: uint;         // 서버 ID
    is_master: bool;            // 파티장 여부
}

table PartyMember {
    char_id: ulong;           // 케릭터 ID
    unet_id: uint;            // 파티원 유넷 아이디
    server_idx: uint;         // 서버 ID
}

// 랭킹 정보
table RankInfo {
    rank: uint;                 // 랭킹
    befor_rank: uint;           // 이전 랭킹
    server_idx: uint;           // 서버 정보
    char_id: ulong;             // 케릭터 ID
    char_tid: uint;             // 클래스
    score: ulong;                 // 경험치
    nick: string;               // 닉네임
    guild_id: ulong;            // 길드 아이디
    guild_name: string;         // 길드 이름
    guild_mark_tid: ubyte;       // 길드 문양
}

// 친구 정보
table FriendInfo {
    char_id: ulong;             // 케릭터 ID
    char_tid: uint;             // 클래스
    nick: string;               // 닉네임
    lv: uint;                   // 레벨
    is_friend: bool;            // 친구 유무
    is_alert: bool;             // 경계 유무
    is_login: bool;             // 접속 유무
    logout_dt: ulong;           // 친구 로그아웃 시간
}

// 친구 요청 정보
table FriendRequestInfo {
    char_id: ulong;             // 케릭터 ID
    char_tid: uint;             // 클래스
    nick: string;               // 닉네임
    lv: uint;                   // 레벨
    state: E_FriendRequestState;// 친구 요청 상태
    is_login: bool;             // 접속 유무
    logout_dt: ulong;           // 친구 로그아웃 시간
}

// 길드 정보
table GuildInfo {
    guild_id: ulong;                // 길드 고유 ID
    name: string;                   // 길드 이름
    exp: ulong;                     // 길드 경험치(공헌도)
    intro: string;                  // 길드 소개글
    notice: string;                 // 길드 공지
    money: ulong;                   // 길드 자금
    is_quick_join: bool;            // 길드 빠른 참여 여부
    login_ban_step: ushort;         // 로그인 안했을시에 강퇴 옵션
    donate_ban_step: ushort;        // 기부 안했을시에 강퇴 옵션
    master_char_id: ulong;          // 길마 케릭터 고유번호
    master_char_nick: string;       // 길마 케릭터 닉네임
    member_cnt: uint;               // 길드원 수
    mark_tid: ubyte;                 // 길드 마크
    mark_update_dt: ulong;          // 길드 마크 업데이트 시간
    chat_id:ulong;                  // 길드 채팅 고유번호
    chat_grade:E_GuildAllianceChatGrade; // 길드 연맹 채팅 등급
    chat_state:E_GuildAllianceChatState; // 길드 연맹 채팅 상태
    create_dt: ulong;               // 길드 생성일
    guild_rank: uint;               // 길드 랭킹
}

// 길드 맴버 정보
table GuildMemberInfo {
    char_id: ulong;                 // 길드 맴버 케릭터 고유번호
    char_tid: uint;                 // 길드 맴버 케릭터 직업
    nick: string;                   // 길드 맴버 닉네임
    grade: E_GuildMemberGrade;      // 길드 맴버 등급
    exp: ulong;                     // 길드 개인 공헌도
    week_exp: ulong;                // 길드 주간 개인 공헌도
    donate_exp: ulong;              // 길드 개인 기부 공헌도
    week_donate_exp: ulong;         // 길드 주간 개인 기부 공헌도
    state: E_GuildJoinState;        // 길드 가입 상태
    donate_cnt: uint;               // 길드 기부 한 횟수
    donate_dt: ulong;               // 길드 기부 시간
    attend_reward_dt: ulong;        // 길드 출석 채크 보상 시간
    comment: string;                // 길드 맴버 남긴말
    is_login: bool;                 // 길드 맴버 접속 유무
    logout_dt: ulong;               // 길드 맴버 로그아웃 시간
}

// 버프
table GuildBuff {
    ability_id: uint;		        // 어빌리티 테이블 아이디
    expire_dt: ulong;		        // 만료 날자
    is_auto_buy: bool;              // 자동 구매 여부
}

// 길드 가입 요청 정보(길드 기준)
table GuildRequestInfoForGuild {
    char_id: ulong;                 // 케릭터 고유번호
    char_tid: uint;                 // 케릭터 직업
    char_nick: string;              // 케릭터 닉네임
    char_lv: uint;                  // 케릭터 레벨
    comment: string;                // 코맨트
    is_login: bool;                 // 길드 맴버 접속 유무
    logout_dt: ulong;               // 길드 맴버 로그아웃 시간
}

// 길드 가입 요청 정보(케릭터 기준)
table GuildRequestInfoForChar {
    guild_id: ulong;                // 길드 고유 ID
    exp: ulong;                     // 길드 경험치(공헌도)
    name: string;                   // 길드 이름
    intro: string;                  // 길드 소개글
    is_quick_join: bool;            // 길드 빠른 참여 여부
    login_ban_step: ushort;         // 로그인 안했을시에 강퇴 여부
    donate_ban_step: ushort;        // 기부 안했을시에 강퇴 여부
    master_char_id: ulong;          // 길마 케릭터 고유번호
    master_char_nick: string;       // 길마 케릭터 닉네임
    member_cnt: uint;               // 길드원 수
    mark_tid: ubyte;                 // 길드 마크
}

// 길드 랭킹 정보
table GuildRankInfo {
    rank: uint;                     // 길드 랭킹
    guild_id: ulong;                // 길드 고유 ID
    name: string;                   // 길드 이름
    exp: ulong;                     // 길드 경험치(공헌도)
    intro: string;                  // 길드 소개글
    is_quick_join: bool;            // 길드 빠른 참여 여부
    master_char_id: ulong;          // 길마 케릭터 고유번호
    master_char_nick: string;       // 길마 케릭터 닉네임
    member_cnt: uint;               // 길드원 수
    mark_tid: ubyte;                 // 길드 마크
    create_dt: ulong;               // 길드 생성일
}

// 길드 동맹 정보
table GuildAllianceInfo {
    guild_id: ulong;                // 길드 고유 ID
    name: string;                   // 길드 이름
    master_char_id: ulong;          // 길마 케릭터 고유번호
    master_char_nick: string;       // 길마 케릭터 닉네임
    member_cnt: uint;               // 길드원 수
    mark_tid: ubyte;                 // 길드 마크
    guild_exp: ulong;               // 길드 경험치
    chat_id:ulong;                  // 길드 채팅 고유번호
    chat_grade:E_GuildAllianceChatGrade; // 길드 연맹 채팅 등급
    chat_state:E_GuildAllianceChatState; // 길드 연맹 채팅 상태
    state: E_GuildAllianceState;    // 동맹 상태
}

// 길드 동맹 간략 정보
table GuildAllianceSimpleInfo {
    guild_id: ulong;                // 길드 고유 ID
    state: E_GuildAllianceState;    // 동맹 상태
}

// 거래소 아이템 정보
table ExchangeItem {
    exchange_id: ulong;             // 거래소 고유 ID
    seller_user_id: ulong;          // 거래소 아이템 판매자 유저 고유번호
    item_id: ulong;                 // 거래소 아이템 고유 ID
    item_tid: uint;                 // 거래소 아이템 테이블 ID
    item_options: [uint];           // 거래소 아이템 옵션
    item_sockets: [uint];			// 거래소 아이템 소켓 고유 id
    item_cnt: uint;                 // 거래소 아이템 개수
    item_total_price: uint;         // 거래소 아이템 총 판매 가격
    item_price: float;              // 거래소 아이템 판매 가격
    sell_start_dt: ulong;           // 거래소 아이템 판매 시작시간
    expire_dt: ulong;               // 거래소 아이템 판매 만료시간
}

// 거래소 아이템 가격 정보
table ExchangeItemPrice {
    item_tid: uint;                 // 거래소 아이템 테이블 ID
    item_group_id: uint;            // 거래소 아이템 테이블 그룹 ID
    item_regist_cnt: uint;          // 거래소 등록된 아이템 개수
    item_min_price: float;          // 거래소 등록된 아이템 최저판매 가격
    item_max_price: float;          // 거래소 등록된 아이템 최대판매 가격
}

// 거래소 거래 완료된 정보
table ExchangeTransaction {
    transaction_id: ulong;          // 거래 내역 고유 ID
    exchange_id: ulong;             // 거래소 고유 ID
    item_id: ulong;                 // 거래소 아이템 고유 ID
    item_tid: uint;                 // 거래소 아이템 테이블 ID
    item_option: [uint];            // 거래소 아이템 옵션
    item_cnt: uint;                 // 거래소 아이템 개수
    item_total_price: uint;         // 거래소 아이템 총 판매 금액
    item_total_price_tax: uint;     // 거래소 아이템 총 판매 금액 세금
    item_price: float;              // 거래소 아이템 판매 금액
    create_dt: ulong;               // 거래소 아이템 판매 완료된 시간
}

// 업적, 메인 퀘(튜토리얼)
table Quest {
    quest_id: ulong;                // 퀘스트 고유 아이디
    quest_tid: uint;                // 퀘스트 테이블 아이디
    value1: uint;                   // 퀘스트 조건 value1
    value2: uint;                   // 퀘스트 조건 value2
    state: E_QuestState;            // 상태 (0: 진행중, 1:보상받을수 있음, 2:완료)
}

// 일일 퀘스트
table QuestDaily {
    quest_id: ulong;                // 퀘스트 고유 아이디
    quest_tid: uint;                // 퀘스트 테이블 아이디
    quest_list_tid: uint;           // 퀘스트 리스트 테이블 아이디
    value: uint;                    // 퀘스트 진행 값
    cond_type: ubyte;               // 퀘스트 완료 타입 Enum:DailyQuestType
    cond_id: uint;                  // 퀘스트 완료 타입에 따른 값
    clear_cnt: uint;                // 퀘스트 목표 값
    state: E_QuestState;            // 상태 (0: 진행중, 1:보상받을수 있음, 2:완료)
    create_dt: long;                // 생성 시간
}

// 이벤트 퀘스트 정보
table QuestEvent {
    quest_id: ulong;                // 퀘스트 고유 아이디
    quest_tid: uint;                // 퀘스트 테이블 아이디
    group_tid: uint;                // 퀘스트 그룹
    day: ubyte;                     // 조건 날자
    value: uint;                    // 퀘스트 조건 value
    state: E_QuestState;            // 상태 (0: 진행중, 1:보상받을수 있음, 2:완료)
    create_dt: ulong;               // 생성일
}

// 변신체 퀘스트
table ChangeQuest {
    quest_tid: uint;                // 변신체 퀘스트 테이블 아이디
    start_dt: ulong;                // 퀘스트 시작 시간
    end_dt: ulong;                  // 퀘스트 종료 시간
    reward_dt: ulong;               // 퀘스트 보상 시간
    create_dt: ulong;               // 퀘스트 생성 시간
}

// 아이템 정보
table ItemInfo {
    account_stack: [AccountItemStack];
    stack: [ItemStack];
    equip: [ItemEquipment];
    pet: [Pet];
    pet_gacha_keep: [PetGachaKeep];
    change: [Change];
    change_gacha_keep: [ChangeGachaKeep];
    rune: [Rune];
}




// 구매 제한 정보
table BuyLimitInfo {
    shop_tid: uint;                 // 상품 테이블 아이디
    buy_cnt: uint;                  // 구매 횟수
    expire_dt: ulong;               // 구매 초기화 시간
}

// pk 로그
table PkLog {
    pk_id: ulong;                   // pk log 고유번호
    die_char_id: ulong;             // 죽은 케릭터 고유번호
    die_char_tid: uint;             // 죽은 케릭터 테이블 번호
    die_char_nick: string;          // 죽은 케릭터 닉네임
    die_guild_name: string;         // 죽은 케릭터 길드 이름
    die_guild_mark_tid: ubyte;       // 죽은 케릭터 길드 문양
    is_sneer: ubyte;                // 조롱하기 여부
    create_dt: ulong;               // 생성 시간
}

// 채팅 정보
table ChatInfo {
    chat_type: E_ChatType;      // 채팅 메인 카테고리
    args: [string];             // 카테고리별 args

    // E_ChatType.Normal: args = [stage_tid, channel_id]
    // E_ChatType.Party: args = [party_uid]
    // E_ChatType.Guild: args =[guild_id]
    // E_ChatType.Alliance: args =[alliance_room_id]
    // E_ChatType.InterNormal: args =[stage_tid, channel_id]
    // E_ChatType.InterParty: args =[party_uid]
}

// 서버 보스 정보
table ServerBossInfo {
    stage_tid: uint;                                    // 스테이지 TID
    time_sec_list: [ulong];                             // 스폰 시간 (초)
    room_expire_ts_sec: ulong;                          // 서버 보스 룸 만료 시간
    enter_able_start_ts_sec: ulong;                     // 입장 가능한 시간 (부터 ~) (한번 입장했던얘는 그냥 입장)
    enter_able_end_ts_sec: ulong;                       // 입장 가능한 시간 (~ 까지)
    kill_able_start_ts_sec: ulong;                      // 킬 가능 시간 (부터 ~)
    kill_able_end_ts_sec: ulong;                        // 킬 가능 시간 (~ 까지)
    spawn_ts_sec: ulong;                                // 보스 스폰 시간
    is_kill: bool;                                      // 보스 킬 여부
    is_enter_able: bool;                                // 입장 했던 유저인지 (게임서버에서 요청할때만 보냄)
}

// 필드 보스 정보
table FieldBossInfo {
    stage_tid: uint;         // 스테이지 TID
    last_kill_ts: ulong;     // 마지막으로 보스가 잡힌 시간. unix time
    time_sec_list: [ulong];  // 스폰 시간 (초)
}

// 서버 이벤트 정보
table ServerEventInfo {
    event_id: ulong;                                // 이벤트 고유번호
    category: E_ServerEventCategory;                // 카테고리
    sub_category: E_ServerEventSubCategory;         // 서브 카테고리
    sort_order: uint;                               // 이벤트 정렬 순서
    start_dt: ulong;                                // 이벤트 시작 시간
    end_dt: ulong;                                  // 이벤트 종료 시간
    args: string;                                   // 카테고리별 args
    bg_url: string;                                 // 백그라운드 이미지 url 주소
    bg_hash: string;                                // 백그라우드 이미지 hash 변환 값
}

// 제작 제한 정보
table MakeLimitInfo {
    make_tid: uint;                 // 제작 테이블 아이디
    server_make_cnt: uint;          // 서버 제작 횟수
    account_make_cnt: uint;         // 계정 제작 횟수
    char_make_cnt: uint;            // 케릭터 제작 횟수
    expire_dt: ulong;               // 구매 초기화 시간
}


// 커스텀하게 설정한 스테이지 정보
table OverStageInfo {
    stage_tid: uint;        // 스테이지 테이블 아이디
    is_pk: bool;            // Pk 가능 여부
}


// 인터 보스 데미지 랭킹
table DamageRankInfo {
    rank: ubyte;
    user_id: ulong;
    char_id: ulong;
    server_idx: uint;
    party_member: [PartyMember];
    party_uid: uint;
}


// 인터 보스 데미지 정보
table ServerBossDamageBorderRow {
    rank: ubyte;            // 랭킹
    server_idx: uint;       // 서버 ID
    user_id: ulong;         // 유저 ID
    char_id: ulong;         // 케릭터 ID
    nick: string;           // 닉네임
    damage: ulong;          // 데미지
}

// 커스텀하게 설정한 스테이지 정보
table ColosseumMatchUserInfo {
    server_idx: uint;               // 유저 서버 인덱스
    user_id: ulong;                 // 유저 고유번호
    char_id: ulong;                 // 케릭터 고유번호
    is_show_nick: ubyte;            // 이름 표시 유무
    team_no: E_ColosseumTeam;       // 팀 번호
}

// 인터 보스 생존 유저
table SurvivorUser {
    server_idx: uint;
    user_id: ulong;
    char_id: ulong;
    damage: uint;
    guild_id: ulong;        // 길드 아이디
    unet_id: uint;          // 유넷 아이디
}

table SkillUseOrder {
    skill_tid: uint;        // 스킬 테이블 아이디
    character_type: uint;   // E_CharacterType 참조
    use_order: uint;        // 사용 순서
    cool_time: uint;        // 사용 시간
    is_active: ubyte;       // 활성화 유무
}

// 스킬북 정보
table SkillBookInfo {
    skill_tid: uint;				 // 배운 스킬 테이블 아이디
}

// 복구 아이템 정보
table RecoveryItemInfo {
    recovery_type: ubyte;// E_CategoryType
    recovery_tid: uint;
}


// 펫 탐험 클래스
table PetAdv {
    adv_id: ulong;
    adv_tid: uint;
    start_dt: ulong;
    end_dt: ulong;
    reward_cnt: uint;
    status: E_PetAdvStatus;
}

// 거래 아이템 정보
table TradeItem {
    trade_id: ulong;                // 거래 고유 ID
    seller_user_id: ulong;          // 거래 아이템 판매자 유저 고유번호
    seller_char_id: ulong;          // 거래 아이템 판매자 유저 고유번호
    item_id: ulong;                 // 거래 아이템 고유 ID
    item_tid: uint;                 // 거래 아이템 테이블 ID
    option: [uint];				    // 아이템 옵션
    sockets: [uint];				// 아이템 소켓 고유 id
    item_cnt: uint;                 // 거래 아이템 개수
    item_password: string;          // 거래 아이템 패스워드
    item_total_price: uint;         // 거래 아이템 총 판매 가격
    item_price: float;              // 거래 아이템 판매 가격
    buyer_user_id: ulong;           // 거래 아이템 판매자 유저 고유번호
    buyer_char_id: ulong;           // 거래 아이템 판매자 유저 고유번호
    buyer_nick: string;             // 거래 아이템 판매자 유저 고유번호
    expire_dt: ulong;               // 거래 아이템 거래 만료시간
    buy_dt: ulong;                  // 거래 아이템 구매 시간
}

// 룬 아이템 정보
table Rune {
    item_id: ulong;
    item_tid: uint;
    slot_idx: ubyte;
    is_lock: ubyte;
    equip_pet_tid: uint;
    base_enchant_tid: uint;
    first_opt_tid: uint;
    opt_tid_list_1: [uint];
    opt_tid_list_2: [uint];
    opt_tid_list_3: [uint];
    opt_tid_list_4: [uint];
    create_dt: ulong;
}

// 아이템 드랍 VIEW 용
table DropItemView {
    unet_id: uint;      // 획득하게되는 unet_id
    item_tid: uint;     // 아이템 테이블의 item_tid
    cnt: uint;
}

// 스테이지의 필드보스 킬러 정보
table BossKillerInfo {
    stage_tid: uint;
    channel_id: ushort;
    guild_id: ulong;
    guild_name: string;
    guild_mark_tid: uint;
}

// 데미지 리스트
table DamageList {
    char_id: ulong;     // 케릭터 아이디
    damage: uint;       // 데미지
}

// 유적 스테이지 정보
table TempleStage {
    stage_tid: uint;                    // 스테이지
    clear_dt: ulong;
    is_reward_gacha_opens: [ushort];
}

// 아티팩트 정보
table ArtifactInfo {
    artifact_id: ulong;                     // 아티팩트 고유번호
    artifact_tid: uint;                     // 아티팩트 테이블 아이디
    create_dt: ulong;                       // 아티팩트 생성 시간
}

table ResultCookingMakeInfo {
    result: bool;
    item_tid: uint;
}

table CookHistory {
    cook_tid: uint;
}

// 성역 스팟 정보
table GodLandSpotInfo {
    god_land_tid: uint;                 // table GodLandID
    slot_group_id: uint;                // table SlotGroupID
    map_number: uint;                   // table MapNumber

    unit_type: ushort;                  // E_UnitType
    target_type: ushort;              // E_TargetType
    data: GodLandSpotUnitInfo;
}

// 성역 스팟 상세 정보
table GodLandSpotUnitInfo {
    monster_tid: uint;                      // monster일때 몬스터 tid
    char_tid: uint;                         // character일때 캐릭터 tid
    char_id: ulong;                         // 유저 캐릭터 id
    change_tid: uint;                       // 변신 테이블 아이디
    nick: string;                           // 유저 닉
    lv: uint;                               // 유저 레벨
    production_cnt: uint;                   // 보상 획득 가능 개수
    time_cnt: ulong;                         // 보상 획득 남은 시간
    atk: uint;                              // 공격력
    def: uint;                              // 방어력
    mdef: uint;                             // 마법 방어력
}

// 성역 전투 기록
table GodLandFightRecode {
    god_land_tid: uint;                     // god_land table id
    role: E_BATTLE_ROLE;                    // 0: none, 1: 공격, 2: 방어
    status: bool;                           // 승리 1 패배 0
    server_idx: ushort;                     // 상대 서버 번호
    char_tid: uint;                         // 상대 캐릭터 테이블 아이디
    change_tid: uint;                       // 상대 변신 테이블 아이디
    nick: string;                           // 상대 이름
    lv: uint;                               // 상대 레벨
    guild_name: string;                     // 상대 길드 이름
    mark_tid: uint;                         // 상대 길드 마크 테이블 아이디
    create_dt: ulong;                       // 전투 기록 시간
}

table GodLandProductFlag {
    god_land_tid: uint;                     // god_land table id
    flag: bool;                             // 받을 수 있는지 체크 결과
}

table AccountAttendInfo {
    main_type: E_ATTEND_TYPE;           // 출석 타입
    sub_type: E_EVENT_ATTEND_TYPE;      // 출석 세부 타입 - 참고용
    group_id: uint;                     // event attend table group id
    pass_1: bool;                       // 패스1 소유 여부
    pass_2: bool;                       // 패스2 소유 여부
    attend_seq: ushort;                 // 출석 달성 위치
    reward_seq: ushort;                 // 보상 받은 위치
    reward_seq_1: ushort;               // 패스1 보상 받은 위치
    reward_seq_2: ushort;               // 패스2 보상 받은 위치
    reward_dt: ulong;                   // 출석 체크된 시각 입니다. 일반은 보상을 받은 시간과 일치해야 합니다. 유료 출석은 attend_seq가 무조건 올라갑니다.
}

// 길드 던전 정보
table GuildDungeonInfo {
    stage_tid: uint;                    // 스테이지 아이디
    open_guild_id: ulong;               // 오픈한 길드 ID
    open_ts_sec: ulong;                 // 오픈한 시간.
    boss_kill_ts_sec: ulong;            // 보스 잡은 시간. (안잡았으면 0)
    addr: string;                       // 할당 받은 MMO 주소
    room_no: ulong;                     // MMO 고유 방 번호
    status: E_GuildDungeonStatus;       // (0: 대기, 1: 생성중, 2: 생성완료, 3: 강제 닫기)
}// [요청] 콜로세움 MMO 등록
table ReqAddColosseumServer {
    stage_tid: uint;                        // 스테이지 테이블 ID
    port: ushort;                           // 포트 정보
    domain: string;                         // 도메인 이름
    client_time: ulong;                     // 클라이언트에서 준 시간.

    mmo_status: E_ColosseumStatus;          // MMO 상태값
}

// [응답] 콜로세움 MMO 등록
table ResAddColosseumServer {
    client_time: ulong;     // 클라이언트에서 준 시간
    server_ts_ms: ulong;     // 서버 시간 Unix (ms)
}

// [요청] 콜로세움 보상 팀
table ReqRewardColosseumServer {
    win_team: E_ColosseumTeam;              // 콜로세움 이긴 팀
}

// [응답] 콜로세움 MMO 등록
table ResRewardColosseumServer {
}

// [요청] 콜로세움 큐 등록
table ReqAddColosseumQueue {
    user_id: ulong;                         // 유저 고유번호
    char_id: ulong;                         // 케릭터 고유번호
    is_show_nick: ubyte;                    // 이름 표시 유무
    server_idx: uint;                       // 서버 아이디
    stage_tid: uint;                        // 스테이지 테이블 ID
}

// [응답] 콜로세움 큐 등록
table ResAddColosseumQueue {
}

// [요청] 콜로세움 큐 등록 해제
table ReqLeaveColosseumQueue {
    user_id: ulong;                         // 유저 고유번호
    char_id: ulong;                         // 케릭터 고유번호
    server_idx: uint;                       // 서버 아이디
}

// [응답] 콜로세움 큐 등록 해제
table ResLeaveColosseumQueue {
}

// [알림] 콜로세움 입장 알림 MMO용
table BroadcastJoinColosseumServer {
    stage_tid: uint;                        // 스테이지 테이블 ID
    server_addr: string;
    room_no: long;
    match_user_infos: [ColosseumMatchUserInfo];
}

// [알림] 콜로세움 입장 알림 Client용
table BroadcastJoinColosseum {
    stage_tid: uint;                        // 스테이지 테이블 ID
    channel_id: uint;                       // 접속 할 서버 채널
    server_addr: string;                    // 접속 할 서버 주소
    room_no: long;                         // 접속 할 방 번호
}

// [알림] 콜로세움 보상 알림
table BroadcastRewardColosseumServer {
}

// [알림] 콜로세움을 강제로 나가라고 알려준다.(mmo서버 다운등 특별한이유)
table BroadcastLeaveColosseum {
}

// [요청] 콜로세움 보상 받기
table ReqRewardColosseum {

}

// [응답] 콜로세움 보상 받기
table ResRewardColosseum  {
    is_have_result: ubyte;
    stage_tid: uint;
    is_win: ubyte;
    old_rank: uint;
    old_score: uint;
    rank: uint;
    score: uint;
    reward_cnt: uint;
    get_items: [GetItemInfo];			            // 추가되는 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
}

// [요청] 콜로세움 시즌 보상 받기
table ReqRewardSeasonColosseum {

}

// [응답] 콜로세움 시즌 보상 받기
table ResRewardSeasonColosseum  {
    is_colosseum_season_reward: bool;               // 콜로세움 시즌 보상 유무
    old_season_rank: uint;                          // 콜로세움 이전 rank
    old_season_score: uint;                         // 콜로세움 이전 점수
    get_items: [GetItemInfo];			            // 추가되는 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
}

// [응답] 콜로세움 큐 등록 해제 알림
table BroadcastLeaveColosseumQueue {
    reason: uint;
}

// [요청] 파티 여부 확인
table ReqPartyCheck {
    server_idx: uint;     // 서버 index
    char_id: ulong;         // 케릭터 ID
}
table ResPartyCheck {
    is_party: bool;         // 파티 여부 (true: 파티중, false: 파티 아님)
    party_uid: uint;        // 참여중인 파티 고유 ID (파티중일때만 값을 내려줌)
}

// [요청] 파티 멤버 정보 요청
table ReqPartyMemberInfo {
    server_idx: uint;     // 서버 index
    char_id: ulong;         // 케릭터 ID
    party_uid: uint;      // 파티 고유 ID
}
table ResPartyMemberInfo {
    member_info: [PartyMemberDetail];    // 파티 정보
}


// [요청] 파티 생성
table ReqPartyCreate {
    char_id: ulong;         // 케릭터 ID
    char_tid: uint;         // 케릭터 TID
    nick: string;           // 케릭터 닉네임
    server_idx: uint;       // 서버 index
}
table ResPartyCreate {
    party_uid: uint;                    // 파티 유니크 ID
    party_member: PartyMemberDetail;    // 생성된 파티원 정보
}


// [요청] 파티 초대
table ReqPartyInvite {
    sender_char_id: ulong;              // sender의 케릭터 ID
    sender_char_tid: uint;              // sender의 케릭터 TID
    sender_nick: string;                // sender의 닉네임
    sender_server_idx: uint;            // sender의 서버 ID
    receiver_char_id: ulong;            // 초대받는 사람의 케릭터 ID
    receiver_nick: string;              // 초대받는 사람의 닉네임
    receiver_server_idx: uint;          // 초대받는 사람의 서버 ID
}
table ResPartyInvite {
    receiver_nick: string;              // 초대받는 사람의 닉네임
    receiver_server_idx: uint;        // 초대받는 사람의 서버 ID
}

// [브로드캐스트] 파티초대
table BroadcastPartyInvite {
    sender: PartyMemberDetail;          // 초대 보낸 사람의 정보
    party_uid: uint;                    // 파티 고유 ID

    sender_buff_info: [Buff];           // 초대 보낸 사람의 버프 정보
}


// [요청] 파티 가입
table ReqPartyJoin {
    char_id: ulong;                     // 나의 케릭터 고유 아이디
    char_tid: uint;                     // 나의 케릭터 테이블 아이디
    nick: string;                       // 나의 닉네임
    server_idx: uint;                   // 나의 서버 ID
    party_uid: uint;                    // 파티 고유 ID
}
table ResPartyJoin {
    party_uid: uint;                    // 가입한 파티 UID
    is_join: bool;                      // 파티 가입 성공 여부
    party_members: [PartyMemberDetail]; // 파티 멤버 정보
}

// [브로드캐스트] 파티 가입
table BroadcastPartyJoin {
    join_member: PartyMemberDetail;     // 파티에 가입한 멤버

}



// [요청] 파티 거절
table ReqPartyRefuse {
    char_id: ulong;         // 케릭터 ID
    nick: string;           // 자신의 케릭터 닉네임.
    server_idx: uint;     // 서버 아이디
    party_uid: uint;        // 파티 고유 ID

    sender_char_id: ulong;      // 초대 보낸 사람의 char_id
    sender_server_idx: uint;  // 초대 보낸 사람의 서버 아이디
}
table ResPartyRefuse {
}

// [브로드캐스트] 파티 거절
table BroadcastPartyRefuse {
    refuse_char_nick: string;           // 파티 거절한 케릭터 닉네임
    refuse_char_server_idx: uint;     // 파티 거절한 케릭터 서버 아이디
}



// [요청] 파티 탈퇴
table ReqPartyOut {
    char_id: ulong;     // 나의 케릭터 아이디
    char_tid: uint;     // 나의 케릭터 테이블 아이디
    nick: string;       // 나의 닉네임
    server_idx: uint;   // 나의 서버 아이디
    party_uid: uint;    // 내가 가입되어있는 파티 ID
}
table ResPartyOut {
}

// [브로드캐스트] 파티 탈퇴
table BroadcastPartyOut {
    out_member: PartyMemberDetail;      // 파티 탈퇴한 멤버
    new_master: PartyMemberDetail;      // 새로운 파티장이 나옴
}



// [요청] 파티 강퇴
table ReqPartyKickOut {
    kick_char_id: ulong;        // 강퇴 당할 케릭터 고유 아이디
    kick_char_tid: uint;        // 강퇴 당할 케릭터 테이블 아이디
    kick_nick: string;          // 강퇴 당할 케릭터 닉네임
    kick_server_idx: uint;      // 강퇴 당할 케릭터 서버 아이디

    char_id: ulong;             // 나의 케릭터 아이디
    server_idx: uint;           // 나의 서버 아이디
}

table ResPartyKickOut {
}

// [브로드캐스트] 파티 강퇴
table BroadcastPartyKickOut {
    kick_member: PartyMemberDetail;     // 강퇴당한 유저 정보
}


// [요청] 파티장 위임
table ReqPartyChangeMaster {
    user_id: ulong;                 // 나의 계정 아이디
    char_id: ulong;                 // 나의 케릭터 아이디
    server_idx: uint;               // 나의 서버 아이디

    target_char_id: ulong;          // 파티장 위임받을 케릭터 고유 아이디
    target_char_tid: uint;          // 파티장 위임받을 케릭터 테이블 아이디
    target_char_nick: string;       // 파티장 위임받을 케릭터 닉네임
    target_server_idx: uint;        // 파티장 위임받을 서버 아이디
}
table ResPartyChangeMaster {
}

// [브로드 캐스트] 파티장 위임
table BroadcastPartyChangeMaster {
    before_master_member: PartyMemberDetail;    // 이전 마스터 정보
    new_master_member: PartyMemberDetail;       // 새롭게 마스터가된 유저 정보
}

// [요청] 케릭터 옵션 정보
table ReqGetCharacterOption {
    user_id: ulong;                 // 유저 아이디
    char_id: ulong;                 // 케릭터 아이디
    server_idx: uint;               // 서버 idx
    key: [uint];
}

// [응답] 케릭터 옵션 정보
table ResGetCharacterOption {
    option: [CharacterOption];     // 옵션 정보
}

// [요청] 케릭터 옵션 저장
table ReqSetCharacterOption {
    user_id: ulong;                 // 유저 아이디
    char_id: ulong;                 // 케릭터 아이디
    server_idx: uint;               // 서버 idx
    option: [CharacterOption];        // 옵션 정보
}

// [응답] 케릭터 옵션 저장
table ResSetCharacterOption {
    options: [CharacterOption];     // 옵션 정보
}

// [브로드캐스트] 신규 퀘스트 발급
table BroadcastNewQuest {
    new_quests: [Quest];            // 신규 발급되는 퀘스트
}

// 브로드캐스트 성역 전투 결과
table BroadcastGodLandFightResult {
    result: E_GOD_LAND_FIGHT_RESULT; //  0 패, 1 성공, 2 실패
    god_land_tid: uint;              // 도전한 god_land_tid
}
// [요청] 유저 접속
table ReqChatUserConnect {
    user_id: ulong;                 // 유저 아이디
    char_id: ulong;                 // 케릭터 아이디
    server_idx: uint;               // 서버 아이디

}
// [응답] 유저 접속
table ResChatUserConnect {
}


// 채팅 입장
table ReqEnterChat {
    char_id: ulong;             // 케릭터 아이디
    chat_infos: [ChatInfo];
}
table ResEnterChat {
    chat_infos: [ChatInfo];
}


// 채팅 퇴장
table ReqOutChat {
    char_id: ulong;             // 케릭터 아이디
    chat_infos: [ChatInfo];
}
table ResOutChat {
    chat_infos: [ChatInfo];
}



//#####################################################################################

// [요청] 서버 채팅
table ReqServerChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    message: string;            // 전송할 메시지
}
// [응답] 서버 채팅
table ResServerChat {

}


// [요청] 일반 채팅
table ReqNormalChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    message: string;            // 전송할 메시지

    stage_tid: uint;            // 스테이지 아이디
    channel_id: ulong;          // 채널 아이디  (길드 던전 안에서 일반 채팅을 할 시 그룹 구분을위하여 room_no 사용)
}
// [응답] 서버 채팅
table ResNormalChat {

}


// [요청] 파티 채팅
table ReqPartyChat {
    chat_sub_type: E_ChatPartySubType;  // 채팅 서브 타입 (BuffSync 타입이 들어가면서 받게됨)
    char_id: ulong;                     // 케릭터 아이디
    char_nick: string;                  // 케릭터 닉네임
    server_idx: uint;                   // 서버 아이디

    guild_id: ulong;                    // 길드 아이디
    guild_mark_tid: uint;               // 길드 마크
    guild_name: string;                 // 길드 이름

    party_uid: ulong;                   // 파티 고유 아이디
    message: string;                    // 전송할 메시지
}
// [응답] 서버 채팅
table ResPartyChat {

}

// [요청] 길드 채팅
table ReqGuildChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    message: string;            // 전송할 메시지
}
// [응답] 길드  채팅
table ResGuildChat {

}

// [요청] 연합 채팅
table ReqAllianceChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    alliance_room_id: ulong;    // 연합 채팅방 아이디

    message: string;            // 전송할 메시지
}
// [응답] 연합 채팅
table ResAllianceChat {

}


// [요청] 유저 채팅 (귓속말)
table ReqUserChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    target_char_id: ulong;      // 귓속말 받을 사람 케릭터 아이디
    target_char_nick: string;   // 귓속말 받을 사람 닉네임

    message: string;            // 전송할 메시지
}
// [응답] 유저 채팅 (귓속말)
table ResUserChat {

}


// [요청] 인터서버 일반 채팅
table ReqInterNormalChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    inter_stage_tid: uint;      // 인터서버 스테이지 TID
    inter_channel_id: ushort;   // 인터서버 채널 아이디

    message: string;            // 전송할 메시지
}
// [응답] 인터서버 일반 채팅
table ResInterNormalChat {

}

// [요청] 인터서버 파티 채팅
table ReqInterPartyChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    inter_party_uid: ulong;     // 인터서버 파티 고유 아이디

    message: string;            // 전송할 메시지
}
// [요청] 인터서버 파티 채팅
table ResInterPartyChat {

}


// [요청] 거래 채팅
table ReqTradeChat {
    char_id: ulong;             // 케릭터 아이디
    char_nick: string;          // 케릭터 닉네임
    server_idx: uint;           // 서버 아이디

    guild_id: ulong;            // 길드 아이디
    guild_mark_tid: uint;       // 길드 마크
    guild_name: string;         // 길드 이름

    message: string;            // 전송할 메시지
}
// [응답] 서버 채팅
table ResTradeChat {

}



//#####################################################################################

// [브로드 캐스트] 전체 채팅
table BroadcastServerChat {
    sub_type: E_ChatServerSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 일반 채팅
table BroadcastNormalChat {
    sub_type: E_ChatNormalSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 파티 채팅
table BroadcastPartyChat {
    sub_type: E_ChatPartySubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 길드 채팅
table BroadcastGuildChat {
    sub_type: E_ChatGuildSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 연합 채팅
table BroadcastAllianceChat {
    sub_type: E_ChatAllianceSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 유저 채팅
table BroadcastUserChat {
    sub_type: E_ChatUserSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 인터서버 일반 채팅
table BroadcastInterNormalChat {
    sub_type: E_ChatInterNormalSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 인터서버 파티 채팅
table BroadcastInterPartyChat {
    sub_type: E_ChatInterPartySubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}

// [브로드 캐스트] 전체서버 채팅
table BroadcastGlobalChat {
    sub_type: E_ChatGlobalSubType;  // 서브 타입
    char_id: ulong;                 // 케릭터 아이디
    char_nick: string;              // 케릭터 닉네임
    server_idx: uint;               // 서버 아이디
    message: string;                // 메시지

    guild_id: ulong;                // 길드 아이디
    guild_mark_tid: uint;           // 길드 마크
    guild_name: string;             // 길드 이름

    args: [string];                 // 서브 타입에 따른 데이터
}


// [브로드 캐스트] 파티원에게 몬스터 킬에 대한 보상 알림
table BroadcastMonsterKillReward {
    is_inter_reward: ubyte;     // 0: 일반 보상, 1: 인터서버 보상
}


// [브로드 캐스트] 채팅 블럭
table BroadcastChatBlock {
    expire_dt: ulong;           // 블럭 expire 되는 시간
}


// [요청] 속성 강화
table ReqAttributeEnchant {
    attribute_tid: uint;                    // 속성 테이블 아이디
    add_rate_cnt: uint;                     // 속성 강화 확률 증가 횟수
}

// [응답] 속성 강화
table ResAttributeEnchant {
    is_success: bool;               // 성공유무
    attribute: Attribute;                     // 속성 리스트
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];                // 스택 아이템
}

// [요청] 결제 초기화
table ReqPaymentInit {
    shop_tid: uint;                         // 상품 테이블 아이디
    market_type: E_MarketType;              // 결제 타입

    os: string;                     // 클라이언트 os 정보
    price: float;                   // 구매 가격
    currency: string;               // 구매 재화 국가 타입
    client_version: string;         // 클라이언트 버전
}

// [응답] 결제 초기화
table ResPaymentInit {
    pay_id: string;                         // 생성된 결제 고유번호
    line_order_id: string;                  // 라인에서 발급한 결제 고유 키 값
}

// [요청] 결제
table ReqPaymentPurchase {
    market_type: E_MarketType;              // 결제 타입
    receipt: string;                        // 암호화된 영수증

    os: string;                 // os 값.
    osv: string;                // os 버전값.
    currency: string;           //  구매 재화 국가 타입
    adid: string;               // adjustAndroidId
    idfa: string;               // adjustIdfa
    idfv: string;               // adjustIdfv
    gps_adid: string;           // adjustGpsAdid
    region: string;             // 서버 region 값
    lang: string;               // language-culture 값으로 디바이스 언어값 (예> zh-CN)
    lang_game: string;          // 인게임 언어 셋팅값
    price: float;               // 결제 price
}

// [응답] 결제
table ResPaymentPurchase {
    goods_id: string;                       // 상품 아이디
    result_buy_limit: BuyLimitInfo;         // 구매 제한 정보
    is_take_mail: ubyte;                    // 우편 지급 여부
}

// [요청] 변신체 합성
table ReqChangeCompose {
    change_compose_tid: uint;           // 변신체 합성 테이블 아이디
    compose_cnt: uint;                  // 합성 갯수
    use_gold_item_id: ulong;            // 소모되는 골드 아이디
    change_materials: [ChangeComposeMaterial]; // 재료
}

// [응답] 변신체 합성
table ResChangeCompose {
    result_compose: [ResultChangeCompose];
    material_changes: [ChangeComposeMaterial];                 // 재료 아이템 정보
    result_account_stack_items: [AccountItemStack];
    result_changes: [Change];                                   // 변신체 정보
    result_changes_gacha_keeps: [ChangeGachaKeep];	// 가챠로 얻은 변신체 보관함으로 넣는것
}

// [요청] 변신체 장착
table ReqChangeEquip {
    change_id: ulong;                       // 변신체 고유번호
    change_tid: uint;                       // 변신체 테이블 아이디
    use_item_id: ulong;                     // 변신 비용 아이템 고유번호
}

// [응답] 변신체 장착
table ResChangeEquip {
    change_tid: uint;                       // 변신체 테이블 아이디
    change_expire_dt: ulong;                // 변신체 만료시간
    use_item_tid: uint;                     // 변신 비용 아이템 테이블 아이디
    use_item_cnt: uint;                     // 변신 비용 아이템 갯수
    result_stack_items: [ItemStack];        // 스택 아이템 목록
}

// [요청] 변신체 탈착
table ReqChangeUnequip {
}

// [응답] 변신체 탈착
table ResChangeUnequip {
}

// [요청] 변신체 강화
table ReqChangeEnchant {
    change_id: ulong;                       // 변신체 고유번호
    change_tid: uint;                       // 변신체 테이블 아이디
}

// [응답] 변신체 강화
table ResChangeEnchant {
    add_ability_acid: uint;                 // 추가된 어빌리티
    result_change: Change;                  // 변신체 정보
}

// [요청] 보관했던 변신체 가챠
table ReqChangeRetryGachaKeep {
    market_type: E_MarketType;                 // 결제 타입 - lineSdk 유료 재화 사용 때문에 추가 함 20201019
    keep_change_id: ulong;                     // 보관한 변신체 고유번호
    keep_change_tid: uint;                     // 보관한 변신체 테이블 아이디
}

// [응답] 보관했던 변신체 가챠
table ResChangeRetryGachaKeep {
    result_account_stack_items: [AccountItemStack];
    result_changes_gacha_keeps: [ChangeGachaKeep];		// 가챠로 얻은 변신체 보관함으로 넣는것
    result_cash_coin_balance: int;                      // 캐쉬 코인 잔여량
}

// [요청] 보관했던 변신체 회수
table ReqChangeTakeGachaKeep {
    keep_change_id: ulong;                     // 보관한 변신체 고유번호
    keep_change_tid: uint;                     // 보관한 변신체 테이블 아이디
}

// [응답] 보관했던 변신체 회수
table ResChangeTakeGachaKeep {
    result_changes: [Change];                  // 변신체 정보
}

// 변신체 추출
table ReqChangeExtraction {
    change_id: ulong;                       // 추찰할 변신체 고유 번호
    change_tid: uint;                       // 추출할 변신체 테이블 아이디
}

// 변신체 추출
table ResChangeExtraction {
    get_items: ItemInfo;                    // 획득한 아이템
    remain_items: ItemInfo;                 // 잔여 아이템
}

// 변신체 퀘스트 일일 리셋
table ReqChangeQuestDailyReset {
}

// 변신체 퀘스트 일일 리셋
table ResChangeQuestDailyReset {
    change_quest_issued_dt: ulong;          // 변신체 퀘스트 갱신 시간
    change_quests: [ChangeQuest];           // 리셋후 받은 변신체 퀘스트 리스트
}

// 변신체 퀘스트 파견
table ReqChangeQuestRegistChange {
    change_tids: [uint];                    // 파견할 변신체 테이블 아이디
    quest_tid: uint;                        // 파견할 퀘스트 테이블 아이디
}

// 변신체 퀘스트 파견
table ResChangeQuestRegistChange {
    result_quest: ChangeQuest;              // 파견해서 업데이트된 퀘스트 정보
    result_changes: [Change];               // 파견해서 업데이트된 변신체 정보
}

// 변신체 퀘스트 보상
table ReqChangeQuestReward {
    change_tids: [uint];                        // 보상받을 변신체 테이블 아이디
    quest_tid: uint;                            // 보상받을 퀘스트 테이블 아이디
}

// 변신체 퀘스트 보상
table ResChangeQuestReward {
    change_quest_lv: uint;                  // 변신체 퀘스트 레벨
    change_quest_exp: uint;                 // 변신체 퀘스트 경험치
    get_items: ItemInfo;                    // 획득한 아이템
    remain_items: ItemInfo;                 // 잔여 아이템

    result_quest: ChangeQuest;              // 보상받아서 업데이트된 퀘스트 정보
    result_changes: [Change];               // 보상받아서 업데이트된 변신체 정보
}

// 변신체 퀘스트 레벨업
table ReqChangeQuestLevelUp {
}

// 변신체 퀘스트 레벨업
table ResChangeQuestLevelUp {
    change_quest_lv: uint;                  // 변신체 퀘스트 레벨
}
// [요청] 치트
table ReqCheatSendMail {
    cmd: uint;              // 명령어 커맨드
    send_data: string;      // 전송
}

// [응답] 치트
table ResCheatSendMail {
}// [요청] 아이템 수집 추가
table ReqItemCollectMake {
    item_collect_tid: uint;
    material: MaterialCollect;
}

// [응답] 아이템 수집 추가
table ResItemCollectMake {
    item_collect_tid: uint;
    material: MaterialCollect;
    daily_quest_fast_clear_max_cnt: ubyte;     // 일일 퀘스트 완료권 max cnt
}

// [요청] 변신체 수집 추가
table ReqChangeCollectMake {
    change_collect_makes: [CollectMake];
    change_id: ulong;                         // 재료 아이템 정보
    change_tid: uint;                         // 재료 아이템 정보
}

// [응답] 변신체 수집 추가
table ResChangeCollectMake {
    change_collect_makes: [CollectMake];
    change_tid: uint;                         // 재료 아이템 정보
    daily_quest_fast_clear_max_cnt: ubyte;    // 일일 퀘스트 완료권 max cnt
}

// [요청] 팻 수집 추가
table ReqPetCollectMake {
    pet_collect_makes: [CollectMake];
    pet_id: ulong;                              // 재료 아이템 정보
    pet_tid: uint;                              // 재료 아이템 정보
}

// [응답] 팻 수집 추가
table ResPetCollectMake {
    pet_collect_makes: [CollectMake];
    pet_tid: uint;                              // 재료 아이템 정보
    daily_quest_fast_clear_max_cnt: ubyte;      // 일일 퀘스트 완료권 max cnt
}
// [요청] 이벤트 출석 참여 내역
table ReqGetAttendEventInfoList {
}

table ResGetAttendEventInfoList {
    info: [AccountAttendInfo];                  // 출석 참여 정보 목록
}

// [요청] 이벤트 출석 보상 요청
table ReqGetAttendReward {
    attend_type: E_ATTEND_TYPE;                         // 출석 타입
    attend_group_id: uint;                              // 출석 그룹 아이디 - 2020-11-09
    get_reward: bool;                                   // 보상 수령 true / false
}

// [응답] 이벤트 출석 보상 요청
table ResGetAttendReward {
    info: AccountAttendInfo;                            // 출석 참여 정보

    attend_reward_dt: ulong;                            // 출석 이벤트 갱신 시간
    is_send_reward: bool;                               // 보상 메일 획득 여부
}

// [요청] 이벤트 출석 보상 요청 -> ReqGetAttendReward로 변경 -> TODO : 문제 없으면 삭제 해야함
table ReqDailyAttendEvent {
    attend_type: E_ATTEND_TYPE;                         // 출석 타입
    attend_group_id: uint;                              // 출석 그룹 아이디 - 2020-11-09
}

// [응답] 이벤트 출석 보상 요청 -> ResGetAttendReward 변경 -> TODO : 문제 없으면 삭제 해야함
table ResDailyAttendEvent {
    attend_type: E_ATTEND_TYPE;                         // 출석 타입
    attend_group_id: uint;                              // 출석 그룹 아이디 - 2020-11-09

    attend_reward_seq: ushort;                          // 일일 출석 이벤트 번호
    attend_continuity_reward_seq: ushort;               // 연속 출석 이벤트 번호
    attend_reward_dt: ulong;                            // 출석 이벤트 갱신 시간
    get_items: [GetItemInfo];                           // 얻은 아이템
    result_account_stack_items: [AccountItemStack];     // 계정 공유 스택 아이템 목록
    result_stack_items: [ItemStack];			        // 스택 아이템 목록
}

// [요청] 일간, 주간, 월간 이벤트 초기화
table ReqCheckDailyResetEvent {
}

// [응답] 일간, 주간, 월간 이벤트 초기화
table ResCheckDailyResetEvent {
    daily_reset_dt: ulong;                  // 이벤트 리셋 채크 시간

    normal_msg_send_cnt: uint;			    // 일일 일반 쪽지 보낸 갯수
    guildMsg_send_cnt: uint;				// 일일 길드 쪽지 보냇 갯수
    daily_quest_fast_clear_cnt: uint;       // 일일 퀘스트 초기화 개수
    guild_donate_cnt: uint;                 // 길드 기부 개수
    colosseum_reward_cnt: uint;             // 콜로세움 보상 개수
    scenario_dungeon_cnt: uint;             // 시나리오 던전 클리어 횟수

    char_info_req_num: [ubyte];             // 업데이트해야할 비트들(E_CharInfoReqBit)
}

// [요청] 접속 이벤트
table ReqCheckLoginEvent {
}

// [응답] 접속 이벤트
table ResCheckLoginEvent {
    login_event_dt: ulong;                  // 로그인 이벤트 갱신 했던 시간(push reward)
    is_have_mail: bool;                     // 우편 발송 여부
    push_title: string;                     // 제목
    reward_items: [GetItemInfo];            // 보상아이템
    bg_url: string;                         // 백그라운드 이미지 url 주소
    bg_hash: string;                        // 백그라우드 이미지 hash 변환 값
}

// [요청] 서버 이벤트 정보 가져오기
table ReqGetServerEventList {
    categorys: [E_ServerEventCategory];                 // 카테고리
    sub_categorys: [E_ServerEventSubCategory];           // 서브 카테고리
}

// [응답] 서버 이벤트 정보 가져오기
table ResGetServerEventList {
    server_events: [ServerEventInfo];
}

// [요청] 게임 설문조사
table ReqGameSurvey {
    is_answer: ubyte;
    answer_json: string;
}

// [응답] 게임 설문조사
table ResGameSurvey {
    account_option_bit: ulong;              // 옵션 정보
    get_item: GetItemInfo;			        // 추가되는 아이템
    result_item_stack: ItemStack;			// 스택 아이템 목록
}

// [요청] 거래소에 아이템을 등록한다.
table ReqExchangeSell {
    sell_item_id: ulong;                    // 등록할 아이템 고유번호
    sell_item_tid: uint;                    // 등록할 아이템 테이블 아이디
    sell_item_cnt: uint;                    // 등록할 아이템 개수
    sell_item_total_price: uint;            // 등록할 아이템 총 가격
    tex_item_id: ulong;                     // 거래 등록 수수료 아이템 고유번호
}

// [응답] 거래소에 아이템을 등록한다.
table ResExchangeSell {
    sell_item_id: ulong;                    // 등록할 아이템 고유번호
    sell_item_tid: uint;                    // 등록할 아이템 테이블 아이디
    sell_item_cnt: uint;                    // 등록할 아이템 개수
    result_account_stack_item: AccountItemStack; // 계정 공유 스택 아이템
    result_stack_item: ItemStack;			// 스택 아이템 목록
}

// [요청] 거래소에 아이템 가격 검색한다.
table ReqExchangeSearchPrice {
    trade_tap_type: uint;                   // E_TradeTapType 참조
    trade_sub_tap_type: uint;               // E_TradeSubTapType 참조
    item_use_char_type: uint;               // E_CharacterType 참조
    page_index: uint;                       // page_index

    item_group_id: uint;
}

// [응답] 거래소에 아이템 가격 검색한다.
table ResExchangeSearchPrice {
    page_index: uint;                       // page_index
    is_next_page: bool;                     // 다음 페이지가 있는지 여부
    search_prices: [ExchangeItemPrice];
}

// [요청] 거래소에 아이템을 검색한다.
table ReqExchangeSearchItem {
    page_index: uint;
    item_tids : [uint];
    sort_type : E_ExchangeSortType;         // 아이템 소팅 타입
    item_option_cnt: uint;                  // 아이템 옵션 개수
}

// [응답] 거래소에 아이템을 검색한다.
table ResExchangeSearchItem {
    page_index: uint;                       // page_index
    is_next_page: bool;                     // 다음 페이지가 있는지 여부
    sort_type : E_ExchangeSortType;         // 아이템 소팅 타입
    search_items: [ExchangeItem];
}

// [요청] 거래소에 아이템을 구매한다.
table ReqExchangeBuy {
    market_type: E_MarketType;              // 결제 타입
    exchange_id: ulong;
    buy_item_id: ulong;
    buy_item_tid: uint;
}

// [응답] 거래소에 아이템을 구매한다.
table ResExchangeBuy {
    buy_item_tid: uint;
    buy_item_cnt: uint;
    result_cash_coin_balance: int;                  // 케쉬 코인 잔여량
    result_equip_item: ItemEquipment;			    // 장비 아이템
    result_stack_item: ItemStack;			        // 스택 아이템
}

// [요청] 거래소에 아이템을 회수한다.
table ReqExchangeWithDraw {
    exchange_id: ulong;
    withdraw_item_id: ulong;
    withdraw_item_tid: uint;
}

// [응답] 거래소에 아이템을 회수한다.
table ResExchangeWithDraw {
    withdraw_item_tid: uint;
    withdraw_item_cnt: uint;
    result_equip_item: ItemEquipment;			    // 장비 아이템
    result_stack_item: ItemStack;			        // 스택 아이템
}

// [요청] 거래소에 아이템 판매 리스트
table ReqExchangeSellList {
}

// [응답] 거래소에 아이템 판매 리스트
table ResExchangeSellList {
    sell_items: [ExchangeItem];
}

// [요청] 거래소에 아이템 판매 완료 리스트
table ReqExchangeSoldOutList {
    state: E_ExchangeTransactionState;
    page_index: uint;
}

// [응답] 거래소에 아이템 판매 완료 리스트
table ResExchangeSoldOutList {
    page_index: uint;                       // page_index
    is_next_page: bool;                     // 다음 페이지가 있는지 여부
    sold_outs: [ExchangeTransaction];
}

// [요청] 거래소에 아이템 판매 금액 정산
table ReqExchangeTakeMoney {
    market_type: E_MarketType;              // 결제 타입
    transaction_ids: [ulong];
}

// [응답] 거래소에 아이템 판매 금액 정산
table ResExchangeTakeMoney {
    total_price: uint;                              // 전체 받은금액
    total_tax: uint;                                // 세금
    result_cash_coin_balance: int;                  // 케쉬 코인 잔여량
}

// [요청] 거래소에 아이템 상세 정보
table ReqExchangeItemDetailInfo {
    trade_tap_type: uint;                   // E_TradeTapType 참조
    trade_sub_tap_type: uint;               // E_TradeSubTapType 참조
    item_use_char_type: uint;               // E_CharacterType 참조
    item_group_id: uint;
    item_tid: uint;
}

// [응답] 거래소에 아이템 상세 정보
table ResExchangeItemDetailInfo {
    item_total_cnt: uint;
    item_min_price: float;
    item_max_price: float;
}
// [요청] 친구 리스트 가져오기
table ReqGetFriendList {
}

// [응답] 친구 리스트 가져오기
table ResGetFriendList {
    friends: [FriendInfo];              // 친구 리스트
}

// [요청] 친구 찾기
table ReqFindFriend {
    nick: string;                       // 찾을 케릭터 닉
}

// [응답] 친구 찾기
table ResFindFriend {
    find_char_id: ulong;                // 케릭터 ID
    find_char_tid: uint;                // 클래스
    find_nick: string;                  // 닉네임
    is_login: bool;                     // 로그인 유무
}

// [요청] 친구 요청
table ReqRequestFriend {
    request_char_id: ulong;                       // 친구 요청할 케릭터 id
}

// [응답] 친구 요청
table ResRequestFriend {
    request_friend: FriendRequestInfo;            // 요청한 친구 정보
}

// [요청] 친구 요청 리스트
table ReqRequestFriendList {
}

// [응답] 친구 요청 리스트
table ResRequestFriendList {
    request_friends: [FriendRequestInfo];              // 친구 리스트
}

// [요청] 친구 요청 승인
table ReqRequestFriendAccept {
    accept_char_id: ulong;
}

// [응답] 친구 요청 승인
table ResRequestFriendAccept {
    friend: FriendInfo;                         // 승락된 친구 정보
}

// [요청] 친구 요청 취소
table ReqRequestFriendCancel {
    cancel_char_id: ulong;
}

// [응답] 친구 요청 취소
table ResRequestFriendCancel {
    cancel_char_id: ulong;
}

// [요청] 친구 삭제
table ReqDelFriend {
    state: E_FriendState;       // 친구 상태
    del_char_id: ulong;
}

// [응답] 친구 삭제
table ResDelFriend {
    state: E_FriendState;       // 친구 상태
    del_char_id: ulong;
}

// [요청] 경계 대상 추가
table ReqAddAlertFriend {
    alert_char_id: ulong;
}

// [응답] 경계 대상 추가
table ResAddAlertFriend {
    friend: FriendInfo;         // 친구 리스트
}
// [요청] 길드 생성
table ReqCreateGuild {
    guild_name: string;             // 길드 이름
    guild_notice: string;           // 공지
    guild_intro: string;            // 길드 소개글
    guild_mark_tid: ubyte;           // 길드 마크 테이블 아이디
    use_item_id: ulong;             // 길드 창설 비용 아이템 id
    is_quick_join: bool;            // 빠른 가입 유무
    login_ban_step: ushort;         // 로그인 안했을시에 강퇴 여부
    donate_ban_step: ushort;        // 기부 안했을시에 강퇴 여부
}

// [응답] 길드 생성
table ResCreateGuild {
    guild_info: GuildInfo;                          // 길드 정보
    guild_member_infos: [GuildMemberInfo];          // 길드 맴버
    result_account_stack_item: AccountItemStack; // 계정 공유 스택 아이템
}

// [요청] 길드 해산
table ReqDismissGuild {
    guild_id: ulong;                                // 길드 고유번호
    chat_id: ulong;                                 // 길드 채팅방 고유번호
    chat_grade: E_GuildAllianceChatGrade;           // 길드 채팅 등급
}

// [응답] 길드 해산
table ResDismissGuild {
}

// [요청] 길드 임명
table ReqAppointGuildMember {
    guild_id: ulong;                // 길드 고유번호
    member_char_id: ulong;          // 길드원 케릭터 고유번호
    guild_grade: uint;              // 길드 등급
}

// [응답] 길드 임명
table ResAppointGuildMember {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 가입 요청 정보(길드 기준)
table ReqGuildRequestListForGuild {
    guild_id: ulong;                // 길드 고유번호
}

// [응답] 길드 가입 요청 정보(길드 기준)
table ResGuildRequestListForGuild {
    guild_request_infos: [GuildRequestInfoForGuild];          // 길드 요청 정보
}

// [요청] 길드 가입 요청 정보(케릭터 기준)
table ReqGuildRequestListForChar {
}

// [응답] 길드 가입 요청 정보(케릭터 기준)
table ResGuildRequestListForChar {
    guild_request_infos: [GuildRequestInfoForChar];          // 길드 요청 정보
}

// [요청] 길드 가입 수락
table ReqGuildRequestAccept {
    guild_id: ulong;                // 길드 고유번호
    accept_char_id: ulong;          // 가입할 케릭터 고유번호
}

// [응답] 길드 가입 수락
table ResGuildRequestAccept {
    accept_char_id: ulong;          // 가입한 케릭터 고유번호
}

// [요청] 길드 가입 거절
table ReqGuildRequestReject {
    guild_id: ulong;                // 길드 고유번호
    reject_char_id: ulong;          // 가입 거절할 케릭터 고유번호
}

// [응답] 길드 가입 거절
table ResGuildRequestReject {
    reject_char_id: ulong;                // 길드 고유번호
}

// [요청] 길드원 추방
table ReqGuildMemberBan {
    guild_id: ulong;                // 길드 고유번호
    ban_char_id: ulong;             // 변경해야할 길드원 케릭터 고유번호
}

// [응답] 길드원 추방
table ResGuildMemberBan {
    ban_char_id: ulong;             // 변경해야할 길드원 케릭터 고유번호
}

// [요청] 길드원 탈퇴
table ReqGuildMemberLeave {
    guild_id: ulong;                // 길드 고유번호
}

// [응답] 길드원 탈퇴
table ResGuildMemberLeave {
}

// [요청] 길드 속성을 수정
table ReqUpdateGuildInfo {
    guild_id: ulong;                // 길드 고유번호
    intro: string;                  // 소개 수정
    notice: string;                 // 공지 수정
    is_quick_join: bool;            // 길드 빠른참여 여부
    login_ban_step: ushort;         // 로그인 안했을시에 강퇴 여부
    donate_ban_step: ushort;        // 기부 안했을시에 강퇴 여부
}

// [응답] 길드 속성을 수정
table ResUpdateGuildInfo {
    guild_id: ulong;                // 길드 고유번호
    intro: string;                  // 소개 수정
    notice: string;                 // 공지 수정
    is_quick_join: bool;            // 길드 빠른참여 여부
    login_ban_step: ushort;         // 로그인 안했을시에 강퇴 여부
    donate_ban_step: ushort;        // 기부 안했을시에 강퇴 여부
}

// [요청] 길드 문양을 수정
table ReqUpdateGuildMark {
    guild_id: ulong;                // 길드 고유번호
    mark_tid: ubyte;                 // 길드 문양 테이블 아이디
}

// [응답] 길드 문양을 수정
table ResUpdateGuildMark {
    guild_id: ulong;                // 길드 고유번호
    mark_tid: ubyte;                // 길드 문양 테이블 아이디
    mark_update_dt: ulong;          // 길드 문양 업데이트 시간
    result_guild_money: ulong;      // 길드 자금 결과치
}

// [요청] 길드에 가입 요청
table ReqGuildRequestJoin {
    guild_id: ulong;                // 길드 고유번호
    comment: string;                // 남기는 말
}

// [응답] 길드에 가입 요청
table ResGuildRequestJoin {
    guild_id: ulong;                // 길드 고유번호
    is_quick_join: bool;            // 빠른 참여 유무
}

// [요청] 길드에 가입 요청 취소
table ReqGuildRequestJoinCancel {
    guild_id: ulong;                // 길드 고유번호
}

// [응답] 길드에 가입 요청 취소
table ResGuildRequestJoinCancel {
}

// [요청] 추천 길드
table ReqRecommendGuildInfo {
}

// [응답] 추천 길드
table ResRecommendGuildInfo {
    guild_infos: [GuildInfo];        // 추천 길드 정보
}

// [요청] 길드 찾기
table ReqFindGuildInfo {
    guild_name: string;               // 길드 이름
}

// [응답] 길드 찾기
table ResFindGuildInfo {
    guild_info: GuildInfo;          // 길드 정보
}

// [요청] 길드 정보
table ReqGetGuildInfo {
    guild_id: ulong;               // 길드 고유번호
}

// [응답] 길드 정보
table ResGetGuildInfo {
    guild_info: GuildInfo;                          // 길드 정보
    guild_member_infos: [GuildMemberInfo];          // 길드 맴버
    guild_buff_infos: [GuildBuff];                  // 길드 버프 정보
}

// [요청] 길드 출석 보상
table ReqGuildAttendReward {
    guild_id: ulong;               // 길드 고유번호
}

// [응답] 길드 출석 보상
table ResGuildAttendReward {
    attend_reward_dt: ulong;        // 길드 출석 보상 받은 시간
    yesterday_attend_cnt: uint;     // 어제 출석 인원수
    get_items: [GetItemInfo];                           // 분해하고 얻은 아이템
    result_account_stack_items: [AccountItemStack];     // 계정 공유 스택 아이템 목록
    result_stack_items: [ItemStack];			        // 스택 아이템 목록
}

// [요청] 길드 랭크
table ReqGetGuildExpRank {
}

// [응답] 길드 랭크
table ResGetGuildExpRank {
    guild_infos: [GuildRankInfo];        // 추천 길드 정보
}

// [요청] 길드 연맹 정보
table ReqGetGuildAllianceList {
    guild_id: ulong;                    // 길드 아이디
    states: [E_GuildAllianceState];     // 요청 state
}

// [응답] 길드 연맹 정보
table ResGetGuildAllianceList {
    guild_alliance_infos: [GuildAllianceInfo];        // 연맹 길드 정보
}

// [요청] 길드 연맹 추가 요청
table ReqGuildAllianceRequest {
    guild_id: ulong;                        // 길드 아이디
    is_enemy: bool;
    target_guild_name: string;             // 동맹 or 적 길드 이름
}

// [응답] 길드 연맹 추가 요청
table ResGuildAllianceRequest {
    guild_alliance_info: GuildAllianceInfo;      // 연맹 길드 정보
}

// [요청] 길드 연맹 추가 요청 승인
table ReqGuildAllianceAccept {
    guild_id: ulong;                    // 길드 아이디
    guild_name: string;                 // 길드 이름
    target_guild_id: ulong;             // 동맹 길드 아이디
}

// [응답] 길드 연맹 추가 요청 승인
table ResGuildAllianceAccept {
    guild_alliance_info: GuildAllianceInfo;      // 연맹 길드 정보
}

// [요청] 길드 연맹 추가 요청 거부 or 취소
table ReqGuildAllianceReject {
    guild_id: ulong;                    // 길드 아이디
    target_guild_id: ulong;             // 동맹 길드 아이디
}

// [응답] 길드 연맹 추가 요청 거부 or 취소
table ResGuildAllianceReject {
    target_guild_id: ulong;             // 동맹 길드 아이디
}

// [요청] 길드 연맹 삭제
table ReqGuildAllianceRemove {
    guild_id: ulong;                    // 길드 아이디
    guild_name: string;                 // 길드 이름
    is_enemy: bool;
    target_guild_id: ulong;             // 동맹 or 적 길드 아이디
    target_guild_name: string;             // 동맹 or 적 길드 이름
}

// [응답] 길드 연맹 삭제
table ResGuildAllianceRemove {
    target_guild_id: ulong;             // 동맹 길드 아이디
}

// [요청] 길드 기부
table ReqGuildDonation {
    market_type:  E_MarketType;              // 결제 타입
    guild_id: ulong;                    // 길드 아이디
    donation_type: E_GuildDonationType; // 길드 기부 타입
    use_item_id: ulong;                 // 기부 아이템 아이디
}

// [응답] 길드 기부
table ResGuildDonation {
    donate_cnt: uint;
    /// 얻은 길드 공헌도
    get_guild_exp: ulong;
    /// 얻은 길드 자금
    get_guild_money: ulong;

    /// 얻은 아이템
    get_item: GetItemInfo;

    /// 삭제된 아이템
    del_item: DelItemInfo;

    guild_info: GuildInfo;                          // 길드 정보

    guild_member_info: GuildMemberInfo;             // 길드 맴버

    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 길드 버프 정보
table ReqGetGuildBuffList {
    guild_id: ulong;                                // 길드 아이디
}

// [응답] 길드 버프 정보
table ResGetGuildBuffList {
    guild_buffs: [GuildBuff];                          // 길드 버프 정보
}

// [요청] 길드 버프 자동 구매 토글
table ReqGuildAutoBuyBuffToggle {
    guild_id: ulong;                    // 길드 아이디
    ability_acid: uint;                 // 길드 버프 테이블 아이디
    is_auto_buy: bool;                  // 길드 버프 자동 구매
}

// [응답] 길드 버프 자동 구매 토글
table ResGuildAutoBuyBuffToggle {
    guild_buff: GuildBuff;                          // 길드 버프 정보
}

// [요청] 길드 버프 구매
table ReqGuildBuyBuff {
    guild_id: ulong;                    // 길드 아이디
    guild_buff_tid: uint;               // 길드 버프 테이블 아이디
    is_auto_buy: bool;                 // 길드 버프 자동 구매
}

// [응답] 길드 버프 구매
table ResGuildBuyBuff {
    guild_info: GuildInfo;                          // 길드 정보
    guild_buff: GuildBuff;                          // 길드 버프 정보
}

// [요청] 길드 맴버 남긴말 업데이트
table ReqUpdateGuildMemberComment {
    guild_id: ulong;                                // 길드 아이디
    comment: string;                                // 남긴말
}

// [응답] 길드 맴버 남긴말 업데이트
table ResUpdateGuildMemberComment {
}

// [요청] 길드 연맹 채팅 생성
table ReqGuildAllianceCreateChat {
    guild_id: ulong;                                // 길드 아이디
}

// [응답] 길드 연맹 채팅 생성
table ResGuildAllianceCreateChat {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 연맹 채팅 입장 요청
table ReqGuildAllianceRequestChat {
    guild_id: ulong;                                // 길드 아이디
    master_guild_id: ulong;                         // 길드채팅 마스터 길드 아이디
}

// [응답] 길드 연맹 채팅 입장 요청
table ResGuildAllianceRequestChat {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 연맹 채팅 입장 요청 취소 or 초대 요청 받은것 취소
table ReqGuildAllianceCancelChat {
    guild_id: ulong;                                // 길드 아이디
}

// [응답] 길드 연맹 채팅 입장 요청 취소 or 초대 요청 받은것 취소
table ResGuildAllianceCancelChat {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 연맹 채팅 입장 수락
table ReqGuildAllianceAcceptChat {
    guild_id: ulong;                                // 길드 아이디
    accept_guild_id: ulong;                         // 입장 수락할 길드 아이디
}

// [응답] 길드 연맹 채팅 입장 수락
table ResGuildAllianceAcceptChat {
}

// [요청] 길드 연맹 채팅 입장 거절
table ReqGuildAllianceRejectChat {
    guild_id: ulong;                                // 길드 아이디
    reject_guild_id: ulong;                         // 입장 거절할 길드 아이디
}

// [응답] 길드 연맹 채팅 입장 거절
table ResGuildAllianceRejectChat {
}

// [요청] 길드 연맹 채팅 초대 요청
table ReqGuildAllianceInviteRequestChat {
    guild_id: ulong;                                // 길드 아이디
    invite_guild_id: ulong;                         // 초대 길드 아이디
}

// [응답] 길드 연맹 채팅 초대 요청
table ResGuildAllianceInviteRequestChat {
}

// [요청] 길드 연맹 채팅 초대 요청 취소
table ReqGuildAllianceInviteCancelChat {
    guild_id: ulong;                                // 길드 아이디
    cancel_guild_id: ulong;                         // 취소 길드 아이디
}

// [응답] 길드 연맹 채팅 초대 요청 취소
table ResGuildAllianceInviteCancelChat {
}

// [요청] 길드 연맹 채팅 초대 수락
table ReqGuildAllianceInviteAcceptChat {
    guild_id: ulong;                                // 길드 아이디
}

// [응답] 길드 연맹 채팅 초대 수락
table ResGuildAllianceInviteAcceptChat {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 연맹 채팅 탈퇴
table ReqGuildAllianceLeaveChat {
    guild_id: ulong;                                // 길드 아이디
    chat_id: ulong;                                 // 길드 채팅 아이디
    chat_grade: E_GuildAllianceChatGrade;           // 길드 채팅 등급
}

table ResGuildAllianceLeaveChat {
    guild_info: GuildInfo;                          // 길드 정보
}

// [요청] 길드 연맹 채팅 강퇴
table ReqGuildAllianceBanChat {
    guild_id: ulong;                                // 길드 아이디
    target_guild_id: ulong;                                // 길드 아이디
}

// [응답] 길드 연맹 채팅 강퇴
table ResGuildAllianceBanChat {
}

// [요청] 길드 연맹 채팅장 변경
table ReqGuildAllianceChangeMaster {
    guild_id: ulong;                                // 길드 아이디
    change_guild_id: ulong;                         // 위임할 길드 아이디
}

// [응답] 길드 연맹 채팅장 변경
table ResGuildAllianceChangeMaster {
    guild_info: GuildInfo;                          // 길드 정보
}


// [요청] 길드 던전 정보
table ReqGuildDungeonInfo {
    guild_id: ulong;            // 길드 던전 정보 요청
}
table ResGuildDungeonInfo {
    info: [GuildDungeonInfo];       // 길드 던전 정보
    dungeon_open_cnt: uint;         // 길드 던전 오픈 횟수
    dungeon_last_open_dt: ulong;    // 길드 던전 마지막 열은 날짜
}

// [요청] 길드 던전 오픈
table ReqGuildDungeonOpen {
    guild_id: ulong;                   // 길드 아이디
    stage_tid: uint;                   // 열고자 하는 길드 던전
}
table ResGuildDungeonOpen {
    info: GuildDungeonInfo;             // 길드 던전 정보
    remain_guild_money: ulong;          // 길드 남은 재화 (사용 안되면 안내려감)
    remain_dungeon_open_cnt: ubyte;     // 길드 던전 오픈 횟수
    remain_dungeon_last_open_dt: ulong; // 길드 던전 마지막으로 열은 시간
}


// [요청] 길드 던전 입장.
table ReqGuildDungeonEnter {
    portal_tid: uint;               // 포탈 테이블 아이디
}
table ResGuildDungeonEnter {
    stage_tid: uint;                // 스테이지 테이블 아이디
    join_addr: string;              // MMO 입장을 위한 MMO 주소
    room_no: ulong;                 // MMO 입장을 위한 고유 방 넘버
}


// [요청] 길드 던전 강제 닫기.
table ReqGuildDungeonClose {
    stage_tid: uint;                // 닫을 스테이지 번호
}
table ResGuildDungeonClose {
    info: GuildDungeonInfo;         // 길드 던전 정보
}// [요청] 아이템 리스트 요청
table ReqGetItemList {
}

// [응답] 아이템 리스트 응답
table ResGetItemList {
    item_list: ItemInfo;            // 아이템
}

// [요청] 아이템 장착 요청
table ReqItemEquip {
    equip_infos: [EquipInfo];		            // 장착 아이템 목록
}

// [응답] 아이템 장착 응답
table ResItemEquip {
    equip_result_infos: [EquipResultInfo];		// 장착 아이템 목록
}

// [요청] 아이템 탈착 요청
table ReqItemUnequip {
    unequip_infos: [EquipInfo];		            // 탈착 아이템 목록
}

// [응답] 아이템 탈착 응답
table ResItemUnequip {
    unequip_result_infos: [ulong];		        // 탈착 아이템 아이디목록
}




// [요청] 아이템 사용(물약 제외)
table ReqItemUse {
    item_id: ulong;		// 아이템 고유 id
    item_tid: uint;		// 아이템 테이블 아이디
    item_cnt: uint;		// 아이템 사용
}

// [응답] 아이템 사용(물약 제외)
table ResItemUse {
    remain_stack: ItemStack;        // 스택 잔여량
}

// [요청] 아이템 승급
table ReqItemUpgrade {
    item_id: ulong;
    item_tid: uint;
    item_slot_idx: ubyte;
    use_item_id: ulong;
    use_item_tid: uint;
    use_gold_item_id: ulong;
    upgrade_list_tid: uint;
}

// [응답] 아이템 승급
table ResItemUpgrade {
    upgrade_item: ChangeItemInfo;                   // 승급 정보
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];            // 승급 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
}

// [요청] 아이템 강화
table ReqItemEnchant {
    enchant_type: ushort;                       // 아이템 강화 타입(E_EnchantUseType참조)
    use_gold_item_id: ulong;
    enchant_items: [EnchantItemInfo];           // 아이템 강화 정보
}

// [요청] 아이템 강화
table ResItemEnchant {
    result_enchant: [ResultEnchantInfo];        // 강화 결과
    del_items: [DelItemInfo];			        // 삭제되는 장비 아이템
    get_items: [GetItemInfo];			        // 추가되는 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];       // 장착 아이템
    result_stack_items: [ItemStack];			// 스택 아이템 목록
}

// [요청] 아이템 제작
table ReqItemMake {
    make_tid: uint;								// 아이템 제작 테이블 아이디
    make_item_cnt: uint;						// 아이템 제작 갯수
    make_material_items: [MakeMaterialItem];    // 제작 재료 정보
}

// [응답] 아이템 제작
table ResItemMake {
    result_make: [ResultMakeInfo];                // 제작 결과
    del_items: [DelItemInfo];			        // 삭제되는 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];       // 장착 아이템
    result_stack_items: [ItemStack];			// 스택 아이템 목록
    make_limit: MakeLimitInfo;                  // 제작 제한 정보
}

// [요청] 아이템 분해
table ReqItemBreak {
    break_items: [BreakItemInfo];               // 분해할 아이템 목록
}

// [응답] 아이템 분해
table ResItemBreak {
    break_items: [DelItemInfo];				        // 분해 아이템 정보
    get_items: [GetItemInfo];                       // 분해하고 얻은 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
}

// [요청] 아이템 삭제
table ReqItemDelete {
    del_items: [DelItemInfo];				        // 삭제 아이템 정보
}

// [응답] 아이템 삭제
table ResItemDelete {
    del_items: [DelItemInfo];				        // 삭제 아이템 정보
}

// [요청] 아이템 가챠
table ReqItemGacha {
    gacha_item_id: ulong;                           // 가챠 아이템 아이디
    gacha_item_tid: uint;                           // 가챠 아이템 tid
    gacha_count: uint;                              // 가챠 횟수
    select_gacha_group_tid: uint;                   // 선택 가챠 그룹 아이디
    select_rune_type: uint;                         // 선택 가챠 룬 타입(Enum:RuneType)
}

// [응답] 아이템 가챠
table ResItemGacha {
    get_items: ItemInfo;        // 얻은 아이템
    remain_items: ItemInfo;     // 획득 포함 잔여 아이템
}

// [요청] 경험치를 명예코인으로 변환
table ReqExpHonorCoinTrade {
    trade_cnt: uint;                               // 변환할 경험치량
}

// [응답] 경험치를 명예코인으로 변환
table ResExpHonorCoinTrade {
    use_exp: ulong;
    result_exp: ulong;
    get_items: [GetItemInfo];                       // 얻은 아이템
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
}

// [요청] 아이템 락 토글 기능
table ReqItemLockToggle {
    goods_type: ubyte;                              // 토글할 타입(E_GoodsKindType)
    item_id: ulong;                                // 토글할 아이템 고유번호
    item_tid: uint;                                // 토글할 아이템 아이디
    is_lock: ubyte;                                 // 토글
}

// [응답] 아이템 락 토글 기능
table ResItemLockToggle {
    remain_items: ItemInfo;         // 락 결과 아이템
}

// [요청] 면죄부 아이템 사용
table ReqItemUseTendency {
    item_tid: uint;                                // 면죄부 아이템 테이블 아이디
}

// [응답] 면죄부 아이템 사용
table ResItemUseTendency {
    inc_tendency: int;                              // 올라가는 성향치
    result_tendency: int;                           // 성향치 결과
    result_stack_items: [ItemStack];			    // 가챠 결과 스택 아이템
}

// [요청] 아이템 제작 횟수 정보
table ReqGetMakeItemLimitList {
}

// [응답] 아이템 제작 횟수 정보
table ResGetMakeItemLimitList {
    make_limits: [MakeLimitInfo];                   // 제작 제한 정보
}

// [요청] 확인해야할 장비 아이템 리스트
table ReqGetCheckItem {
    get_item_ids: [ulong];                          // 장비 아이템 고유번호
}

// [응답] 확인해야할 아이템 리스트
table ResGetCheckItem {
    result_equip_items: [ItemEquipment];		    // 장비 아이템 정보
}

// [요청] 스킬 아이템 사용
table ReqSkillItemUse {
    skill_tid: uint;	                            // 배울 스킬 테이블 아이디
}

// [응답] 스킬 아이템 사용
table ResSkillItemUse {
    skill_tid: uint;                                // 배운 스킬 테이블 아이디
    result_stack_items: [ItemStack];			    // 결과 스택 아이템
}

// [요청] 복구 가능한 아이템 정보
table ReqRecoveryItemInfo {
    recovery_type: ubyte;// E_CategoryType ==> none이면 전체
}

// [응답] 복구 가능한 아이템 정보
table ResRecoveryItemInfo {
    recovery_item_infos: [RecoveryItemInfo];			    // 복구 아이템 정보
}

// [요청] 아이템 복구
table ReqRecoveryItem {
    use_item_tid: uint;                             // 아이템 tid
    recovery_type: ubyte;                           // 복구할 아이템 타입
    recovery_tid: uint;                             // 아이템 tid
}

// [응답] 아이템 복구
table ResRecoveryItem {
    result: ubyte;
    get_items: [GetItemInfo];			            // 추가되는 아이템
    get_pets: [GetPetInfo];                         // 얻은 팻
    get_changes: [GetChangeInfo];                   // 얻은 변신체

    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			    // 결과 스택 아이템
    result_equip_items: [ItemEquipment];		    // 장비 아이템 정보
    result_pets: [Pet];			                    // 결과 팻
    result_changes: [Change];			            // 결과 변신체
    result_pets_gacha_keeps: [PetGachaKeep];		// 팻 보관함으로 넣는것
    result_changes_gacha_keeps: [ChangeGachaKeep];	// 변신체 보관함으로 넣는것
}

// [요청] 아이템 제련 정보
table ReqGetItemSmeltInfo {
}

// [응답] 아이템 제련 시작
table ResGetItemSmeltInfo {
    smelt_item_id: ulong;                           // 제련 아이템 고유번호
    smelt_item_tid: uint;                           // 제련 아이템 테이블 아이디
    options: [uint];				                // 결과 옵션
}

// [요청] 아이템 제련 시작
table ReqItemSmeltStart {
    smelt_item_id: ulong;                           // 제련 아이템 고유번호
    smelt_item_tid: uint;                           // 제련 아이템 테이블 아이디
    use_item_tid: uint;                             // 제련석 아이템 테이블 아이디
}

// [응답] 아이템 제련 시작
table ResItemSmeltStart {
    options: [uint];				                // 결과 옵션
    remain_items: ItemInfo;                         // 잔여 아이템
}

// [요청] 아이템 제련 확정
table ReqItemSmeltEnd {
    smelt_item_id: ulong;                           // 제련 아이템 고유번호
    smelt_item_tid: uint;                           // 제련 아이템 테이블 아이디
}

// [응답] 아이템 제련 확정
table ResItemSmeltEnd {
    remain_items: ItemInfo;                         // 잔여 아이템
}

// [요청] 아이템 제련 취소
table ReqItemSmeltCancel {
}

// [응답] 아이템 제련 취소
table ResItemSmeltCancel {
}

// [요청] 아이템 상점 가챠
table ReqItemShopGacha {
    shop_gacha_item_tid: uint;                           // 가챠 아이템 tid
}

// [응답] 아이템 상점 가챠
table ResItemShopGacha {
    get_items: ItemInfo;        // 얻은 아이템
    remain_items: ItemInfo;     // 획득 포함 잔여 아이템
}

// [요청] 아티팩트 아이템 제작
table ReqMakeArtifactItem {
    artifact_tid: uint;                                 // 아티팩트 테이블 아이디
    use_item_tid: [uint];                               // 비용 아이템 테이블 아이디
    protect_item_tid: uint;                             // 보호강화 아이템 테이블 아이디
    material_items: [MaterialItem];                     // 아이템 or 변신체 or 팻 or 탈것 재료
}

// [응답] 아티팩트 아이템 제작
table ResMakeArtifactItem {
    artifact_result: bool;                              // 제작 결과
    delete_artifact_id: ulong;                          // 삭제되는 아티팩트 고유번호
    result_artifact_info: ArtifactInfo;                 // 아티팩트 정보
    result_account_stack_items: [AccountItemStack];     // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			        // 스택 아이템 목록
    result_pets: [Pet];			                        // 팻 목록
}

// [요청] 잼 아이템 장착
table ReqGemItemEquip {
    equip_item_id: ulong;                               // 장착하려는 장비 고유번호
    equip_item_tid: uint;                               // 장착하려는 장비 테이블 아이디
    gem_item_tid: uint;                                 // 장착하려는 잼 테이블 아이디
    socket_idx: ubyte;                                  // 장착하려는 슬롯(위치) 1~6
}

// [응답] 잼 아이템 장착
table ResGemItemEquip {
    result_account_stack_items: [AccountItemStack];		// 결과 스택 아이템
    result_equip_items: [ItemEquipment];                // 장착 아이템
}

// [요청] 잼 아이템 탈착
table ReqGemItemUnEquip {
    equip_item_id: ulong;                               // 탈착하려는 장비 고유번호
    equip_item_tid: uint;                               // 탈착하려는 장비 테이블 아이디
    socket_idxs: [ubyte];                               // 탈착하려는 슬롯(위치) 1~6
}

// [응답] 잼 아이템 탈착
table ResGemItemUnEquip {
    result_account_stack_items: [AccountItemStack];		// 결과 스택 아이템
    result_equip_items: [ItemEquipment];		        // 탈착 아이템 목록
}

// [요청] 아티팩트 장착
table ReqArtifactEquip {
    artifact_type: uint;                                // 장착 타입(Enum:PetType참조)
    equip_artifact_id: ulong;                           // 장착 아티팩트 고유번호
}

// [응답] 아티팩트 장착
table ResArtifactEquip {
}

// [요청] 아티팩트 탈착
table ReqArtifactUnEquip {
    artifact_type: uint;                                // 장착 타입(Enum:PetType참조)
}

// [응답] 아티팩트 탈착
table ResArtifactUnEquip {
}

// [요청] 요리 아이템 제작
table ReqMakeCookItem {
    make_tid: uint;								// 아이템 제작 테이블 아이디
    use_item_tid: uint;                         // 제작 비용 아이템 테이블 아이디
    make_item_cnt: uint;						// 아이템 제작 개수
    make_material_items: [MaterialItem];        // 아이템 재료
}

// [응답] 요리 아이템 제작
table ResMakeCookItem {
    result_make: [ResultCookingMakeInfo];           // 요리 제작 결과
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
    cook_history: CookHistory;                  // 요리 제작했던 정보
}

// [요청] 요리 아이템 제작(레시피 없음)
table ReqMakeCookItemNoRecipe {
    make_material_items: [MaterialItem];        // 아이템 재료
}

// [응답] 요리 아이템 제작(레시피 없음)
table ResMakeCookItemNoRecipe {
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
}
// 우편 기능

// [요청] 우편 & 쪽지 갱신시간
table ReqGetMailRefreshTime {
}

// [응답] 우편 & 쪽지 갱신시간
table ResGetMailRefreshTime {
    mail_refresh_dt: ulong;
    cash_mail_refresh_dt: ulong;
    message_refresh_dt: ulong;
    exchange_message_refresh_dt: ulong;
}

// [요청] 우편 리스트 요청
table ReqGetMailList {
}

// [응답] 우편 리스트 요청
table ResGetMailList {
    mail_refresh_dt: ulong;
    mail_info_list: [MailInfo];             // 우편 리스트
    account_mail_info_list: [MailInfo];     // 우편 리스트
}

// [요청] 우편 아이템 받기 요청
table ReqTakeMailItem {
    market_type:  E_MarketType;                 // 결제 타입
    mail_kind: uint;                            // MailReceiver 우편 종류 참조
    take_mail_infos: [TakeMailInfo];            // 우편 요청 정보
}

// [응답] 우편 아이템 받기 요청
table ResTakeMailItem {
    take_mail_infos: [TakeMailInfo];            // 삭제되는 우편 idx
    get_items: ItemInfo;                        // 획득 아이템
    remain_items: ItemInfo;                     // 획득 포함 잔여 아이템

    result_cash_coin_gain_cnt : int;            // 캐쉬 코인 획득량
    result_cash_coin_balance: int;              // 캐쉬 코인 잔여량
}

// 쪽지 기능

// [요청] 쪽지 리스트 요청
table ReqGetMessageList {
}

// [응답] 쪽지 리스트 요청
table ResGetMessageList {
    message_refresh_dt: ulong;
    message_info_list: [MessageInfo];	        // 쪽지 정보
}

// [요청] 쪽지 읽기
table ReqReadMessage {
    read_message_idx: ulong;
}

// [응답] 쪽지 읽기
table ResReadMessage {
    read_message_idx: ulong;
}

// [요청] 쪽지 쓰기
table ReqSendMessage {
    type: ushort;					// 쪽지타입(E_MessageType 참조)
    target_nick: string;			// 받을 사람 닉네임(message type에 따라 케릭터 닉네임 혹은 길드 이름)
    title: string;					// 제목
    message: string;				// 내용
}

// [응답] 쪽지 쓰기
table ResSendMessage {
    normal_msg_send_cnt: ushort;	// 오늘 보낸 일반 쪽지 갯수
    guild_msg_send_cnt: ushort;	    // 오늘 보낸 길드 쪽지 갯수
    result_account_stack_items: [AccountItemStack];
}

// [요청] 쪽지 삭제
table ReqDelMessage {
    del_message_idx: [ulong];			// 쪽지 고유 id
}

// [응답] 쪽지 삭제
table ResDelMessage {
    del_message_idx: [ulong];			// 쪽지 고유 id
}

// 거래소 쪽지 기능

// [요청] 거래소 쪽지 리스트 요청
table ReqGetExchangeMessageList {
}

// [응답] 거래소 쪽지 리스트 요청
table ResGetExchangeMessageList {
    message_refresh_dt: ulong;
    message_info_list: [MessageInfo];	        // 쪽지 정보
}

// [요청] 거래소 쪽지 읽기
table ReqReadExchangeMessage {
    read_message_idx: ulong;
}

// [응답] 거래소 쪽지 읽기
table ResReadExchangeMessage {
    read_message_idx: ulong;
}

// [요청] 거래소 쪽지 쓰기
table ReqSendExchangeMessage {
    target_user_id: ulong;			// 받을 사람 유저 고유번호
    title: string;					// 제목
    message: string;				// 내용
}

// [응답] 거래소 쪽지 쓰기
table ResSendExchangeMessage {
    normal_msg_send_cnt: ushort;	// 오늘 보낸 일반 쪽지 갯수
    result_account_stack_items: [AccountItemStack];
}

// [요청] 거래소 쪽지 삭제
table ReqDelExchangeMessage {
    del_message_idx: [ulong];			// 쪽지 고유 id
}

// [응답] 거래소 쪽지 삭제
table ResDelExchangeMessage {
    del_message_idx: [ulong];			// 쪽지 고유 id
}

// [요청] 케쉬 우편 리스트 요청
table ReqGetCashMailList {
}

// [응답] 케쉬 우편 리스트 요청
table ResGetCashMailList {
    mail_refresh_dt: ulong;
    mail_info_list: [CashMailInfo];     // 우편 리스트
}

// [요청] 케쉬 우편 아이템 받기 요청
table ReqTakeCashMailItem {
    take_mail_infos: [TakeMailInfo];            // 우편 요청 정보

    market_type:  E_MarketType;                 // 결제 타입
}

// [응답] 케쉬 우편 아이템 받기 요청
table ResTakeCashMailItem {
    take_mail_idxs: [ulong];        // 삭제되는 우편 idx

    get_items: ItemInfo;            // 획득 아이템
    remain_items: ItemInfo;         // 획득 포함 잔여 아이템

    result_cash_coin_gain_cnt : int;            // 캐쉬 코인 획득량
    result_cash_coin_balance: int;              // 캐쉬 코인 잔여량
}









// [요청] 문양 강화
table ReqMarkEnchant {
    mark_tid: uint;         // 문양 테이블 아이디
    is_protect_enchant: bool;// 강화 보호 사용 유무
}

// [응답] 문양 강화
table ResMarkEnchant {
    is_success: bool;       // 성공유무
    mark: Mark;     // 문양 리스트
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];                // 스택 아이템
}

// [요청] 케릭터 옵션 정보
table ReqGetCharacterOptionList {
}

// [응답] 케릭터 옵션 정보
table ResGetCharacterOptionList {
    option_list: [CharacterOption];     // 옵션 리스트
}

// [요청] 계정 옵션 저장
table ReqSetAccountOption {
    key: E_AccountOptionType;
    on_off: bool;               // 옵션 정보
}

// [응답] 계정 옵션 저장
table ResSetAccountOption {
    option_bit: long;           // 옵션 정보
}
// [요청] 팻 합성
table ReqPetCompose {
    pet_compose_tid: uint;              // 팻 합성 테이블 아이디
    compose_cnt: uint;                  // 합성 갯수
    use_gold_item_id: ulong;            // 소모되는 골드 아이디
    pet_materials: [PetComposeMaterial]; // 재료
}

// [응답] 팻 합성
table ResPetCompose {
    result_compose: [ResultPetCompose];
    material_pets: [PetComposeMaterial];                 // 재료 아이템 정보
    result_account_stack_items: [AccountItemStack];
    result_pets: [Pet];                                   // 팻 정보
    result_pets_gacha_keeps: [PetGachaKeep];		// 가챠로 얻은 팻 보관함으로 넣는것
}

// [요청] 팻 장착
table ReqPetEquip {
    pet_id: ulong;                          // 펫 고유번호
    pet_tid: uint;                          // 펫 테이블 아이디
    use_item_id: ulong;                     // 펫 장착 비용 아이템 고유번호
}
table ResPetEquip {
    main_pet_tid: uint;                     // 대표펫 테이블 아이디
    main_pet_expire_sec: ulong;             // 메인펫 만료 시간
    result_stack_items: [ItemStack];        // 스택 아이템 목록
}


// [요청] 펫 장착 해제
table ReqPetUnequip {
}

table ResPetUnequip {
    main_pet: uint;                         // 해제로 변경된 대표펫 (0이 올수있음)
    main_pet_expire_sec: ulong;             // 메인펫 만료 시간
}

// [요청] 팻 강화
table ReqPetEnchant {
    pet_id: ulong;                       // 팻 고유번호
    pet_tid: uint;                       // 팻 테이블 아이디
}

// [응답] 팻 강화
table ResPetEnchant {
    add_ability_acid: uint;             // 추가된 어빌리티
    result_pet: Pet;                    // 팻 정보
}

// [요청] 보관했던 팻 가챠
table ReqPetRetryGachaKeep {
    market_type:  E_MarketType;             // 결제 타입
    keep_pet_id: ulong;                     // 보관한 팻 고유번호
    keep_pet_tid: uint;                     // 보관한 팻 테이블 아이디
}

// [응답] 보관했던 팻 가챠
table ResPetRetryGachaKeep {
    result_account_stack_items: [AccountItemStack];
    result_pets_gacha_keeps: [PetGachaKeep];		// 가챠로 얻은 팻 보관함으로 넣는것

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 보관했던 팻 회수
table ReqPetTakeGachaKeep {
    keep_pet_id: ulong;                     // 보관한 팻 고유번호
    keep_pet_tid: uint;                     // 보관한 팻 테이블 아이디
}

// [응답] 보관했던 팻 회수
table ResPetTakeGachaKeep {
    result_pets: [Pet];                  // 팻 정보
}


// 펫 성장
table ReqPetGrowth {
    pet_id: ulong;              // 펫 데이터베이스 고유 아이디
    pet_tid: uint;              // 펫 테이블 아이디
}
table ResPetGrowth {
    pet_info : Pet;             // 펫 정보
    remain_account_stacks: [AccountItemStack];  // 사용하고 남은 잔여 account stack
    is_success: bool;
}

// 펫 추출
table ReqPetExtraction {
    pet_id: ulong;                  // 추찰할 펫 고유 번호
    pet_tid: uint;                  // 추출할 펫 테이블 아이디
}

table ResPetExtraction {
    get_items: ItemInfo;            // 획득한 아이템
    remain_items: ItemInfo;         // 잔여 아이템
}

// 새로운 팻 모험 받기
table ReqTakePetAdvInfo {
}

// 새로운 팻 모험 받기
table ResTakePetAdvInfo {
    adv_infos: [PetAdv];       // 펫 탐험 정보들
}

// 펫 탐험
table ReqPetAdvStart {
    adv_id: ulong;              // 탐험 고유 번호
    pet_id_list: [ulong];       // 펫 데이터베이스 고유 아이디 리스트
}

table ResPetAdvStart {
    adv_info: PetAdv;           // 펫 탐험 정보
    pet_list: [Pet];            // 펫 정보
}


// 펫 탐험 보상 요청
table ReqPetAdvReward {
    adv_id: ulong;              // 펫 모험 아이디
}
table ResPetAdvReward {
    adv_info: PetAdv;           // 펫 탐험 정보
    pet_list: [Pet];            // 펫 정보
    get_items: ItemInfo;        // 획득한 아이템
    remain_items: ItemInfo;     // 잔여 아이템
}

// 펫 탐험 취소
table ReqPetAdvCancel {
    adv_id: ulong;          // 펫 모험 DB 아이디
}
table ResPetAdvCancel {
    adv_info: PetAdv;       // 펫 탐험 정보
    pet_list: [Pet];        // 펫 정보
}

// 펫 탐험 쿨타임 리셋
table ReqPetAdvReset {
    adv_id: ulong;          // 펫 모험 DB 아이디
    use_item_tid: uint;     // 펫 모험 리셋 사용 아이템 테이블 아이디
}
table ResPetAdvReset {
    adv_info: PetAdv;       // 펫 탐험 정보
    result_account_stack_item: ItemStack;        // 스택 아이템
}
// [요청] 튜토리얼 로그
table ReqTutorialLog {
    step: uint;
}

// [응답] 튜토리얼 로그
table ResTutorialLog {
}

table ReqQuestAccept {
    quest_tid: uint;                // 퀘스트 고유 테이블 아이디
}

table ResQuestAccept {
    add_quest: Quest;              // 추가되는 퀘스트
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
}

// [요청] 퀘스트 취소
table ReqQuestCancel {
    quest_id: ulong;                // 퀘스트 고유 ID
    quest_tid: uint;                // 퀘스트 고유 테이블 아이디
}

table ResQuestCancel {
    quest_id: ulong;                // 퀘스트 고유 ID
}

// [요청] 퀘스트 보상 요청
table ReqQuestReward {
    quest_id: ulong;                // 퀘스트 고유 ID
    quest_tid: uint;                // 퀘스트 고유 테이블 아이디
    reward_select_idx: uint;        // 선택 보상 인덱스
}
table ResQuestReward {
    get_exp: ulong;                 // 획득 경험치
    get_items: ItemInfo;            // 획득한 아이템

    remain_exp: ulong;              // 잔여 경험치
    remain_items: ItemInfo;         // 잔여 아이템

    next_quest: Quest;              // 다음 퀘스트

    remain_reward_buff: Buff;       // 보상받아 현재 보유중인 버프 정보

    reward_select_idx: uint;        // 선택 보상 인덱스
    random_reward_item_tid: uint;   // 렌덤 보상 아이템 테이블 아이디
    random_reward_item_cnt: uint;   // 렌덤 보상 아이템 개수

    temple_stage : TempleStage;                             // 추가된 템플 스테이지 정보
}

// 이벤트 퀘스트 보상 요청
table ReqQuestEventReward {
    quest_tid: uint;
}

table ResQuestEventReward {
    get_items: ItemInfo;                // 획득한 아이템
    remain_items: ItemInfo;             // 잔여 아이템
    clear_quest: QuestEvent;            // 클리어 퀘스트 정보
}

// // [요청] 일일 퀘스트 리스트 요청
// table ReqQuestDailyList {
// }
//
// // [응답] 일일 퀘스트 리스트 요청
// table ResQuestDailyList {
//     quest_daily: [QuestDaily];
// }
//
//
// // [요청] 일일 퀘스트 발급
// table ReqQuestDailyIssue {
// }
//
// // [응답] 일일 퀘스트 발급
// table ResQuestDailyIssue {
//     issued_quest: [QuestDaily];      // 일일 퀘스트
//     issued_dt: ulong;                // 일일 퀘스트 발급 sec
// }
//
//
// // [요청] 일일 퀘스트 보상 요청
// table ReqQuestDailyReward {
//     quest_id: ulong;
// }
//
// // [응답] 일일 퀘스트 보상 요청
// table ResQuestDailyReward {
//     get_exp: ulong;                     // 획득 경험치
//     get_items: ItemInfo;                // 획득한 아이템
//     remain_exp: ulong;                  // 잔여 경험치
//     remain_items: ItemInfo;             // 잔여 아이템
//     clear_quest: QuestDaily;            // 클리어 퀘스트 정보 (완료 flag밖에 안바꿔줌. 안주고..싶음..)
// }
//
//
// // 일일 퀘스트 즉시 완료
// table ReqQuestDailyFastClear {
//     quest_id: ulong;
// }
// table ResQuestDailyFastClear {
//     clear_quest: QuestDaily;                    // 클리어 퀘스트 정보
//     used_daily_quest_fast_clear_cnt: ubyte;     //사용한 일일 퀘스트 즉시완료 권
// }

// [브로드캐스트] 퀘스트 업데이트 내역
table BroadcastQuestUpdate {
    updated_quests: [Quest];        // 업데이트 적용된 퀘스트 현재 정보
}

// [브로드캐스트] 퀘스트 업데이트 내역
table BroadcastQuestEventUpdate {
    updated_quests: [QuestEvent];        // 업데이트 적용된 퀘스트 현재 정보
}

// // [브로드캐스트] 퀘스트 업데이트 내역
// table BroadcastQuestDailyUpdate {
//     updated_quests: [QuestDaily];        // 업데이트 적용된 퀘스트 현재 정보
// }
// [요청] 경험치 랭킹 리스트
table ReqGetExpRankList {
    char_type: uint;                // E_CharacterType 참조
}

// [응답] 경험치 랭킹 리스트
table ResGetExpRankList {
    char_type: uint;                // E_CharacterType 참조
    ranks : [RankInfo];             // 경험치 랭킹
}

// [요청] pk 랭킹 리스트
table ReqGetPkRankList {
}

// [응답] pk 랭킹 리스트
table ResGetPkRankList {
    ranks : [RankInfo];           // pk 랭킹
}

// [요청] 콜로세움 랭킹 정보
table ReqGetColosseumRankList {
}

// [응답] 콜로세움 랭킹 정보
table ResGetColosseumRankList {
    ranks : [RankInfo];           // 콜로세움 랭킹
}


// 룬 리스트 장착
table ReqRuneEquip {
    pet_tid: uint;                  // 장착할 펫 테이블 ID
    rune_item_id_list: [ulong];     // 룬 아이템 고유 ID 리스트
}
table ResRuneEquip {
    equip_rune_list: [Rune];            // 장착된 룬 정보
}

// 룬 리스트 삭제
table ReqRuneDelete {
    rune_item_id_list: [ulong];     // 룬 아이템 고유 ID 리스트
}
table ResRuneDelete {
    rune_item_id_list: [ulong];     // 삭제된 룬 고유 ID 리스트
}

// 룬 리스트 해제
table ReqRuneUnEquip {
    pet_tid: uint;                      // 장착할 펫 고유 ID
    rune_item_id_list: [ulong];         // 룬 아이템 고유 ID 리스트
}
table ResRuneUnEquip {
    unequip_rune_list: [Rune];                  // 장착 해제된 룬 리스트
    remain_account_stack: AccountItemStack;     // 장착 해제비용 차감 후 남은 재화
}


// 룬 리스트 분해
table ReqRuneSell {
    rune_item_id_list: [ulong];                 // 룬 아이템 고유 ID 리스트
}
table ResRuneSell {
    delete_rune_item_id_list: [ulong];          // 삭제된 룬 id list
    get_account_stack: AccountItemStack;        // 분해로 얻어진 재화
    remain_account_stack: AccountItemStack;     // 분해로 얻어진 재화가 추가된 잔여 재화
}

// 룬 강화
table ReqRuneEnchant {
    rune_item_id: ulong;                        // 강화시킬 룬 고유 ID

}
table ResRuneEnchant {
    is_success: bool;                           // 강화 성공여부
    enchant_rune: Rune;                         // 강화한 룬 정보
    remain_account_stack: AccountItemStack;     // 강화 비용 차감 후 잔여 재화
}
// [요청] 아이템 구매 횟수 정보
table ReqGetItemBuyLimitList {
}

// [응답] 아이템 구매 횟수 정보
table ResGetItemBuyLimitList {
    buy_limits: [BuyLimitInfo];              // 구매 제한 정보
}

// [요청] 스페셜 상점 구매
table ReqSpecialShopBuy {
    market_type: E_MarketType;         // 결제 타입 - lineSdk 유료 재화 사용 때문에 추가 함 20201019
    buy_items: [BuyItem];              // 구매할 아이템
}

// [응답] 스페셜 상점 구매
table ResSpecialShopBuy {
    result_buy_items: [ResultBuyItem];              // 구매 비용
    result_get_items: [GetItemInfo];                // 구매한 아이템
    result_get_pets: [GetPetInfo];                  // 구매한 팻
    result_get_changes: [GetChangeInfo];            // 구매한 변신체

    result_buy_limits: [BuyLimitInfo];              // 구매 제한 정보

    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];			// 스택 아이템 목록
    result_rune_items: [Rune];			            // 룬 아이템 목록
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
    result_pets: [Pet];			                    // 팻 목록
    result_changes: [Change];			            // 변신체 목록
    result_pets_gacha_keeps: [PetGachaKeep];		// 가챠로 얻은 팻 보관함으로 넣는것
    result_changes_gacha_keeps: [ChangeGachaKeep];	// 가챠로 얻은 변신체 보관함으로 넣는것

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 마일리지 상점 구매
table ReqMileageShopBuy {
    buy_items: [BuyItem];              // 구매할 아이템
}

// [응답] 마일리지 상점 구매
table ResMileageShopBuy {
    result_buy_items: [ResultBuyItem];              // 구매 비용
    result_get_items: [GetItemInfo];                // 구매한 아이템
    result_get_pets: [GetPetInfo];                  // 구매한 팻
    result_get_changes: [GetChangeInfo];            // 구매한 변신체

    result_buy_limits: [BuyLimitInfo];              // 구매 제한 정보

    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];			// 장비 아이템 목록
    result_rune_items: [Rune];			            // 룬 아이템
    result_stack_items: [ItemStack];			    // 스택 아이템 목록
    result_pets: [Pet];			                    // 팻 목록
    result_changes: [Change];			            // 변신체 목록
}

// [요청] 일반 상점 구매
table ReqNormalShopBuy {
    is_auto_buy_potion: bool;          // 자동 구매로 사는것인지
    buy_items: [BuyItem];              // 구매할 아이템
}

// [응답] 일반 상점 구매
table ResNormalShopBuy {
    result_buy_items: [ResultBuyItem];              // 구매 비용
    result_get_items: [GetItemInfo];                // 구매한 아이템

    result_buy_limits: [BuyLimitInfo];              // 구매 제한 정보

    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_equip_items: [ItemEquipment];			// 스택 아이템 목록
    result_rune_items: [Rune];			    // 룬 아이템 목록
    result_stack_items: [ItemStack];			// 스택 아이템 목록
}

// [요청] 아이템 판매
table ReqItemSell {
    sell_item_infos: [SellItem];            // 판매할 아이템
}

// [응답] 아이템 판매
table ResItemSell {
    sell_item_infos: [DelItemInfo];            // 판매한 아이템
    sell_item_cost: GetItemInfo;               // 판매대금
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
    result_stack_items: [ItemStack];			// 스택 아이템 목록
}

// [요청] 캐쉬 코인 잔여량 가져오기
table ReqGetCashCoinBalance {
    market_type: E_MarketType;              // 결제 타입
}

// [응답] 캐쉬 코인 잔여량 가져오기
table ResGetCashCoinBalance {
    cash_coin_balance: int;                 // 케쉬 코인 잔여량
}
// [요청] MMO 채널 리스트
table ReqMmoChannelList {
    stage_tid: uint;        // 스테이지 테이블 ID
}
table ResMmoChannelList {
    stage_tid: uint;                    // 스테이지 tid
    server_list: [MmoChannel];          // MMO 채널 리스트
    max_join_user: ushort;              // 입장 max 인원
}

// 필드 보스를 잡은 모든 스테이지의 길드 정보
table ReqFieldBossKillerGuildAll {
}

table ResFieldBossKillerGuildAll {
    info: [BossKillerInfo];
}

// [요청] 로그인시 스테이지 입장
table ReqMmoStageEnter {
    channel_id: ushort;             // 채널 아이디
}

// [응답] 로그인시 스테이지 입장
table ResMmoStageEnter {
    stage_tid: uint;                            // 스테이지 테이블 아이디
    channel_id: ushort;                         // 채널 아이디(_packet.E_StageChannelType 참조)
    join_addr: string;                          // MMO 주소
}

// [요청] 포탈 입장
table ReqPortalEnter {
    portal_tid: uint;               // 포탈 테이블 아이디
    is_chaos_channel: ubyte;        // 카오스 채널 유무
    use_item_id: ulong;             // 포탈 사용 소비 아이템 고유 id
    use_item_tid: uint;             // 포탈 사용 소비 아이템 TID
}

// [응답] 포털 입장
table ResPortalEnter {
    stage_tid: uint;                    // 스테이지 테이블 아이디
    channel_id: ushort;                 // 채널 아이디
    join_addr: string;                  // UnityMMo 주소 (channel_id가 _packet.E_StageChannelType.Single or Private 이면 없음)
}

// [요청] 채널 변경
table ReqChannelChangeEnter {
    stage_tid: uint;                    // 스테이지 테이블 아이디
    change_channel_id: ushort;          // 변경할 채널 아이디
}

table ResChannelChangeEnter {
    stage_tid: uint;                    // 스테이지 테이블 아이디
    channel_id: ushort;                 // 채널 아이디
    join_addr: string;                  // MMO 주소
}

// 아이템으로 유적 오픈
table ReqTempleItemOpen {
    use_item_tid: uint;                                     // 템플 스테이지 오픈할 아이템 테이블 아이디
}

table ResTempleItemOpen  {
    temple_stage : TempleStage;                             // 추가된 템플 스테이지 정보
    result_stack_item: ItemStack;                           // 스택 아이템
}

// 기믹으로 유적 오픈
table ReqTempleGimmickOpen {
    object_tid: uint;                                       // 오브젝트 테이블 아이디
    stage_tid: uint;                                        // 오픈할 스테이지 테이블 아이디
}

table ResTempleGimmickOpen  {
    temple_stage : TempleStage;                             // 추가된 템플 스테이지 정보
}

// 유적 상자 오픈
table ReqTempleGachaItem {
    temple_stage_tid: uint;                                 // 유적 테이블 아이디
    gacha_array_index: uint;                                // 유적 상자 오픈 array index
}

table ResTempleGachaItem  {
    temple_stage : TempleStage;                             // 변경된 템플 스테이지 정보
    get_items: ItemInfo;                                    // 획득한 아이템
    remain_items: ItemInfo;                                 // 잔여 아이템
}

// 유적 클리어 보상
table ReqTempleClearReward {
    temple_stage_tid: uint;                                 // 유적 테이블 아이디
}

table ResTempleClearReward  {
    temple_stage : TempleStage;                             // 변경된 템플 스테이지 정보
    get_items: ItemInfo;                                    // 획득한 아이템
    remain_items: ItemInfo;                                 // 잔여 아이템
}

// 무한의탑 오픈 정보 요청
table ReqInfinityDungeonGetOpenInfo {
}

table ResInfinityDungeonGetOpenInfo  {
    infinity_dungeon_seq: uint;                 // 무한던전 오픈 정보
    infinity_dungeon_group_tid: uint;           // 무한던전 오픈 정보
    infinity_dungeon_start: ulong;              // 무한던전 오픈 정보
    infinity_dungeon_end: ulong;                // 무한던전 오픈 정보
}

// 무한의탑 층 클리어 보상
table ReqInfinityDungeonClearReward {
    infinity_dungeon_tid: uint;                 // 무한던전 스테이지 아이디
}

table ResInfinityDungeonClearReward  {
    infinity_dungeon_seq: uint;                 // 계정 무한던전 시퀀스
    infinity_dungeon_tid: uint;                 // 무한던전 스테이지 아이디
    infinity_dungeon_last_tid: uint;            // 무한던전 마지막 스테이지 아이디
    infinity_dungeon_reward_stage_tid: uint;    // 무한던전 일일 보상 스테이지 테이블 아이디
    get_items: ItemInfo;                        // 획득한 아이템
    remain_items: ItemInfo;                     // 잔여 아이템
}

// 무한의탑 일일 보상
table ReqInfinityDungeonDailyReward {
}

table ResInfinityDungeonDailyReward  {
    infinity_dungeon_reward_stage_tid: uint;    // 무한던전 일일 보상 스테이지 테이블 아이디
    infinity_dungeon_reward_dt: ulong;          // 무한던전 일일 보상 완료 시간
    get_items: ItemInfo;                        // 획득한 아이템
    remain_items: ItemInfo;                     // 잔여 아이템
}

// 무한의탑 클리어층 초기화
table ReqInfinityDungeonReset {
    market_type: E_MarketType;              // 결제 타입
}

table ResInfinityDungeonReset  {
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// 무한의탑 선택할수있는 버프 리스트
table ReqGetInfinityDungeonSelectBuffList {
}

table ResGetInfinityDungeonSelectBuffList  {
    infinity_buff_tids: [uint];                 // 무한던전 버프 리스트
}

// 무한의탑 버프 선택
table ReqInfinityDungeonSelectBuff {
    infinity_buff_tid: uint;                   // 무한던전 선택 버프
}

table ResInfinityDungeonSelectBuff  {
    infinity_buff_tid: uint;                   // 무한던전 선택 버프
}

// 무한의탑 버프 리스트
table ReqGetInfinityDungeonBuffList {
}

table ResGetInfinityDungeonBuffList  {
    infinity_buff_tids: [uint];                   // 무한던전 선택 버프
}

// [요청] 시나리오 던전 보상
table ReqScenarioDungeonReward {
    stage_tid: uint;		                // 스테이지 테이블 id
}

// [응답] 시나리오 던전 보상
table ResScenarioDungeonReward {
    scenario_dungeon_stage_tid: uint;       // 계정 시나리오 던전 클리어 스테이지 테이블 아이디
    scenario_dungeon_play_cnt: uint;        // 계정 시나리오 던전 보상 횟수
    get_items: ItemInfo;                    // 얻은 아이템
    remain_items: ItemInfo;                 // 획득 포함 잔여 아이템
}



// [요청] 본인 성역 스팟 정보 요청 - 단건
table ReqGetSelfGodLandInfo {

}

table ResGetSelfGodLandInfo {
    isHave: bool;                  // 성역을 가지고 있다 없다 true / false
    spot_info: GodLandSpotInfo;       // 성역 스팟 정보들 - 배열 아님 싱글
}

// [요청] 성역 스팟 정보 리스트 요청
table ReqGetGodLandInfo {
    slot_group_id: uint;                       // SlotGroupID

}

table ResGetGodLandInfo {
    spot_info: [GodLandSpotInfo];       // 성역 스팟 정보들
}

// [요청] 성역 매칭 요청
table ReqGetMatchGodLandSpot {
    god_land_tid: uint;                 // 매칭할 성역 god_land table id
}

table ResGetMatchGodLandSpot {

}

// [요청] 성역 아이템 채집 요청
table ReqGetGodLandSpotGatheringItem {
    god_land_tid: uint;                 // 채집할 성역 god_land table id
}

table ResGetGodLandSpotGatheringItem {
    time_cnt: uint;         // 점유 했던 시간
    get_items: [GetItemInfo];                           // 채집후 얻은아이템
    result_account_stack_items: [AccountItemStack];     // 계정 공유 스택 아이템 목록
    result_stack_items: [ItemStack];			        // 스택 아이템 목록
}

table ReqGetGodLandFightRecode {

}

table ResGetGodLandFightRecode {
    recode: [GodLandFightRecode];       // 성역 전투 정보 리스트
}

table ReqGodLandDiscard { // 성역 포기
    god_land_tid: uint;     // 포기할 성역
    slot_group_id: uint;    // 포기할 성역 그룹
}

table ResGodLandDiscard {

}

// [요청] 서버 보스 정보 요청
table ReqGetServerBossInfo {
    stage_tid: uint;                // 스테이지 테이블 아이디
}

table ResGetServerBossInfo {
    open_boss: ServerBossInfo;        // 서버 보스 정보
}

// [요청] 인터서버 캠프 입장.
table ReqInterStageCampEnter {
    portal_tid: uint;               // 포탈 테이블 아이디
    use_item_tid: uint;             // 사용 아이템 아이디
}

table ResInterStageCampEnter {
    stage_tid: uint;                // 스테이지 테이블 아이디
    join_addr: string;              // UnityMMo 주소
    channel_id: ushort;             // 채널 아이디(_packet.E_StageChannelType 참조)
}


// [요청] 인터서버 필드 입장.
table ReqInterStageFieldEnter {
    portal_tid: uint;               // 포탈 테이블 아이디
}

table ResInterStageFieldEnter {
    stage_tid: uint;                // 스테이지 테이블 아이디
    join_addr: string;              // UnityMMo 주소
    channel_id: ushort;             // 채널 아이디(_packet.E_StageChannelType 참조)
}
// [요청] 계정 창고에 등록된 아이템 조회
table ReqStorageItemList {
}

// [응답] 계정 창고에 등록된 아이템 조회
table ResStorageItemList {
    equip_items: [ItemEquipment];         // 창고에 들어가 있는 장비 리스트
    stack_items: [ItemStack];             // 창고에 들어가 있는 스택 리스트
}



// [요청] 계정 창고에 아이템 등록
table ReqStorageItemPut {
    put_equip_items: [ItemEquipment];      // 창고에 들어갈 장비
    put_stack_items: [ItemStack];          // 창고에 들어갈 스택
}

// [응답] 계정 창고에 아이템 등록
table ResStorageItemPut {
    entrust_equips: [ItemEquipment];        // 창고에 넣어진 장비 아이템
    entrust_stacks: [ItemStack];            // 창고에 넣어진 스택 아이템

    remain_storage_stacks: [ItemStack];     // 창고에 있는 스택 아이템
    remain_stacks: [ItemStack];             // 창고에 넣어지고 남은 잔여 스택 아이템
}



// [요청] 계정 창고에 아이템 찾기
table ReqStorageItemGet {
    get_equip_items: [ItemEquipment];       // 창고에서 찾을 장비 아이템
    get_stack_items: [ItemStack];           // 창고에서 찾을 스택 아이템
}

// [응답] 계정 창고에 아이템 찾기
table ResStorageItemGet {
    get_equips: [ItemEquipment];            // 창고에서 찾은 삭제 장비 아이템
    get_stacks: [ItemStack];                // 창고에서 찾은 삭제 스택 아이템

    new_equips: [ItemEquipment];            // 창고에서 찾아서 인벤토리에 들어간 장비 아이템
    remain_stacks: [ItemStack];             // 창고에서 찾은 스택 아이템 + 현재 보유 = 인벤토리 최종값
    remain_storage_stacks: [ItemStack];     // 창고에 있는 스택 아이템 최종값
    remain_account_stacks: [AccountItemStack];     // 찾기에 사용된 재화 잔여량
}
// [요청] 해킹 의심 유저 관련 데이터 저장.
table ReqHackUser {
    category: E_HACK_CATEGORY;       // 해킹 의심 카테고리
    value: string;                   // 세부 데이터
}

table ResHackUser {
}


// [요청] 거래에 아이템을 등록한다.
table ReqTradeSell {
    sell_item_id: ulong;                    // 등록할 아이템 고유번호
    sell_item_tid: uint;                    // 등록할 아이템 테이블 아이디
    sell_item_cnt: uint;                    // 등록할 아이템 개수
    sell_item_total_price: uint;            // 등록할 아이템 총 가격
    sell_password: string;                  // 구매할 아이템 비번
    buy_server_idx: uint;                   // 구매할 서버 아이디
    buy_char_nick: string;                  // 구매할 케릭터 이름
}

// [응답] 거래에 아이템을 등록한다.
table ResTradeSell {
    sell_item_id: ulong;                    // 등록할 아이템 고유번호
    sell_item_tid: uint;                    // 등록할 아이템 테이블 아이디
    sell_item_cnt: uint;                    // 등록할 아이템 개수
    result_account_stack_item: AccountItemStack; // 계정 공유 스택 아이템
    result_stack_item: ItemStack;			// 스택 아이템 목록
    buy_char_id: ulong;                     // 구매할 케릭터 고유번호
    buy_char_nick: string;                  // 구매할 케릭터 이름
}

// [요청] 거래에 아이템을 구매한다.
table ReqTradeBuy {

    trade_id: ulong;
    buy_item_id: ulong;
    buy_item_tid: uint;
    buy_item_password: string;               // 구매할 아이템 비번

    market_type: E_MarketType;              // 결제 타입
}

// [응답] 거래에 아이템을 구매한다.
table ResTradeBuy {
    buy_item_tid: uint;
    buy_item_cnt: uint;
    result_account_stack_item: AccountItemStack;    // 계정 공유 스택 아이템
    result_equip_item: ItemEquipment;			    // 장비 아이템
    result_stack_item: ItemStack;			        // 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 거래에 아이템을 회수한다.
table ReqTradeWithDraw {
    trade_id: ulong;
    withdraw_item_id: ulong;
    withdraw_item_tid: uint;
}

// [응답] 거래에 아이템을 회수한다.
table ResTradeWithDraw {
    withdraw_item_tid: uint;
    withdraw_item_cnt: uint;
    result_equip_item: ItemEquipment;			    // 장비 아이템
    result_stack_item: ItemStack;			        // 스택 아이템
}

// [요청] 거래에 아이템 판매 리스트
table ReqTradeSellList {
    page_index: uint;                       // page_index
    state: E_TradeState;
}

// [응답] 거래에 아이템 판매 리스트
table ResTradeSellList {
    page_index: uint;                       // page_index
    is_next_page: bool;                     // 다음 페이지가 있는지 여부
    sell_items: [TradeItem];
}

// [요청] 거래에 아이템 구매 리스트
table ReqTradeBuyList {
}

// [응답] 거래에 아이템 구매 리스트
table ResTradeBuyList {
    buy_items: [TradeItem];
}

// [요청] 거래에 아이템 판매 금액 정산
table ReqTradeTakeMoney {
    trade_ids: [ulong];
}

// [응답] 거래에 아이템 판매 금액 정산
table ResTradeTakeMoney {
    total_price: uint;                              // 전체 받은금액
    total_tax: uint;                                // 세금
    result_account_stack_item: AccountItemStack;    // 계정 공유 스택 아이템
}
// [요청] 계정 로그인
table ReqAccountLogin {
    device_id: string;			// 디바이스 id
    version: string;			// 클라이언트 버전
    rkey: uint;					// 게이트웨이에서 발급한 고유 값

    pf_session_token: string;   // line 세션 토큰

    os: string;                 // os 값.
    osv: string;                // os 버전값.
    dm: string;                 // 기기값. 기기 모델값.
    lang: string;               // language-culture 값으로 디바이스 언어값 (예> zh-CN)
    lang_game: string;          // 인게임 언어 셋팅값
    v: string;                  // 클라이언트 마켓 버전
    sk: string;                 // 스토어 타입 ( ex) GOOGLE_PLAY)
    platform: string;           // 로그인 플렛폼 (ex) FaceBook, KaKao 등)
    os_modulation: bool;        // os 변조 유무 (앱가드 사용 시 앱가드 함수 사용. 그 외 LG SDK 모듈 사용)
    emulator: bool;             // 에뮬레이터 분류
    loading_time: uint;         // gateway ResLoginWaitUsers 받은 후 부터 ReqAccountLogin쏠때까지 걸린 시간 millisecond
    region: string;             // 서버 region 값

    gps_adid: string;           // OS = Android 인 경우 구글 ADID 값을 남겨주시면 됩니다. (Android가 아닌 경우 null 처리)
    idfa: string;               // OS = iOS 인 경우 애플 IDFA 값을 남겨주시면 됩니다. (iOS가 아닌 경우 null 처리)
    idfv: string;               // OS = iOS 인 경우 애플 IDFV 값을 남겨주시면 됩니다. (iOS가 아닌 경우 null 처리)
    adjust_id: string;          // adjust SDK에서 전송하는 adid 값
}

// [응답] 계정 로그인
table ResAccountLogin {
    account: Account;		                // 계정 클래스
    time: ulong;			                // 서버 현재 시간
    rnd: uint;			                    // 세션 인증 키값
    stroage_max_cnt: uint;                  // 창고 확장 개수
    character_max_cnt: uint;                // 케릭터 확장 개수
    attend_reward_seq: ushort;              // 일일 출석 횟수
    attend_continuity_reward_seq: ushort;   // 연속 출석 횟수
    attend_reward_dt: ulong;                // 일일 출석 채크 시간
    normal_msg_send_cnt: ushort;	        // 오늘 보낸 일반 쪽지 갯수
    guild_msg_send_cnt: ushort;	            // 오늘 보낸 길드 쪽지 갯수
    daily_quest_issued_dt: ulong;           // 일일 퀘스트 발급 날자
    daily_quest_fast_clear_cnt: ubyte;      // 일일 퀘스트 즉시완료 사용 횟수
    daily_quest_fast_clear_max_cnt: ubyte;  // 일일 퀘스트 즉시완료 max
    special_skill_max_cnt: ubyte;           // 궁극기 스킬 사용가능 개수
    login_event_dt: ulong;                  // 로그인 이벤트 갱신 했던 시간(push reward)
    char_lv_max: uint;                      // 계정 케릭터 최고 레벨
    colosseum_reward_cnt: uint;             // 계정 콜로세움 보상 횟수
    scenario_dungeon_stage_tid: uint;       // 계정 시나리오 던전 클리어 스테이지 테이블 아이디
    scenario_dungeon_play_cnt: uint;        // 계정 시나리오 던전 보상 횟수
    infinity_dungeon_seq: uint;             // 계정 무한던전 시퀀스
    infinity_dungeon_tid: uint;             // 계정 무한던전 테이블 아이디
    infinity_dungeon_last_tid: uint;        // 계정 무한던전 최종 테이블 아이디
    infinity_dungeon_reward_stage_tid: uint;// 계정 무한던전 일일 보상 스테이지 테이블 아이디
    infinity_dungeon_reward_dt: ulong;      // 계정 무한던전 보상 시간
    change_quest_lv: uint;                  // 변신체 퀘스트 레벨
    change_quest_exp: uint;                 // 변신체 퀘스트 경험치
    change_quest_issued_dt: ulong;          // 변신체 퀘스트 갱신 시간
    rune_stage_drop_bit_option: ulong;      // 룬 스테이지 드랍 옵션 비트
    rune_sell_grade_option: ushort;         // 룬 자동 판매 등급
    rune_sell_rune_grade_option: ushort;    // 룬 자동 판매 룬등급
    item_break_grade_option: ushort;        // 아이템 자동 판매 등급
}

// 계정 탈퇴
table ReqAccountLeave {
    nid: string;        // 라인 고유 아이디
}

table ResAccountLeave {
}

// [요청] 케릭터 생성 요청
table ReqCharCreate {
    char_tid: uint;			    // 케릭터 테이블 id
    nickname: string;			// 케릭터 닉네임
}

// [응답] 케릭터 생성 요청
table ResCharCreate {
    char_id: ulong;			    // 케릭터 유니크 아이디
    char_tid: uint;			    // 케릭터 테이블 id
}



// [요청] 케릭터 삭제 요청
table ReqCharDelete {
    user_id: ulong;             // 계정 id
    char_id: ulong;             // 케릭터 id
    is_force: bool;             // 케릭터 강제 삭제 유무(개발서버용)
}

// [응답] 케릭터 삭제 요청
table ResCharDelete {
    delete_dt: ulong;		    // 케릭터 삭제 시간
}



// [요청] 케릭터 삭제 롤백 요청
table ReqCharDeleteRollBack {
    user_id: ulong;             // 계정 id
    char_id: ulong;             // 케릭터 id
}

// [응답] 케릭터 삭제 롤백 요청
table ResCharDeleteRollBack {
}



// [요청] 케릭터 목록 요청
table ReqCharList {

}

// [응답]케릭터 리스트 요청 응답
table ResCharList {
    characters: [Character];		// 케릭터 목록
    attribute: Attribute;           // 속성 정보
}

// [요청] 케릭터 전체 정보 묶음 요청
table ReqGetAllCharInfoBundle {
    is_first_enter: bool;           // 첫 접속 유무 추가
    char_info_req_num: [ubyte];     // 원하는 정보 비트 정보(E_CharInfoReqBit)
}

table ResGetAllCharInfoBundle {
    rnd: uint;			                // 세션 인증 키값
    is_first_enter: bool;               // 첫 접속 여부

    character: Character;               // 케릭터 정보
    block_info: [CharBlock];            // Block 정보
    restore_exp: [RestoreExp];          // 복구 경험치
    guild_buff_info: [GuildBuff];       // 길드 버프 정보
    guild_alliance_info: [GuildAllianceSimpleInfo];       // 길드 동맹 정보

    storage_equip: [ItemEquipment];     // 창고 장비 정보
    storage_stack: [ItemStack];         // 창고 스택 정보
    account_stack: [AccountItemStack];  // Account Stack 정보
    equip_item: [ItemEquipment];        // Equip 아이템
    stack_item: [ItemStack];            // Stack 아이템
    mark_item: Mark;                    // Mark 아이템
    change_item: [Change];              // 변신 아이템 정보
    pet_item: [Pet];                    // 펫 아이템 정보
    pet_gacha_keeps: [PetGachaKeep];		// 가챠로 얻은 팻 보관함 정보
    change_gacha_keeps: [ChangeGachaKeep];	// 가챠로 얻은 변신체 보관함 정보
    skill_book: [SkillBookInfo];	    // 스킬 북 정보
    pet_adventure: [PetAdv];	    // 펫 탐험 정보
    rune_item: [Rune];                  // 룬정보

    change_collect: [Collect];      // 변신체 콜렉션 정보
    item_collect: [Collect];        // 아이템 콜렉션 정보
    pet_collect: [Collect];         // 펫 콜렉션 정보
    options: [CharacterOption];      // 옵션 정보
    quests: [Quest];
    quest_dailys: [QuestDaily];
    make_limits: [MakeLimitInfo];           // 제작 제한 정보
    friends: [FriendInfo];                  // 친구 리스트
    request_friends: [FriendRequestInfo];   // 친구 요청 리스트
    item_acq_history: [uint];       // 아이템 획득 기억
    quest_event: [QuestEvent];          // 퀘스트 이벤트
    change_quest: [ChangeQuest];          // 변신체 퀘스트 정보
    attribute: Attribute;           // 속성 정보
    artifact: [ArtifactInfo];           // 아티팩트 정보
    cook_historys: [CookHistory];       // 요리 제작
    temple_stages : [TempleStage];      // 템플 스테이지 정보
    skill_use_orders : [SkillUseOrder];    // 스킬 사용 순서

    god_land_product_flag : [GodLandProductFlag]; // 성역 채집가능 체크 리스트
}

// [요청] 케릭 스텟 사용
table ReqUseStatPoint {
    stats: [UseStatPoint];      // E_AbilityType
    use_item_id: ulong;
}

// [응답] 케릭 스텟 사용
table ResUseStatPoint {
    result_stack_items: [ItemStack];    // 사용 아이템 결과
    curr_char_stats: [UseStatPoint];    // 케릭의 스탯 결과
}

// [요청] 케릭 스텟 리셋
table ReqResetStatPoint {
    market_type: E_MarketType;      // 결제 타입 - lineSdk 유료 재화 사용 때문에 추가 함 20201019

    reset_item_id: ulong;           // 리셋 아이템 아이디
    reset_item_tid: uint;
}

// [응답] 케릭 스텟 리셋
table ResResetStatPoint {
    result_stack_items: [ItemStack]; // 사용 아이템 결과

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// // [요청] 궁극기 스킬 포인트 사용
// table ReqUseSpecialSkillPoint {
//     special_skill_tid: uint;            // 궁극기 스킬 번호
// }
//
// // [응답] 궁극기 스킬 포인트 사용
// table ResUseSpecialSkillPoint {
//     special_skill_tid: uint;            // 궁극기 스킬 번호
// }
//
// // [요청] 궁극기 스킬 포인트 리셋
// table ReqResetSpecialSkillPoint {
//     reset_item_id: ulong;           // 리셋 아이템 고유번호
//     reset_item_tid: uint;           // 리셋 아이템 아이디
// }
//
// // [응답] 궁극기 스킬 포인트 리셋
// table ResResetSpecialSkillPoint {
//     result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템
//     result_stack_items: [ItemStack]; // 사용 아이템 결과
// }

// [요청] 복구해야할 경험치 정보
table ReqRestoreExpList {
}

// [응답] 복구해야할 경험치 정보
table ResRestoreExpList {
    restore_exps: [RestoreExp]; // 복구해야할 경험치 정보
}

// [요청] 경험치 복구
table ReqRestoreExp {
    market_type: E_MarketType;                      // 결제 타입 - lineSdk 유료 재화 사용 때문에 추가 함 20201019

    restore_id: ulong;
    use_item_id: ulong;                             // 무료로 할거면 0 셋팅
    use_item_tid: uint;                             // 사용할 아이템의 table id //** 다이아는 line으로 넘어가서 item_id가 없어짐. -> 20201020
}

// [응답] 경험치 복구
table ResRestoreExp {
    get_exp: ulong;                                 // 얻은 경험치량
    result_exp: ulong;                              // 최종 경험치량
    result_restore_exp_cnt: ubyte;                 // 남은 무료 회복 갯수
    result_restore_exp_not_free_cnt: ubyte;         // 진행한 유료 복구 횟수
    result_account_stack_items: [AccountItemStack]; // 계정 공유 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 케릭터 슬롯 확장
table ReqCharacterSlotExtend {
    use_item_id: ulong;
}

// [응답] 케릭터 슬롯 확장
table ResCharacterSlotExtend {
    character_max_cnt: uint;                        // 케릭터 확장 개수
    result_stack_item: ItemStack;	                // 스택 아이템
}

// [요청] 링 슬롯 확장
table ReqRingSlotExtend {
    use_item_id: ulong;
}

// [응답] 링 슬롯 확장
table ResRingSlotExtend {
    add_ring_slot: uint;                            // 케릭터 링 개수
    result_stack_item: ItemStack;	                // 스택 아이템
}

// [요청] 인벤 슬롯 확장
table ReqInvenSlotExtend {
    market_type:  E_MarketType;              // 결제 타입
    use_item_id: ulong;
    use_item_tid: uint;
}

// [응답] 인벤 슬롯 확장
table ResInvenSlotExtend {
    inven_max_cnt: uint;                            // 인벤 확장 슬롯수
    result_account_stack_item: AccountItemStack;	// 어카운트 스택 아이템
    result_stack_item: ItemStack;	                // 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 창고 슬롯 확장
table ReqStorageSlotExtend {
    market_type:  E_MarketType;              // 결제 타입
    use_item_id: ulong;
    use_item_tid: uint;
}

// [응답] 창고 슬롯 확장
table ResStorageSlotExtend {
    storage_max_cnt: uint;                          // 창고 확장 슬롯수
    result_account_stack_item: AccountItemStack;	// 어카운트 스택 아이템
    result_stack_item: ItemStack;	                // 스택 아이템

    result_cash_coin_balance: int;                  // 캐쉬 코인 잔여량
}

// [요청] 퀵 슬롯 확장
table ReqQuickSlotExtend {
    use_item_id: ulong;
    use_item_tid: uint;
}

// [응답] 퀵 슬롯 확장
table ResQuickSlotExtend {
    quick_slot_max_cnt: uint;                       // 퀵슬롯 확장 슬롯수
    result_account_stack_item: AccountItemStack;	// 어카운트 스택 아이템
    result_stack_item: ItemStack;	                // 스택 아이템
}

// // [요청] 궁극기 스킬 확장
// table ReqSpecialSkillExtend {
//     use_item_id: ulong;
//     use_item_tid: uint;
// }
//
// // [응답] 궁극기 스킬 확장
// table ResSpecialSkillExtend {
//     special_skill_max_cnt: uint;                    // 궁극기 확장 슬롯수
//     result_stack_item: ItemStack;	                // 스택 아이템
// }

// [요청] 케릭 블록 리스트 요청
table ReqCharBlockList {
}

// [응답] 케릭 블록 리스트 요청
table ResCharBlockList {
    block_list: [CharBlock];         // 채팅 블록 리스트
}

// [요청] 케릭 블록 유저 추가
table ReqCharBlockSet {
    block_char_nick: string;			// 블럭할 케릭터 닉네임
}

// [응답] 케릭 블록 유저 추가
table ResCharBlockSet {
    block_char: CharBlock;         // 채팅 블록 리스트
}

// [요청] 케릭 블록 유저 삭제
table ReqCharBlockDel {
    block_char_id: ulong;			// 블럭 삭제할 케릭터 아이디
}

// [응답] 케릭 블록 유저 삭제
table ResCharBlockDel {
    block_char_id: ulong;			// 블럭 삭제할 케릭터 아이디
}

// [요청] pk 로그 정보
table ReqGetPkLogList {
}

// [응답] pk 로그 정보
table ResGetPkLogList {
    pk_logs: [PkLog];
}

// [요청] pk 조롱하기
table ReqPkSneer {
    pk_id: ulong;
    use_item_id: ulong;
}

// [응답] pk 조롱하기
table ResPkSneer {
    pk_id: ulong;
    result_account_stack_item: AccountItemStack; // 계정 공유 스택 아이템
}


// [요청] 닉네임 변경
table ReqChangeNick {
    item_id: ulong;
    item_tid: uint;
    change_nick: string;
}
table ResChangeNick {
    remain_stack: ItemStack; // 잔여 스택 아이템
    change_nick: string;     // 변경된 이름
}


// [요청] 통합 닉네임 변경
table ReqCombineChangeNick {
    char_id: ulong;
    change_nick: string;
}

table ResCombineChangeNick {
    change_nick: string;     // 변경된 이름
}

// [요청] 클레스 체인지
table ReqClassChange {
    change_char_tid: uint;			    // 케릭터 테이블 id
    use_item_tid: uint;                 // 클레스 체인지할 아이템 아이디
}

table ResClassChange {
}

// [요청] 스킬 사용 순서 셋팅
table ReqSetSkillUseOrder {
    skill_use_orders: [SkillUseOrder];
}

// [응답] 스킬 사용 순서 셋팅
table ResSetSkillUseOrder {
    skill_use_orders: [SkillUseOrder];
}

// [요청] 룬 옵션 셋팅
table ReqSetRuneOption {
    rune_stage_drop_bit_option: ulong;
    rune_sell_grade_option: ushort;
    rune_sell_rune_grade_option: ushort;
}

// [응답] 룬 옵션 셋팅
table ResSetRuneOption {
    rune_stage_drop_bit_option: ulong;
    rune_sell_grade_option: ushort;
    rune_sell_rune_grade_option: ushort;
}

// [요청] 아이템 옵션 셋팅
table ReqSetItemOption {
    item_break_grade_option: ushort;
}

// [응답] 아이템 옵션 셋팅
table ResSetItemOption {
    item_break_grade_option: ushort;
}

table ConnectInfo {
    name: string;       // 서버 이름
    url: string;        // 서버 주소
}

table ServerInfo
{
    id: uint; 									// 서버 id
    name: string;								// 서버 이름
    traffic_status: E_ServerTrafficStatus;		// 현재 서버 포화도
    view_sort: uint;							// 보이는 순서
    is_new: ubyte;								// 신규 라벨
    is_create_character: ubyte;                 // 케릭터를 생성해야 입장할수 있다.
    server_open_dt: ulong;                      // 서버 오픈 시간
    ts_offset: uint;                            // 시간 offset
    connect_info: [ConnectInfo];                // 접속 서버 주소
}

table CharacterSlim {
    server_idx: uint;
    char_name: string;
    char_tid: uint;
    char_level: uint;
}

// ========================================================================================

// [요청] 서버 목록 요청
table ReqServerList {
}

// [응답] 서버 목록 요청 응답
table ResServerList {
    server_ts_ms: ulong;                        // 서버 시간 unix time 밀리세컨드
    server_list: [ServerInfo];                  // 서버 리스트 정보
}


// [요청] 계정 정보 요청
table ReqGetAccount {
    pf_session_token: string;       // 라인 유저 세션키
}

// [응답] 계정 정보 요청 응답
table ResGetAccount {
    user_id: ulong;				        // 계정 유니크 아이디
    last_login_server_idx: uint;		// 마지막 접속한 서버 id
    option_bit: long;                   // 계정 옵션
    nid: string;                        // NID
    gnid: string;                       // 글로벌 NID
    state: E_AccountStateType;		    // 계정 상태
    leave_end_dt: ulong;              // 탈퇴 유예 만료시간
}

// [요청] 케릭터 리스트 요청
table ReqServerCharList {
    pf_session_token: string;		    // 라인 유저 세션 키
}

// [응답] 케릭터 리스트 요청
table ResServerCharList {
    char_list: [CharacterSlim];
}


// [요청] 계정 생성 요청
table ReqCreateAccount
{
    pf_session_token: string;           // 세션 토큰값

    os: string;                 // os 값.
    osv: string;                // os 버전값.
    dm: string;                 // 기기값. 기기 모델값.
    lang: string;               // language-culture 값으로 디바이스 언어값 (예> zh-CN)
    lang_game: string;          // 인게임 언어 셋팅값
    v: string;                  // 클라이언트 마켓 버전
    rf: string;                 // 구글 리퍼러?
    sk: string;                 // 스토어 타입
    platform: string;           // 로그인 플렛폼 (ex) FaceBook, KaKao 등)
    region: string;             // 서버 region 값
}

// [응답] 계정 생성 응답
table ResCreateAccount {
    user_id: ulong;				        // 계정 유니크 아이디
    nid: string;                        // NID
    gnid: string;                       // 글로벌 NID
}


// [요청] 계정 로그인 요청 (gateway 키 발급)
table ReqLoginAccount {
    server_idx: ubyte;                  // 접속 서버 idx
    protocol_version: uint;             // 프로토콜 버전
    pf_session_token: string;           // 유저 세션 토큰

    os: string;                         // os 값.
    osv: string;                        // os 버전값.
    dm: string;                         // 기기값. 기기 모델값.
    lang: string;                       // language-culture 값으로 디바이스 언어값 (예> zh-CN)
    lang_game: string;                  // 인게임 언어 셋팅값
    v: string;                          // 클라이언트 마켓 버전
    sk: string;                         // 스토어 타입
    platform: string;                   // 로그인 플렛폼 (ex) FaceBook, KaKao 등)

    os_modulation: bool;                // OS 변조 유무. 변조일 경우 True, 아닌 경우 False
    emulator: bool;                     // 에뮬레이터 분류. 에뮬레이터일 경우 True, 아닌 경우 False
    loading_time: uint;                 // 게임 실행 시간부터 해당 ReqLoginAccount 시도까지 걸린 시간 millisecond
}

// [응답] 계정 로그인 응답
table ResLoginAccount {
    user_id: ulong;				        // 계정 유니크 아이디
    last_login_server_idx: uint;		// 마지막 접속한 서버 id
    option_bit: long;                   // 계정 옵션
    wait_queue_cnt: uint;               // 대기열 인원수
    block_expire_dt: ulong;             // 블럭 해제 시간
    block_view_str: string;             // 블럭 사유
    server_ts_ms: ulong;                // 서버 시간 unix time 밀리세컨드
}

// [요청] 로그인 대기 인원수
table ReqLoginWaitUsers {
    server_idx: ubyte;                  // 접속 서버 idx
    user_id: ulong;				        // 계정 유니크 아이디
}

// [응답] 로그인 대기 인원수
table ResLoginWaitUsers {
    login_wait_users: uint;             // 로그인 대기 인원수
    is_continue: bool;                  // 입장 진행 여부 true / false
    rndkey: uint;						// 게이트웨이에서 발급한 키
}

// 계정 탈퇴 취소
table ReqAccountLeaveCancel {
    pf_session_token: string;       // 라인 유저 세션키
}

table ResAccountLeaveCancel {
}

// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WebNet
{

using global::System;
using global::FlatBuffers;

public enum Version : uint
{
 Num = 3322562213,
};

public enum Code : ushort
{
 COMMON_GET_ALL_CHAR_INFO_BUNDLE = 6,
 COMMON_PARTY_CHECK = 10,
 COMMON_PARTY_MEMBER_INFO = 11,
 COMMON_PARTY_CREATE = 12,
 COMMON_PARTY_INVITE = 13,
 COMMON_PARTY_JOIN = 14,
 COMMON_PARTY_REFUSE = 15,
 COMMON_PARTY_OUT = 16,
 COMMON_PARTY_KICK_OUT = 17,
 COMMON_PARTY_CHANGE_MASTER = 18,
 COMMON_GET_CHARACTER_OPTION = 100,
 COMMON_SET_CHARACTER_OPTION = 103,
 COMMON_ADD_COLOSSEUM_SERVER = 104,
 COMMON_REWARD_COLOSSEUM_SERVER = 105,
 COMMON_WHITE_INFO_LIST = 500,
 COMMON_CLOSE_SOCKET_CLEAR = 501,
 COMMON_CLUSTER_UPDATE_COLOSSEUM_STATE = 502,
 COMMON_CLUSTER_REWARD_COLOSSEUM_SERVER = 503,
 COMMON_CLUSTER_ADD_COLOSSEUM_QUEUE = 504,
 COMMON_CLUSTER_LEAVE_COLOSSEUM_QUEUE = 505,
 COMMON_CLUSTER_LEAVE_COLOSSEUM = 506,
 COMMON_CLUSTER_JOIN_COLOSSEUM_SERVER = 507,
 COMMON_CLUSTER_REJOIN_COLOSSEUM_SERVER = 508,
 COMMON_CLUSTER_SERVER_MAPPER_CONFIG = 509,
 COMMON_CLUSTER_CHECK_USER_CONNECT = 510,
 COMMON_CLUSTER_COLOSSEUM_MATCHING_END = 511,
 GS_ACCOUNT_LOGIN = 1000,
 GS_CHANGE_NICK = 1001,
 GS_COMBINE_CHANGE_NICK = 1002,
 GS_ACCOUNT_LEAVE = 1003,
 GS_CHARACTER_CREATE = 2000,
 GS_CHARACTER_DELETE = 2001,
 GS_CHARACTER_DELETE_ROLLBACK = 2002,
 GS_CHARACTER_LIST = 2003,
 GS_CHARACTER_REVIVE = 2006,
 GS_USE_STAT_POINT = 2007,
 GS_RESET_STAT_POINT = 2008,
 GS_USE_SPECIAL_SKILL_POINT = 2009,
 GS_RESET_SPECIAL_SKILL_POINT = 2010,
 GS_RESTORE_EXP_LIST = 2011,
 GS_RESTORE_EXP = 2012,
 GS_CHARACTER_SLOT_EXTEND = 2013,
 GS_RING_SLOT_EXTEND = 2014,
 GS_INVEN_SLOT_EXTEND = 2015,
 GS_QUICK_SLOT_EXTEND = 2016,
 GS_SPECIAL_SKILL_EXTEND = 2017,
 GS_GET_PK_LOG_LIST = 2018,
 GS_PK_SNEER = 2019,
 GS_CHARACTER_BLOCK_LIST = 2100,
 GS_CHARACTER_BLOCK_SET = 2101,
 GS_CHARACTER_BLOCK_DEL = 2102,
 GS_SET_SKILL_USE_ORDER = 2103,
 GS_SET_RUNE_OPTION = 2104,
 GS_SET_ITEM_OPTION = 2105,
 GS_CLASS_CHANGE = 2110,
 GS_SCENARIO_DUNGEON_REWARD = 2520,
 GS_MMO_CHANNEL_LIST = 2521,
 GS_MMO_STAGE_ENTER = 2522,
 GS_MMO_CHANGE_CHANNEL_ENTER = 2523,
 GS_MMO_PORTAL_ENTER = 2524,
 GS_TEMPLE_ITEM_OPEN = 2525,
 GS_TEMPLE_GIMMICK_OPEN = 2526,
 GS_TEMPLE_GACHA_ITEM = 2527,
 GS_TEMPLE_CLEAR_REWARD = 2528,
 GS_INFINITY_DUNGEON_GET_OPEN_INFO = 2529,
 GS_INFINITY_DUNGEON_CLEAR_REWARD = 2530,
 GS_INFINITY_DUNGEON_DAILY_REWARD = 2531,
 GS_INFINITY_DUNGEON_RESET = 2532,
 GS_GET_INFINITY_DUNGEON_SELECT_BUFF_LIST = 2533,
 GS_INFINITY_DUNGEON_SELECT_BUFF = 2534,
 GS_GET_INFINITY_DUNGEON_BUFF_LIST = 2535,
 GS_FIELD_BOSS_KILLER_GUILD_ALL = 2536,
 GS_GOD_LAND_GET_INFO = 2537,
 GS_GOD_LAND_FIGHT_MATCH = 2538,
 GS_GOD_LAND_GATHERING_REWARD = 2539,
 GS_GOD_LAND_FIGHT_RECODE = 2540,
 GS_GET_SERVER_BOSS_INFO = 2541,
 GS_INTER_STAGE_CAMP_ENTER = 2542,
 GS_INTER_STAGE_FIELD_ENTER = 2543,
 GS_GOD_LAND_SELF_INFO = 2544,
 GS_GOD_LAND_DISCARD = 2545,
 GS_ITEM_EQUIP = 3001,
 GS_ITEM_UNEQUIP = 3002,
 GS_ITEM_USE = 3003,
 GS_ITEM_UPGRADE = 3004,
 GS_ITEM_ENCHANT = 3005,
 GS_ITEM_MAKE = 3006,
 GS_ITEM_BREAK = 3007,
 GS_ITEM_DELETE = 3008,
 GS_ITEM_GACHA = 3009,
 GS_EXP_HONOR_COIN_TRADE = 3010,
 GS_ITEM_LOCK_TOGGLE = 3011,
 GS_ITEM_USE_TENDENCY = 3012,
 GS_GET_MAKE_ITEM_LIMIT_LIST = 3013,
 GS_GET_CHECK_ITEM = 3014,
 GS_SKILL_ITEM_USE = 3015,
 GS_RECOVERY_ITEM_INFO = 3016,
 GS_RECOVERY_ITEM = 3017,
 GS_RUNE_VERSION = 3018,
 GS_RUNE_EQUIP = 3019,
 GS_RUNE_DELETE = 3020,
 GS_RUNE_UNEQUIP = 3021,
 GS_RUNE_SELL = 3022,
 GS_RUNE_ENCHANT = 3023,
 GS_GET_ITEM_SMELT_INFO = 3024,
 GS_ITEM_SMELT_START = 3025,
 GS_ITEM_SMELT_END = 3026,
 GS_ITEM_SHOP_GACHA = 3027,
 GS_ITEM_SMELT_CANCEL = 3028,
 GS_MAKE_ARTIFACT_ITEM = 3029,
 GS_GEM_ITEM_EQUIP = 3030,
 GS_GEM_ITEM_UNEQUIP = 3031,
 GS_ARTIFACT_EQUIP = 3032,
 GS_ARTIFACT_UNEQUIP = 3033,
 GS_MAKE_COOK_ITEM = 3034,
 GS_MAKE_COOK_ITEM_NO_RECIPE = 3035,
 GS_GET_ITEM_BUY_LIMIT_LIST = 3200,
 GS_ITEM_SELL = 3201,
 GS_SPECIAL_SHOP_BUY = 3202,
 GS_MILEAGE_SHOP_BUY = 3203,
 GS_NORMAL_SHOP_BUY = 3204,
 GS_GET_CASH_COIN_BALANCE = 3205,
 GS_STORAGE_ITEM_LIST = 3400,
 GS_STORAGE_ITEM_PUT = 3401,
 GS_STORAGE_ITEM_GET = 3402,
 GS_STORAGE_SLOT_EXTEND = 3403,
 GS_ITEM_COLLECT_MAKE = 3600,
 GS_CHANGE_COLLECT_MAKE = 3601,
 GS_PET_COLLECT_MAKE = 3602,
 GS_CHANGE_COMPOSE = 3700,
 GS_CHANGE_EQUIP = 3701,
 GS_CHANGE_UNEQUIP = 3702,
 GS_CHANGE_ENCHANT = 3703,
 GS_CHANGE_RETRY_GACHA_KEEP = 3704,
 GS_CHANGE_TAKE_GACHA_KEEP = 3705,
 GS_CHANGE_EXTRACTION = 3706,
 GS_CHANGE_QUEST_DAILY_RESET = 3750,
 GS_CHANGE_QUEST_REGIST_CHANGE = 3751,
 GS_CHANGE_QUEST_REWARD = 3752,
 GS_CHANGE_QUEST_LEVEL_UP = 3753,
 GS_PET_COMPOSE = 3800,
 GS_PET_EQUIP = 3801,
 GS_PET_UNEQUIP = 3802,
 GS_PET_ENCHANT = 3803,
 GS_PET_RETRY_GACHA_KEEP = 3804,
 GS_PET_TAKE_GACHA_KEEP = 3805,
 GS_PET_GROWTH = 3806,
 GS_PET_EXTRACTION = 3807,
 GS_TAKE_PET_ADV_INFO = 3808,
 GS_PET_ADV_START = 3809,
 GS_PET_ADV_REWARD = 3810,
 GS_PET_ADV_CANCEL = 3811,
 GS_PET_ADV_RESET = 3812,
 GS_MARK_ENCHANT = 3900,
 GS_ATTRIBUTE_ENCHANT = 3950,
 GS_EXCHANGE_SELL = 4000,
 GS_EXCHANGE_SEARCH_ITEM = 4001,
 GS_EXCHANGE_SEARCH_PRICE = 4002,
 GS_EXCHANGE_BUY = 4003,
 GS_EXCHANGE_WITHDRAW = 4004,
 GS_EXCHANGE_SELL_LIST = 4005,
 GS_EXCHANGE_SOLD_OUT_LIST = 4006,
 GS_EXCHANGE_TAKE_MONEY = 4007,
 GS_EXCHANGE_ITEM_DETAIL_INFO = 4008,
 GS_TRADE_BUY = 4101,
 GS_TRADE_WITHDRAW = 4102,
 GS_TRADE_SELL_LIST = 4103,
 GS_TRADE_BUY_LIST = 4104,
 GS_TRADE_TAKE_MONEY = 4105,
 GS_GET_MAIL_REFRESH_TIME = 5000,
 GS_GET_MAIL_LIST = 5001,
 GS_TAKE_MAIL_ITEM = 5002,
 GS_GET_MESSAGE_LIST = 5003,
 GS_READ_MESSAGE = 5004,
 GS_SEND_MESSAGE = 5005,
 GS_DEL_MESSAGE = 5006,
 GS_GET_EXCHANGE_MESSAGE_LIST = 5007,
 GS_READ_EXCHANGE_MESSAGE = 5008,
 GS_SEND_EXCHANGE_MESSAGE = 5009,
 GS_DEL_EXCHANGE_MESSAGE = 5010,
 GS_GET_CASH_MAIL_LIST = 5011,
 GS_TAKE_CASH_MAIL_ITEM = 5012,
 GS_GET_EXP_RANK_LIST = 5100,
 GS_GET_PK_RANK_LIST = 5101,
 GS_GET_COLOSSEUM_RANK = 5102,
 GS_DAILY_ATTEND_EVENT = 5200,
 GS_CHECK_DAILY_RESET_EVENT = 5201,
 GS_CHECK_LOGIN_EVENT = 5202,
 GS_REGIST_COUPON = 5203,
 GS_GET_SERVER_EVENT_LIST = 5204,
 GS_GAME_SURVEY = 5205,
 GS_GET_ACCOUNT_ATTEND_INFO_LIST = 5206,
 GS_GET_ACCOUNT_ATTEND_REWARD = 5207,
 GS_GET_FRIEND_LIST = 5300,
 GS_FIND_FRIEND = 5301,
 GS_REQUEST_FRIEND = 5302,
 GS_REQUEST_FRIEND_LIST = 5303,
 GS_REQUEST_FRIEND_ACCEPT = 5304,
 GS_REQUEST_FRIEND_CANCEL = 5305,
 GS_DEL_FRIEND = 5306,
 GS_ADD_ALERT_FRIEND = 5307,
 GS_HACK_USER = 5500,
 GS_GET_CHARACTER_OPTION_LIST = 5700,
 GS_SET_ACCOUNT_OPTION = 5703,
 GS_CREATE_GUILD = 5800,
 GS_DISMISS_GUILD = 5801,
 GS_APPOINT_GUILD_MEMBER = 5802,
 GS_GUILD_REQUEST_LIST_FOR_GUILD = 5803,
 GS_GUILD_REQUEST_LIST_FOR_CHAR = 5804,
 GS_GUILD_REQUEST_ACCEPT = 5805,
 GS_GUILD_REQUEST_REJECT = 5806,
 GS_GUILD_MEMBER_BAN = 5807,
 GS_GUILD_MEMBER_LEAVE = 5808,
 GS_UPDATE_GUILD_INFO = 5809,
 GS_UPDATE_GUILD_MARK = 5810,
 GS_GUILD_REQUEST_JOIN = 5811,
 GS_GUILD_REQUEST_JOIN_CANCEL = 5812,
 GS_RECOMMEND_GUILD_INFO = 5813,
 GS_FIND_GUILD_INFO = 5814,
 GS_GET_GUILD_INFO = 5815,
 GS_GUILD_ATTEND_REWARD = 5816,
 GS_GET_GUILD_EXP_RANK = 5817,
 GS_GET_GUILD_ALLIANCE_LIST = 5818,
 GS_GUILD_ALLIANCE_REQUEST = 5819,
 GS_GUILD_ALLIANCE_ACCEPT = 5820,
 GS_GUILD_ALLIANCE_REJECT = 5821,
 GS_GUILD_ALLIANCE_REMOVE = 5822,
 GS_GUILD_DONATION = 5823,
 GS_GET_GUILD_BUFF_LIST = 5824,
 GS_GUILD_AUTO_BUY_BUFF_TOGGLE = 5825,
 GS_GUILD_BUY_BUFF = 5826,
 GS_UPDATE_GUILD_MEMBER_COMMENT = 5827,
 GS_GUILD_ALLIANCE_CREATE_CHAT = 5828,
 GS_GUILD_ALLIANCE_REQUEST_CHAT = 5829,
 GS_GUILD_ALLIANCE_CANCEL_CHAT = 5830,
 GS_GUILD_ALLIANCE_ACCEPT_CHAT = 5831,
 GS_GUILD_ALLIANCE_REJECT_CHAT = 5832,
 GS_GUILD_ALLIANCE_INVITE_REQUEST_CHAT = 5833,
 GS_GUILD_ALLIANCE_INVITE_CANCEL_CHAT = 5834,
 GS_GUILD_ALLIANCE_INVITE_ACCEPT_CHAT = 5835,
 GS_GUILD_ALLIANCE_LEAVE_CHAT = 5836,
 GS_GUILD_ALLIANCE_BAN_CHAT = 5837,
 GS_GUILD_ALLIANCE_CHANGE_MASTER = 5838,
 GS_GUILD_DUNGEON_INFO = 5839,
 GS_GUILD_DUNGEON_OPEN = 5840,
 GS_GUILD_DUNGEON_ENTER = 5841,
 GS_GUILD_DUNGEON_CLOSE = 5842,
 GS_TUTORIAL_LOG = 5900,
 GS_QUEST_ACCEPT = 5901,
 GS_QUEST_CANCEL = 5902,
 GS_QUEST_REWARD = 5903,
 GS_QUEST_EVENT_REWARD = 5904,
 GS_ADD_COLOSSEUM_QUEUE = 6000,
 GS_LEAVE_COLOSSEUM_QUEUE = 6001,
 GS_REWARD_COLOSSEUM = 6002,
 GS_SEASON_REWARD_COLOSSEUM = 6003,
 GS_CHEAT_MIN = 19500,
 GS_CHEAT = 19501,
 GS_CHEAT_MAX = 19599,
 GS_CLUSTER_EXP_RANK = 19600,
 GS_CLUSTER_PK_RANK = 19601,
 GS_CLUSTER_GUILD_EXP_RANK = 19602,
 GS_CLUSTER_EVENT_LIST = 19603,
 GS_CLUSTER_STAGE_CONFIG = 19604,
 GS_CLUSTER_COLOSSEUM_RANK = 19605,
 GS_CLUSTER_OLD_EXP_RANK = 19606,
 GW_SERVER_LIST = 20000,
 GW_SERVER_CHAR_LIST = 20001,
 GW_GET_ACCOUNT = 20002,
 GW_CREATE_ACCOUNT = 20003,
 GW_LOGIN_ACCOUNT = 20004,
 GW_LOGIN_WAIT_USERS = 20005,
 GW_ACCOUNT_LEAVE_CANCEL = 20006,
 BI_PAYMENT_INIT = 20200,
 BI_PAYMENT_PURCHASE = 20201,
 BI_TRADE_SELL = 20401,
 CT_USER_CONNECT = 25000,
 CT_ENTER_CHAT = 25001,
 CT_OUT_CHAT = 25002,
 CT_SERVER_CHAT = 25020,
 CT_NORMAL_CHAT = 25021,
 CT_PARTY_CHAT = 25022,
 CT_GUILD_CHAT = 25023,
 CT_ALLIANCE_CHAT = 25024,
 CT_USER_CHAT = 25025,
 CT_INTER_NORMAL_CHAT = 25026,
 CT_INTER_PARTY_CHAT = 25027,
 CT_TRADE_CHAT = 25028,
 CT_CLUSTER_CHAT = 29998,
 CT_CLUSTER_CCU = 29999,
 MT_CLUSTER_REMOVE_TO_BE_DEL_PARTY = 48004,
 MT_CLUSTER_EVENT_LIST = 48005,
 MT_CLUSTER_STAGE_CONFIG = 48006,
 MT_CLUSTER_SERVER_DELETE_WAIT = 48007,
 BROADCAST_REWARD = 60000,
 BROADCAST_PARTY_INVITE = 60001,
 BROADCAST_PARTY_JOIN = 60002,
 BROADCAST_PARTY_REFUSE = 60003,
 BROADCAST_PARTY_OUT = 60004,
 BROADCAST_PARTY_KICK_OUT = 60005,
 BROADCAST_PARTY_CHANGE_MASTER = 60006,
 BROADCAST_SERVER_CHAT = 60050,
 BROADCAST_NORMAL_CHAT = 60051,
 BROADCAST_PARTY_CHAT = 60052,
 BROADCAST_GUILD_CHAT = 60053,
 BROADCAST_ALLIANCE_CHAT = 60054,
 BROADCAST_USER_CHAT = 60055,
 BROADCAST_INTER_NORMAL_CHAT = 60056,
 BROADCAST_INTER_PARTY_CHAT = 60057,
 BROADCAST_GLOBAL_CHAT = 60058,
 BROADCAST_CHAT_BLOCK = 60059,
 BROADCAST_KILL_MONSTER_REWARD = 60100,
 BROADCAST_QUEST_UPDATE = 60101,
 BROADCAST_NEW_QUEST = 60102,
 BROADCAST_SERVER_BOSS_DAMAGE_BORDER = 60103,
 BROADCAST_BOSS_RESET_SIGNAL = 60104,
 BROADCAST_QUEST_EVENT_UPDATE = 60105,
 BROADCAST_JOIN_COLOSSEUM_SERVER = 60150,
 BROADCAST_REWARD_COLOSSEUM_SERVER = 60151,
 BROADCAST_JOIN_COLOSSEUM = 60152,
 BROADCAST_LEAVE_COLOSSEUM = 60153,
 BROADCAST_LEAVE_COLOSSEUM_QUEUE = 60154,
 BROADCAST_GOD_LAND_FIGHT_RESULT = 60200,
 G2M_PUB_MESSAGE_MIN = 61000,
 G2M_ITEM_EQUIP = 61001,
 G2M_ITEM_UNEQUIP = 61002,
 G2M_ITEM_UPDATE = 61003,
 G2M_ADD_SKILL = 61004,
 G2M_PET_EQUIP = 61005,
 G2M_PET_UNEQUIP = 61006,
 G2M_CHANGE_EQUIP = 61007,
 G2M_CHANGE_UNEQUIP = 61008,
 G2M_UPDATE_MARK = 61009,
 G2M_UPDATE_ATTRIBUTE = 61010,
 G2M_UPDATE_STAT = 61011,
 G2M_UPDATE_EXP = 61012,
 G2M_ITEM_COLLECT = 61013,
 G2M_PET_COLLECT = 61014,
 G2M_CHANGE_COLLECT = 61015,
 G2M_UPDATE_BUFF_INFO = 61016,
 G2M_UPDATE_TENDENCY = 61017,
 G2M_RUNE_EQUIP = 61018,
 G2M_RUNE_UNEQUIP = 61019,
 G2M_RUNE_UPDATE = 61020,
 G2M_PET_UPDATE = 61021,
 G2M_UPDATE_GUILD_INFO = 61022,
 G2M_UPDATE_PARTY = 61023,
 G2M_UPDATE_ARTIFACT = 61024,
 G2M_EQUIP_ARTIFACT = 61025,
 G2M_UNEQUIP_ARTIFACT = 61026,
 G2M_SKILL_USE_ORDER = 61027,
 G2M_PUB_COLO_MKR = 61028,
 G2M_PUB_OBJECT_MKR = 61029,
 G2M_PUB_OBJECT_GATHERING = 61030,
 G2M_UPDATE_ACCOUNT_ETC = 61031,
 G2M_EXTEND_INVENTORY = 61032,
 G2M_GOD_LAND_GET = 61033,
 G2M_GOD_LAND_LOST = 61034,
 G2M_PUB_COLO_ROOM_CHECK = 61035,
 G2M_CHANGE_UPDATE = 61036,
 G2M_UPDATE_GUILD_BUFF = 61037,
 G2M_PUB_GUILD_DUNGEON_MKR = 61038,
 G2M_PUB_GUILD_DUNGEON_CLOSE = 61039,
 G2M_PUB_MESSAGE_MAX = 61040,
 M2G_PUB_MESSAGE_MIN = 62000,
 M2G_KILL_MONSTER = 62001,
 M2G_USE_POTION = 62002,
 M2G_STAGE_ENTER = 62003,
 M2G_USER_LEVEL_UPDOWN = 62004,
 M2G_PUB_COLO_MKR_FINISH = 62005,
 M2G_PUB_COLO_ROOM_FINISH = 62006,
 M2G_PUB_GOD_LAND_FIGHT_RESULT = 62007,
 M2G_KILL_OBEJCT = 62008,
 M2G_PUB_COLO_ROOM_CHECK_RESULT = 62009,
 M2G_PUB_GUILD_DUNGEON_MKR_FINISH = 62010,
 M2G_PUB_GUILD_DUNGEON_ROOM_FINISH = 62011,
 M2G_PUB_GUILD_DUNGEON_CLOSE_FINISH = 62012,
 M2G_PUB_MESSAGE_MAX = 62013,
};

public enum ERROR : ushort
{
 NO_ERROR = 0,
 INVALID_PARAMETER = 1,
 SYSTEM_ERROR = 2,
 DATABASE_ERROR = 3,
 SERVER_LOCK = 4,
 INVALID_GUUID = 5,
 REDIS_ERROR = 6,
 CREATE_SESSION = 7,
 SESSION = 8,
 NOT_FIND_AUTH = 9,
 NOT_AVAILABLE_CHEAT_IN_LIVE_ENV = 10,
 ACCESS_DENIED = 12,
 INVALID_SERVER_IDX = 13,
 INVALID_TABLE_DATA = 14,
 PROTOCOL_VERSION = 15,
 CACHEING_FAIL = 16,
 BEFOR_PACKET_PROCESSING = 17,
 NOT_CONNECTED_USER = 18,
 CRITICAL_ERROR = 19,
 DUPLICATE_LOGIN = 20,
 KICK_USER = 21,
 USER_NOT_FIND = 10000,
 ACCESS_DENY_MEMBER = 10001,
 LOW_NICK = 10002,
 CANNOT_FIND_DATA_IN_TABLE = 10003,
 NOT_FIND_ITEM = 10004,
 INVALID_ITEM = 10005,
 ITEM_CANNOT_SELL = 10006,
 CHARACTER_NOT_FIND = 10007,
 CANNOT_FIND_CHANGE = 10008,
 CANNOT_FIND_PET = 10009,
 NOT_ENOUGH_GOLD = 10010,
 NOT_ENOUGH_GOODS = 10011,
 NOT_ENOUGH_DIAMOND = 10012,
 USER_DATA_CHECKING = 10013,
 NO_MORE_ENTER_SERVER_CCU_LIMIT = 10014,
 NOT_ENOUGH_USE_ITEM = 10015,
 REDIS_WARNING = 10016,
 DOES_NOT_MATCH_CACHED_DATA = 10900,
 HEADER_ERROR_BUT_IGNORE_PACKET = 10901,
 CLIENT_DATA_SYNC_FAIL = 10902,
 GUILD_DATA_SYNC_FAIL = 10903,
 NOT_HAVE_ACCOUNT = 11000,
 ACCOUNT_BLOCK = 11001,
 MAX_CHARACTER = 12000,
 CHAT_BLOCK_LIST_LIMIT = 12002,
 ALREADY_CHAT_BLOCK = 12003,
 ITEM_NOT_AVAILABLE = 12004,
 NOT_FOUND_CHARACTER = 12005,
 ITEM_OUT_OF_DATE = 12006,
 ITEM_EQUIP_LEVEL_LIMIT = 12007,
 ITEM_EQUIP_DUPLICATE_COUNT_LIMIT = 12008,
 CHARACTER_TYPE = 12009,
 ENOUGH_LEVEL = 12010,
 NOT_FOUND_MONSTER = 12011,
 DUPLICATE_NICKNAME = 12012,
 CHARACTER_DELETE_LEVEL = 12013,
 CANNOT_UPGRADE_ITEM = 12014,
 CANNOT_ENCHANT_ITEM = 12015,
 NOT_ENOUGH_EXP = 12016,
 DUPLICATE_LEVEL_UP_REQ = 12017,
 NOT_FOUND_SKILL_SLOT = 12018,
 MAKE_MATERIAL_COUNT = 12019,
 MESSAGE_TITLE_LENGTH = 12020,
 MESSAGE_MESSAGE_LENGTH = 12021,
 MESSAGE_SEND_LIMIT = 12022,
 CANNOT_FIND_MESSAGE = 12023,
 CANNOT_USE_MESSAGE_LEVEL = 12024,
 NOT_HAVE_DAILY_RESET_EVENT = 12025,
 STORAGE_NOT_PUT_ITEM = 12026,
 STORAGE_IS_FULL = 12027,
 CANNOT_ITEM_DELETE = 12028,
 ITEM_USE_LEVEL_LIMIT = 12029,
 INVALID_STORAGE_GET_COST_TYPE = 12030,
 NOT_FOUND_STORAGE_COST = 12031,
 CANNOT_STAGE_ENTER_LEVEL = 12032,
 ITEM_BUY_LEVEL_LIMIT = 12033,
 ITEM_COLLECT_MATERIAL = 12034,
 CHANGE_MATERIAL_TIER = 12035,
 PET_MATERIAL_TIER = 12036,
 MARK_NO_MORE_ENCHANT = 12037,
 MARK_ENCHANT_RESET_STEP = 12038,
 STAT_RESET_POINT_ZERO = 12039,
 SKILL_RESET_POINT_ZERO = 12040,
 SPECIAL_SKILL_DUPLICATE = 12041,
 SKILL_CHARACTER_TYPE = 12042,
 NOT_ENOUGH_SKILL_POINT = 12043,
 NOT_ENOUGH_SKILL_LEVEL = 12044,
 NOT_ENOUGH_SPECIAL_SKILL_SPACE = 12045,
 RESTORE_EXP_EXPIRE_DT = 12046,
 CAN_NOT_ENTER_STAGE = 12047,
 NO_MORE_SLOT_EXTEND = 12048,
 NOT_EQUIP_RING_SLOT = 12049,
 CAN_NOT_ENTER_DEATH_DEBUFF = 12050,
 ALREADY_ATTEND_REWARD = 12051,
 NOT_FIND_REQUEST_FRIEND = 12052,
 ALREADY_REQUEST_FRIEND = 12053,
 NO_MORE_FRIEND = 12054,
 NO_MORE_FRIEND_TARGET = 12055,
 NO_MORE_REQUEST_FRIEND = 12056,
 NO_MORE_RECEIVE_FRIEND = 12057,
 ALREADY_JOIN_GUILD = 12058,
 LOW_GUILD_NAME = 12059,
 DUPLICATE_GUILD_NAME = 12060,
 GUILD_MARK_GUILD_LEVEL_LIMIT = 12061,
 CANNOT_FIND_GUILD = 12062,
 DISMISS_GUILD_REMAIN_MEMBER = 12063,
 GUILD_MASTER_POWER = 12064,
 NO_MORE_GUILD_SUB_MASTER = 12065,
 NO_MORE_ADD_GUILD_MEMBER = 12066,
 GUILD_INTRO_LENGTH_MAX = 12067,
 GUILD_NOTICE_LENGTH_MAX = 12068,
 NOT_JOIN_REQUEST_GUILD = 12069,
 FRIEND_DELETE_EXPIRE_TIME = 12070,
 GUILD_REJOIN_EXPIRE_TIME = 12071,
 ITEM_BUY_NOT_SALE = 12072,
 ITEM_CANNOT_EXCHANGE_SELL = 12073,
 NO_MORE_EXCHANGE_SELL_LIMIT = 12074,
 NOT_FIND_EXCHANGE_SELL_ITEM = 12075,
 CANNOT_FIND_EXCHANGE_TRANSACTION = 12076,
 EXCHANGE_TAKE_MONEY_FAIL = 12077,
 CHANGE_DUPLICATE_COLLECT = 12078,
 PET_DUPLICATE_COLLECT = 12079,
 CHANGE_COLLECT_MATERIAL = 12080,
 PET_COLLECT_MATERIAL = 12081,
 NOT_ENOUGH_ITEM_ENTER_STAGE = 12082,
 NOT_ENOUGH_BUFF_ENTER_STAGE = 12083,
 INVALID_STAGE_BUFF = 12084,
 REMAIN_STAGE_BUFF = 12085,
 ENTER_STAGE_NOT_USE_PRIVATE_BUFF = 12086,
 STAGE_TIME_OVER = 12087,
 NOT_ENOUGH_STAGE_POINT = 12088,
 MARK_ENCHANT_COUNT_ZERO = 12089,
 MARK_RESET_TID_NOT_SAME = 12090,
 QUEST_IS_NOT_COMPLETED = 12091,
 NOT_ENOUGH_POTION = 12092,
 NOT_ENOUGH_UPGRADE_MATERIAL_COUNT = 12093,
 NOT_ENOUGH_UPGRADE_ITEM = 12094,
 NOT_ENOUGH_ENCHANT_MATERIAL_COUNT = 12095,
 NOT_ENOUGH_ENCHANT_ITEM = 12096,
 NOT_ENOUGH_MAKE_MATERIAL_COUNT = 12097,
 NOT_FIND_BREAK_ITEM = 12098,
 NOT_ENOUGH_GACHA_ITEM = 12099,
 NOT_FOR_SALE_SHOP_ITEM = 12100,
 NO_MORE_BUY_ITEM = 12101,
 NOT_TUTORIAL_TYPE = 12102,
 JOIN_REQUEST_GUILD = 12103,
 GUILD_USE_LEVEL_LIMIT = 12104,
 GUILD_MASTER_NOT_LEAVE = 12105,
 NO_MORE_JOIN_REQUEST_GUILD = 12106,
 CACHE_NOT_FOUND_QUEST = 12107,
 NOT_FOUND_QUEST = 12108,
 ALREADY_REGIST_GUILD_ALLIANCE = 12109,
 NO_MORE_GUILD_ALLIANCE_COUNT_LIMIT = 12110,
 NO_MORE_GUILD_ALLIANCE_TARGET_COUNT_LIMIT = 12111,
 GUILD_ALLIANCE_REJECT_STATE = 12112,
 GUILD_ALLIANCE_REMOVE_STATE = 12113,
 ALREADY_ISSUED_DAILY_QUEST_TODAY = 12114,
 NOT_ENOUGH_GUILD_MONEY = 12115,
 NOT_ENOUGH_GUILD_LEVEL = 12116,
 ALREADY_FRIEND = 12117,
 NOT_FIND_FRIEND = 12118,
 ALREADY_CHANGE_GUILD_GRADE = 12119,
 NO_MORE_GUILD_DONATE_COUNT = 12120,
 CANNOT_FIND_PK_LOG = 12121,
 ALREADY_PK_SNEER = 12122,
 STAGE_ENTER_TTL_OVER = 12123,
 NO_MORE_RECEIVE_MESSAGE = 12124,
 GUILD_MARK_UPDATE_TIME = 12125,
 GUILD_BUFF_REMAIN_EXPIRE_TIME = 12126,
 ALREADY_UPDATE_GUILD_BUFF_TOGGLE = 12127,
 QUEST_DAILY_FAST_CLEAR_OVER = 12128,
 EXCHANGE_ITEM_REGIST_FAIL = 12129,
 INVALID_COUPON_CODE = 12130,
 EXPIRED_COUPON = 12131,
 ALREADY_USE_COUPON = 12132,
 MESSAGE_IS_TO_LONG = 12133,
 ALREADY_GUILD_ALLIANCE_CHAT_JOIN = 12134,
 NOT_GUILD_ALLIANCE_CHAT_JOIN = 12135,
 GUILD_ALLIANCE_NOT_CHAT_MASTER = 12136,
 GUILD_ALLIANCE_CHAT_MASTER_DO_NOT_LEAVE = 12137,
 BILLING_INITIALIZE_FAIL = 12138,
 BILLING_INITIALIZE_INNER_FAIL = 12139,
 CANNOT_FOUND_CHAT_TYPE = 12140,
 NOT_ENOUGH_CHANGE_MATERIAL = 12141,
 NOT_ENOUGH_CHANGE_USE_ITEM = 12142,
 NOT_ENOUGH_PET_USE_ITEM = 12143,
 NOT_ENOUGH_PET_MATERIAL = 12144,
 NO_MORE_ADD_ABILITY = 12145,
 ALREADY_CHARACTER_DELETE_STATE = 12146,
 CHARACTER_DELETE_FRIEND_DELETE = 12147,
 CHARACTER_DELETE_GUILD_DELETE = 12148,
 CANNOT_EXP_TRADE_LEVEL = 12149,
 NOT_ENOUGH_EXP_TRADE = 12150,
 XXXXXXXXXXXXXXXXXXXXXXX = 12151,
 CHARACTER_NOT_DELETE_WAIT_STATE = 12152,
 NO_DEATH_PENALTY_STAGE = 12153,
 ITEM_MAKE_LEVEL_LIMIT = 12154,
 INTER_BOSS_IS_NOT_SPAWN = 12155,
 INTER_NOT_MATCHED_SEVER = 12156,
 INTER_CAN_NOT_ENTER_STAGE_LEVEL = 12157,
 INTER_STAGE_IS_FULL = 12158,
 INTER_NOT_FOUND_ENTER_INFO = 12159,
 INTER_ALREADY_KILL = 12160,
 INTER_KILL_TIME_OVER = 12161,
 INTER_CAN_NOT_ENTER_FIELD = 12162,
 INTER_CAN_NOT_ENTER_CAMP = 12163,
 INTER_BOSS_ROOM_EXPIRED = 12164,
 INTER_ENTRY_TIME_EXPIRY = 12165,
 NOT_ENOUGH_CHARACTER_STAT_POINT = 12166,
 UPGRADE_MATERIAL_LOCK = 12167,
 ENCHANT_MATERIAL_LOCK = 12168,
 EXCHANGE_SELL_ITEM_LOCK = 12169,
 MAKE_MATERIAL_LOCK = 12170,
 GUILD_DONATION_MATERIAL_LOCK = 12171,
 SHOP_USE_ITEM_LOCK = 12172,
 CHANGE_MATERIAL_LOCK = 12173,
 MARK_ENCHANT_ITEM_LOCK = 12174,
 MARK_RESET_ITEM_LOCK = 12175,
 STAT_RESET_ITEM_LOCK = 12176,
 STAT_USE_ITEM_LOCK = 12177,
 SPECIAL_SKILL_RESET_ITEM_LOCK = 12178,
 EXP_RESTORE_ITEM_LOCK = 12179,
 INVENTORY_EXTEND_ITEM_LOCK = 12180,
 STORAGE_EXTEND_ITEM_LOCK = 12181,
 QUICK_EXTEND_ITEM_LOCK = 12182,
 GACHA_USE_ITEM_LOCK = 12183,
 DELETE_ITEM_LOCK = 12184,
 PET_EQUIP_ITEM_LOCK = 12185,
 CHANGE_EQUIP_ITEM_LOCK = 12186,
 SPECIAL_SKILL_EXTEND_ITEM_LOCK = 12187,
 RING_SLOT_EXTEND_ITEM_LOCK = 12188,
 CHARACTER_SLOT_EXTEND_ITEM_LOCK = 12189,
 SPECIAL_SKILL_USE_ITEM_LOCK = 12190,
 PET_COMPOSE_LOCK = 12191,
 CHANGE_COMPOSE_LOCK = 12192,
 BREAK_ITEM_LOCK = 12193,
 STORAGE_EQUIP_ITEM_NOT_PUT = 12194,
 NOT_FIND_BILLING_PAYMENT_ID = 12195,
 BILLING_PAYMENT_STATUS = 12196,
 BILLING_PAYMENT_FAIL = 12197,
 GUILD_INTO_NOT_FOUND = 12198,
 EVENT_STAGE_NOT_OPEN_TIME = 12203,
 PRIVATE_CHANNEL_TIME_OVER = 12209,
 BILLING_SERVICE_NOT_READY = 12210,
 BILLING_INVALID_RECEIPT = 12211,
 RESTORE_NOT_SUPPORT_DIE_BUFF_STEP = 12212,
 NO_MORE_USE_TENDENCY_ITEM = 12213,
 TENDENCY_ITEM_LOCK = 12214,
 SPECIAL_SHOP_ITEM_BUY_NOT_DO_FIRST = 12215,
 DO_NOT_ENTER_NOT_HAVE_CHARACTER = 12216,
 DO_NOT_CHANGE_ENCHANT = 12217,
 DO_NOT_PET_ENCHANT = 12218,
 CHANGE_ENCHANT_LOCK = 12219,
 PET_ENCHANT_LOCK = 12220,
 NO_MORE_CHANGE_ENCHANT = 12221,
 NO_MORE_PET_ENCHANT = 12222,
 NOT_ENOUGH_CHANGE_ENCHANT = 12223,
 NOT_ENOUGH_PET_ENCHANT = 12224,
 NO_MORE_MAKE_ITEM_COUNT_LIMIT = 12225,
 NOT_FOR_MAKE_ITEM_SEASON = 12226,
 NO_MORE_MARK_ENCHANT = 12227,
 DAILY_QUEST_FAST_CLEAR_FAIL_BY_COMPLETE_TYPE = 12228,
 STORAGE_ITEM_PUT_EQUIPMENT_SLOT_IDX = 12229,
 GUILD_ALLIANCE_CHAT_ONLY_MASTER_BAN = 12230,
 GUILD_ALLIANCE_CHAT_NOT_JOIN = 12231,
 CHAT_BLOCK = 12232,
 NOT_ENOUGH_DELETE_ITEM = 12233,
 PET_RETRY_GACHA_CNT = 12234,
 PET_RETRY_GACHA_TIME_OVER = 12235,
 CHANGE_RETRY_GACHA_CNT = 12236,
 CHANGE_RETRY_GACHA_TIME_OVER = 12237,
 EXCHANGE_ITEM_NOT_BUY_SELF_ITEM = 12239,
 ARTIFECT_USE_LEVEL_LIMIT = 12240,
 GUILD_ALLIANCE_REQUEST_ENEMY_NOT_ALLIANCE = 12241,
 GUILD_ALLIANCE_REQUEST_ALLIANCE_NOT_ENEMY = 12242,
 GUILD_ALLIANCE_REQUEST_ALLIANCE_REQUESTING = 12243,
 ALREADY_REGIST_GUILD_ENEMY = 12244,
 SKILL_USE_LEVEL_LIMIT = 12245,
 ALREADY_ANSWER_SURVEY = 12246,
 SURVEY_LEVEL_LIMIT = 12247,
 ALREADY_OTHER_GUILD_JOIN = 12248,
 GUILD_REQUEST_JOIN_INFO_NOT_FIND = 12249,
 SAME_ACCOUNT_NOT_FRIEND = 12250,
 DUPLICATE_COLOSSEUM_ADD_QUEUE = 12252,
 ALREADY_GUILD_ALLIANCE_CHAT_REQUEST = 12253,
 UNUSED_STAGE = 12254,
 NOT_FIND_COLOSSEUM_SERVER = 12255,
 NOT_LEAVE_COLOSSEUM_PLAY = 12256,
 NOT_FIND_COLOSSEUM_MATCH_REWARD = 12257,
 NOT_COLOSSEUM_STAGE = 12258,
 COLOSSEUM_ENTER_LEVEL = 12259,
 NOT_OPEN_TIME_COLOSSEUM = 12260,
 FAIL_NICK_NAME_CHANGE_FRIEND = 12261,
 FAIL_NICK_NAME_CHANGE_GUILD = 12262,
 FAIL_NICK_NAME_CHANGE_CHAR_DELETE_STATE = 12263,
 FAIL_NICK_NAME_CHANGE_PARTY = 12264,
 COLOSSEUM_PLAY_CHAR_NOT_SAME = 12265,
 COLOSSEUM_DAY_PLAY_CNT_MAX = 12266,
 ALREADY_CANCEL_FRIEND_REQUEST = 12267,
 ADD_IMPOSSIBLE_SKILL = 12268,
 NOT_HAVE_BASE_SKILL = 12269,
 NOT_RECOVERY_MATERIAL_ITEM = 12270,
 NOT_FIND_RECOVERY_ITEM = 12271,
 LOW_GUILD_COMMENT = 12272,
 NOT_CLASS_CHANGE_ITEM = 12273,
 NOT_ENOUGH_CLASS_CHANGE_ITEM = 12274,
 DO_NOT_SAME_CHARACTER_CLASS_CHANGE = 12275,
 CLASS_CHANGE_ITEM_LOCK = 12276,
 NOT_FOUND_PET = 12277,
 PET_ADV_NOT_FOUND_DUNGEON = 12278,
 PET_ADV_NOT_OPENED_DUNGEON = 12279,
 PET_ADV_NOT_MATCHED_PET = 12280,
 PET_ADV_CONDITION_FAILURE = 12281,
 PET_ADV_ALREADY_EXPLORING = 12282,
 PET_ADV_NOT_MATCHED_PET_TIER = 12283,
 PET_ADV_NOT_MATCHED_PET_Lv = 12284,
 PET_ADV_NOT_MATCHED_PET_JOIN_TYPE = 12285,
 PET_ADV_NOT_FOUND_EXPLORING_DATA = 12286,
 PET_ADV_NOT_COMPLETE = 12287,
 PET_ADV_NOT_SUMMON = 12288,
 ITEM_CANNOT_TRADE_SELL = 12289,
 TRADE_SELL_ITEM_LOCK = 12290,
 NOT_FIND_TRADE_SELL_ITEM = 12291,
 TRADE_ITEM_NOT_BUY_SELF_ITEM = 12292,
 TRADE_ITEM_NOT_SAME_PASSWORD = 12293,
 TRADE_REGIST_NOT_MINE = 12294,
 NO_MORE_TRADE_SELL_LIMIT = 12295,
 CANNOT_FIND_TRADE_TRANSACTION = 12296,
 NOT_FOUND_CHANNEL_INFO = 12297,
 NOT_HAVE_MINI_GAME_CHARACTER = 12298,
 LINK_SERVER_IS_CLOSE = 12299,
 RUNE_NOT_EQUIP_SLOT = 12300,
 RUNE_NOT_FOUND_ITEM = 12301,
 RUNE_DUPLICATE_EQUIP_SLOT = 12302,
 RUNE_NOT_EQUIPPED_SLOT = 12303,
 PET_NOT_SETTING_PET_READER = 12304,
 COLOSSEUM_NOT_FIND_OLD_SEASON_RANK_INFO = 12305,
 ALREADY_TAKE_COLOSSEUM_SEASON_REWARD = 12306,
 BOSS_ALREADY_KILL = 12307,
 RUNE_IS_EQUIPPED = 12308,
 NOT_FOUND_REDIS_TYPE = 12309,
 NOT_FOUND_AUTO_BUY_POTION_BUFF = 12310,
 LUCKY_ALREADY_KILL = 12311,
 INSTANCE_DUNGEON_TODAY_PLAY_CNT_MAX = 12312,
 INSTANCE_DUNGEON_CLEAR_STATE_LIMIT = 12313,
 NOT_EXTRACTION_PET = 12314,
 NOT_ENOUGH_EXTRACTION_PET = 12315,
 EXTRACTION_PET_LOCK = 12316,
 EXTRACTION_PET_MATERIAL_COUNT = 12317,
 NOT_EXTRACTION_CHANGE = 12318,
 NOT_ENOUGH_EXTRACTION_CHANGE = 12319,
 EXTRACTION_CHANGE_LOCK = 12320,
 EXTRACTION_CHANGE_MATERIAL_COUNT = 12321,
 NOT_GETTING_ITEM = 12322,
 NOT_FIND_SMELT_INFO = 12323,
 NOT_FIND_SMELT_ITEM_INFO = 12324,
 SMELT_ITEM_LOCK = 12325,
 NOT_ENOUGH_SMELT_MATERIAL_COUNT = 12326,
 NOT_FIND_SERVER_EVENT_INFO = 12327,
 SERVER_EVENT_EXPIRE_TIME = 12328,
 ALREADY_TAKE_SERVER_EVENT_REWARD = 12329,
 NOT_HAVE_NEED_GRADE_SKILL = 12330,
 SCENARIO_DUNGEON_TODAY_PLAY_CNT_MAX = 12331,
 SCENARIO_DUNGEON_CLEAR_STATE_LIMIT = 12332,
 EVENT_PERIOD_EXPIRED = 12333,
 TRADE_ITEM_REGIST_FAIL = 12334,
 COLOSSEUM_SERVER_EMPTY = 12335,
 COLOSSEUM_WAIT_TIME_OUT = 12336,
 SCENARIO_STAGE_NOT_OPEN_TIME = 12337,
 TRADE_TARGET_CHARACTER_LEVEL_LIMIT = 12338,
 TRADE_LEVEL_LIMIT = 12339,
 INFINITY_DUNGEON_NOT_HAVE_SCHEDULE = 12340,
 INFINITY_DUNGEON_NOT_RESET = 12341,
 INFINITY_DUNGEON_NO_MORE_STAGE = 12342,
 INFINITY_DUNGEON_CLEAR_STATE_LIMIT = 12343,
 INFINITY_DUNGEON_ALREADY_TAKE_DAILY_REWARD = 12344,
 CHANGE_QUEST_ALREADY_DAILY_RESET = 12345,
 CHANGE_QUEST_REGIST_CHANGE_NOT_MATCH = 12346,
 ALREADY_REGIST_CHANGE_QUEST = 12347,
 ALREADY_REGIST_CHANGE = 12348,
 CHANGE_QUEST_NOT_REGIST_CHANGE = 12349,
 CHANGE_QUEST_NOT_CANCEL_STATUS = 12350,
 CHANGE_QUEST_ALREADY_COMPLETE = 12351,
 CHANGE_QUEST_NOT_REGISTED_CHANGE = 12352,
 CHANGE_QUEST_NOT_FIND_COMPLETE = 12353,
 CHANGE_QUEST_NOT_YET_COMPLETE = 12354,
 NOT_ARTIFACT_MATERIAL_CHANGE = 12355,
 NOT_ARTIFACT_MATERIAL_ITEM = 12356,
 NOT_ENOUGH_ARTIFACT_MAKE_MATERIAL_COUNT = 12357,
 ARTIFACT_MAKE_MATERIAL_LOCK = 12358,
 NOT_ENOUGH_INFINITY_DUNGEON_RESET_COST = 12359,
 DO_NOT_SELECT_DUNGEON_BUFF_STAGE = 12360,
 DO_NOT_SELECT_DUNGEON_BUFF_TABLE_TID = 12361,
 ALREADY_SELECT_DUNGEON_BUFF = 12362,
 ALREADY_RESET_DUNGEON = 12363,
 NOT_FIND_EQUIP_GEM_ITEM = 12364,
 NOT_FIND_UNEQUIP_GEM_ITEM = 12365,
 NOT_ENOUGH_UNEQUIP_COST = 12366,
 NOT_MATCH_EQUIP_GEM_ITEM_GRADE = 12367,
 NOT_MATCH_EQUIP_GEM_ITEM_SLOT = 12368,
 ALREADY_EQUIP_GEM_TYPE = 12369,
 ALREADY_EQUIP_GEM_SLOT = 12370,
 GEM_EQUIP_ITEM_NOT_TRADE = 12371,
 GEM_EQUIP_ITEM_NOT_EXCHANGE = 12372,
 GEM_EQUIP_ITEM_NOT_STORAGE = 12373,
 GEM_EQUIP_ITEM_NOT_SELL = 12374,
 NOT_USE_TELEPORT_STAGE = 12375,
 ATTRIBUTE_NO_MORE_ENCHANT = 12409,
 ATTRIBUTE_ENCHANT_ITEM_LOCK = 12410,
 ATTRIBUTE_ENCHANT_RATE_UP_MAX = 12411,
 ATTRIBUTE_ENCHANT_ENOUGH_MATERIAL = 12412,
 ALREADY_OPEN_TEMPLE_STAGE = 12413,
 ALREADY_TAKE_TEMPLE_BOX_REWARD = 12414,
 NOT_OPEN_TEMPLE_STAGE = 12415,
 ALREADY_CLEAR_TEMPLE_STAGE = 12416,
 ENOUGH_PET_ADV_COMBAT_SCORE = 12417,
 ENOUGH_PET_ADV_RESET_USE_COST = 12418,
 NOT_EQUIP_PET_ADV = 12419,
 ALREADY_HAVE_ARTIFACT_GROUP = 12420,
 NOT_FIND_EQUIP_ARTIFACT = 12421,
 ALREADY_EQUIP_ARTIFACT = 12422,
 ALREADY_UNEQUIP_ARTIFACT = 12423,
 NO_MORE_UPGRADE_ARTIFACT = 12424,
 NO_OPEN_COOKING_RECIPE = 12425,
 COOKING_MAKE_LEVEL_LIMIT = 12426,
 COOKING_MAKE_MATERIAL_LOCK = 12427,
 NOT_ENOUGH_COOKING_MAKE_MATERIAL_COUNT = 12428,
 ALREADY_HAVE_QUEST = 12429,
 NOT_ENOUGH_ACCEPT_QUEST_CONDITION = 12430,
 ACCEPT_QUEST_LEVEL_LIMIT = 12431,
 NOT_FIND_CANCEL_QUEST = 12432,
 DO_NOT_CANCEL_REWARD_QUEST = 12433,
 NOT_ENOUGH_QUEST_COMPLETE_ITEM = 12434,
 NOT_FIND_ACCEPT_QUEST_OPEN_ITEM = 12435,
 EXCHANGE_LEVEL_LIMIT = 12436,
 ENOUGH_ENCHANT_ATTRIBUTE_CHAIN_LEVEL = 12437,
 ACCOUNT_LEAVE_WAIT = 12438,
 ACCOUNT_LEAVE_CANCEL_EXPIRE = 12439,
 ACCOUNT_LEAVE_FAIL_GUILD = 12440,
 ACCOUNT_LEAVE_FAIL_FRIEND = 12441,
 NOT_FOUND_MARKET_PRODUCT_ID = 12442,
 NOT_HAVE_ABILITY_ITEM_BREAK_OPTION = 12443,
 NO_MORE_CHANGE_QUEST_LEVEL_UP = 12444,
 NOT_ENOUGH_CHANGE_QUEST_EXP = 12445,
 PORTAL_MOVE_WAIT_TIME = 12446,
 QUEST_EVENT_EXPIRED = 12447,
 GUILD_DUNGEON_ALREADY_OPENED_THIS_WEAK = 12449,
 GUILD_DUNGEON_OPEN_GRADE_LOW = 12450,
 GUILD_DUNGEON_OPEN_LEVEL_LOW = 12451,
 GUILD_DUNGEON_OPEN_REQUEST_MANY = 12452,
 GUILD_DUNGEON_NOT_OPEN = 12453,
 GUILD_DUNGEON_BOSS_KILL_ABLE_TIME_OVER = 12454,
 GUILD_DUNGEON_BOSS_ALREADY_KILL = 12455,
 GUILD_DUNGEON_ALREADY_EXIT = 12456,
 GUILD_DUNGEON_ENTER_MEMBER_NOT_FOUND = 12457,
 GUILD_DUNGEON_ONLY_OPEN_ONE_SAME_TIME = 12458,
 GUILD_DUNGEON_OPEN_MAX = 12459,
 GUILD_DUNGEON_ALREADY_ENTERED_THIS_WEAK = 12460,
 GUILD_DUNGEON_NOT_READY = 12461,
 GUILD_DUNGEON_ENTER_FAIL = 12462,
 LINE_API_ERROR = 13000,
 LINE_NOT_FOUND_USER = 13001,
 LINE_BAD_WORD = 13002,
 TEMP_ERROR_CODE_1 = 14000,
 TEMP_ERROR_CODE_2 = 14001,
 TEMP_ERROR_CODE_3 = 14002,
 TEMP_ERROR_CODE_4 = 14003,
 TEMP_ERROR_CODE_5 = 14004,
 TEMP_ERROR_CODE_6 = 14005,
 TEMP_ERROR_CODE_7 = 14006,
 TEMP_ERROR_CODE_8 = 14007,
 TEMP_ERROR_CODE_9 = 14008,
 TEMP_ERROR_CODE_10 = 14010,
 USE_POTION_USE_TIME = 20000,
 UNUSABLE_STATE = 20001,
 UNUSABLE_MEZSTATE = 20002,
 ISNOT_COOLTIME = 20003,
 NOT_ENOUGH_MP = 20004,
 OUT_OF_RANGE = 20005,
 INVALID_WEAPON_TYPE = 20006,
 INVALID_CHARACTER_TYPE = 20007,
 UNLEARNED_SKILL = 20008,
 NOT_ENOUGHT_ITEM = 20009,
 INVALID_TARGET = 20010,
 NOT_USE_IN_TOWN = 20011,
 IS_NOT_SEASON_PASS = 20012,
 YOU_HAVE_SEASON_PASS = 20013,
 DO_NOT_FIND_EVENT_TYPE = 20014,
 DO_NOT_FIND_EVENT_TABLE = 20015,
 SKILL_PRECONDITION_FAIL = 20016,
 NOT_FOUND_PARTY = 30000,
 NOT_SEND_PARTY_INVITE = 30001,
 PARTY_IS_FULL = 30002,
 NOT_IS_MASTER = 30003,
 NOT_FOUND_KICK_OUT_MEMBER = 30004,
 NOT_FOUND_CHANGE_MASTER_MEMBER = 30005,
 PARTY_ALREADY_JOINED = 30006,
 NOT_MATCHED_PARTY_UID = 30007,
 CHANNEL_IS_FULL = 30008,
 NOT_FOUND_STAGE = 30009,
 STAGE_IS_FULL = 30010,
 NOT_CHANGE_CHANNEL_STAGE = 30011,
 ALREADY_ENTERED_CHANNEL = 30012,
 FIELD_BOSS_KILL_ERROR = 30013,
 GOD_LAND_SLOT_IS_FULL = 30014,
 GOD_LAND_USER_NOT_MATCH = 30015,
 NOT_ENOUGH_GOD_LAND_PRODUCT_TIME = 30016,
 NOT_ENOUGH_GOD_LAND_RECODE = 30017,
 INVALID_ROOM_NO = 30018,
 INVALID_ROOM_USER = 30019,
 NOT_MY_GUILD_DUNGEON = 30020,
 CANT_BUY_ITEM_EXPIRE_EVENT = 30021,
};

public enum E_ITEM_ENCHANT : ushort
{
 LIMIT = 20,
};

public enum E_ITEM_STORAGE : ushort
{
 LIMIT = 25,
};

public enum E_ITEM_BREAK : ushort
{
 LIMIT = 100,
};

public enum E_ITEM_BUY : ushort
{
 LIMIT = 20,
};

public enum E_ITEM_SELL : ushort
{
 LIMIT = 100,
};

public enum E_ITEM_MAKE : ushort
{
 EQUIP_LIMIT = 100,
 LIMIT = 1000,
};

public enum E_ITEM_GACHA : ushort
{
 LIMIT = 10,
};

public enum E_ITEM_DELETE : ushort
{
 LIMIT = 100,
};

public enum E_TAKE_MAIL : ushort
{
 LIMIT = 100,
};

public enum E_EXCHANGE : ushort
{
 LIMIT = 20,
};

public enum E_CHANGE_COMPOSE : ushort
{
 LIMIT = 100,
};

public enum E_PET_COMPOSE : ushort
{
 LIMIT = 100,
};

public enum E_RUNE_EQUIP : ushort
{
 LIMIT = 6,
};

public enum E_EXP_HONOR_COIN_TRADE : uint
{
 LIMIT = 10000000,
};

public enum E_AccountStateType : byte
{
 Active = 0,
 Restriction = 100,
 CheckUserData = 200,
 LeaveWait = 201,
 Leave = 202,
};

public enum E_CharStateType : byte
{
 Active = 0,
 DeleteWait = 1,
 Delete = 2,
};

public enum E_CharacterOptionKey : byte
{
 QuickSlot_Set1 = 0,
 QuickSlot_Set2 = 1,
 Storage_Auto_Put = 2,
 EQUIP_SET1 = 3,
 EQUIP_SET2 = 4,
 EQUIP_SET3 = 5,
 EQUIP_SELECT_SET = 6,
 BOOK_MARK_PORTAL = 7,
 CHAT_CHANNEL = 8,
 GUILD_GREETING = 9,
 INVEN_SORT_LIST = 10,
 Colosseum_QuickSlot_Set1 = 11,
 Colosseum_QuickSlot_Set2 = 12,
 Colosseum_HP_Auto_Per = 13,
 RUNE_DROP_SELECT = 14,
 Max = 15,
};

public enum E_EquipmentState : byte
{
 None = 0,
 Sell = 1,
 Upgrade = 2,
 Enchant = 3,
 Make = 4,
 Break = 5,
 Storage = 6,
 Delete = 7,
 Collect = 8,
 Char_Extend = 9,
 Ring_Extend = 10,
 Exchange = 11,
 Admin = 12,
 Trade = 13,
 Artifact = 14,
};

public enum E_FriendState : byte
{
 Friend = 0,
 AlertFriend = 1,
};

public enum E_FriendRequestState : byte
{
 Request = 0,
 Receive = 1,
};

public enum E_GuildJoinState : byte
{
 None = 0,
 Join = 1,
 Leave = 2,
 Ban = 3,
};

public enum E_GuildMemberGrade : byte
{
 None = 0,
 Normal = 1,
 SubMaster = 2,
 Master = 3,
};

public enum E_GuildState : byte
{
 Active = 0,
 Delete = 1,
};

public enum E_GuildJoinType : byte
{
 Join = 0,
 Reject = 1,
 Ban = 2,
 Leave = 3,
 RequestJoin = 4,
 RequestJoinCancel = 5,
};

public enum E_GuildAllianceState : byte
{
 None = 0,
 RequestAlliance = 1,
 ReceiveAlliance = 2,
 Alliance = 3,
 Enemy = 4,
 Max = 5,
};

public enum E_GuildAllianceChatState : byte
{
 None = 0,
 Request = 1,
 Receive = 2,
 Enter = 3,
 Max = 4,
};

public enum E_GuildAllianceChatGrade : byte
{
 None = 0,
 Normal = 1,
 Master = 2,
 Max = 3,
};

public enum E_GuildDonationType : byte
{
 SMALL = 0,
 MEDIUM = 1,
 LARGE = 2,
};

public enum E_ExchangeState : byte
{
 Sell = 0,
 SoldOut = 1,
 Withdraw = 2,
 Delete = 3,
};

public enum E_ExchangeTransactionState : byte
{
 SoldOut = 0,
 TakeMoney = 1,
};

public enum E_ExchangeSortType : byte
{
 TotalPriceAsc = 0,
 TotalPriceDesc = 1,
 PriceAsc = 2,
 PriceDesc = 4,
};

public enum E_QuestState : byte
{
 None = 0,
 Reward = 1,
 Complete = 2,
};

public enum E_MmoEnterType : byte
{
 First = 0,
 ChangeChannel = 1,
 Portal = 2,
};

public enum E_StageChannelType : ushort
{
 Single = 800,
};

public enum E_MessageState : byte
{
 Unread = 0,
 Read = 1,
 Delete = 2,
};

public enum E_MessageType : byte
{
 Normal = 0,
 Guild = 1,
 Exchange = 2,
};

public enum E_ChatMgrType : byte
{
 None = 0,
 ChatMaster = 1,
 ChatCluster = 2,
 SendServer = 3,
};

public enum E_ChatType : byte
{
 None = 0,
 Server = 1,
 Normal = 2,
 Party = 3,
 Guild = 4,
 Alliance = 5,
 User = 6,
 InterNormal = 7,
 InterParty = 8,
 Global = 9,
};

public enum E_ChatServerSubType : byte
{
 None = 0,
 Chat = 1,
 Notice = 2,
 Sneer = 3,
 GetItem = 4,
 EnchantItem = 5,
 GetGold = 6,
 Trade = 7,
 KillMonster = 8,
 EnchantRune = 9,
 ServerBossSpawn = 10,
};

public enum E_ChatServerNoticeLocationType : byte
{
 None = 0,
 Stage = 1,
 Gacha = 2,
 PetAdv = 3,
};

public enum E_ChatNormalSubType : byte
{
 None = 0,
 Chat = 1,
};

public enum E_ChatPartySubType : byte
{
 None = 0,
 Chat = 1,
 GetItem = 2,
};

public enum E_ChatGuildSubType : byte
{
 None = 0,
 Chat = 1,
 Join = 2,
 Out = 3,
 KickOut = 4,
 NewMaster = 5,
 NewSubMaster = 6,
 DisSubMaster = 7,
 MarkChange = 8,
 LevelUp = 9,
 ChangeNotice = 10,
 SetEnemy = 11,
 ReleaseEnemy = 12,
 SetAlliance = 13,
 ReleaseAlliance = 14,
 Connect = 15,
 BuyBuff = 16,
 RequestJoin = 17,
 RequestAlliance = 18,
 InviteAllianceChat = 19,
 ChangeName = 20,
 BossReward = 21,
 GuildDungeonOpen = 22,
 GuildDungeonFinish = 23,
 GuildDungeonClose = 24,
};

public enum E_ChatAllianceSubType : byte
{
 None = 0,
 Chat = 1,
 Join = 2,
 Out = 3,
 Ban = 4,
 ChangeMaster = 5,
};

public enum E_ChatUserSubType : byte
{
 None = 0,
 Chat = 1,
 FriendConnect = 2,
 EnemyConnect = 3,
 RequestFriend = 4,
 RequestFriendAccept = 5,
 GuildJoin = 6,
};

public enum E_ChatInterNormalSubType : byte
{
 None = 0,
 Chat = 1,
};

public enum E_ChatInterPartySubType : byte
{
 None = 0,
 Chat = 1,
 GetItem = 2,
};

public enum E_ChatGlobalSubType : byte
{
 None = 0,
 Chat = 1,
 ServerBossSpawn = 2,
 Sneer = 3,
 GetItem = 4,
 KillMonster = 5,
};

public enum E_MarketType : byte
{
 None = 0,
 Google = 1,
 OneStore = 2,
 Apple = 3,
};

public enum E_PaymentStatus : byte
{
 None = 0,
 Init = 1,
 Purchase = 2,
 Complete = 3,
};

public enum E_AccountOptionType : byte
{
 ItemDropCharacterNickNone = 0,
 AnswerSurvey = 1,
 CancelSurvey = 2,
 Review = 3,
 Max = 4,
};

public enum E_ServerEventCategory : byte
{
 Stage = 0,
 Event = 1,
 Max = 2,
};

public enum E_ServerEventSubCategory : byte
{
 EventDungeon = 0,
 Colosseum = 1,
 BannerPopUp = 2,
 QuestEvent = 3,
 GoldUpEvent = 4,
 ExpUpEvent = 5,
 ItemDropRateUpEvent = 6,
 ItemDropEvent = 7,
 ScenarioDungeon = 8,
 AttendEvent = 9,
 AttendEventNewUser = 10,
 AttendEventComeback = 11,
 AttendEventComulative = 12,
 AttendEventContiniuity = 13,
 AttendEventPaidDaily = 14,
 AttendEventPaidLevelUp = 15,
 BattlePass = 16,
 BlackMarket = 17,
 Collect = 18,
 EventPopup = 19,
 Max = 20,
};

public enum E_ServerEventState : byte
{
 DeActive = 0,
 Active = 1,
 Max = 2,
};

public enum E_ColosseumStatus : byte
{
 None = 0,
 Ready = 1,
 MATCHING = 2,
 Play = 3,
 End = 4,
 Max = 5,
};

public enum E_ColosseumTeam : byte
{
 Blue = 0,
 Red = 1,
};

public enum E_ServerTrafficStatus : byte
{
 None = 0,
 Smooth = 1,
 Bush = 2,
 Heavy = 3,
 Lock = 4,
};

public enum E_ChangeEnchant : byte
{
 Max = 11,
};

public enum E_PetEnchant : byte
{
 Max = 11,
};

public enum E_HACK_CATEGORY : byte
{
 Speed = 0,
 SpeedTimeScale = 1,
 Memory = 2,
};

public enum E_ServerType : byte
{
 GameServer = 0,
 MatchServer = 1,
 InterServer = 2,
 ChatServer = 3,
 BillingServer = 4,
 GateWayServer = 5,
};

public enum E_CharInfoReqBit : byte
{
 CHARACTER = 0,
 BLOCK = 1,
 RESTORE_EXP = 2,
 STORAGE = 3,
 ACCOUNT_STACK = 4,
 EQUIP = 5,
 STACK = 6,
 MARK = 7,
 CHANGE = 8,
 CHANGE_ENCHANT = 9,
 CHANGE_GACHA_KEEP = 10,
 PET = 11,
 PET_ENCHANT = 12,
 PET_GACHA_KEEP = 13,
 CHANGE_COLLECT = 14,
 ITEM_COLLECT = 15,
 PET_COLLECT = 16,
 GUILD = 17,
 GUILD_BUFF = 18,
 GUILD_ALLIANCE = 19,
 SKILL_BOOK = 20,
 PET_ADVENTURE = 21,
 OPTION = 22,
 QUEST = 23,
 DAILY_QUEST = 24,
 MAKE_LIMIT = 25,
 FRIEND = 26,
 REQUEST_FRIEND = 27,
 RUNE = 28,
 ITEM_ACQ_HISTORY = 29,
 EVENT_QUEST = 30,
 CHANGE_QUEST = 31,
 ATTRIBUTE = 32,
 ARTIFACT = 33,
 COOK_HISTORY = 34,
 TEMPLE_OPEN_INFO = 35,
 SKILL_USE_ORDER = 36,
 GOD_LAND_PRODUCT = 37,
 ENUM_MAX = 38,
};

public enum E_TradeState : byte
{
 Sell = 0,
 SoldOut = 1,
 Withdraw = 2,
 Delete = 3,
 TakeMoney = 4,
};

public enum E_TRADE : ushort
{
 LIMIT = 20,
};

public enum E_RuneStatus : byte
{
 None = 0,
 Sell = 1,
 Upgrade = 2,
 Enchant = 3,
 Make = 4,
 Break = 5,
 Storage = 6,
 Delete = 7,
 Collect = 8,
 Char_Extend = 9,
 Ring_Extend = 10,
 Exchange = 11,
 Admin = 12,
 Trade = 13,
};

public enum E_PetAdvStatus : byte
{
 Wait = 0,
 Start = 1,
 Reward = 2,
 Cancel = 3,
};

public enum E_CHAT_MSG_LIMIT : ushort
{
 LIMIT = 50,
};

public enum E_SERVER_HEALTH_CHECK : ushort
{
 INTERVAL_SEC = 10,
 ADD_EXPIRE_SEC = 20,
};

public enum E_GOD_LAND_FIGHT_RESULT : ushort
{
 LOSE = 0,
 SUCCESS = 1,
 FAIL = 2,
};

public enum E_EVENT_ATTEND_TYPE : byte
{
 NONE = 0,
 NORMAL = 1,
 NEW = 2,
 COMEBACK = 3,
 CONTINUITY = 4,
 CUMULATIVE = 5,
 PAID_ATTEND = 6,
 PAID_LEVEL = 7,
};

public enum E_ATTEND_TYPE : byte
{
 ATTEND = 0,
 CUMULATIVE = 1,
 CONTINUITY = 2,
 PAID_ATTEND = 3,
 EXPIRED_ATTEND = 5,
 EXPIRED_CUMULATIVE = 6,
 EXPIRED_CONTINUITY = 7,
};

public enum E_BATTLE_ROLE : byte
{
 NONE = 0,
 ATTACKER = 1,
 DEFENDER = 2,
};

public enum E_GuildDungeonStatus : byte
{
 None = 0,
 Generating = 1,
 GenerateComp = 2,
 ForceClose = 3,
 Close = 4,
};

public struct Account : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Account GetRootAsAccount(ByteBuffer _bb) { return GetRootAsAccount(_bb, new Account()); }
  public static Account GetRootAsAccount(ByteBuffer _bb, Account obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Account __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Nid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNidBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNidArray() { return __p.__vector_as_array<byte>(6); }
  public string Gnid { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGnidBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetGnidBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetGnidArray() { return __p.__vector_as_array<byte>(8); }
  public string Country { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCountryBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetCountryBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCountryArray() { return __p.__vector_as_array<byte>(10); }
  public ulong LoginDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CreateDt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_AccountStateType State { get { int o = __p.__offset(16); return o != 0 ? (E_AccountStateType)__p.bb.Get(o + __p.bb_pos) : E_AccountStateType.Active; } }
  public uint LastLoginServerIdx { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<Account> CreateAccount(FlatBufferBuilder builder,
      ulong user_id = 0,
      StringOffset nidOffset = default(StringOffset),
      StringOffset gnidOffset = default(StringOffset),
      StringOffset countryOffset = default(StringOffset),
      ulong login_dt = 0,
      ulong create_dt = 0,
      E_AccountStateType state = E_AccountStateType.Active,
      uint last_login_server_idx = 0) {
    builder.StartObject(8);
    Account.AddCreateDt(builder, create_dt);
    Account.AddLoginDt(builder, login_dt);
    Account.AddUserId(builder, user_id);
    Account.AddLastLoginServerIdx(builder, last_login_server_idx);
    Account.AddCountry(builder, countryOffset);
    Account.AddGnid(builder, gnidOffset);
    Account.AddNid(builder, nidOffset);
    Account.AddState(builder, state);
    return Account.EndAccount(builder);
  }

  public static void StartAccount(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddNid(FlatBufferBuilder builder, StringOffset nidOffset) { builder.AddOffset(1, nidOffset.Value, 0); }
  public static void AddGnid(FlatBufferBuilder builder, StringOffset gnidOffset) { builder.AddOffset(2, gnidOffset.Value, 0); }
  public static void AddCountry(FlatBufferBuilder builder, StringOffset countryOffset) { builder.AddOffset(3, countryOffset.Value, 0); }
  public static void AddLoginDt(FlatBufferBuilder builder, ulong loginDt) { builder.AddUlong(4, loginDt, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(5, createDt, 0); }
  public static void AddState(FlatBufferBuilder builder, E_AccountStateType state) { builder.AddByte(6, (byte)state, 0); }
  public static void AddLastLoginServerIdx(FlatBufferBuilder builder, uint lastLoginServerIdx) { builder.AddUint(7, lastLoginServerIdx, 0); }
  public static Offset<Account> EndAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Account>(o);
  }
};

public struct Character : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Character GetRootAsCharacter(ByteBuffer _bb) { return GetRootAsCharacter(_bb, new Character()); }
  public static Character GetRootAsCharacter(ByteBuffer _bb, Character obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Character __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong UserId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(12); }
  public uint Lv { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint LastLv { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Str { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Dex { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Intellect { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Vit { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Wis { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint LastHp { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint LastMp { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong Exp { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong LastExp { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint LastArea { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_CharStateType State { get { int o = __p.__offset(38); return o != 0 ? (E_CharStateType)__p.bb.Get(o + __p.bb_pos) : E_CharStateType.Active; } }
  public uint MainPet { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong PetExpireDt { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint MainVehicle { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FlagRide { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ArtifactPet { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ArtifactVehicle { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint MainChange { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ChangeExpireDt { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PkCnt { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte AddRingSlot { get { int o = __p.__offset(58); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint InvenMaxCnt { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint QuickSlotMaxCnt { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SpecialSkillTids(int j) { int o = __p.__offset(64); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int SpecialSkillTidsLength { get { int o = __p.__offset(64); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpecialSkillTidsBytes() { return __p.__vector_as_span(64); }
#else
  public ArraySegment<byte>? GetSpecialSkillTidsBytes() { return __p.__vector_as_arraysegment(64); }
#endif
  public uint[] GetSpecialSkillTidsArray() { return __p.__vector_as_array<uint>(64); }
  public int Tendency { get { int o = __p.__offset(66); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ulong CreateDt { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong DeleteDt { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong LastLogoutDt { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong DailyResetDt { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WeekResetDt { get { int o = __p.__offset(76); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong MonthResetDt { get { int o = __p.__offset(78); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte RestoreExpCnt { get { int o = __p.__offset(80); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte RestoreExpNotFreeCnt { get { int o = __p.__offset(82); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint LastPortalTid { get { int o = __p.__offset(84); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float LastPosX { get { int o = __p.__offset(86); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float LastPosY { get { int o = __p.__offset(88); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float LastPosZ { get { int o = __p.__offset(90); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public ushort LastChannelId { get { int o = __p.__offset(92); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public uint ColosseumScore { get { int o = __p.__offset(94); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsColosseumSeasonReward { get { int o = __p.__offset(96); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint ColosseumRank { get { int o = __p.__offset(98); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ColosseumOldSeasonRank { get { int o = __p.__offset(100); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ColosseumOldSeasonScore { get { int o = __p.__offset(102); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InstanceDungeonStageTid { get { int o = __p.__offset(104); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InstanceDungeonCnt { get { int o = __p.__offset(106); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(108); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string GuildName { get { int o = __p.__offset(110); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(110); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(110); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(110); }
  public ulong GuildExp { get { int o = __p.__offset(112); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte GuildMarkTid { get { int o = __p.__offset(114); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong GuildChatId { get { int o = __p.__offset(116); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceChatGrade GuildChatGrade { get { int o = __p.__offset(118); return o != 0 ? (E_GuildAllianceChatGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatGrade.None; } }
  public E_GuildAllianceChatState GuildChatState { get { int o = __p.__offset(120); return o != 0 ? (E_GuildAllianceChatState)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatState.None; } }
  public E_GuildMemberGrade GuildGrade { get { int o = __p.__offset(122); return o != 0 ? (E_GuildMemberGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildMemberGrade.None; } }
  public bool IsParty { get { int o = __p.__offset(124); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint PartyUid { get { int o = __p.__offset(126); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<Character> CreateCharacter(FlatBufferBuilder builder,
      uint server_idx = 0,
      ulong char_id = 0,
      ulong user_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint lv = 0,
      uint last_lv = 0,
      uint str = 0,
      uint dex = 0,
      uint intellect = 0,
      uint vit = 0,
      uint wis = 0,
      uint last_hp = 0,
      uint last_mp = 0,
      ulong exp = 0,
      ulong last_exp = 0,
      uint last_area = 0,
      E_CharStateType state = E_CharStateType.Active,
      uint main_pet = 0,
      ulong pet_expire_dt = 0,
      uint main_vehicle = 0,
      uint flag_ride = 0,
      ulong artifact_pet = 0,
      ulong artifact_vehicle = 0,
      uint main_change = 0,
      ulong change_expire_dt = 0,
      uint pk_cnt = 0,
      byte add_ring_slot = 0,
      uint inven_max_cnt = 0,
      uint quick_slot_max_cnt = 0,
      VectorOffset special_skill_tidsOffset = default(VectorOffset),
      int tendency = 0,
      ulong create_dt = 0,
      ulong delete_dt = 0,
      ulong last_logout_dt = 0,
      ulong daily_reset_dt = 0,
      ulong week_reset_dt = 0,
      ulong month_reset_dt = 0,
      byte restore_exp_cnt = 0,
      byte restore_exp_not_free_cnt = 0,
      uint last_portal_tid = 0,
      float last_pos_x = 0.0f,
      float last_pos_y = 0.0f,
      float last_pos_z = 0.0f,
      ushort last_channel_id = 0,
      uint colosseum_score = 0,
      bool is_colosseum_season_reward = false,
      uint colosseum_rank = 0,
      uint colosseum_old_season_rank = 0,
      uint colosseum_old_season_score = 0,
      uint instance_dungeon_stage_tid = 0,
      uint instance_dungeon_cnt = 0,
      ulong guild_id = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong guild_exp = 0,
      byte guild_mark_tid = 0,
      ulong guild_chat_id = 0,
      E_GuildAllianceChatGrade guild_chat_grade = E_GuildAllianceChatGrade.None,
      E_GuildAllianceChatState guild_chat_state = E_GuildAllianceChatState.None,
      E_GuildMemberGrade guild_grade = E_GuildMemberGrade.None,
      bool is_party = false,
      uint party_uid = 0) {
    builder.StartObject(62);
    Character.AddGuildChatId(builder, guild_chat_id);
    Character.AddGuildExp(builder, guild_exp);
    Character.AddGuildId(builder, guild_id);
    Character.AddMonthResetDt(builder, month_reset_dt);
    Character.AddWeekResetDt(builder, week_reset_dt);
    Character.AddDailyResetDt(builder, daily_reset_dt);
    Character.AddLastLogoutDt(builder, last_logout_dt);
    Character.AddDeleteDt(builder, delete_dt);
    Character.AddCreateDt(builder, create_dt);
    Character.AddChangeExpireDt(builder, change_expire_dt);
    Character.AddArtifactVehicle(builder, artifact_vehicle);
    Character.AddArtifactPet(builder, artifact_pet);
    Character.AddPetExpireDt(builder, pet_expire_dt);
    Character.AddLastExp(builder, last_exp);
    Character.AddExp(builder, exp);
    Character.AddUserId(builder, user_id);
    Character.AddCharId(builder, char_id);
    Character.AddPartyUid(builder, party_uid);
    Character.AddGuildName(builder, guild_nameOffset);
    Character.AddInstanceDungeonCnt(builder, instance_dungeon_cnt);
    Character.AddInstanceDungeonStageTid(builder, instance_dungeon_stage_tid);
    Character.AddColosseumOldSeasonScore(builder, colosseum_old_season_score);
    Character.AddColosseumOldSeasonRank(builder, colosseum_old_season_rank);
    Character.AddColosseumRank(builder, colosseum_rank);
    Character.AddColosseumScore(builder, colosseum_score);
    Character.AddLastPosZ(builder, last_pos_z);
    Character.AddLastPosY(builder, last_pos_y);
    Character.AddLastPosX(builder, last_pos_x);
    Character.AddLastPortalTid(builder, last_portal_tid);
    Character.AddTendency(builder, tendency);
    Character.AddSpecialSkillTids(builder, special_skill_tidsOffset);
    Character.AddQuickSlotMaxCnt(builder, quick_slot_max_cnt);
    Character.AddInvenMaxCnt(builder, inven_max_cnt);
    Character.AddPkCnt(builder, pk_cnt);
    Character.AddMainChange(builder, main_change);
    Character.AddFlagRide(builder, flag_ride);
    Character.AddMainVehicle(builder, main_vehicle);
    Character.AddMainPet(builder, main_pet);
    Character.AddLastArea(builder, last_area);
    Character.AddLastMp(builder, last_mp);
    Character.AddLastHp(builder, last_hp);
    Character.AddWis(builder, wis);
    Character.AddVit(builder, vit);
    Character.AddIntellect(builder, intellect);
    Character.AddDex(builder, dex);
    Character.AddStr(builder, str);
    Character.AddLastLv(builder, last_lv);
    Character.AddLv(builder, lv);
    Character.AddNick(builder, nickOffset);
    Character.AddCharTid(builder, char_tid);
    Character.AddServerIdx(builder, server_idx);
    Character.AddLastChannelId(builder, last_channel_id);
    Character.AddIsParty(builder, is_party);
    Character.AddGuildGrade(builder, guild_grade);
    Character.AddGuildChatState(builder, guild_chat_state);
    Character.AddGuildChatGrade(builder, guild_chat_grade);
    Character.AddGuildMarkTid(builder, guild_mark_tid);
    Character.AddIsColosseumSeasonReward(builder, is_colosseum_season_reward);
    Character.AddRestoreExpNotFreeCnt(builder, restore_exp_not_free_cnt);
    Character.AddRestoreExpCnt(builder, restore_exp_cnt);
    Character.AddAddRingSlot(builder, add_ring_slot);
    Character.AddState(builder, state);
    return Character.EndCharacter(builder);
  }

  public static void StartCharacter(FlatBufferBuilder builder) { builder.StartObject(62); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(2, userId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(3, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(4, nickOffset.Value, 0); }
  public static void AddLv(FlatBufferBuilder builder, uint lv) { builder.AddUint(5, lv, 0); }
  public static void AddLastLv(FlatBufferBuilder builder, uint lastLv) { builder.AddUint(6, lastLv, 0); }
  public static void AddStr(FlatBufferBuilder builder, uint str) { builder.AddUint(7, str, 0); }
  public static void AddDex(FlatBufferBuilder builder, uint dex) { builder.AddUint(8, dex, 0); }
  public static void AddIntellect(FlatBufferBuilder builder, uint intellect) { builder.AddUint(9, intellect, 0); }
  public static void AddVit(FlatBufferBuilder builder, uint vit) { builder.AddUint(10, vit, 0); }
  public static void AddWis(FlatBufferBuilder builder, uint wis) { builder.AddUint(11, wis, 0); }
  public static void AddLastHp(FlatBufferBuilder builder, uint lastHp) { builder.AddUint(12, lastHp, 0); }
  public static void AddLastMp(FlatBufferBuilder builder, uint lastMp) { builder.AddUint(13, lastMp, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(14, exp, 0); }
  public static void AddLastExp(FlatBufferBuilder builder, ulong lastExp) { builder.AddUlong(15, lastExp, 0); }
  public static void AddLastArea(FlatBufferBuilder builder, uint lastArea) { builder.AddUint(16, lastArea, 0); }
  public static void AddState(FlatBufferBuilder builder, E_CharStateType state) { builder.AddByte(17, (byte)state, 0); }
  public static void AddMainPet(FlatBufferBuilder builder, uint mainPet) { builder.AddUint(18, mainPet, 0); }
  public static void AddPetExpireDt(FlatBufferBuilder builder, ulong petExpireDt) { builder.AddUlong(19, petExpireDt, 0); }
  public static void AddMainVehicle(FlatBufferBuilder builder, uint mainVehicle) { builder.AddUint(20, mainVehicle, 0); }
  public static void AddFlagRide(FlatBufferBuilder builder, uint flagRide) { builder.AddUint(21, flagRide, 0); }
  public static void AddArtifactPet(FlatBufferBuilder builder, ulong artifactPet) { builder.AddUlong(22, artifactPet, 0); }
  public static void AddArtifactVehicle(FlatBufferBuilder builder, ulong artifactVehicle) { builder.AddUlong(23, artifactVehicle, 0); }
  public static void AddMainChange(FlatBufferBuilder builder, uint mainChange) { builder.AddUint(24, mainChange, 0); }
  public static void AddChangeExpireDt(FlatBufferBuilder builder, ulong changeExpireDt) { builder.AddUlong(25, changeExpireDt, 0); }
  public static void AddPkCnt(FlatBufferBuilder builder, uint pkCnt) { builder.AddUint(26, pkCnt, 0); }
  public static void AddAddRingSlot(FlatBufferBuilder builder, byte addRingSlot) { builder.AddByte(27, addRingSlot, 0); }
  public static void AddInvenMaxCnt(FlatBufferBuilder builder, uint invenMaxCnt) { builder.AddUint(28, invenMaxCnt, 0); }
  public static void AddQuickSlotMaxCnt(FlatBufferBuilder builder, uint quickSlotMaxCnt) { builder.AddUint(29, quickSlotMaxCnt, 0); }
  public static void AddSpecialSkillTids(FlatBufferBuilder builder, VectorOffset specialSkillTidsOffset) { builder.AddOffset(30, specialSkillTidsOffset.Value, 0); }
  public static VectorOffset CreateSpecialSkillTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSpecialSkillTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSpecialSkillTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTendency(FlatBufferBuilder builder, int tendency) { builder.AddInt(31, tendency, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(32, createDt, 0); }
  public static void AddDeleteDt(FlatBufferBuilder builder, ulong deleteDt) { builder.AddUlong(33, deleteDt, 0); }
  public static void AddLastLogoutDt(FlatBufferBuilder builder, ulong lastLogoutDt) { builder.AddUlong(34, lastLogoutDt, 0); }
  public static void AddDailyResetDt(FlatBufferBuilder builder, ulong dailyResetDt) { builder.AddUlong(35, dailyResetDt, 0); }
  public static void AddWeekResetDt(FlatBufferBuilder builder, ulong weekResetDt) { builder.AddUlong(36, weekResetDt, 0); }
  public static void AddMonthResetDt(FlatBufferBuilder builder, ulong monthResetDt) { builder.AddUlong(37, monthResetDt, 0); }
  public static void AddRestoreExpCnt(FlatBufferBuilder builder, byte restoreExpCnt) { builder.AddByte(38, restoreExpCnt, 0); }
  public static void AddRestoreExpNotFreeCnt(FlatBufferBuilder builder, byte restoreExpNotFreeCnt) { builder.AddByte(39, restoreExpNotFreeCnt, 0); }
  public static void AddLastPortalTid(FlatBufferBuilder builder, uint lastPortalTid) { builder.AddUint(40, lastPortalTid, 0); }
  public static void AddLastPosX(FlatBufferBuilder builder, float lastPosX) { builder.AddFloat(41, lastPosX, 0.0f); }
  public static void AddLastPosY(FlatBufferBuilder builder, float lastPosY) { builder.AddFloat(42, lastPosY, 0.0f); }
  public static void AddLastPosZ(FlatBufferBuilder builder, float lastPosZ) { builder.AddFloat(43, lastPosZ, 0.0f); }
  public static void AddLastChannelId(FlatBufferBuilder builder, ushort lastChannelId) { builder.AddUshort(44, lastChannelId, 0); }
  public static void AddColosseumScore(FlatBufferBuilder builder, uint colosseumScore) { builder.AddUint(45, colosseumScore, 0); }
  public static void AddIsColosseumSeasonReward(FlatBufferBuilder builder, bool isColosseumSeasonReward) { builder.AddBool(46, isColosseumSeasonReward, false); }
  public static void AddColosseumRank(FlatBufferBuilder builder, uint colosseumRank) { builder.AddUint(47, colosseumRank, 0); }
  public static void AddColosseumOldSeasonRank(FlatBufferBuilder builder, uint colosseumOldSeasonRank) { builder.AddUint(48, colosseumOldSeasonRank, 0); }
  public static void AddColosseumOldSeasonScore(FlatBufferBuilder builder, uint colosseumOldSeasonScore) { builder.AddUint(49, colosseumOldSeasonScore, 0); }
  public static void AddInstanceDungeonStageTid(FlatBufferBuilder builder, uint instanceDungeonStageTid) { builder.AddUint(50, instanceDungeonStageTid, 0); }
  public static void AddInstanceDungeonCnt(FlatBufferBuilder builder, uint instanceDungeonCnt) { builder.AddUint(51, instanceDungeonCnt, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(52, guildId, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(53, guildNameOffset.Value, 0); }
  public static void AddGuildExp(FlatBufferBuilder builder, ulong guildExp) { builder.AddUlong(54, guildExp, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, byte guildMarkTid) { builder.AddByte(55, guildMarkTid, 0); }
  public static void AddGuildChatId(FlatBufferBuilder builder, ulong guildChatId) { builder.AddUlong(56, guildChatId, 0); }
  public static void AddGuildChatGrade(FlatBufferBuilder builder, E_GuildAllianceChatGrade guildChatGrade) { builder.AddByte(57, (byte)guildChatGrade, 0); }
  public static void AddGuildChatState(FlatBufferBuilder builder, E_GuildAllianceChatState guildChatState) { builder.AddByte(58, (byte)guildChatState, 0); }
  public static void AddGuildGrade(FlatBufferBuilder builder, E_GuildMemberGrade guildGrade) { builder.AddByte(59, (byte)guildGrade, 0); }
  public static void AddIsParty(FlatBufferBuilder builder, bool isParty) { builder.AddBool(60, isParty, false); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(61, partyUid, 0); }
  public static Offset<Character> EndCharacter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Character>(o);
  }
};

public struct ItemEquipment : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemEquipment GetRootAsItemEquipment(ByteBuffer _bb) { return GetRootAsItemEquipment(_bb, new ItemEquipment()); }
  public static ItemEquipment GetRootAsItemEquipment(ByteBuffer _bb, ItemEquipment obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemEquipment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Option(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptionLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptionBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetOptionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public uint[] GetOptionArray() { return __p.__vector_as_array<uint>(8); }
  public uint Sockets(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int SocketsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSocketsBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetSocketsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public uint[] GetSocketsArray() { return __p.__vector_as_array<uint>(10); }
  public byte SlotIdx { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte IsLock { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CreateDt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ItemEquipment> CreateItemEquipment(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      VectorOffset optionOffset = default(VectorOffset),
      VectorOffset socketsOffset = default(VectorOffset),
      byte slot_idx = 0,
      byte is_lock = 0,
      ulong expire_dt = 0,
      ulong create_dt = 0) {
    builder.StartObject(8);
    ItemEquipment.AddCreateDt(builder, create_dt);
    ItemEquipment.AddExpireDt(builder, expire_dt);
    ItemEquipment.AddItemId(builder, item_id);
    ItemEquipment.AddSockets(builder, socketsOffset);
    ItemEquipment.AddOption(builder, optionOffset);
    ItemEquipment.AddItemTid(builder, item_tid);
    ItemEquipment.AddIsLock(builder, is_lock);
    ItemEquipment.AddSlotIdx(builder, slot_idx);
    return ItemEquipment.EndItemEquipment(builder);
  }

  public static void StartItemEquipment(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddOption(FlatBufferBuilder builder, VectorOffset optionOffset) { builder.AddOffset(2, optionOffset.Value, 0); }
  public static VectorOffset CreateOptionVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptionVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSockets(FlatBufferBuilder builder, VectorOffset socketsOffset) { builder.AddOffset(3, socketsOffset.Value, 0); }
  public static VectorOffset CreateSocketsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSocketsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSocketsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSlotIdx(FlatBufferBuilder builder, byte slotIdx) { builder.AddByte(4, slotIdx, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(5, isLock, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(6, expireDt, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(7, createDt, 0); }
  public static Offset<ItemEquipment> EndItemEquipment(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemEquipment>(o);
  }
};

public struct ItemStack : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemStack GetRootAsItemStack(ByteBuffer _bb) { return GetRootAsItemStack(_bb, new ItemStack()); }
  public static ItemStack GetRootAsItemStack(ByteBuffer _bb, ItemStack obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemStack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong CreateDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ItemStack> CreateItemStack(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint cnt = 0,
      byte is_lock = 0,
      ulong create_dt = 0) {
    builder.StartObject(5);
    ItemStack.AddCreateDt(builder, create_dt);
    ItemStack.AddItemId(builder, item_id);
    ItemStack.AddCnt(builder, cnt);
    ItemStack.AddItemTid(builder, item_tid);
    ItemStack.AddIsLock(builder, is_lock);
    return ItemStack.EndItemStack(builder);
  }

  public static void StartItemStack(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(4, createDt, 0); }
  public static Offset<ItemStack> EndItemStack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemStack>(o);
  }
};

public struct Collect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Collect GetRootAsCollect(ByteBuffer _bb) { return GetRootAsCollect(_bb, new Collect()); }
  public static Collect GetRootAsCollect(ByteBuffer _bb, Collect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Collect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CollectTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint MaterialTids(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int MaterialTidsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMaterialTidsBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetMaterialTidsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetMaterialTidsArray() { return __p.__vector_as_array<uint>(6); }

  public static Offset<Collect> CreateCollect(FlatBufferBuilder builder,
      uint collect_tid = 0,
      VectorOffset material_tidsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    Collect.AddMaterialTids(builder, material_tidsOffset);
    Collect.AddCollectTid(builder, collect_tid);
    return Collect.EndCollect(builder);
  }

  public static void StartCollect(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCollectTid(FlatBufferBuilder builder, uint collectTid) { builder.AddUint(0, collectTid, 0); }
  public static void AddMaterialTids(FlatBufferBuilder builder, VectorOffset materialTidsOffset) { builder.AddOffset(1, materialTidsOffset.Value, 0); }
  public static VectorOffset CreateMaterialTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMaterialTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaterialTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Collect> EndCollect(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Collect>(o);
  }
};

public struct MaterialCollect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MaterialCollect GetRootAsMaterialCollect(ByteBuffer _bb) { return GetRootAsMaterialCollect(_bb, new MaterialCollect()); }
  public static MaterialCollect GetRootAsMaterialCollect(ByteBuffer _bb, MaterialCollect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MaterialCollect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SlotIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong MaterialId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint MaterialTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MaterialCollect> CreateMaterialCollect(FlatBufferBuilder builder,
      uint slot_idx = 0,
      ulong material_id = 0,
      uint material_tid = 0) {
    builder.StartObject(3);
    MaterialCollect.AddMaterialId(builder, material_id);
    MaterialCollect.AddMaterialTid(builder, material_tid);
    MaterialCollect.AddSlotIdx(builder, slot_idx);
    return MaterialCollect.EndMaterialCollect(builder);
  }

  public static void StartMaterialCollect(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddSlotIdx(FlatBufferBuilder builder, uint slotIdx) { builder.AddUint(0, slotIdx, 0); }
  public static void AddMaterialId(FlatBufferBuilder builder, ulong materialId) { builder.AddUlong(1, materialId, 0); }
  public static void AddMaterialTid(FlatBufferBuilder builder, uint materialTid) { builder.AddUint(2, materialTid, 0); }
  public static Offset<MaterialCollect> EndMaterialCollect(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MaterialCollect>(o);
  }
};

public struct CollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CollectMake GetRootAsCollectMake(ByteBuffer _bb) { return GetRootAsCollectMake(_bb, new CollectMake()); }
  public static CollectMake GetRootAsCollectMake(ByteBuffer _bb, CollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CollectTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SlotIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CollectMake> CreateCollectMake(FlatBufferBuilder builder,
      uint collect_tid = 0,
      uint slot_idx = 0) {
    builder.StartObject(2);
    CollectMake.AddSlotIdx(builder, slot_idx);
    CollectMake.AddCollectTid(builder, collect_tid);
    return CollectMake.EndCollectMake(builder);
  }

  public static void StartCollectMake(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCollectTid(FlatBufferBuilder builder, uint collectTid) { builder.AddUint(0, collectTid, 0); }
  public static void AddSlotIdx(FlatBufferBuilder builder, uint slotIdx) { builder.AddUint(1, slotIdx, 0); }
  public static Offset<CollectMake> EndCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CollectMake>(o);
  }
};

public struct Change : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Change GetRootAsChange(ByteBuffer _bb) { return GetRootAsChange(_bb, new Change()); }
  public static Change GetRootAsChange(ByteBuffer _bb, Change obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Change __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint AbilityAcids(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int AbilityAcidsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAbilityAcidsBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetAbilityAcidsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public uint[] GetAbilityAcidsArray() { return __p.__vector_as_array<uint>(12); }
  public ulong CreateDt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeQuestTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ChangeQuestExpireDt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<Change> CreateChange(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0,
      uint cnt = 0,
      byte is_lock = 0,
      VectorOffset ability_acidsOffset = default(VectorOffset),
      ulong create_dt = 0,
      uint change_quest_tid = 0,
      ulong change_quest_expire_dt = 0) {
    builder.StartObject(8);
    Change.AddChangeQuestExpireDt(builder, change_quest_expire_dt);
    Change.AddCreateDt(builder, create_dt);
    Change.AddChangeId(builder, change_id);
    Change.AddChangeQuestTid(builder, change_quest_tid);
    Change.AddAbilityAcids(builder, ability_acidsOffset);
    Change.AddCnt(builder, cnt);
    Change.AddChangeTid(builder, change_tid);
    Change.AddIsLock(builder, is_lock);
    return Change.EndChange(builder);
  }

  public static void StartChange(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static void AddAbilityAcids(FlatBufferBuilder builder, VectorOffset abilityAcidsOffset) { builder.AddOffset(4, abilityAcidsOffset.Value, 0); }
  public static VectorOffset CreateAbilityAcidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbilityAcidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAbilityAcidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(5, createDt, 0); }
  public static void AddChangeQuestTid(FlatBufferBuilder builder, uint changeQuestTid) { builder.AddUint(6, changeQuestTid, 0); }
  public static void AddChangeQuestExpireDt(FlatBufferBuilder builder, ulong changeQuestExpireDt) { builder.AddUlong(7, changeQuestExpireDt, 0); }
  public static Offset<Change> EndChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Change>(o);
  }
};

public struct ChangeGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChangeGachaKeep GetRootAsChangeGachaKeep(ByteBuffer _bb) { return GetRootAsChangeGachaKeep(_bb, new ChangeGachaKeep()); }
  public static ChangeGachaKeep GetRootAsChangeGachaKeep(ByteBuffer _bb, ChangeGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChangeGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TryCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CreateDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ChangeGachaKeep> CreateChangeGachaKeep(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0,
      uint try_cnt = 0,
      ulong create_dt = 0) {
    builder.StartObject(4);
    ChangeGachaKeep.AddCreateDt(builder, create_dt);
    ChangeGachaKeep.AddChangeId(builder, change_id);
    ChangeGachaKeep.AddTryCnt(builder, try_cnt);
    ChangeGachaKeep.AddChangeTid(builder, change_tid);
    return ChangeGachaKeep.EndChangeGachaKeep(builder);
  }

  public static void StartChangeGachaKeep(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddTryCnt(FlatBufferBuilder builder, uint tryCnt) { builder.AddUint(2, tryCnt, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(3, createDt, 0); }
  public static Offset<ChangeGachaKeep> EndChangeGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChangeGachaKeep>(o);
  }
};

public struct Pet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Pet GetRootAsPet(ByteBuffer _bb) { return GetRootAsPet(_bb, new Pet()); }
  public static Pet GetRootAsPet(ByteBuffer _bb, Pet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Pet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint AbilityAcids(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int AbilityAcidsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAbilityAcidsBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetAbilityAcidsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public uint[] GetAbilityAcidsArray() { return __p.__vector_as_array<uint>(12); }
  public ulong CreateDt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong Exp { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong AdvId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<Pet> CreatePet(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0,
      uint cnt = 0,
      byte is_lock = 0,
      VectorOffset ability_acidsOffset = default(VectorOffset),
      ulong create_dt = 0,
      ulong exp = 0,
      ulong adv_id = 0) {
    builder.StartObject(8);
    Pet.AddAdvId(builder, adv_id);
    Pet.AddExp(builder, exp);
    Pet.AddCreateDt(builder, create_dt);
    Pet.AddPetId(builder, pet_id);
    Pet.AddAbilityAcids(builder, ability_acidsOffset);
    Pet.AddCnt(builder, cnt);
    Pet.AddPetTid(builder, pet_tid);
    Pet.AddIsLock(builder, is_lock);
    return Pet.EndPet(builder);
  }

  public static void StartPet(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static void AddAbilityAcids(FlatBufferBuilder builder, VectorOffset abilityAcidsOffset) { builder.AddOffset(4, abilityAcidsOffset.Value, 0); }
  public static VectorOffset CreateAbilityAcidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAbilityAcidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAbilityAcidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(5, createDt, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(6, exp, 0); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(7, advId, 0); }
  public static Offset<Pet> EndPet(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Pet>(o);
  }
};

public struct PetGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PetGachaKeep GetRootAsPetGachaKeep(ByteBuffer _bb) { return GetRootAsPetGachaKeep(_bb, new PetGachaKeep()); }
  public static PetGachaKeep GetRootAsPetGachaKeep(ByteBuffer _bb, PetGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PetGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TryCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CreateDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<PetGachaKeep> CreatePetGachaKeep(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0,
      uint try_cnt = 0,
      ulong create_dt = 0) {
    builder.StartObject(4);
    PetGachaKeep.AddCreateDt(builder, create_dt);
    PetGachaKeep.AddPetId(builder, pet_id);
    PetGachaKeep.AddTryCnt(builder, try_cnt);
    PetGachaKeep.AddPetTid(builder, pet_tid);
    return PetGachaKeep.EndPetGachaKeep(builder);
  }

  public static void StartPetGachaKeep(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddTryCnt(FlatBufferBuilder builder, uint tryCnt) { builder.AddUint(2, tryCnt, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(3, createDt, 0); }
  public static Offset<PetGachaKeep> EndPetGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PetGachaKeep>(o);
  }
};

public struct AccountItemStack : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AccountItemStack GetRootAsAccountItemStack(ByteBuffer _bb) { return GetRootAsAccountItemStack(_bb, new AccountItemStack()); }
  public static AccountItemStack GetRootAsAccountItemStack(ByteBuffer _bb, AccountItemStack obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AccountItemStack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong CreateDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<AccountItemStack> CreateAccountItemStack(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      ulong cnt = 0,
      byte is_lock = 0,
      ulong create_dt = 0) {
    builder.StartObject(5);
    AccountItemStack.AddCreateDt(builder, create_dt);
    AccountItemStack.AddCnt(builder, cnt);
    AccountItemStack.AddItemId(builder, item_id);
    AccountItemStack.AddItemTid(builder, item_tid);
    AccountItemStack.AddIsLock(builder, is_lock);
    return AccountItemStack.EndAccountItemStack(builder);
  }

  public static void StartAccountItemStack(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, ulong cnt) { builder.AddUlong(2, cnt, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(4, createDt, 0); }
  public static Offset<AccountItemStack> EndAccountItemStack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AccountItemStack>(o);
  }
};

public struct CharacterOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CharacterOption GetRootAsCharacterOption(ByteBuffer _bb) { return GetRootAsCharacterOption(_bb, new CharacterOption()); }
  public static CharacterOption GetRootAsCharacterOption(ByteBuffer _bb, CharacterOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CharacterOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Key { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Value { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetValueBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetValueArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<CharacterOption> CreateCharacterOption(FlatBufferBuilder builder,
      uint key = 0,
      StringOffset valueOffset = default(StringOffset)) {
    builder.StartObject(2);
    CharacterOption.AddValue(builder, valueOffset);
    CharacterOption.AddKey(builder, key);
    return CharacterOption.EndCharacterOption(builder);
  }

  public static void StartCharacterOption(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddKey(FlatBufferBuilder builder, uint key) { builder.AddUint(0, key, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<CharacterOption> EndCharacterOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CharacterOption>(o);
  }
};

public struct Mark : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Mark GetRootAsMark(ByteBuffer _bb) { return GetRootAsMark(_bb, new Mark()); }
  public static Mark GetRootAsMark(ByteBuffer _bb, Mark obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Mark __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MarkTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int MarkTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMarkTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetMarkTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetMarkTidsArray() { return __p.__vector_as_array<uint>(4); }

  public static Offset<Mark> CreateMark(FlatBufferBuilder builder,
      VectorOffset mark_tidsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    Mark.AddMarkTids(builder, mark_tidsOffset);
    return Mark.EndMark(builder);
  }

  public static void StartMark(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMarkTids(FlatBufferBuilder builder, VectorOffset markTidsOffset) { builder.AddOffset(0, markTidsOffset.Value, 0); }
  public static VectorOffset CreateMarkTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMarkTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMarkTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Mark> EndMark(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Mark>(o);
  }
};

public struct Attribute : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Attribute GetRootAsAttribute(ByteBuffer _bb) { return GetRootAsAttribute(_bb, new Attribute()); }
  public static Attribute GetRootAsAttribute(ByteBuffer _bb, Attribute obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Attribute __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AttributeTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int AttributeTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttributeTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetAttributeTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetAttributeTidsArray() { return __p.__vector_as_array<uint>(4); }

  public static Offset<Attribute> CreateAttribute(FlatBufferBuilder builder,
      VectorOffset attribute_tidsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    Attribute.AddAttributeTids(builder, attribute_tidsOffset);
    return Attribute.EndAttribute(builder);
  }

  public static void StartAttribute(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAttributeTids(FlatBufferBuilder builder, VectorOffset attributeTidsOffset) { builder.AddOffset(0, attributeTidsOffset.Value, 0); }
  public static VectorOffset CreateAttributeTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateAttributeTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAttributeTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Attribute> EndAttribute(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Attribute>(o);
  }
};

public struct EquipInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipInfo GetRootAsEquipInfo(ByteBuffer _bb) { return GetRootAsEquipInfo(_bb, new EquipInfo()); }
  public static EquipInfo GetRootAsEquipInfo(ByteBuffer _bb, EquipInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte SlotIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<EquipInfo> CreateEquipInfo(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      byte slot_idx = 0) {
    builder.StartObject(3);
    EquipInfo.AddItemId(builder, item_id);
    EquipInfo.AddItemTid(builder, item_tid);
    EquipInfo.AddSlotIdx(builder, slot_idx);
    return EquipInfo.EndEquipInfo(builder);
  }

  public static void StartEquipInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddSlotIdx(FlatBufferBuilder builder, byte slotIdx) { builder.AddByte(2, slotIdx, 0); }
  public static Offset<EquipInfo> EndEquipInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipInfo>(o);
  }
};

public struct EquipResultInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipResultInfo GetRootAsEquipResultInfo(ByteBuffer _bb) { return GetRootAsEquipResultInfo(_bb, new EquipResultInfo()); }
  public static EquipResultInfo GetRootAsEquipResultInfo(ByteBuffer _bb, EquipResultInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipResultInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte SlotIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<EquipResultInfo> CreateEquipResultInfo(FlatBufferBuilder builder,
      ulong item_id = 0,
      byte slot_idx = 0) {
    builder.StartObject(2);
    EquipResultInfo.AddItemId(builder, item_id);
    EquipResultInfo.AddSlotIdx(builder, slot_idx);
    return EquipResultInfo.EndEquipResultInfo(builder);
  }

  public static void StartEquipResultInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddSlotIdx(FlatBufferBuilder builder, byte slotIdx) { builder.AddByte(1, slotIdx, 0); }
  public static Offset<EquipResultInfo> EndEquipResultInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipResultInfo>(o);
  }
};

public struct MaterialItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MaterialItem GetRootAsMaterialItem(ByteBuffer _bb) { return GetRootAsMaterialItem(_bb, new MaterialItem()); }
  public static MaterialItem GetRootAsMaterialItem(ByteBuffer _bb, MaterialItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MaterialItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MaterialItem> CreateMaterialItem(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(3);
    MaterialItem.AddItemId(builder, item_id);
    MaterialItem.AddItemCnt(builder, item_cnt);
    MaterialItem.AddItemTid(builder, item_tid);
    return MaterialItem.EndMaterialItem(builder);
  }

  public static void StartMaterialItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(2, itemCnt, 0); }
  public static Offset<MaterialItem> EndMaterialItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MaterialItem>(o);
  }
};

public struct MaterialChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MaterialChange GetRootAsMaterialChange(ByteBuffer _bb) { return GetRootAsMaterialChange(_bb, new MaterialChange()); }
  public static MaterialChange GetRootAsMaterialChange(ByteBuffer _bb, MaterialChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MaterialChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChangeCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MaterialChange> CreateMaterialChange(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0,
      uint change_cnt = 0) {
    builder.StartObject(3);
    MaterialChange.AddChangeId(builder, change_id);
    MaterialChange.AddChangeCnt(builder, change_cnt);
    MaterialChange.AddChangeTid(builder, change_tid);
    return MaterialChange.EndMaterialChange(builder);
  }

  public static void StartMaterialChange(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddChangeCnt(FlatBufferBuilder builder, uint changeCnt) { builder.AddUint(2, changeCnt, 0); }
  public static Offset<MaterialChange> EndMaterialChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MaterialChange>(o);
  }
};

public struct SellItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SellItem GetRootAsSellItem(ByteBuffer _bb) { return GetRootAsSellItem(_bb, new SellItem()); }
  public static SellItem GetRootAsSellItem(ByteBuffer _bb, SellItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SellItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<SellItem> CreateSellItem(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(3);
    SellItem.AddItemId(builder, item_id);
    SellItem.AddItemCnt(builder, item_cnt);
    SellItem.AddItemTid(builder, item_tid);
    return SellItem.EndSellItem(builder);
  }

  public static void StartSellItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(2, itemCnt, 0); }
  public static Offset<SellItem> EndSellItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SellItem>(o);
  }
};

public struct BuyItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BuyItem GetRootAsBuyItem(ByteBuffer _bb) { return GetRootAsBuyItem(_bb, new BuyItem()); }
  public static BuyItem GetRootAsBuyItem(ByteBuffer _bb, BuyItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BuyItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ShopTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BuyCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SelectShopListTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SelectListGroupTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BuyItem> CreateBuyItem(FlatBufferBuilder builder,
      uint shop_tid = 0,
      uint buy_cnt = 0,
      ulong use_item_id = 0,
      uint use_item_tid = 0,
      uint select_shop_list_tid = 0,
      uint select_list_group_tid = 0) {
    builder.StartObject(6);
    BuyItem.AddUseItemId(builder, use_item_id);
    BuyItem.AddSelectListGroupTid(builder, select_list_group_tid);
    BuyItem.AddSelectShopListTid(builder, select_shop_list_tid);
    BuyItem.AddUseItemTid(builder, use_item_tid);
    BuyItem.AddBuyCnt(builder, buy_cnt);
    BuyItem.AddShopTid(builder, shop_tid);
    return BuyItem.EndBuyItem(builder);
  }

  public static void StartBuyItem(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddShopTid(FlatBufferBuilder builder, uint shopTid) { builder.AddUint(0, shopTid, 0); }
  public static void AddBuyCnt(FlatBufferBuilder builder, uint buyCnt) { builder.AddUint(1, buyCnt, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(2, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(3, useItemTid, 0); }
  public static void AddSelectShopListTid(FlatBufferBuilder builder, uint selectShopListTid) { builder.AddUint(4, selectShopListTid, 0); }
  public static void AddSelectListGroupTid(FlatBufferBuilder builder, uint selectListGroupTid) { builder.AddUint(5, selectListGroupTid, 0); }
  public static Offset<BuyItem> EndBuyItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BuyItem>(o);
  }
};

public struct ResultBuyItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultBuyItem GetRootAsResultBuyItem(ByteBuffer _bb) { return GetRootAsResultBuyItem(_bb, new ResultBuyItem()); }
  public static ResultBuyItem GetRootAsResultBuyItem(ByteBuffer _bb, ResultBuyItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultBuyItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint UseItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemBonusCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResultBuyItem> CreateResultBuyItem(FlatBufferBuilder builder,
      uint use_item_tid = 0,
      uint use_item_cnt = 0,
      uint use_item_bonus_cnt = 0) {
    builder.StartObject(3);
    ResultBuyItem.AddUseItemBonusCnt(builder, use_item_bonus_cnt);
    ResultBuyItem.AddUseItemCnt(builder, use_item_cnt);
    ResultBuyItem.AddUseItemTid(builder, use_item_tid);
    return ResultBuyItem.EndResultBuyItem(builder);
  }

  public static void StartResultBuyItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(0, useItemTid, 0); }
  public static void AddUseItemCnt(FlatBufferBuilder builder, uint useItemCnt) { builder.AddUint(1, useItemCnt, 0); }
  public static void AddUseItemBonusCnt(FlatBufferBuilder builder, uint useItemBonusCnt) { builder.AddUint(2, useItemBonusCnt, 0); }
  public static Offset<ResultBuyItem> EndResultBuyItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultBuyItem>(o);
  }
};

public struct EnchantItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EnchantItemInfo GetRootAsEnchantItemInfo(ByteBuffer _bb) { return GetRootAsEnchantItemInfo(_bb, new EnchantItemInfo()); }
  public static EnchantItemInfo GetRootAsEnchantItemInfo(ByteBuffer _bb, EnchantItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EnchantItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte ItemSlotIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UseItemId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<EnchantItemInfo> CreateEnchantItemInfo(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      byte item_slot_idx = 0,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(5);
    EnchantItemInfo.AddUseItemId(builder, use_item_id);
    EnchantItemInfo.AddItemId(builder, item_id);
    EnchantItemInfo.AddUseItemTid(builder, use_item_tid);
    EnchantItemInfo.AddItemTid(builder, item_tid);
    EnchantItemInfo.AddItemSlotIdx(builder, item_slot_idx);
    return EnchantItemInfo.EndEnchantItemInfo(builder);
  }

  public static void StartEnchantItemInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemSlotIdx(FlatBufferBuilder builder, byte itemSlotIdx) { builder.AddByte(2, itemSlotIdx, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(3, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(4, useItemTid, 0); }
  public static Offset<EnchantItemInfo> EndEnchantItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EnchantItemInfo>(o);
  }
};

public struct ResultEnchantInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultEnchantInfo GetRootAsResultEnchantInfo(ByteBuffer _bb) { return GetRootAsResultEnchantInfo(_bb, new ResultEnchantInfo()); }
  public static ResultEnchantInfo GetRootAsResultEnchantInfo(ByteBuffer _bb, ResultEnchantInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultEnchantInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong ItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint FromItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ToItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResultEnchantInfo> CreateResultEnchantInfo(FlatBufferBuilder builder,
      bool result = false,
      ulong item_id = 0,
      uint from_item_tid = 0,
      uint to_item_tid = 0) {
    builder.StartObject(4);
    ResultEnchantInfo.AddItemId(builder, item_id);
    ResultEnchantInfo.AddToItemTid(builder, to_item_tid);
    ResultEnchantInfo.AddFromItemTid(builder, from_item_tid);
    ResultEnchantInfo.AddResult(builder, result);
    return ResultEnchantInfo.EndResultEnchantInfo(builder);
  }

  public static void StartResultEnchantInfo(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(1, itemId, 0); }
  public static void AddFromItemTid(FlatBufferBuilder builder, uint fromItemTid) { builder.AddUint(2, fromItemTid, 0); }
  public static void AddToItemTid(FlatBufferBuilder builder, uint toItemTid) { builder.AddUint(3, toItemTid, 0); }
  public static Offset<ResultEnchantInfo> EndResultEnchantInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultEnchantInfo>(o);
  }
};

public struct BreakItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BreakItemInfo GetRootAsBreakItemInfo(ByteBuffer _bb) { return GetRootAsBreakItemInfo(_bb, new BreakItemInfo()); }
  public static BreakItemInfo GetRootAsBreakItemInfo(ByteBuffer _bb, BreakItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BreakItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BreakItemInfo> CreateBreakItemInfo(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(3);
    BreakItemInfo.AddItemId(builder, item_id);
    BreakItemInfo.AddItemCnt(builder, item_cnt);
    BreakItemInfo.AddItemTid(builder, item_tid);
    return BreakItemInfo.EndBreakItemInfo(builder);
  }

  public static void StartBreakItemInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(2, itemCnt, 0); }
  public static Offset<BreakItemInfo> EndBreakItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BreakItemInfo>(o);
  }
};

public struct GetItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GetItemInfo GetRootAsGetItemInfo(ByteBuffer _bb) { return GetRootAsGetItemInfo(_bb, new GetItemInfo()); }
  public static GetItemInfo GetRootAsGetItemInfo(ByteBuffer _bb, GetItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GetItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GetItemInfo> CreateGetItemInfo(FlatBufferBuilder builder,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(2);
    GetItemInfo.AddItemCnt(builder, item_cnt);
    GetItemInfo.AddItemTid(builder, item_tid);
    return GetItemInfo.EndGetItemInfo(builder);
  }

  public static void StartGetItemInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(0, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(1, itemCnt, 0); }
  public static Offset<GetItemInfo> EndGetItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GetItemInfo>(o);
  }
};

public struct DelItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DelItemInfo GetRootAsDelItemInfo(ByteBuffer _bb) { return GetRootAsDelItemInfo(_bb, new DelItemInfo()); }
  public static DelItemInfo GetRootAsDelItemInfo(ByteBuffer _bb, DelItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DelItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<DelItemInfo> CreateDelItemInfo(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(3);
    DelItemInfo.AddItemId(builder, item_id);
    DelItemInfo.AddItemCnt(builder, item_cnt);
    DelItemInfo.AddItemTid(builder, item_tid);
    return DelItemInfo.EndDelItemInfo(builder);
  }

  public static void StartDelItemInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(2, itemCnt, 0); }
  public static Offset<DelItemInfo> EndDelItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DelItemInfo>(o);
  }
};

public struct ChangeItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChangeItemInfo GetRootAsChangeItemInfo(ByteBuffer _bb) { return GetRootAsChangeItemInfo(_bb, new ChangeItemInfo()); }
  public static ChangeItemInfo GetRootAsChangeItemInfo(ByteBuffer _bb, ChangeItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChangeItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint FromItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ToItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ChangeItemInfo> CreateChangeItemInfo(FlatBufferBuilder builder,
      uint from_item_tid = 0,
      uint to_item_tid = 0) {
    builder.StartObject(2);
    ChangeItemInfo.AddToItemTid(builder, to_item_tid);
    ChangeItemInfo.AddFromItemTid(builder, from_item_tid);
    return ChangeItemInfo.EndChangeItemInfo(builder);
  }

  public static void StartChangeItemInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddFromItemTid(FlatBufferBuilder builder, uint fromItemTid) { builder.AddUint(0, fromItemTid, 0); }
  public static void AddToItemTid(FlatBufferBuilder builder, uint toItemTid) { builder.AddUint(1, toItemTid, 0); }
  public static Offset<ChangeItemInfo> EndChangeItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChangeItemInfo>(o);
  }
};

public struct GetPetInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GetPetInfo GetRootAsGetPetInfo(ByteBuffer _bb) { return GetRootAsGetPetInfo(_bb, new GetPetInfo()); }
  public static GetPetInfo GetRootAsGetPetInfo(ByteBuffer _bb, GetPetInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GetPetInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PetTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PetCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GetPetInfo> CreateGetPetInfo(FlatBufferBuilder builder,
      uint pet_tid = 0,
      uint pet_cnt = 0) {
    builder.StartObject(2);
    GetPetInfo.AddPetCnt(builder, pet_cnt);
    GetPetInfo.AddPetTid(builder, pet_tid);
    return GetPetInfo.EndGetPetInfo(builder);
  }

  public static void StartGetPetInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(0, petTid, 0); }
  public static void AddPetCnt(FlatBufferBuilder builder, uint petCnt) { builder.AddUint(1, petCnt, 0); }
  public static Offset<GetPetInfo> EndGetPetInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GetPetInfo>(o);
  }
};

public struct GetChangeInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GetChangeInfo GetRootAsGetChangeInfo(ByteBuffer _bb) { return GetRootAsGetChangeInfo(_bb, new GetChangeInfo()); }
  public static GetChangeInfo GetRootAsGetChangeInfo(ByteBuffer _bb, GetChangeInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GetChangeInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChangeCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GetChangeInfo> CreateGetChangeInfo(FlatBufferBuilder builder,
      uint change_tid = 0,
      uint change_cnt = 0) {
    builder.StartObject(2);
    GetChangeInfo.AddChangeCnt(builder, change_cnt);
    GetChangeInfo.AddChangeTid(builder, change_tid);
    return GetChangeInfo.EndGetChangeInfo(builder);
  }

  public static void StartGetChangeInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(0, changeTid, 0); }
  public static void AddChangeCnt(FlatBufferBuilder builder, uint changeCnt) { builder.AddUint(1, changeCnt, 0); }
  public static Offset<GetChangeInfo> EndGetChangeInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GetChangeInfo>(o);
  }
};

public struct Buff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Buff GetRootAsBuff(ByteBuffer _bb) { return GetRootAsBuff(_bb, new Buff()); }
  public static Buff GetRootAsBuff(ByteBuffer _bb, Buff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Buff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AbilityAcid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint RemainSec { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<Buff> CreateBuff(FlatBufferBuilder builder,
      uint ability_acid = 0,
      ulong expire_dt = 0,
      uint remain_sec = 0) {
    builder.StartObject(3);
    Buff.AddExpireDt(builder, expire_dt);
    Buff.AddRemainSec(builder, remain_sec);
    Buff.AddAbilityAcid(builder, ability_acid);
    return Buff.EndBuff(builder);
  }

  public static void StartBuff(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAbilityAcid(FlatBufferBuilder builder, uint abilityAcid) { builder.AddUint(0, abilityAcid, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(1, expireDt, 0); }
  public static void AddRemainSec(FlatBufferBuilder builder, uint remainSec) { builder.AddUint(2, remainSec, 0); }
  public static Offset<Buff> EndBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Buff>(o);
  }
};

public struct CharBlock : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CharBlock GetRootAsCharBlock(ByteBuffer _bb) { return GetRootAsCharBlock(_bb, new CharBlock()); }
  public static CharBlock GetRootAsCharBlock(ByteBuffer _bb, CharBlock obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CharBlock __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<CharBlock> CreateCharBlock(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset)) {
    builder.StartObject(3);
    CharBlock.AddCharId(builder, char_id);
    CharBlock.AddNick(builder, nickOffset);
    CharBlock.AddCharTid(builder, char_tid);
    return CharBlock.EndCharBlock(builder);
  }

  public static void StartCharBlock(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static Offset<CharBlock> EndCharBlock(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CharBlock>(o);
  }
};

public struct MailInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MailInfo GetRootAsMailInfo(ByteBuffer _bb) { return GetRootAsMailInfo(_bb, new MailInfo()); }
  public static MailInfo GetRootAsMailInfo(ByteBuffer _bb, MailInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MailInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MailIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Title { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(8); }
  public uint ItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<MailInfo> CreateMailInfo(FlatBufferBuilder builder,
      ulong mail_idx = 0,
      ushort type = 0,
      StringOffset titleOffset = default(StringOffset),
      uint item_tid = 0,
      uint cnt = 0,
      ulong expire_dt = 0) {
    builder.StartObject(6);
    MailInfo.AddExpireDt(builder, expire_dt);
    MailInfo.AddMailIdx(builder, mail_idx);
    MailInfo.AddCnt(builder, cnt);
    MailInfo.AddItemTid(builder, item_tid);
    MailInfo.AddTitle(builder, titleOffset);
    MailInfo.AddType(builder, type);
    return MailInfo.EndMailInfo(builder);
  }

  public static void StartMailInfo(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddMailIdx(FlatBufferBuilder builder, ulong mailIdx) { builder.AddUlong(0, mailIdx, 0); }
  public static void AddType(FlatBufferBuilder builder, ushort type) { builder.AddUshort(1, type, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(2, titleOffset.Value, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(3, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(4, cnt, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(5, expireDt, 0); }
  public static Offset<MailInfo> EndMailInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MailInfo>(o);
  }
};

public struct CashMailInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CashMailInfo GetRootAsCashMailInfo(ByteBuffer _bb) { return GetRootAsCashMailInfo(_bb, new CashMailInfo()); }
  public static CashMailInfo GetRootAsCashMailInfo(ByteBuffer _bb, CashMailInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CashMailInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MailIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ShopTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CashMailInfo> CreateCashMailInfo(FlatBufferBuilder builder,
      ulong mail_idx = 0,
      uint shop_tid = 0) {
    builder.StartObject(2);
    CashMailInfo.AddMailIdx(builder, mail_idx);
    CashMailInfo.AddShopTid(builder, shop_tid);
    return CashMailInfo.EndCashMailInfo(builder);
  }

  public static void StartCashMailInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMailIdx(FlatBufferBuilder builder, ulong mailIdx) { builder.AddUlong(0, mailIdx, 0); }
  public static void AddShopTid(FlatBufferBuilder builder, uint shopTid) { builder.AddUint(1, shopTid, 0); }
  public static Offset<CashMailInfo> EndCashMailInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CashMailInfo>(o);
  }
};

public struct MessageInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MessageInfo GetRootAsMessageInfo(ByteBuffer _bb) { return GetRootAsMessageInfo(_bb, new MessageInfo()); }
  public static MessageInfo GetRootAsMessageInfo(ByteBuffer _bb, MessageInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MessageInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MessageIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SenderUserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SenderCharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string SenderCharNick { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSenderCharNickBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetSenderCharNickBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSenderCharNickArray() { return __p.__vector_as_array<byte>(10); }
  public uint Type { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Title { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(14); }
  public string Message { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(16); }
  public byte IsRead { get { int o = __p.__offset(18); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<MessageInfo> CreateMessageInfo(FlatBufferBuilder builder,
      ulong message_idx = 0,
      ulong sender_user_id = 0,
      ulong sender_char_id = 0,
      StringOffset sender_char_nickOffset = default(StringOffset),
      uint type = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset),
      byte is_read = 0,
      ulong expire_dt = 0) {
    builder.StartObject(9);
    MessageInfo.AddExpireDt(builder, expire_dt);
    MessageInfo.AddSenderCharId(builder, sender_char_id);
    MessageInfo.AddSenderUserId(builder, sender_user_id);
    MessageInfo.AddMessageIdx(builder, message_idx);
    MessageInfo.AddMessage(builder, messageOffset);
    MessageInfo.AddTitle(builder, titleOffset);
    MessageInfo.AddType(builder, type);
    MessageInfo.AddSenderCharNick(builder, sender_char_nickOffset);
    MessageInfo.AddIsRead(builder, is_read);
    return MessageInfo.EndMessageInfo(builder);
  }

  public static void StartMessageInfo(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddMessageIdx(FlatBufferBuilder builder, ulong messageIdx) { builder.AddUlong(0, messageIdx, 0); }
  public static void AddSenderUserId(FlatBufferBuilder builder, ulong senderUserId) { builder.AddUlong(1, senderUserId, 0); }
  public static void AddSenderCharId(FlatBufferBuilder builder, ulong senderCharId) { builder.AddUlong(2, senderCharId, 0); }
  public static void AddSenderCharNick(FlatBufferBuilder builder, StringOffset senderCharNickOffset) { builder.AddOffset(3, senderCharNickOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, uint type) { builder.AddUint(4, type, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(5, titleOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(6, messageOffset.Value, 0); }
  public static void AddIsRead(FlatBufferBuilder builder, byte isRead) { builder.AddByte(7, isRead, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(8, expireDt, 0); }
  public static Offset<MessageInfo> EndMessageInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MessageInfo>(o);
  }
};

public struct TakeMailInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TakeMailInfo GetRootAsTakeMailInfo(ByteBuffer _bb) { return GetRootAsTakeMailInfo(_bb, new TakeMailInfo()); }
  public static TakeMailInfo GetRootAsTakeMailInfo(ByteBuffer _bb, TakeMailInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TakeMailInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MailKind { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong MailIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<TakeMailInfo> CreateTakeMailInfo(FlatBufferBuilder builder,
      uint mail_kind = 0,
      ulong mail_idx = 0,
      uint item_tid = 0,
      uint cnt = 0) {
    builder.StartObject(4);
    TakeMailInfo.AddMailIdx(builder, mail_idx);
    TakeMailInfo.AddCnt(builder, cnt);
    TakeMailInfo.AddItemTid(builder, item_tid);
    TakeMailInfo.AddMailKind(builder, mail_kind);
    return TakeMailInfo.EndTakeMailInfo(builder);
  }

  public static void StartTakeMailInfo(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMailKind(FlatBufferBuilder builder, uint mailKind) { builder.AddUint(0, mailKind, 0); }
  public static void AddMailIdx(FlatBufferBuilder builder, ulong mailIdx) { builder.AddUlong(1, mailIdx, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(2, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(3, cnt, 0); }
  public static Offset<TakeMailInfo> EndTakeMailInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TakeMailInfo>(o);
  }
};

public struct CheatMailItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CheatMailItem GetRootAsCheatMailItem(ByteBuffer _bb) { return GetRootAsCheatMailItem(_bb, new CheatMailItem()); }
  public static CheatMailItem GetRootAsCheatMailItem(ByteBuffer _bb, CheatMailItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CheatMailItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CheatMailItem> CreateCheatMailItem(FlatBufferBuilder builder,
      uint item_tid = 0,
      uint cnt = 0) {
    builder.StartObject(2);
    CheatMailItem.AddCnt(builder, cnt);
    CheatMailItem.AddItemTid(builder, item_tid);
    return CheatMailItem.EndCheatMailItem(builder);
  }

  public static void StartCheatMailItem(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(0, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(1, cnt, 0); }
  public static Offset<CheatMailItem> EndCheatMailItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CheatMailItem>(o);
  }
};

public struct MakeMaterialItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MakeMaterialItem GetRootAsMakeMaterialItem(ByteBuffer _bb) { return GetRootAsMakeMaterialItem(_bb, new MakeMaterialItem()); }
  public static MakeMaterialItem GetRootAsMakeMaterialItem(ByteBuffer _bb, MakeMaterialItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MakeMaterialItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MaterialItem? MaterialItems(int j) { int o = __p.__offset(4); return o != 0 ? (MaterialItem?)(new MaterialItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MaterialItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<MakeMaterialItem> CreateMakeMaterialItem(FlatBufferBuilder builder,
      VectorOffset material_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    MakeMaterialItem.AddMaterialItems(builder, material_itemsOffset);
    return MakeMaterialItem.EndMakeMaterialItem(builder);
  }

  public static void StartMakeMaterialItem(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMaterialItems(FlatBufferBuilder builder, VectorOffset materialItemsOffset) { builder.AddOffset(0, materialItemsOffset.Value, 0); }
  public static VectorOffset CreateMaterialItemsVector(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMaterialItemsVectorBlock(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaterialItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MakeMaterialItem> EndMakeMaterialItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MakeMaterialItem>(o);
  }
};

public struct ResultMakeInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultMakeInfo GetRootAsResultMakeInfo(ByteBuffer _bb) { return GetRootAsResultMakeInfo(_bb, new ResultMakeInfo()); }
  public static ResultMakeInfo GetRootAsResultMakeInfo(ByteBuffer _bb, ResultMakeInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultMakeInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint ItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public GetItemInfo? FailItems(int j) { int o = __p.__offset(8); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FailItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResultMakeInfo> CreateResultMakeInfo(FlatBufferBuilder builder,
      bool result = false,
      uint item_cnt = 0,
      VectorOffset fail_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResultMakeInfo.AddFailItems(builder, fail_itemsOffset);
    ResultMakeInfo.AddItemCnt(builder, item_cnt);
    ResultMakeInfo.AddResult(builder, result);
    return ResultMakeInfo.EndResultMakeInfo(builder);
  }

  public static void StartResultMakeInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(1, itemCnt, 0); }
  public static void AddFailItems(FlatBufferBuilder builder, VectorOffset failItemsOffset) { builder.AddOffset(2, failItemsOffset.Value, 0); }
  public static VectorOffset CreateFailItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFailItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFailItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResultMakeInfo> EndResultMakeInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultMakeInfo>(o);
  }
};

public struct ChangeComposeMaterial : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChangeComposeMaterial GetRootAsChangeComposeMaterial(ByteBuffer _bb) { return GetRootAsChangeComposeMaterial(_bb, new ChangeComposeMaterial()); }
  public static ChangeComposeMaterial GetRootAsChangeComposeMaterial(ByteBuffer _bb, ChangeComposeMaterial obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChangeComposeMaterial __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ChangeComposeMaterial> CreateChangeComposeMaterial(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0,
      uint cnt = 0) {
    builder.StartObject(3);
    ChangeComposeMaterial.AddChangeId(builder, change_id);
    ChangeComposeMaterial.AddCnt(builder, cnt);
    ChangeComposeMaterial.AddChangeTid(builder, change_tid);
    return ChangeComposeMaterial.EndChangeComposeMaterial(builder);
  }

  public static void StartChangeComposeMaterial(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static Offset<ChangeComposeMaterial> EndChangeComposeMaterial(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChangeComposeMaterial>(o);
  }
};

public struct ResultChangeCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultChangeCompose GetRootAsResultChangeCompose(ByteBuffer _bb) { return GetRootAsResultChangeCompose(_bb, new ResultChangeCompose()); }
  public static ResultChangeCompose GetRootAsResultChangeCompose(ByteBuffer _bb, ResultChangeCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultChangeCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FailItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FailItemCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResultChangeCompose> CreateResultChangeCompose(FlatBufferBuilder builder,
      bool result = false,
      uint change_tid = 0,
      uint fail_item_tid = 0,
      uint fail_item_cnt = 0) {
    builder.StartObject(4);
    ResultChangeCompose.AddFailItemCnt(builder, fail_item_cnt);
    ResultChangeCompose.AddFailItemTid(builder, fail_item_tid);
    ResultChangeCompose.AddChangeTid(builder, change_tid);
    ResultChangeCompose.AddResult(builder, result);
    return ResultChangeCompose.EndResultChangeCompose(builder);
  }

  public static void StartResultChangeCompose(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddFailItemTid(FlatBufferBuilder builder, uint failItemTid) { builder.AddUint(2, failItemTid, 0); }
  public static void AddFailItemCnt(FlatBufferBuilder builder, uint failItemCnt) { builder.AddUint(3, failItemCnt, 0); }
  public static Offset<ResultChangeCompose> EndResultChangeCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultChangeCompose>(o);
  }
};

public struct PetComposeMaterial : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PetComposeMaterial GetRootAsPetComposeMaterial(ByteBuffer _bb) { return GetRootAsPetComposeMaterial(_bb, new PetComposeMaterial()); }
  public static PetComposeMaterial GetRootAsPetComposeMaterial(ByteBuffer _bb, PetComposeMaterial obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PetComposeMaterial __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<PetComposeMaterial> CreatePetComposeMaterial(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0,
      uint cnt = 0) {
    builder.StartObject(3);
    PetComposeMaterial.AddPetId(builder, pet_id);
    PetComposeMaterial.AddCnt(builder, cnt);
    PetComposeMaterial.AddPetTid(builder, pet_tid);
    return PetComposeMaterial.EndPetComposeMaterial(builder);
  }

  public static void StartPetComposeMaterial(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static Offset<PetComposeMaterial> EndPetComposeMaterial(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PetComposeMaterial>(o);
  }
};

public struct ResultPetCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultPetCompose GetRootAsResultPetCompose(ByteBuffer _bb) { return GetRootAsResultPetCompose(_bb, new ResultPetCompose()); }
  public static ResultPetCompose GetRootAsResultPetCompose(ByteBuffer _bb, ResultPetCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultPetCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FailItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FailItemCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResultPetCompose> CreateResultPetCompose(FlatBufferBuilder builder,
      bool result = false,
      uint pet_tid = 0,
      uint fail_item_tid = 0,
      uint fail_item_cnt = 0) {
    builder.StartObject(4);
    ResultPetCompose.AddFailItemCnt(builder, fail_item_cnt);
    ResultPetCompose.AddFailItemTid(builder, fail_item_tid);
    ResultPetCompose.AddPetTid(builder, pet_tid);
    ResultPetCompose.AddResult(builder, result);
    return ResultPetCompose.EndResultPetCompose(builder);
  }

  public static void StartResultPetCompose(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddFailItemTid(FlatBufferBuilder builder, uint failItemTid) { builder.AddUint(2, failItemTid, 0); }
  public static void AddFailItemCnt(FlatBufferBuilder builder, uint failItemCnt) { builder.AddUint(3, failItemCnt, 0); }
  public static Offset<ResultPetCompose> EndResultPetCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultPetCompose>(o);
  }
};

public struct UseStatPoint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static UseStatPoint GetRootAsUseStatPoint(ByteBuffer _bb) { return GetRootAsUseStatPoint(_bb, new UseStatPoint()); }
  public static UseStatPoint GetRootAsUseStatPoint(ByteBuffer _bb, UseStatPoint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public UseStatPoint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Stat { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<UseStatPoint> CreateUseStatPoint(FlatBufferBuilder builder,
      uint stat = 0,
      uint cnt = 0) {
    builder.StartObject(2);
    UseStatPoint.AddCnt(builder, cnt);
    UseStatPoint.AddStat(builder, stat);
    return UseStatPoint.EndUseStatPoint(builder);
  }

  public static void StartUseStatPoint(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddStat(FlatBufferBuilder builder, uint stat) { builder.AddUint(0, stat, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(1, cnt, 0); }
  public static Offset<UseStatPoint> EndUseStatPoint(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<UseStatPoint>(o);
  }
};

public struct MmoChannel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MmoChannel GetRootAsMmoChannel(ByteBuffer _bb) { return GetRootAsMmoChannel(_bb, new MmoChannel()); }
  public static MmoChannel GetRootAsMmoChannel(ByteBuffer _bb, MmoChannel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MmoChannel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort NumUser { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string ActualServerAddr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActualServerAddrBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetActualServerAddrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetActualServerAddrArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsPkZone { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsFieldBossSpawnZone { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint BonusExpRate { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BonusGoldRate { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string FieldBossKillerGuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFieldBossKillerGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetFieldBossKillerGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetFieldBossKillerGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public uint FieldBossKillerGuildMarkTid { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MmoChannel> CreateMmoChannel(FlatBufferBuilder builder,
      ushort num_user = 0,
      ushort channel_id = 0,
      StringOffset actual_server_addrOffset = default(StringOffset),
      bool is_pk_zone = false,
      bool is_field_boss_spawn_zone = false,
      uint bonus_exp_rate = 0,
      uint bonus_gold_rate = 0,
      StringOffset field_boss_killer_guild_nameOffset = default(StringOffset),
      uint field_boss_killer_guild_mark_tid = 0) {
    builder.StartObject(9);
    MmoChannel.AddFieldBossKillerGuildMarkTid(builder, field_boss_killer_guild_mark_tid);
    MmoChannel.AddFieldBossKillerGuildName(builder, field_boss_killer_guild_nameOffset);
    MmoChannel.AddBonusGoldRate(builder, bonus_gold_rate);
    MmoChannel.AddBonusExpRate(builder, bonus_exp_rate);
    MmoChannel.AddActualServerAddr(builder, actual_server_addrOffset);
    MmoChannel.AddChannelId(builder, channel_id);
    MmoChannel.AddNumUser(builder, num_user);
    MmoChannel.AddIsFieldBossSpawnZone(builder, is_field_boss_spawn_zone);
    MmoChannel.AddIsPkZone(builder, is_pk_zone);
    return MmoChannel.EndMmoChannel(builder);
  }

  public static void StartMmoChannel(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddNumUser(FlatBufferBuilder builder, ushort numUser) { builder.AddUshort(0, numUser, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(1, channelId, 0); }
  public static void AddActualServerAddr(FlatBufferBuilder builder, StringOffset actualServerAddrOffset) { builder.AddOffset(2, actualServerAddrOffset.Value, 0); }
  public static void AddIsPkZone(FlatBufferBuilder builder, bool isPkZone) { builder.AddBool(3, isPkZone, false); }
  public static void AddIsFieldBossSpawnZone(FlatBufferBuilder builder, bool isFieldBossSpawnZone) { builder.AddBool(4, isFieldBossSpawnZone, false); }
  public static void AddBonusExpRate(FlatBufferBuilder builder, uint bonusExpRate) { builder.AddUint(5, bonusExpRate, 0); }
  public static void AddBonusGoldRate(FlatBufferBuilder builder, uint bonusGoldRate) { builder.AddUint(6, bonusGoldRate, 0); }
  public static void AddFieldBossKillerGuildName(FlatBufferBuilder builder, StringOffset fieldBossKillerGuildNameOffset) { builder.AddOffset(7, fieldBossKillerGuildNameOffset.Value, 0); }
  public static void AddFieldBossKillerGuildMarkTid(FlatBufferBuilder builder, uint fieldBossKillerGuildMarkTid) { builder.AddUint(8, fieldBossKillerGuildMarkTid, 0); }
  public static Offset<MmoChannel> EndMmoChannel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MmoChannel>(o);
  }
};

public struct RestoreExp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RestoreExp GetRootAsRestoreExp(ByteBuffer _bb) { return GetRootAsRestoreExp(_bb, new RestoreExp()); }
  public static RestoreExp GetRootAsRestoreExp(ByteBuffer _bb, RestoreExp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RestoreExp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RestoreId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong Exp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public int Tendency { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KillerServerIdx { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string KillerCharNick { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKillerCharNickBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetKillerCharNickBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetKillerCharNickArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<RestoreExp> CreateRestoreExp(FlatBufferBuilder builder,
      ulong restore_id = 0,
      ulong exp = 0,
      int tendency = 0,
      ulong expire_dt = 0,
      uint killer_server_idx = 0,
      StringOffset killer_char_nickOffset = default(StringOffset)) {
    builder.StartObject(6);
    RestoreExp.AddExpireDt(builder, expire_dt);
    RestoreExp.AddExp(builder, exp);
    RestoreExp.AddRestoreId(builder, restore_id);
    RestoreExp.AddKillerCharNick(builder, killer_char_nickOffset);
    RestoreExp.AddKillerServerIdx(builder, killer_server_idx);
    RestoreExp.AddTendency(builder, tendency);
    return RestoreExp.EndRestoreExp(builder);
  }

  public static void StartRestoreExp(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddRestoreId(FlatBufferBuilder builder, ulong restoreId) { builder.AddUlong(0, restoreId, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(1, exp, 0); }
  public static void AddTendency(FlatBufferBuilder builder, int tendency) { builder.AddInt(2, tendency, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(3, expireDt, 0); }
  public static void AddKillerServerIdx(FlatBufferBuilder builder, uint killerServerIdx) { builder.AddUint(4, killerServerIdx, 0); }
  public static void AddKillerCharNick(FlatBufferBuilder builder, StringOffset killerCharNickOffset) { builder.AddOffset(5, killerCharNickOffset.Value, 0); }
  public static Offset<RestoreExp> EndRestoreExp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RestoreExp>(o);
  }
};

public struct PartyMemberDetail : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PartyMemberDetail GetRootAsPartyMemberDetail(ByteBuffer _bb) { return GetRootAsPartyMemberDetail(_bb, new PartyMemberDetail()); }
  public static PartyMemberDetail GetRootAsPartyMemberDetail(ByteBuffer _bb, PartyMemberDetail obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PartyMemberDetail __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsMaster { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<PartyMemberDetail> CreatePartyMemberDetail(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint server_idx = 0,
      bool is_master = false) {
    builder.StartObject(5);
    PartyMemberDetail.AddCharId(builder, char_id);
    PartyMemberDetail.AddServerIdx(builder, server_idx);
    PartyMemberDetail.AddNick(builder, nickOffset);
    PartyMemberDetail.AddCharTid(builder, char_tid);
    PartyMemberDetail.AddIsMaster(builder, is_master);
    return PartyMemberDetail.EndPartyMemberDetail(builder);
  }

  public static void StartPartyMemberDetail(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddIsMaster(FlatBufferBuilder builder, bool isMaster) { builder.AddBool(4, isMaster, false); }
  public static Offset<PartyMemberDetail> EndPartyMemberDetail(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PartyMemberDetail>(o);
  }
};

public struct PartyMember : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PartyMember GetRootAsPartyMember(ByteBuffer _bb) { return GetRootAsPartyMember(_bb, new PartyMember()); }
  public static PartyMember GetRootAsPartyMember(ByteBuffer _bb, PartyMember obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PartyMember __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UnetId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<PartyMember> CreatePartyMember(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint unet_id = 0,
      uint server_idx = 0) {
    builder.StartObject(3);
    PartyMember.AddCharId(builder, char_id);
    PartyMember.AddServerIdx(builder, server_idx);
    PartyMember.AddUnetId(builder, unet_id);
    return PartyMember.EndPartyMember(builder);
  }

  public static void StartPartyMember(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddUnetId(FlatBufferBuilder builder, uint unetId) { builder.AddUint(1, unetId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static Offset<PartyMember> EndPartyMember(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PartyMember>(o);
  }
};

public struct RankInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RankInfo GetRootAsRankInfo(ByteBuffer _bb) { return GetRootAsRankInfo(_bb, new RankInfo()); }
  public static RankInfo GetRootAsRankInfo(ByteBuffer _bb, RankInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RankInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Rank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BeforRank { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong Score { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Nick { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(16); }
  public ulong GuildId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string GuildName { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(20); }
  public byte GuildMarkTid { get { int o = __p.__offset(22); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<RankInfo> CreateRankInfo(FlatBufferBuilder builder,
      uint rank = 0,
      uint befor_rank = 0,
      uint server_idx = 0,
      ulong char_id = 0,
      uint char_tid = 0,
      ulong score = 0,
      StringOffset nickOffset = default(StringOffset),
      ulong guild_id = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      byte guild_mark_tid = 0) {
    builder.StartObject(10);
    RankInfo.AddGuildId(builder, guild_id);
    RankInfo.AddScore(builder, score);
    RankInfo.AddCharId(builder, char_id);
    RankInfo.AddGuildName(builder, guild_nameOffset);
    RankInfo.AddNick(builder, nickOffset);
    RankInfo.AddCharTid(builder, char_tid);
    RankInfo.AddServerIdx(builder, server_idx);
    RankInfo.AddBeforRank(builder, befor_rank);
    RankInfo.AddRank(builder, rank);
    RankInfo.AddGuildMarkTid(builder, guild_mark_tid);
    return RankInfo.EndRankInfo(builder);
  }

  public static void StartRankInfo(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddRank(FlatBufferBuilder builder, uint rank) { builder.AddUint(0, rank, 0); }
  public static void AddBeforRank(FlatBufferBuilder builder, uint beforRank) { builder.AddUint(1, beforRank, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(3, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(4, charTid, 0); }
  public static void AddScore(FlatBufferBuilder builder, ulong score) { builder.AddUlong(5, score, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(6, nickOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(7, guildId, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(8, guildNameOffset.Value, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, byte guildMarkTid) { builder.AddByte(9, guildMarkTid, 0); }
  public static Offset<RankInfo> EndRankInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RankInfo>(o);
  }
};

public struct FriendInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static FriendInfo GetRootAsFriendInfo(ByteBuffer _bb) { return GetRootAsFriendInfo(_bb, new FriendInfo()); }
  public static FriendInfo GetRootAsFriendInfo(ByteBuffer _bb, FriendInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public FriendInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint Lv { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsFriend { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsAlert { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsLogin { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong LogoutDt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<FriendInfo> CreateFriendInfo(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint lv = 0,
      bool is_friend = false,
      bool is_alert = false,
      bool is_login = false,
      ulong logout_dt = 0) {
    builder.StartObject(8);
    FriendInfo.AddLogoutDt(builder, logout_dt);
    FriendInfo.AddCharId(builder, char_id);
    FriendInfo.AddLv(builder, lv);
    FriendInfo.AddNick(builder, nickOffset);
    FriendInfo.AddCharTid(builder, char_tid);
    FriendInfo.AddIsLogin(builder, is_login);
    FriendInfo.AddIsAlert(builder, is_alert);
    FriendInfo.AddIsFriend(builder, is_friend);
    return FriendInfo.EndFriendInfo(builder);
  }

  public static void StartFriendInfo(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddLv(FlatBufferBuilder builder, uint lv) { builder.AddUint(3, lv, 0); }
  public static void AddIsFriend(FlatBufferBuilder builder, bool isFriend) { builder.AddBool(4, isFriend, false); }
  public static void AddIsAlert(FlatBufferBuilder builder, bool isAlert) { builder.AddBool(5, isAlert, false); }
  public static void AddIsLogin(FlatBufferBuilder builder, bool isLogin) { builder.AddBool(6, isLogin, false); }
  public static void AddLogoutDt(FlatBufferBuilder builder, ulong logoutDt) { builder.AddUlong(7, logoutDt, 0); }
  public static Offset<FriendInfo> EndFriendInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FriendInfo>(o);
  }
};

public struct FriendRequestInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static FriendRequestInfo GetRootAsFriendRequestInfo(ByteBuffer _bb) { return GetRootAsFriendRequestInfo(_bb, new FriendRequestInfo()); }
  public static FriendRequestInfo GetRootAsFriendRequestInfo(ByteBuffer _bb, FriendRequestInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public FriendRequestInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint Lv { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_FriendRequestState State { get { int o = __p.__offset(12); return o != 0 ? (E_FriendRequestState)__p.bb.Get(o + __p.bb_pos) : E_FriendRequestState.Request; } }
  public bool IsLogin { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong LogoutDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<FriendRequestInfo> CreateFriendRequestInfo(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint lv = 0,
      E_FriendRequestState state = E_FriendRequestState.Request,
      bool is_login = false,
      ulong logout_dt = 0) {
    builder.StartObject(7);
    FriendRequestInfo.AddLogoutDt(builder, logout_dt);
    FriendRequestInfo.AddCharId(builder, char_id);
    FriendRequestInfo.AddLv(builder, lv);
    FriendRequestInfo.AddNick(builder, nickOffset);
    FriendRequestInfo.AddCharTid(builder, char_tid);
    FriendRequestInfo.AddIsLogin(builder, is_login);
    FriendRequestInfo.AddState(builder, state);
    return FriendRequestInfo.EndFriendRequestInfo(builder);
  }

  public static void StartFriendRequestInfo(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddLv(FlatBufferBuilder builder, uint lv) { builder.AddUint(3, lv, 0); }
  public static void AddState(FlatBufferBuilder builder, E_FriendRequestState state) { builder.AddByte(4, (byte)state, 0); }
  public static void AddIsLogin(FlatBufferBuilder builder, bool isLogin) { builder.AddBool(5, isLogin, false); }
  public static void AddLogoutDt(FlatBufferBuilder builder, ulong logoutDt) { builder.AddUlong(6, logoutDt, 0); }
  public static Offset<FriendRequestInfo> EndFriendRequestInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FriendRequestInfo>(o);
  }
};

public struct GuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildInfo GetRootAsGuildInfo(ByteBuffer _bb) { return GetRootAsGuildInfo(_bb, new GuildInfo()); }
  public static GuildInfo GetRootAsGuildInfo(ByteBuffer _bb, GuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public ulong Exp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Intro { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetIntroBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIntroArray() { return __p.__vector_as_array<byte>(10); }
  public string Notice { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNoticeBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetNoticeBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNoticeArray() { return __p.__vector_as_array<byte>(12); }
  public ulong Money { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsQuickJoin { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort LoginBanStep { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort DonateBanStep { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong MasterCharId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string MasterCharNick { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMasterCharNickBytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetMasterCharNickBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetMasterCharNickArray() { return __p.__vector_as_array<byte>(24); }
  public uint MemberCnt { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte MarkTid { get { int o = __p.__offset(28); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong MarkUpdateDt { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ChatId { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceChatGrade ChatGrade { get { int o = __p.__offset(34); return o != 0 ? (E_GuildAllianceChatGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatGrade.None; } }
  public E_GuildAllianceChatState ChatState { get { int o = __p.__offset(36); return o != 0 ? (E_GuildAllianceChatState)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatState.None; } }
  public ulong CreateDt { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildRank { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GuildInfo> CreateGuildInfo(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset nameOffset = default(StringOffset),
      ulong exp = 0,
      StringOffset introOffset = default(StringOffset),
      StringOffset noticeOffset = default(StringOffset),
      ulong money = 0,
      bool is_quick_join = false,
      ushort login_ban_step = 0,
      ushort donate_ban_step = 0,
      ulong master_char_id = 0,
      StringOffset master_char_nickOffset = default(StringOffset),
      uint member_cnt = 0,
      byte mark_tid = 0,
      ulong mark_update_dt = 0,
      ulong chat_id = 0,
      E_GuildAllianceChatGrade chat_grade = E_GuildAllianceChatGrade.None,
      E_GuildAllianceChatState chat_state = E_GuildAllianceChatState.None,
      ulong create_dt = 0,
      uint guild_rank = 0) {
    builder.StartObject(19);
    GuildInfo.AddCreateDt(builder, create_dt);
    GuildInfo.AddChatId(builder, chat_id);
    GuildInfo.AddMarkUpdateDt(builder, mark_update_dt);
    GuildInfo.AddMasterCharId(builder, master_char_id);
    GuildInfo.AddMoney(builder, money);
    GuildInfo.AddExp(builder, exp);
    GuildInfo.AddGuildId(builder, guild_id);
    GuildInfo.AddGuildRank(builder, guild_rank);
    GuildInfo.AddMemberCnt(builder, member_cnt);
    GuildInfo.AddMasterCharNick(builder, master_char_nickOffset);
    GuildInfo.AddNotice(builder, noticeOffset);
    GuildInfo.AddIntro(builder, introOffset);
    GuildInfo.AddName(builder, nameOffset);
    GuildInfo.AddDonateBanStep(builder, donate_ban_step);
    GuildInfo.AddLoginBanStep(builder, login_ban_step);
    GuildInfo.AddChatState(builder, chat_state);
    GuildInfo.AddChatGrade(builder, chat_grade);
    GuildInfo.AddMarkTid(builder, mark_tid);
    GuildInfo.AddIsQuickJoin(builder, is_quick_join);
    return GuildInfo.EndGuildInfo(builder);
  }

  public static void StartGuildInfo(FlatBufferBuilder builder) { builder.StartObject(19); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(2, exp, 0); }
  public static void AddIntro(FlatBufferBuilder builder, StringOffset introOffset) { builder.AddOffset(3, introOffset.Value, 0); }
  public static void AddNotice(FlatBufferBuilder builder, StringOffset noticeOffset) { builder.AddOffset(4, noticeOffset.Value, 0); }
  public static void AddMoney(FlatBufferBuilder builder, ulong money) { builder.AddUlong(5, money, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(6, isQuickJoin, false); }
  public static void AddLoginBanStep(FlatBufferBuilder builder, ushort loginBanStep) { builder.AddUshort(7, loginBanStep, 0); }
  public static void AddDonateBanStep(FlatBufferBuilder builder, ushort donateBanStep) { builder.AddUshort(8, donateBanStep, 0); }
  public static void AddMasterCharId(FlatBufferBuilder builder, ulong masterCharId) { builder.AddUlong(9, masterCharId, 0); }
  public static void AddMasterCharNick(FlatBufferBuilder builder, StringOffset masterCharNickOffset) { builder.AddOffset(10, masterCharNickOffset.Value, 0); }
  public static void AddMemberCnt(FlatBufferBuilder builder, uint memberCnt) { builder.AddUint(11, memberCnt, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(12, markTid, 0); }
  public static void AddMarkUpdateDt(FlatBufferBuilder builder, ulong markUpdateDt) { builder.AddUlong(13, markUpdateDt, 0); }
  public static void AddChatId(FlatBufferBuilder builder, ulong chatId) { builder.AddUlong(14, chatId, 0); }
  public static void AddChatGrade(FlatBufferBuilder builder, E_GuildAllianceChatGrade chatGrade) { builder.AddByte(15, (byte)chatGrade, 0); }
  public static void AddChatState(FlatBufferBuilder builder, E_GuildAllianceChatState chatState) { builder.AddByte(16, (byte)chatState, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(17, createDt, 0); }
  public static void AddGuildRank(FlatBufferBuilder builder, uint guildRank) { builder.AddUint(18, guildRank, 0); }
  public static Offset<GuildInfo> EndGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildInfo>(o);
  }
};

public struct GuildMemberInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildMemberInfo GetRootAsGuildMemberInfo(ByteBuffer _bb) { return GetRootAsGuildMemberInfo(_bb, new GuildMemberInfo()); }
  public static GuildMemberInfo GetRootAsGuildMemberInfo(ByteBuffer _bb, GuildMemberInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildMemberInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public E_GuildMemberGrade Grade { get { int o = __p.__offset(10); return o != 0 ? (E_GuildMemberGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildMemberGrade.None; } }
  public ulong Exp { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WeekExp { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong DonateExp { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WeekDonateExp { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildJoinState State { get { int o = __p.__offset(20); return o != 0 ? (E_GuildJoinState)__p.bb.Get(o + __p.bb_pos) : E_GuildJoinState.None; } }
  public uint DonateCnt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong DonateDt { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong AttendRewardDt { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Comment { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCommentBytes() { return __p.__vector_as_span(28); }
#else
  public ArraySegment<byte>? GetCommentBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetCommentArray() { return __p.__vector_as_array<byte>(28); }
  public bool IsLogin { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong LogoutDt { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<GuildMemberInfo> CreateGuildMemberInfo(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      E_GuildMemberGrade grade = E_GuildMemberGrade.None,
      ulong exp = 0,
      ulong week_exp = 0,
      ulong donate_exp = 0,
      ulong week_donate_exp = 0,
      E_GuildJoinState state = E_GuildJoinState.None,
      uint donate_cnt = 0,
      ulong donate_dt = 0,
      ulong attend_reward_dt = 0,
      StringOffset commentOffset = default(StringOffset),
      bool is_login = false,
      ulong logout_dt = 0) {
    builder.StartObject(15);
    GuildMemberInfo.AddLogoutDt(builder, logout_dt);
    GuildMemberInfo.AddAttendRewardDt(builder, attend_reward_dt);
    GuildMemberInfo.AddDonateDt(builder, donate_dt);
    GuildMemberInfo.AddWeekDonateExp(builder, week_donate_exp);
    GuildMemberInfo.AddDonateExp(builder, donate_exp);
    GuildMemberInfo.AddWeekExp(builder, week_exp);
    GuildMemberInfo.AddExp(builder, exp);
    GuildMemberInfo.AddCharId(builder, char_id);
    GuildMemberInfo.AddComment(builder, commentOffset);
    GuildMemberInfo.AddDonateCnt(builder, donate_cnt);
    GuildMemberInfo.AddNick(builder, nickOffset);
    GuildMemberInfo.AddCharTid(builder, char_tid);
    GuildMemberInfo.AddIsLogin(builder, is_login);
    GuildMemberInfo.AddState(builder, state);
    GuildMemberInfo.AddGrade(builder, grade);
    return GuildMemberInfo.EndGuildMemberInfo(builder);
  }

  public static void StartGuildMemberInfo(FlatBufferBuilder builder) { builder.StartObject(15); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddGrade(FlatBufferBuilder builder, E_GuildMemberGrade grade) { builder.AddByte(3, (byte)grade, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(4, exp, 0); }
  public static void AddWeekExp(FlatBufferBuilder builder, ulong weekExp) { builder.AddUlong(5, weekExp, 0); }
  public static void AddDonateExp(FlatBufferBuilder builder, ulong donateExp) { builder.AddUlong(6, donateExp, 0); }
  public static void AddWeekDonateExp(FlatBufferBuilder builder, ulong weekDonateExp) { builder.AddUlong(7, weekDonateExp, 0); }
  public static void AddState(FlatBufferBuilder builder, E_GuildJoinState state) { builder.AddByte(8, (byte)state, 0); }
  public static void AddDonateCnt(FlatBufferBuilder builder, uint donateCnt) { builder.AddUint(9, donateCnt, 0); }
  public static void AddDonateDt(FlatBufferBuilder builder, ulong donateDt) { builder.AddUlong(10, donateDt, 0); }
  public static void AddAttendRewardDt(FlatBufferBuilder builder, ulong attendRewardDt) { builder.AddUlong(11, attendRewardDt, 0); }
  public static void AddComment(FlatBufferBuilder builder, StringOffset commentOffset) { builder.AddOffset(12, commentOffset.Value, 0); }
  public static void AddIsLogin(FlatBufferBuilder builder, bool isLogin) { builder.AddBool(13, isLogin, false); }
  public static void AddLogoutDt(FlatBufferBuilder builder, ulong logoutDt) { builder.AddUlong(14, logoutDt, 0); }
  public static Offset<GuildMemberInfo> EndGuildMemberInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildMemberInfo>(o);
  }
};

public struct GuildBuff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildBuff GetRootAsGuildBuff(ByteBuffer _bb) { return GetRootAsGuildBuff(_bb, new GuildBuff()); }
  public static GuildBuff GetRootAsGuildBuff(ByteBuffer _bb, GuildBuff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildBuff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AbilityId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsAutoBuy { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GuildBuff> CreateGuildBuff(FlatBufferBuilder builder,
      uint ability_id = 0,
      ulong expire_dt = 0,
      bool is_auto_buy = false) {
    builder.StartObject(3);
    GuildBuff.AddExpireDt(builder, expire_dt);
    GuildBuff.AddAbilityId(builder, ability_id);
    GuildBuff.AddIsAutoBuy(builder, is_auto_buy);
    return GuildBuff.EndGuildBuff(builder);
  }

  public static void StartGuildBuff(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAbilityId(FlatBufferBuilder builder, uint abilityId) { builder.AddUint(0, abilityId, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(1, expireDt, 0); }
  public static void AddIsAutoBuy(FlatBufferBuilder builder, bool isAutoBuy) { builder.AddBool(2, isAutoBuy, false); }
  public static Offset<GuildBuff> EndGuildBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildBuff>(o);
  }
};

public struct GuildRequestInfoForGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildRequestInfoForGuild GetRootAsGuildRequestInfoForGuild(ByteBuffer _bb) { return GetRootAsGuildRequestInfoForGuild(_bb, new GuildRequestInfoForGuild()); }
  public static GuildRequestInfoForGuild GetRootAsGuildRequestInfoForGuild(ByteBuffer _bb, GuildRequestInfoForGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildRequestInfoForGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint CharLv { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Comment { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCommentBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetCommentBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCommentArray() { return __p.__vector_as_array<byte>(12); }
  public bool IsLogin { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong LogoutDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<GuildRequestInfoForGuild> CreateGuildRequestInfoForGuild(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint char_lv = 0,
      StringOffset commentOffset = default(StringOffset),
      bool is_login = false,
      ulong logout_dt = 0) {
    builder.StartObject(7);
    GuildRequestInfoForGuild.AddLogoutDt(builder, logout_dt);
    GuildRequestInfoForGuild.AddCharId(builder, char_id);
    GuildRequestInfoForGuild.AddComment(builder, commentOffset);
    GuildRequestInfoForGuild.AddCharLv(builder, char_lv);
    GuildRequestInfoForGuild.AddCharNick(builder, char_nickOffset);
    GuildRequestInfoForGuild.AddCharTid(builder, char_tid);
    GuildRequestInfoForGuild.AddIsLogin(builder, is_login);
    return GuildRequestInfoForGuild.EndGuildRequestInfoForGuild(builder);
  }

  public static void StartGuildRequestInfoForGuild(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddCharLv(FlatBufferBuilder builder, uint charLv) { builder.AddUint(3, charLv, 0); }
  public static void AddComment(FlatBufferBuilder builder, StringOffset commentOffset) { builder.AddOffset(4, commentOffset.Value, 0); }
  public static void AddIsLogin(FlatBufferBuilder builder, bool isLogin) { builder.AddBool(5, isLogin, false); }
  public static void AddLogoutDt(FlatBufferBuilder builder, ulong logoutDt) { builder.AddUlong(6, logoutDt, 0); }
  public static Offset<GuildRequestInfoForGuild> EndGuildRequestInfoForGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildRequestInfoForGuild>(o);
  }
};

public struct GuildRequestInfoForChar : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildRequestInfoForChar GetRootAsGuildRequestInfoForChar(ByteBuffer _bb) { return GetRootAsGuildRequestInfoForChar(_bb, new GuildRequestInfoForChar()); }
  public static GuildRequestInfoForChar GetRootAsGuildRequestInfoForChar(ByteBuffer _bb, GuildRequestInfoForChar obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildRequestInfoForChar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong Exp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public string Intro { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetIntroBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIntroArray() { return __p.__vector_as_array<byte>(10); }
  public bool IsQuickJoin { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort LoginBanStep { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort DonateBanStep { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong MasterCharId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string MasterCharNick { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMasterCharNickBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetMasterCharNickBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMasterCharNickArray() { return __p.__vector_as_array<byte>(20); }
  public uint MemberCnt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte MarkTid { get { int o = __p.__offset(24); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<GuildRequestInfoForChar> CreateGuildRequestInfoForChar(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong exp = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset introOffset = default(StringOffset),
      bool is_quick_join = false,
      ushort login_ban_step = 0,
      ushort donate_ban_step = 0,
      ulong master_char_id = 0,
      StringOffset master_char_nickOffset = default(StringOffset),
      uint member_cnt = 0,
      byte mark_tid = 0) {
    builder.StartObject(11);
    GuildRequestInfoForChar.AddMasterCharId(builder, master_char_id);
    GuildRequestInfoForChar.AddExp(builder, exp);
    GuildRequestInfoForChar.AddGuildId(builder, guild_id);
    GuildRequestInfoForChar.AddMemberCnt(builder, member_cnt);
    GuildRequestInfoForChar.AddMasterCharNick(builder, master_char_nickOffset);
    GuildRequestInfoForChar.AddIntro(builder, introOffset);
    GuildRequestInfoForChar.AddName(builder, nameOffset);
    GuildRequestInfoForChar.AddDonateBanStep(builder, donate_ban_step);
    GuildRequestInfoForChar.AddLoginBanStep(builder, login_ban_step);
    GuildRequestInfoForChar.AddMarkTid(builder, mark_tid);
    GuildRequestInfoForChar.AddIsQuickJoin(builder, is_quick_join);
    return GuildRequestInfoForChar.EndGuildRequestInfoForChar(builder);
  }

  public static void StartGuildRequestInfoForChar(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(1, exp, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddIntro(FlatBufferBuilder builder, StringOffset introOffset) { builder.AddOffset(3, introOffset.Value, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(4, isQuickJoin, false); }
  public static void AddLoginBanStep(FlatBufferBuilder builder, ushort loginBanStep) { builder.AddUshort(5, loginBanStep, 0); }
  public static void AddDonateBanStep(FlatBufferBuilder builder, ushort donateBanStep) { builder.AddUshort(6, donateBanStep, 0); }
  public static void AddMasterCharId(FlatBufferBuilder builder, ulong masterCharId) { builder.AddUlong(7, masterCharId, 0); }
  public static void AddMasterCharNick(FlatBufferBuilder builder, StringOffset masterCharNickOffset) { builder.AddOffset(8, masterCharNickOffset.Value, 0); }
  public static void AddMemberCnt(FlatBufferBuilder builder, uint memberCnt) { builder.AddUint(9, memberCnt, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(10, markTid, 0); }
  public static Offset<GuildRequestInfoForChar> EndGuildRequestInfoForChar(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildRequestInfoForChar>(o);
  }
};

public struct GuildRankInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildRankInfo GetRootAsGuildRankInfo(ByteBuffer _bb) { return GetRootAsGuildRankInfo(_bb, new GuildRankInfo()); }
  public static GuildRankInfo GetRootAsGuildRankInfo(ByteBuffer _bb, GuildRankInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildRankInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Rank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public ulong Exp { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Intro { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetIntroBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetIntroArray() { return __p.__vector_as_array<byte>(12); }
  public bool IsQuickJoin { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong MasterCharId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string MasterCharNick { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMasterCharNickBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetMasterCharNickBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMasterCharNickArray() { return __p.__vector_as_array<byte>(18); }
  public uint MemberCnt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte MarkTid { get { int o = __p.__offset(22); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong CreateDt { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<GuildRankInfo> CreateGuildRankInfo(FlatBufferBuilder builder,
      uint rank = 0,
      ulong guild_id = 0,
      StringOffset nameOffset = default(StringOffset),
      ulong exp = 0,
      StringOffset introOffset = default(StringOffset),
      bool is_quick_join = false,
      ulong master_char_id = 0,
      StringOffset master_char_nickOffset = default(StringOffset),
      uint member_cnt = 0,
      byte mark_tid = 0,
      ulong create_dt = 0) {
    builder.StartObject(11);
    GuildRankInfo.AddCreateDt(builder, create_dt);
    GuildRankInfo.AddMasterCharId(builder, master_char_id);
    GuildRankInfo.AddExp(builder, exp);
    GuildRankInfo.AddGuildId(builder, guild_id);
    GuildRankInfo.AddMemberCnt(builder, member_cnt);
    GuildRankInfo.AddMasterCharNick(builder, master_char_nickOffset);
    GuildRankInfo.AddIntro(builder, introOffset);
    GuildRankInfo.AddName(builder, nameOffset);
    GuildRankInfo.AddRank(builder, rank);
    GuildRankInfo.AddMarkTid(builder, mark_tid);
    GuildRankInfo.AddIsQuickJoin(builder, is_quick_join);
    return GuildRankInfo.EndGuildRankInfo(builder);
  }

  public static void StartGuildRankInfo(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddRank(FlatBufferBuilder builder, uint rank) { builder.AddUint(0, rank, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(1, guildId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddExp(FlatBufferBuilder builder, ulong exp) { builder.AddUlong(3, exp, 0); }
  public static void AddIntro(FlatBufferBuilder builder, StringOffset introOffset) { builder.AddOffset(4, introOffset.Value, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(5, isQuickJoin, false); }
  public static void AddMasterCharId(FlatBufferBuilder builder, ulong masterCharId) { builder.AddUlong(6, masterCharId, 0); }
  public static void AddMasterCharNick(FlatBufferBuilder builder, StringOffset masterCharNickOffset) { builder.AddOffset(7, masterCharNickOffset.Value, 0); }
  public static void AddMemberCnt(FlatBufferBuilder builder, uint memberCnt) { builder.AddUint(8, memberCnt, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(9, markTid, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(10, createDt, 0); }
  public static Offset<GuildRankInfo> EndGuildRankInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildRankInfo>(o);
  }
};

public struct GuildAllianceInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildAllianceInfo GetRootAsGuildAllianceInfo(ByteBuffer _bb) { return GetRootAsGuildAllianceInfo(_bb, new GuildAllianceInfo()); }
  public static GuildAllianceInfo GetRootAsGuildAllianceInfo(ByteBuffer _bb, GuildAllianceInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildAllianceInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public ulong MasterCharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string MasterCharNick { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMasterCharNickBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetMasterCharNickBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetMasterCharNickArray() { return __p.__vector_as_array<byte>(10); }
  public uint MemberCnt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte MarkTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong GuildExp { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ChatId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceChatGrade ChatGrade { get { int o = __p.__offset(20); return o != 0 ? (E_GuildAllianceChatGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatGrade.None; } }
  public E_GuildAllianceChatState ChatState { get { int o = __p.__offset(22); return o != 0 ? (E_GuildAllianceChatState)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatState.None; } }
  public E_GuildAllianceState State { get { int o = __p.__offset(24); return o != 0 ? (E_GuildAllianceState)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceState.None; } }

  public static Offset<GuildAllianceInfo> CreateGuildAllianceInfo(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset nameOffset = default(StringOffset),
      ulong master_char_id = 0,
      StringOffset master_char_nickOffset = default(StringOffset),
      uint member_cnt = 0,
      byte mark_tid = 0,
      ulong guild_exp = 0,
      ulong chat_id = 0,
      E_GuildAllianceChatGrade chat_grade = E_GuildAllianceChatGrade.None,
      E_GuildAllianceChatState chat_state = E_GuildAllianceChatState.None,
      E_GuildAllianceState state = E_GuildAllianceState.None) {
    builder.StartObject(11);
    GuildAllianceInfo.AddChatId(builder, chat_id);
    GuildAllianceInfo.AddGuildExp(builder, guild_exp);
    GuildAllianceInfo.AddMasterCharId(builder, master_char_id);
    GuildAllianceInfo.AddGuildId(builder, guild_id);
    GuildAllianceInfo.AddMemberCnt(builder, member_cnt);
    GuildAllianceInfo.AddMasterCharNick(builder, master_char_nickOffset);
    GuildAllianceInfo.AddName(builder, nameOffset);
    GuildAllianceInfo.AddState(builder, state);
    GuildAllianceInfo.AddChatState(builder, chat_state);
    GuildAllianceInfo.AddChatGrade(builder, chat_grade);
    GuildAllianceInfo.AddMarkTid(builder, mark_tid);
    return GuildAllianceInfo.EndGuildAllianceInfo(builder);
  }

  public static void StartGuildAllianceInfo(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddMasterCharId(FlatBufferBuilder builder, ulong masterCharId) { builder.AddUlong(2, masterCharId, 0); }
  public static void AddMasterCharNick(FlatBufferBuilder builder, StringOffset masterCharNickOffset) { builder.AddOffset(3, masterCharNickOffset.Value, 0); }
  public static void AddMemberCnt(FlatBufferBuilder builder, uint memberCnt) { builder.AddUint(4, memberCnt, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(5, markTid, 0); }
  public static void AddGuildExp(FlatBufferBuilder builder, ulong guildExp) { builder.AddUlong(6, guildExp, 0); }
  public static void AddChatId(FlatBufferBuilder builder, ulong chatId) { builder.AddUlong(7, chatId, 0); }
  public static void AddChatGrade(FlatBufferBuilder builder, E_GuildAllianceChatGrade chatGrade) { builder.AddByte(8, (byte)chatGrade, 0); }
  public static void AddChatState(FlatBufferBuilder builder, E_GuildAllianceChatState chatState) { builder.AddByte(9, (byte)chatState, 0); }
  public static void AddState(FlatBufferBuilder builder, E_GuildAllianceState state) { builder.AddByte(10, (byte)state, 0); }
  public static Offset<GuildAllianceInfo> EndGuildAllianceInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildAllianceInfo>(o);
  }
};

public struct GuildAllianceSimpleInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildAllianceSimpleInfo GetRootAsGuildAllianceSimpleInfo(ByteBuffer _bb) { return GetRootAsGuildAllianceSimpleInfo(_bb, new GuildAllianceSimpleInfo()); }
  public static GuildAllianceSimpleInfo GetRootAsGuildAllianceSimpleInfo(ByteBuffer _bb, GuildAllianceSimpleInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildAllianceSimpleInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceState State { get { int o = __p.__offset(6); return o != 0 ? (E_GuildAllianceState)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceState.None; } }

  public static Offset<GuildAllianceSimpleInfo> CreateGuildAllianceSimpleInfo(FlatBufferBuilder builder,
      ulong guild_id = 0,
      E_GuildAllianceState state = E_GuildAllianceState.None) {
    builder.StartObject(2);
    GuildAllianceSimpleInfo.AddGuildId(builder, guild_id);
    GuildAllianceSimpleInfo.AddState(builder, state);
    return GuildAllianceSimpleInfo.EndGuildAllianceSimpleInfo(builder);
  }

  public static void StartGuildAllianceSimpleInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddState(FlatBufferBuilder builder, E_GuildAllianceState state) { builder.AddByte(1, (byte)state, 0); }
  public static Offset<GuildAllianceSimpleInfo> EndGuildAllianceSimpleInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildAllianceSimpleInfo>(o);
  }
};

public struct ExchangeItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ExchangeItem GetRootAsExchangeItem(ByteBuffer _bb) { return GetRootAsExchangeItem(_bb, new ExchangeItem()); }
  public static ExchangeItem GetRootAsExchangeItem(ByteBuffer _bb, ExchangeItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ExchangeItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ExchangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SellerUserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemOptions(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ItemOptionsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemOptionsBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetItemOptionsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public uint[] GetItemOptionsArray() { return __p.__vector_as_array<uint>(12); }
  public uint ItemSockets(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ItemSocketsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemSocketsBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetItemSocketsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public uint[] GetItemSocketsArray() { return __p.__vector_as_array<uint>(14); }
  public uint ItemCnt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTotalPrice { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float ItemPrice { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public ulong SellStartDt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ExchangeItem> CreateExchangeItem(FlatBufferBuilder builder,
      ulong exchange_id = 0,
      ulong seller_user_id = 0,
      ulong item_id = 0,
      uint item_tid = 0,
      VectorOffset item_optionsOffset = default(VectorOffset),
      VectorOffset item_socketsOffset = default(VectorOffset),
      uint item_cnt = 0,
      uint item_total_price = 0,
      float item_price = 0.0f,
      ulong sell_start_dt = 0,
      ulong expire_dt = 0) {
    builder.StartObject(11);
    ExchangeItem.AddExpireDt(builder, expire_dt);
    ExchangeItem.AddSellStartDt(builder, sell_start_dt);
    ExchangeItem.AddItemId(builder, item_id);
    ExchangeItem.AddSellerUserId(builder, seller_user_id);
    ExchangeItem.AddExchangeId(builder, exchange_id);
    ExchangeItem.AddItemPrice(builder, item_price);
    ExchangeItem.AddItemTotalPrice(builder, item_total_price);
    ExchangeItem.AddItemCnt(builder, item_cnt);
    ExchangeItem.AddItemSockets(builder, item_socketsOffset);
    ExchangeItem.AddItemOptions(builder, item_optionsOffset);
    ExchangeItem.AddItemTid(builder, item_tid);
    return ExchangeItem.EndExchangeItem(builder);
  }

  public static void StartExchangeItem(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddExchangeId(FlatBufferBuilder builder, ulong exchangeId) { builder.AddUlong(0, exchangeId, 0); }
  public static void AddSellerUserId(FlatBufferBuilder builder, ulong sellerUserId) { builder.AddUlong(1, sellerUserId, 0); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(2, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(3, itemTid, 0); }
  public static void AddItemOptions(FlatBufferBuilder builder, VectorOffset itemOptionsOffset) { builder.AddOffset(4, itemOptionsOffset.Value, 0); }
  public static VectorOffset CreateItemOptionsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemOptionsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemOptionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemSockets(FlatBufferBuilder builder, VectorOffset itemSocketsOffset) { builder.AddOffset(5, itemSocketsOffset.Value, 0); }
  public static VectorOffset CreateItemSocketsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemSocketsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemSocketsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(6, itemCnt, 0); }
  public static void AddItemTotalPrice(FlatBufferBuilder builder, uint itemTotalPrice) { builder.AddUint(7, itemTotalPrice, 0); }
  public static void AddItemPrice(FlatBufferBuilder builder, float itemPrice) { builder.AddFloat(8, itemPrice, 0.0f); }
  public static void AddSellStartDt(FlatBufferBuilder builder, ulong sellStartDt) { builder.AddUlong(9, sellStartDt, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(10, expireDt, 0); }
  public static Offset<ExchangeItem> EndExchangeItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ExchangeItem>(o);
  }
};

public struct ExchangeItemPrice : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ExchangeItemPrice GetRootAsExchangeItemPrice(ByteBuffer _bb) { return GetRootAsExchangeItemPrice(_bb, new ExchangeItemPrice()); }
  public static ExchangeItemPrice GetRootAsExchangeItemPrice(ByteBuffer _bb, ExchangeItemPrice obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ExchangeItemPrice __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemRegistCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float ItemMinPrice { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float ItemMaxPrice { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ExchangeItemPrice> CreateExchangeItemPrice(FlatBufferBuilder builder,
      uint item_tid = 0,
      uint item_group_id = 0,
      uint item_regist_cnt = 0,
      float item_min_price = 0.0f,
      float item_max_price = 0.0f) {
    builder.StartObject(5);
    ExchangeItemPrice.AddItemMaxPrice(builder, item_max_price);
    ExchangeItemPrice.AddItemMinPrice(builder, item_min_price);
    ExchangeItemPrice.AddItemRegistCnt(builder, item_regist_cnt);
    ExchangeItemPrice.AddItemGroupId(builder, item_group_id);
    ExchangeItemPrice.AddItemTid(builder, item_tid);
    return ExchangeItemPrice.EndExchangeItemPrice(builder);
  }

  public static void StartExchangeItemPrice(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(0, itemTid, 0); }
  public static void AddItemGroupId(FlatBufferBuilder builder, uint itemGroupId) { builder.AddUint(1, itemGroupId, 0); }
  public static void AddItemRegistCnt(FlatBufferBuilder builder, uint itemRegistCnt) { builder.AddUint(2, itemRegistCnt, 0); }
  public static void AddItemMinPrice(FlatBufferBuilder builder, float itemMinPrice) { builder.AddFloat(3, itemMinPrice, 0.0f); }
  public static void AddItemMaxPrice(FlatBufferBuilder builder, float itemMaxPrice) { builder.AddFloat(4, itemMaxPrice, 0.0f); }
  public static Offset<ExchangeItemPrice> EndExchangeItemPrice(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ExchangeItemPrice>(o);
  }
};

public struct ExchangeTransaction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ExchangeTransaction GetRootAsExchangeTransaction(ByteBuffer _bb) { return GetRootAsExchangeTransaction(_bb, new ExchangeTransaction()); }
  public static ExchangeTransaction GetRootAsExchangeTransaction(ByteBuffer _bb, ExchangeTransaction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ExchangeTransaction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TransactionId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ExchangeId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemOption(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ItemOptionLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemOptionBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetItemOptionBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public uint[] GetItemOptionArray() { return __p.__vector_as_array<uint>(12); }
  public uint ItemCnt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTotalPrice { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTotalPriceTax { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float ItemPrice { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public ulong CreateDt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ExchangeTransaction> CreateExchangeTransaction(FlatBufferBuilder builder,
      ulong transaction_id = 0,
      ulong exchange_id = 0,
      ulong item_id = 0,
      uint item_tid = 0,
      VectorOffset item_optionOffset = default(VectorOffset),
      uint item_cnt = 0,
      uint item_total_price = 0,
      uint item_total_price_tax = 0,
      float item_price = 0.0f,
      ulong create_dt = 0) {
    builder.StartObject(10);
    ExchangeTransaction.AddCreateDt(builder, create_dt);
    ExchangeTransaction.AddItemId(builder, item_id);
    ExchangeTransaction.AddExchangeId(builder, exchange_id);
    ExchangeTransaction.AddTransactionId(builder, transaction_id);
    ExchangeTransaction.AddItemPrice(builder, item_price);
    ExchangeTransaction.AddItemTotalPriceTax(builder, item_total_price_tax);
    ExchangeTransaction.AddItemTotalPrice(builder, item_total_price);
    ExchangeTransaction.AddItemCnt(builder, item_cnt);
    ExchangeTransaction.AddItemOption(builder, item_optionOffset);
    ExchangeTransaction.AddItemTid(builder, item_tid);
    return ExchangeTransaction.EndExchangeTransaction(builder);
  }

  public static void StartExchangeTransaction(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddTransactionId(FlatBufferBuilder builder, ulong transactionId) { builder.AddUlong(0, transactionId, 0); }
  public static void AddExchangeId(FlatBufferBuilder builder, ulong exchangeId) { builder.AddUlong(1, exchangeId, 0); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(2, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(3, itemTid, 0); }
  public static void AddItemOption(FlatBufferBuilder builder, VectorOffset itemOptionOffset) { builder.AddOffset(4, itemOptionOffset.Value, 0); }
  public static VectorOffset CreateItemOptionVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemOptionVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemOptionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(5, itemCnt, 0); }
  public static void AddItemTotalPrice(FlatBufferBuilder builder, uint itemTotalPrice) { builder.AddUint(6, itemTotalPrice, 0); }
  public static void AddItemTotalPriceTax(FlatBufferBuilder builder, uint itemTotalPriceTax) { builder.AddUint(7, itemTotalPriceTax, 0); }
  public static void AddItemPrice(FlatBufferBuilder builder, float itemPrice) { builder.AddFloat(8, itemPrice, 0.0f); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(9, createDt, 0); }
  public static Offset<ExchangeTransaction> EndExchangeTransaction(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ExchangeTransaction>(o);
  }
};

public struct Quest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Quest GetRootAsQuest(ByteBuffer _bb) { return GetRootAsQuest(_bb, new Quest()); }
  public static Quest GetRootAsQuest(ByteBuffer _bb, Quest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Quest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Value1 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Value2 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_QuestState State { get { int o = __p.__offset(12); return o != 0 ? (E_QuestState)__p.bb.Get(o + __p.bb_pos) : E_QuestState.None; } }

  public static Offset<Quest> CreateQuest(FlatBufferBuilder builder,
      ulong quest_id = 0,
      uint quest_tid = 0,
      uint value1 = 0,
      uint value2 = 0,
      E_QuestState state = E_QuestState.None) {
    builder.StartObject(5);
    Quest.AddQuestId(builder, quest_id);
    Quest.AddValue2(builder, value2);
    Quest.AddValue1(builder, value1);
    Quest.AddQuestTid(builder, quest_tid);
    Quest.AddState(builder, state);
    return Quest.EndQuest(builder);
  }

  public static void StartQuest(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static void AddValue1(FlatBufferBuilder builder, uint value1) { builder.AddUint(2, value1, 0); }
  public static void AddValue2(FlatBufferBuilder builder, uint value2) { builder.AddUint(3, value2, 0); }
  public static void AddState(FlatBufferBuilder builder, E_QuestState state) { builder.AddByte(4, (byte)state, 0); }
  public static Offset<Quest> EndQuest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Quest>(o);
  }
};

public struct QuestDaily : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static QuestDaily GetRootAsQuestDaily(ByteBuffer _bb) { return GetRootAsQuestDaily(_bb, new QuestDaily()); }
  public static QuestDaily GetRootAsQuestDaily(ByteBuffer _bb, QuestDaily obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public QuestDaily __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint QuestListTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Value { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte CondType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint CondId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ClearCnt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_QuestState State { get { int o = __p.__offset(18); return o != 0 ? (E_QuestState)__p.bb.Get(o + __p.bb_pos) : E_QuestState.None; } }
  public long CreateDt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<QuestDaily> CreateQuestDaily(FlatBufferBuilder builder,
      ulong quest_id = 0,
      uint quest_tid = 0,
      uint quest_list_tid = 0,
      uint value = 0,
      byte cond_type = 0,
      uint cond_id = 0,
      uint clear_cnt = 0,
      E_QuestState state = E_QuestState.None,
      long create_dt = 0) {
    builder.StartObject(9);
    QuestDaily.AddCreateDt(builder, create_dt);
    QuestDaily.AddQuestId(builder, quest_id);
    QuestDaily.AddClearCnt(builder, clear_cnt);
    QuestDaily.AddCondId(builder, cond_id);
    QuestDaily.AddValue(builder, value);
    QuestDaily.AddQuestListTid(builder, quest_list_tid);
    QuestDaily.AddQuestTid(builder, quest_tid);
    QuestDaily.AddState(builder, state);
    QuestDaily.AddCondType(builder, cond_type);
    return QuestDaily.EndQuestDaily(builder);
  }

  public static void StartQuestDaily(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static void AddQuestListTid(FlatBufferBuilder builder, uint questListTid) { builder.AddUint(2, questListTid, 0); }
  public static void AddValue(FlatBufferBuilder builder, uint value) { builder.AddUint(3, value, 0); }
  public static void AddCondType(FlatBufferBuilder builder, byte condType) { builder.AddByte(4, condType, 0); }
  public static void AddCondId(FlatBufferBuilder builder, uint condId) { builder.AddUint(5, condId, 0); }
  public static void AddClearCnt(FlatBufferBuilder builder, uint clearCnt) { builder.AddUint(6, clearCnt, 0); }
  public static void AddState(FlatBufferBuilder builder, E_QuestState state) { builder.AddByte(7, (byte)state, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, long createDt) { builder.AddLong(8, createDt, 0); }
  public static Offset<QuestDaily> EndQuestDaily(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<QuestDaily>(o);
  }
};

public struct QuestEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static QuestEvent GetRootAsQuestEvent(ByteBuffer _bb) { return GetRootAsQuestEvent(_bb, new QuestEvent()); }
  public static QuestEvent GetRootAsQuestEvent(ByteBuffer _bb, QuestEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public QuestEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GroupTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte Day { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint Value { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_QuestState State { get { int o = __p.__offset(14); return o != 0 ? (E_QuestState)__p.bb.Get(o + __p.bb_pos) : E_QuestState.None; } }
  public ulong CreateDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<QuestEvent> CreateQuestEvent(FlatBufferBuilder builder,
      ulong quest_id = 0,
      uint quest_tid = 0,
      uint group_tid = 0,
      byte day = 0,
      uint value = 0,
      E_QuestState state = E_QuestState.None,
      ulong create_dt = 0) {
    builder.StartObject(7);
    QuestEvent.AddCreateDt(builder, create_dt);
    QuestEvent.AddQuestId(builder, quest_id);
    QuestEvent.AddValue(builder, value);
    QuestEvent.AddGroupTid(builder, group_tid);
    QuestEvent.AddQuestTid(builder, quest_tid);
    QuestEvent.AddState(builder, state);
    QuestEvent.AddDay(builder, day);
    return QuestEvent.EndQuestEvent(builder);
  }

  public static void StartQuestEvent(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static void AddGroupTid(FlatBufferBuilder builder, uint groupTid) { builder.AddUint(2, groupTid, 0); }
  public static void AddDay(FlatBufferBuilder builder, byte day) { builder.AddByte(3, day, 0); }
  public static void AddValue(FlatBufferBuilder builder, uint value) { builder.AddUint(4, value, 0); }
  public static void AddState(FlatBufferBuilder builder, E_QuestState state) { builder.AddByte(5, (byte)state, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(6, createDt, 0); }
  public static Offset<QuestEvent> EndQuestEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<QuestEvent>(o);
  }
};

public struct ChangeQuest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChangeQuest GetRootAsChangeQuest(ByteBuffer _bb) { return GetRootAsChangeQuest(_bb, new ChangeQuest()); }
  public static ChangeQuest GetRootAsChangeQuest(ByteBuffer _bb, ChangeQuest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChangeQuest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint QuestTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong StartDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong EndDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong RewardDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CreateDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ChangeQuest> CreateChangeQuest(FlatBufferBuilder builder,
      uint quest_tid = 0,
      ulong start_dt = 0,
      ulong end_dt = 0,
      ulong reward_dt = 0,
      ulong create_dt = 0) {
    builder.StartObject(5);
    ChangeQuest.AddCreateDt(builder, create_dt);
    ChangeQuest.AddRewardDt(builder, reward_dt);
    ChangeQuest.AddEndDt(builder, end_dt);
    ChangeQuest.AddStartDt(builder, start_dt);
    ChangeQuest.AddQuestTid(builder, quest_tid);
    return ChangeQuest.EndChangeQuest(builder);
  }

  public static void StartChangeQuest(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(0, questTid, 0); }
  public static void AddStartDt(FlatBufferBuilder builder, ulong startDt) { builder.AddUlong(1, startDt, 0); }
  public static void AddEndDt(FlatBufferBuilder builder, ulong endDt) { builder.AddUlong(2, endDt, 0); }
  public static void AddRewardDt(FlatBufferBuilder builder, ulong rewardDt) { builder.AddUlong(3, rewardDt, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(4, createDt, 0); }
  public static Offset<ChangeQuest> EndChangeQuest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChangeQuest>(o);
  }
};

public struct ItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb) { return GetRootAsItemInfo(_bb, new ItemInfo()); }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb, ItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? AccountStack(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AccountStackLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? Stack(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StackLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? Equip(int j) { int o = __p.__offset(8); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? Pet(int j) { int o = __p.__offset(10); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? PetGachaKeep(int j) { int o = __p.__offset(12); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetGachaKeepLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Change? Change(int j) { int o = __p.__offset(14); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ChangeGachaKeep(int j) { int o = __p.__offset(16); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeGachaKeepLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Rune? Rune(int j) { int o = __p.__offset(18); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RuneLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ItemInfo> CreateItemInfo(FlatBufferBuilder builder,
      VectorOffset account_stackOffset = default(VectorOffset),
      VectorOffset stackOffset = default(VectorOffset),
      VectorOffset equipOffset = default(VectorOffset),
      VectorOffset petOffset = default(VectorOffset),
      VectorOffset pet_gacha_keepOffset = default(VectorOffset),
      VectorOffset changeOffset = default(VectorOffset),
      VectorOffset change_gacha_keepOffset = default(VectorOffset),
      VectorOffset runeOffset = default(VectorOffset)) {
    builder.StartObject(8);
    ItemInfo.AddRune(builder, runeOffset);
    ItemInfo.AddChangeGachaKeep(builder, change_gacha_keepOffset);
    ItemInfo.AddChange(builder, changeOffset);
    ItemInfo.AddPetGachaKeep(builder, pet_gacha_keepOffset);
    ItemInfo.AddPet(builder, petOffset);
    ItemInfo.AddEquip(builder, equipOffset);
    ItemInfo.AddStack(builder, stackOffset);
    ItemInfo.AddAccountStack(builder, account_stackOffset);
    return ItemInfo.EndItemInfo(builder);
  }

  public static void StartItemInfo(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddAccountStack(FlatBufferBuilder builder, VectorOffset accountStackOffset) { builder.AddOffset(0, accountStackOffset.Value, 0); }
  public static VectorOffset CreateAccountStackVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAccountStackVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAccountStackVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStack(FlatBufferBuilder builder, VectorOffset stackOffset) { builder.AddOffset(1, stackOffset.Value, 0); }
  public static VectorOffset CreateStackVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStackVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStackVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquip(FlatBufferBuilder builder, VectorOffset equipOffset) { builder.AddOffset(2, equipOffset.Value, 0); }
  public static VectorOffset CreateEquipVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPet(FlatBufferBuilder builder, VectorOffset petOffset) { builder.AddOffset(3, petOffset.Value, 0); }
  public static VectorOffset CreatePetVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetGachaKeep(FlatBufferBuilder builder, VectorOffset petGachaKeepOffset) { builder.AddOffset(4, petGachaKeepOffset.Value, 0); }
  public static VectorOffset CreatePetGachaKeepVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetGachaKeepVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetGachaKeepVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChange(FlatBufferBuilder builder, VectorOffset changeOffset) { builder.AddOffset(5, changeOffset.Value, 0); }
  public static VectorOffset CreateChangeVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeGachaKeep(FlatBufferBuilder builder, VectorOffset changeGachaKeepOffset) { builder.AddOffset(6, changeGachaKeepOffset.Value, 0); }
  public static VectorOffset CreateChangeGachaKeepVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeGachaKeepVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeGachaKeepVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRune(FlatBufferBuilder builder, VectorOffset runeOffset) { builder.AddOffset(7, runeOffset.Value, 0); }
  public static VectorOffset CreateRuneVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRuneVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ItemInfo> EndItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemInfo>(o);
  }
};

public struct BuyLimitInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BuyLimitInfo GetRootAsBuyLimitInfo(ByteBuffer _bb) { return GetRootAsBuyLimitInfo(_bb, new BuyLimitInfo()); }
  public static BuyLimitInfo GetRootAsBuyLimitInfo(ByteBuffer _bb, BuyLimitInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BuyLimitInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ShopTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BuyCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<BuyLimitInfo> CreateBuyLimitInfo(FlatBufferBuilder builder,
      uint shop_tid = 0,
      uint buy_cnt = 0,
      ulong expire_dt = 0) {
    builder.StartObject(3);
    BuyLimitInfo.AddExpireDt(builder, expire_dt);
    BuyLimitInfo.AddBuyCnt(builder, buy_cnt);
    BuyLimitInfo.AddShopTid(builder, shop_tid);
    return BuyLimitInfo.EndBuyLimitInfo(builder);
  }

  public static void StartBuyLimitInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddShopTid(FlatBufferBuilder builder, uint shopTid) { builder.AddUint(0, shopTid, 0); }
  public static void AddBuyCnt(FlatBufferBuilder builder, uint buyCnt) { builder.AddUint(1, buyCnt, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(2, expireDt, 0); }
  public static Offset<BuyLimitInfo> EndBuyLimitInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BuyLimitInfo>(o);
  }
};

public struct PkLog : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PkLog GetRootAsPkLog(ByteBuffer _bb) { return GetRootAsPkLog(_bb, new PkLog()); }
  public static PkLog GetRootAsPkLog(ByteBuffer _bb, PkLog obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PkLog __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PkId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong DieCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint DieCharTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string DieCharNick { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDieCharNickBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetDieCharNickBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDieCharNickArray() { return __p.__vector_as_array<byte>(10); }
  public string DieGuildName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDieGuildNameBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetDieGuildNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDieGuildNameArray() { return __p.__vector_as_array<byte>(12); }
  public byte DieGuildMarkTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte IsSneer { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong CreateDt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<PkLog> CreatePkLog(FlatBufferBuilder builder,
      ulong pk_id = 0,
      ulong die_char_id = 0,
      uint die_char_tid = 0,
      StringOffset die_char_nickOffset = default(StringOffset),
      StringOffset die_guild_nameOffset = default(StringOffset),
      byte die_guild_mark_tid = 0,
      byte is_sneer = 0,
      ulong create_dt = 0) {
    builder.StartObject(8);
    PkLog.AddCreateDt(builder, create_dt);
    PkLog.AddDieCharId(builder, die_char_id);
    PkLog.AddPkId(builder, pk_id);
    PkLog.AddDieGuildName(builder, die_guild_nameOffset);
    PkLog.AddDieCharNick(builder, die_char_nickOffset);
    PkLog.AddDieCharTid(builder, die_char_tid);
    PkLog.AddIsSneer(builder, is_sneer);
    PkLog.AddDieGuildMarkTid(builder, die_guild_mark_tid);
    return PkLog.EndPkLog(builder);
  }

  public static void StartPkLog(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddPkId(FlatBufferBuilder builder, ulong pkId) { builder.AddUlong(0, pkId, 0); }
  public static void AddDieCharId(FlatBufferBuilder builder, ulong dieCharId) { builder.AddUlong(1, dieCharId, 0); }
  public static void AddDieCharTid(FlatBufferBuilder builder, uint dieCharTid) { builder.AddUint(2, dieCharTid, 0); }
  public static void AddDieCharNick(FlatBufferBuilder builder, StringOffset dieCharNickOffset) { builder.AddOffset(3, dieCharNickOffset.Value, 0); }
  public static void AddDieGuildName(FlatBufferBuilder builder, StringOffset dieGuildNameOffset) { builder.AddOffset(4, dieGuildNameOffset.Value, 0); }
  public static void AddDieGuildMarkTid(FlatBufferBuilder builder, byte dieGuildMarkTid) { builder.AddByte(5, dieGuildMarkTid, 0); }
  public static void AddIsSneer(FlatBufferBuilder builder, byte isSneer) { builder.AddByte(6, isSneer, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(7, createDt, 0); }
  public static Offset<PkLog> EndPkLog(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PkLog>(o);
  }
};

public struct ChatInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChatInfo GetRootAsChatInfo(ByteBuffer _bb) { return GetRootAsChatInfo(_bb, new ChatInfo()); }
  public static ChatInfo GetRootAsChatInfo(ByteBuffer _bb, ChatInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChatInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatType ChatType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatType)__p.bb.Get(o + __p.bb_pos) : E_ChatType.None; } }
  public string Args(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ChatInfo> CreateChatInfo(FlatBufferBuilder builder,
      E_ChatType chat_type = E_ChatType.None,
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ChatInfo.AddArgs(builder, argsOffset);
    ChatInfo.AddChatType(builder, chat_type);
    return ChatInfo.EndChatInfo(builder);
  }

  public static void StartChatInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChatType(FlatBufferBuilder builder, E_ChatType chatType) { builder.AddByte(0, (byte)chatType, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(1, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ChatInfo> EndChatInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChatInfo>(o);
  }
};

public struct ServerBossInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ServerBossInfo GetRootAsServerBossInfo(ByteBuffer _bb) { return GetRootAsServerBossInfo(_bb, new ServerBossInfo()); }
  public static ServerBossInfo GetRootAsServerBossInfo(ByteBuffer _bb, ServerBossInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ServerBossInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong TimeSecList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int TimeSecListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeSecListBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetTimeSecListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetTimeSecListArray() { return __p.__vector_as_array<ulong>(6); }
  public ulong RoomExpireTsSec { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong EnterAbleStartTsSec { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong EnterAbleEndTsSec { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong KillAbleStartTsSec { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong KillAbleEndTsSec { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SpawnTsSec { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsKill { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsEnterAble { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ServerBossInfo> CreateServerBossInfo(FlatBufferBuilder builder,
      uint stage_tid = 0,
      VectorOffset time_sec_listOffset = default(VectorOffset),
      ulong room_expire_ts_sec = 0,
      ulong enter_able_start_ts_sec = 0,
      ulong enter_able_end_ts_sec = 0,
      ulong kill_able_start_ts_sec = 0,
      ulong kill_able_end_ts_sec = 0,
      ulong spawn_ts_sec = 0,
      bool is_kill = false,
      bool is_enter_able = false) {
    builder.StartObject(10);
    ServerBossInfo.AddSpawnTsSec(builder, spawn_ts_sec);
    ServerBossInfo.AddKillAbleEndTsSec(builder, kill_able_end_ts_sec);
    ServerBossInfo.AddKillAbleStartTsSec(builder, kill_able_start_ts_sec);
    ServerBossInfo.AddEnterAbleEndTsSec(builder, enter_able_end_ts_sec);
    ServerBossInfo.AddEnterAbleStartTsSec(builder, enter_able_start_ts_sec);
    ServerBossInfo.AddRoomExpireTsSec(builder, room_expire_ts_sec);
    ServerBossInfo.AddTimeSecList(builder, time_sec_listOffset);
    ServerBossInfo.AddStageTid(builder, stage_tid);
    ServerBossInfo.AddIsEnterAble(builder, is_enter_able);
    ServerBossInfo.AddIsKill(builder, is_kill);
    return ServerBossInfo.EndServerBossInfo(builder);
  }

  public static void StartServerBossInfo(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddTimeSecList(FlatBufferBuilder builder, VectorOffset timeSecListOffset) { builder.AddOffset(1, timeSecListOffset.Value, 0); }
  public static VectorOffset CreateTimeSecListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTimeSecListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartTimeSecListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddRoomExpireTsSec(FlatBufferBuilder builder, ulong roomExpireTsSec) { builder.AddUlong(2, roomExpireTsSec, 0); }
  public static void AddEnterAbleStartTsSec(FlatBufferBuilder builder, ulong enterAbleStartTsSec) { builder.AddUlong(3, enterAbleStartTsSec, 0); }
  public static void AddEnterAbleEndTsSec(FlatBufferBuilder builder, ulong enterAbleEndTsSec) { builder.AddUlong(4, enterAbleEndTsSec, 0); }
  public static void AddKillAbleStartTsSec(FlatBufferBuilder builder, ulong killAbleStartTsSec) { builder.AddUlong(5, killAbleStartTsSec, 0); }
  public static void AddKillAbleEndTsSec(FlatBufferBuilder builder, ulong killAbleEndTsSec) { builder.AddUlong(6, killAbleEndTsSec, 0); }
  public static void AddSpawnTsSec(FlatBufferBuilder builder, ulong spawnTsSec) { builder.AddUlong(7, spawnTsSec, 0); }
  public static void AddIsKill(FlatBufferBuilder builder, bool isKill) { builder.AddBool(8, isKill, false); }
  public static void AddIsEnterAble(FlatBufferBuilder builder, bool isEnterAble) { builder.AddBool(9, isEnterAble, false); }
  public static Offset<ServerBossInfo> EndServerBossInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerBossInfo>(o);
  }
};

public struct FieldBossInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static FieldBossInfo GetRootAsFieldBossInfo(ByteBuffer _bb) { return GetRootAsFieldBossInfo(_bb, new FieldBossInfo()); }
  public static FieldBossInfo GetRootAsFieldBossInfo(ByteBuffer _bb, FieldBossInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public FieldBossInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong LastKillTs { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong TimeSecList(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int TimeSecListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeSecListBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetTimeSecListBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public ulong[] GetTimeSecListArray() { return __p.__vector_as_array<ulong>(8); }

  public static Offset<FieldBossInfo> CreateFieldBossInfo(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ulong last_kill_ts = 0,
      VectorOffset time_sec_listOffset = default(VectorOffset)) {
    builder.StartObject(3);
    FieldBossInfo.AddLastKillTs(builder, last_kill_ts);
    FieldBossInfo.AddTimeSecList(builder, time_sec_listOffset);
    FieldBossInfo.AddStageTid(builder, stage_tid);
    return FieldBossInfo.EndFieldBossInfo(builder);
  }

  public static void StartFieldBossInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddLastKillTs(FlatBufferBuilder builder, ulong lastKillTs) { builder.AddUlong(1, lastKillTs, 0); }
  public static void AddTimeSecList(FlatBufferBuilder builder, VectorOffset timeSecListOffset) { builder.AddOffset(2, timeSecListOffset.Value, 0); }
  public static VectorOffset CreateTimeSecListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTimeSecListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartTimeSecListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<FieldBossInfo> EndFieldBossInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FieldBossInfo>(o);
  }
};

public struct ServerEventInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ServerEventInfo GetRootAsServerEventInfo(ByteBuffer _bb) { return GetRootAsServerEventInfo(_bb, new ServerEventInfo()); }
  public static ServerEventInfo GetRootAsServerEventInfo(ByteBuffer _bb, ServerEventInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ServerEventInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong EventId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_ServerEventCategory Category { get { int o = __p.__offset(6); return o != 0 ? (E_ServerEventCategory)__p.bb.Get(o + __p.bb_pos) : E_ServerEventCategory.Stage; } }
  public E_ServerEventSubCategory SubCategory { get { int o = __p.__offset(8); return o != 0 ? (E_ServerEventSubCategory)__p.bb.Get(o + __p.bb_pos) : E_ServerEventSubCategory.EventDungeon; } }
  public uint SortOrder { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong StartDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong EndDt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Args { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetArgsBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetArgsBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetArgsArray() { return __p.__vector_as_array<byte>(16); }
  public string BgUrl { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgUrlBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetBgUrlBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetBgUrlArray() { return __p.__vector_as_array<byte>(18); }
  public string BgHash { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgHashBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetBgHashBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetBgHashArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<ServerEventInfo> CreateServerEventInfo(FlatBufferBuilder builder,
      ulong event_id = 0,
      E_ServerEventCategory category = E_ServerEventCategory.Stage,
      E_ServerEventSubCategory sub_category = E_ServerEventSubCategory.EventDungeon,
      uint sort_order = 0,
      ulong start_dt = 0,
      ulong end_dt = 0,
      StringOffset argsOffset = default(StringOffset),
      StringOffset bg_urlOffset = default(StringOffset),
      StringOffset bg_hashOffset = default(StringOffset)) {
    builder.StartObject(9);
    ServerEventInfo.AddEndDt(builder, end_dt);
    ServerEventInfo.AddStartDt(builder, start_dt);
    ServerEventInfo.AddEventId(builder, event_id);
    ServerEventInfo.AddBgHash(builder, bg_hashOffset);
    ServerEventInfo.AddBgUrl(builder, bg_urlOffset);
    ServerEventInfo.AddArgs(builder, argsOffset);
    ServerEventInfo.AddSortOrder(builder, sort_order);
    ServerEventInfo.AddSubCategory(builder, sub_category);
    ServerEventInfo.AddCategory(builder, category);
    return ServerEventInfo.EndServerEventInfo(builder);
  }

  public static void StartServerEventInfo(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddEventId(FlatBufferBuilder builder, ulong eventId) { builder.AddUlong(0, eventId, 0); }
  public static void AddCategory(FlatBufferBuilder builder, E_ServerEventCategory category) { builder.AddByte(1, (byte)category, 0); }
  public static void AddSubCategory(FlatBufferBuilder builder, E_ServerEventSubCategory subCategory) { builder.AddByte(2, (byte)subCategory, 0); }
  public static void AddSortOrder(FlatBufferBuilder builder, uint sortOrder) { builder.AddUint(3, sortOrder, 0); }
  public static void AddStartDt(FlatBufferBuilder builder, ulong startDt) { builder.AddUlong(4, startDt, 0); }
  public static void AddEndDt(FlatBufferBuilder builder, ulong endDt) { builder.AddUlong(5, endDt, 0); }
  public static void AddArgs(FlatBufferBuilder builder, StringOffset argsOffset) { builder.AddOffset(6, argsOffset.Value, 0); }
  public static void AddBgUrl(FlatBufferBuilder builder, StringOffset bgUrlOffset) { builder.AddOffset(7, bgUrlOffset.Value, 0); }
  public static void AddBgHash(FlatBufferBuilder builder, StringOffset bgHashOffset) { builder.AddOffset(8, bgHashOffset.Value, 0); }
  public static Offset<ServerEventInfo> EndServerEventInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerEventInfo>(o);
  }
};

public struct MakeLimitInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MakeLimitInfo GetRootAsMakeLimitInfo(ByteBuffer _bb) { return GetRootAsMakeLimitInfo(_bb, new MakeLimitInfo()); }
  public static MakeLimitInfo GetRootAsMakeLimitInfo(ByteBuffer _bb, MakeLimitInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MakeLimitInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MakeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ServerMakeCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint AccountMakeCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CharMakeCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ExpireDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<MakeLimitInfo> CreateMakeLimitInfo(FlatBufferBuilder builder,
      uint make_tid = 0,
      uint server_make_cnt = 0,
      uint account_make_cnt = 0,
      uint char_make_cnt = 0,
      ulong expire_dt = 0) {
    builder.StartObject(5);
    MakeLimitInfo.AddExpireDt(builder, expire_dt);
    MakeLimitInfo.AddCharMakeCnt(builder, char_make_cnt);
    MakeLimitInfo.AddAccountMakeCnt(builder, account_make_cnt);
    MakeLimitInfo.AddServerMakeCnt(builder, server_make_cnt);
    MakeLimitInfo.AddMakeTid(builder, make_tid);
    return MakeLimitInfo.EndMakeLimitInfo(builder);
  }

  public static void StartMakeLimitInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddMakeTid(FlatBufferBuilder builder, uint makeTid) { builder.AddUint(0, makeTid, 0); }
  public static void AddServerMakeCnt(FlatBufferBuilder builder, uint serverMakeCnt) { builder.AddUint(1, serverMakeCnt, 0); }
  public static void AddAccountMakeCnt(FlatBufferBuilder builder, uint accountMakeCnt) { builder.AddUint(2, accountMakeCnt, 0); }
  public static void AddCharMakeCnt(FlatBufferBuilder builder, uint charMakeCnt) { builder.AddUint(3, charMakeCnt, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(4, expireDt, 0); }
  public static Offset<MakeLimitInfo> EndMakeLimitInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MakeLimitInfo>(o);
  }
};

public struct OverStageInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static OverStageInfo GetRootAsOverStageInfo(ByteBuffer _bb) { return GetRootAsOverStageInfo(_bb, new OverStageInfo()); }
  public static OverStageInfo GetRootAsOverStageInfo(ByteBuffer _bb, OverStageInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public OverStageInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsPk { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<OverStageInfo> CreateOverStageInfo(FlatBufferBuilder builder,
      uint stage_tid = 0,
      bool is_pk = false) {
    builder.StartObject(2);
    OverStageInfo.AddStageTid(builder, stage_tid);
    OverStageInfo.AddIsPk(builder, is_pk);
    return OverStageInfo.EndOverStageInfo(builder);
  }

  public static void StartOverStageInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddIsPk(FlatBufferBuilder builder, bool isPk) { builder.AddBool(1, isPk, false); }
  public static Offset<OverStageInfo> EndOverStageInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<OverStageInfo>(o);
  }
};

public struct DamageRankInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DamageRankInfo GetRootAsDamageRankInfo(ByteBuffer _bb) { return GetRootAsDamageRankInfo(_bb, new DamageRankInfo()); }
  public static DamageRankInfo GetRootAsDamageRankInfo(ByteBuffer _bb, DamageRankInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DamageRankInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Rank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public PartyMember? PartyMember(int j) { int o = __p.__offset(12); return o != 0 ? (PartyMember?)(new PartyMember()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PartyMemberLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint PartyUid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<DamageRankInfo> CreateDamageRankInfo(FlatBufferBuilder builder,
      byte rank = 0,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0,
      VectorOffset party_memberOffset = default(VectorOffset),
      uint party_uid = 0) {
    builder.StartObject(6);
    DamageRankInfo.AddCharId(builder, char_id);
    DamageRankInfo.AddUserId(builder, user_id);
    DamageRankInfo.AddPartyUid(builder, party_uid);
    DamageRankInfo.AddPartyMember(builder, party_memberOffset);
    DamageRankInfo.AddServerIdx(builder, server_idx);
    DamageRankInfo.AddRank(builder, rank);
    return DamageRankInfo.EndDamageRankInfo(builder);
  }

  public static void StartDamageRankInfo(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddRank(FlatBufferBuilder builder, byte rank) { builder.AddByte(0, rank, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(1, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(2, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddPartyMember(FlatBufferBuilder builder, VectorOffset partyMemberOffset) { builder.AddOffset(4, partyMemberOffset.Value, 0); }
  public static VectorOffset CreatePartyMemberVector(FlatBufferBuilder builder, Offset<PartyMember>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePartyMemberVectorBlock(FlatBufferBuilder builder, Offset<PartyMember>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPartyMemberVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(5, partyUid, 0); }
  public static Offset<DamageRankInfo> EndDamageRankInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DamageRankInfo>(o);
  }
};

public struct ServerBossDamageBorderRow : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ServerBossDamageBorderRow GetRootAsServerBossDamageBorderRow(ByteBuffer _bb) { return GetRootAsServerBossDamageBorderRow(_bb, new ServerBossDamageBorderRow()); }
  public static ServerBossDamageBorderRow GetRootAsServerBossDamageBorderRow(ByteBuffer _bb, ServerBossDamageBorderRow obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ServerBossDamageBorderRow __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Rank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint ServerIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UserId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Nick { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(12); }
  public ulong Damage { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ServerBossDamageBorderRow> CreateServerBossDamageBorderRow(FlatBufferBuilder builder,
      byte rank = 0,
      uint server_idx = 0,
      ulong user_id = 0,
      ulong char_id = 0,
      StringOffset nickOffset = default(StringOffset),
      ulong damage = 0) {
    builder.StartObject(6);
    ServerBossDamageBorderRow.AddDamage(builder, damage);
    ServerBossDamageBorderRow.AddCharId(builder, char_id);
    ServerBossDamageBorderRow.AddUserId(builder, user_id);
    ServerBossDamageBorderRow.AddNick(builder, nickOffset);
    ServerBossDamageBorderRow.AddServerIdx(builder, server_idx);
    ServerBossDamageBorderRow.AddRank(builder, rank);
    return ServerBossDamageBorderRow.EndServerBossDamageBorderRow(builder);
  }

  public static void StartServerBossDamageBorderRow(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddRank(FlatBufferBuilder builder, byte rank) { builder.AddByte(0, rank, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(1, serverIdx, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(2, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(3, charId, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(4, nickOffset.Value, 0); }
  public static void AddDamage(FlatBufferBuilder builder, ulong damage) { builder.AddUlong(5, damage, 0); }
  public static Offset<ServerBossDamageBorderRow> EndServerBossDamageBorderRow(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerBossDamageBorderRow>(o);
  }
};

public struct ColosseumMatchUserInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ColosseumMatchUserInfo GetRootAsColosseumMatchUserInfo(ByteBuffer _bb) { return GetRootAsColosseumMatchUserInfo(_bb, new ColosseumMatchUserInfo()); }
  public static ColosseumMatchUserInfo GetRootAsColosseumMatchUserInfo(ByteBuffer _bb, ColosseumMatchUserInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ColosseumMatchUserInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte IsShowNick { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public E_ColosseumTeam TeamNo { get { int o = __p.__offset(12); return o != 0 ? (E_ColosseumTeam)__p.bb.Get(o + __p.bb_pos) : E_ColosseumTeam.Blue; } }

  public static Offset<ColosseumMatchUserInfo> CreateColosseumMatchUserInfo(FlatBufferBuilder builder,
      uint server_idx = 0,
      ulong user_id = 0,
      ulong char_id = 0,
      byte is_show_nick = 0,
      E_ColosseumTeam team_no = E_ColosseumTeam.Blue) {
    builder.StartObject(5);
    ColosseumMatchUserInfo.AddCharId(builder, char_id);
    ColosseumMatchUserInfo.AddUserId(builder, user_id);
    ColosseumMatchUserInfo.AddServerIdx(builder, server_idx);
    ColosseumMatchUserInfo.AddTeamNo(builder, team_no);
    ColosseumMatchUserInfo.AddIsShowNick(builder, is_show_nick);
    return ColosseumMatchUserInfo.EndColosseumMatchUserInfo(builder);
  }

  public static void StartColosseumMatchUserInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(1, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(2, charId, 0); }
  public static void AddIsShowNick(FlatBufferBuilder builder, byte isShowNick) { builder.AddByte(3, isShowNick, 0); }
  public static void AddTeamNo(FlatBufferBuilder builder, E_ColosseumTeam teamNo) { builder.AddByte(4, (byte)teamNo, 0); }
  public static Offset<ColosseumMatchUserInfo> EndColosseumMatchUserInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ColosseumMatchUserInfo>(o);
  }
};

public struct SurvivorUser : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SurvivorUser GetRootAsSurvivorUser(ByteBuffer _bb) { return GetRootAsSurvivorUser(_bb, new SurvivorUser()); }
  public static SurvivorUser GetRootAsSurvivorUser(ByteBuffer _bb, SurvivorUser obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SurvivorUser __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint Damage { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UnetId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<SurvivorUser> CreateSurvivorUser(FlatBufferBuilder builder,
      uint server_idx = 0,
      ulong user_id = 0,
      ulong char_id = 0,
      uint damage = 0,
      ulong guild_id = 0,
      uint unet_id = 0) {
    builder.StartObject(6);
    SurvivorUser.AddGuildId(builder, guild_id);
    SurvivorUser.AddCharId(builder, char_id);
    SurvivorUser.AddUserId(builder, user_id);
    SurvivorUser.AddUnetId(builder, unet_id);
    SurvivorUser.AddDamage(builder, damage);
    SurvivorUser.AddServerIdx(builder, server_idx);
    return SurvivorUser.EndSurvivorUser(builder);
  }

  public static void StartSurvivorUser(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(1, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(2, charId, 0); }
  public static void AddDamage(FlatBufferBuilder builder, uint damage) { builder.AddUint(3, damage, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(4, guildId, 0); }
  public static void AddUnetId(FlatBufferBuilder builder, uint unetId) { builder.AddUint(5, unetId, 0); }
  public static Offset<SurvivorUser> EndSurvivorUser(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SurvivorUser>(o);
  }
};

public struct SkillUseOrder : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SkillUseOrder GetRootAsSkillUseOrder(ByteBuffer _bb) { return GetRootAsSkillUseOrder(_bb, new SkillUseOrder()); }
  public static SkillUseOrder GetRootAsSkillUseOrder(ByteBuffer _bb, SkillUseOrder obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SkillUseOrder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SkillTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CharacterType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseOrder { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CoolTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsActive { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<SkillUseOrder> CreateSkillUseOrder(FlatBufferBuilder builder,
      uint skill_tid = 0,
      uint character_type = 0,
      uint use_order = 0,
      uint cool_time = 0,
      byte is_active = 0) {
    builder.StartObject(5);
    SkillUseOrder.AddCoolTime(builder, cool_time);
    SkillUseOrder.AddUseOrder(builder, use_order);
    SkillUseOrder.AddCharacterType(builder, character_type);
    SkillUseOrder.AddSkillTid(builder, skill_tid);
    SkillUseOrder.AddIsActive(builder, is_active);
    return SkillUseOrder.EndSkillUseOrder(builder);
  }

  public static void StartSkillUseOrder(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddSkillTid(FlatBufferBuilder builder, uint skillTid) { builder.AddUint(0, skillTid, 0); }
  public static void AddCharacterType(FlatBufferBuilder builder, uint characterType) { builder.AddUint(1, characterType, 0); }
  public static void AddUseOrder(FlatBufferBuilder builder, uint useOrder) { builder.AddUint(2, useOrder, 0); }
  public static void AddCoolTime(FlatBufferBuilder builder, uint coolTime) { builder.AddUint(3, coolTime, 0); }
  public static void AddIsActive(FlatBufferBuilder builder, byte isActive) { builder.AddByte(4, isActive, 0); }
  public static Offset<SkillUseOrder> EndSkillUseOrder(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SkillUseOrder>(o);
  }
};

public struct SkillBookInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SkillBookInfo GetRootAsSkillBookInfo(ByteBuffer _bb) { return GetRootAsSkillBookInfo(_bb, new SkillBookInfo()); }
  public static SkillBookInfo GetRootAsSkillBookInfo(ByteBuffer _bb, SkillBookInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SkillBookInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SkillTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<SkillBookInfo> CreateSkillBookInfo(FlatBufferBuilder builder,
      uint skill_tid = 0) {
    builder.StartObject(1);
    SkillBookInfo.AddSkillTid(builder, skill_tid);
    return SkillBookInfo.EndSkillBookInfo(builder);
  }

  public static void StartSkillBookInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSkillTid(FlatBufferBuilder builder, uint skillTid) { builder.AddUint(0, skillTid, 0); }
  public static Offset<SkillBookInfo> EndSkillBookInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SkillBookInfo>(o);
  }
};

public struct RecoveryItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RecoveryItemInfo GetRootAsRecoveryItemInfo(ByteBuffer _bb) { return GetRootAsRecoveryItemInfo(_bb, new RecoveryItemInfo()); }
  public static RecoveryItemInfo GetRootAsRecoveryItemInfo(ByteBuffer _bb, RecoveryItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RecoveryItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte RecoveryType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint RecoveryTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<RecoveryItemInfo> CreateRecoveryItemInfo(FlatBufferBuilder builder,
      byte recovery_type = 0,
      uint recovery_tid = 0) {
    builder.StartObject(2);
    RecoveryItemInfo.AddRecoveryTid(builder, recovery_tid);
    RecoveryItemInfo.AddRecoveryType(builder, recovery_type);
    return RecoveryItemInfo.EndRecoveryItemInfo(builder);
  }

  public static void StartRecoveryItemInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddRecoveryType(FlatBufferBuilder builder, byte recoveryType) { builder.AddByte(0, recoveryType, 0); }
  public static void AddRecoveryTid(FlatBufferBuilder builder, uint recoveryTid) { builder.AddUint(1, recoveryTid, 0); }
  public static Offset<RecoveryItemInfo> EndRecoveryItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RecoveryItemInfo>(o);
  }
};

public struct PetAdv : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PetAdv GetRootAsPetAdv(ByteBuffer _bb) { return GetRootAsPetAdv(_bb, new PetAdv()); }
  public static PetAdv GetRootAsPetAdv(ByteBuffer _bb, PetAdv obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PetAdv __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AdvId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint AdvTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong StartDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong EndDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint RewardCnt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_PetAdvStatus Status { get { int o = __p.__offset(14); return o != 0 ? (E_PetAdvStatus)__p.bb.Get(o + __p.bb_pos) : E_PetAdvStatus.Wait; } }

  public static Offset<PetAdv> CreatePetAdv(FlatBufferBuilder builder,
      ulong adv_id = 0,
      uint adv_tid = 0,
      ulong start_dt = 0,
      ulong end_dt = 0,
      uint reward_cnt = 0,
      E_PetAdvStatus status = E_PetAdvStatus.Wait) {
    builder.StartObject(6);
    PetAdv.AddEndDt(builder, end_dt);
    PetAdv.AddStartDt(builder, start_dt);
    PetAdv.AddAdvId(builder, adv_id);
    PetAdv.AddRewardCnt(builder, reward_cnt);
    PetAdv.AddAdvTid(builder, adv_tid);
    PetAdv.AddStatus(builder, status);
    return PetAdv.EndPetAdv(builder);
  }

  public static void StartPetAdv(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(0, advId, 0); }
  public static void AddAdvTid(FlatBufferBuilder builder, uint advTid) { builder.AddUint(1, advTid, 0); }
  public static void AddStartDt(FlatBufferBuilder builder, ulong startDt) { builder.AddUlong(2, startDt, 0); }
  public static void AddEndDt(FlatBufferBuilder builder, ulong endDt) { builder.AddUlong(3, endDt, 0); }
  public static void AddRewardCnt(FlatBufferBuilder builder, uint rewardCnt) { builder.AddUint(4, rewardCnt, 0); }
  public static void AddStatus(FlatBufferBuilder builder, E_PetAdvStatus status) { builder.AddByte(5, (byte)status, 0); }
  public static Offset<PetAdv> EndPetAdv(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PetAdv>(o);
  }
};

public struct TradeItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TradeItem GetRootAsTradeItem(ByteBuffer _bb) { return GetRootAsTradeItem(_bb, new TradeItem()); }
  public static TradeItem GetRootAsTradeItem(ByteBuffer _bb, TradeItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TradeItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TradeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SellerUserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong SellerCharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ItemId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Option(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptionLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptionBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetOptionBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public uint[] GetOptionArray() { return __p.__vector_as_array<uint>(14); }
  public uint Sockets(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int SocketsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSocketsBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetSocketsBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public uint[] GetSocketsArray() { return __p.__vector_as_array<uint>(16); }
  public uint ItemCnt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ItemPassword { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemPasswordBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetItemPasswordBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetItemPasswordArray() { return __p.__vector_as_array<byte>(20); }
  public uint ItemTotalPrice { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float ItemPrice { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public ulong BuyerUserId { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BuyerCharId { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string BuyerNick { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuyerNickBytes() { return __p.__vector_as_span(30); }
#else
  public ArraySegment<byte>? GetBuyerNickBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetBuyerNickArray() { return __p.__vector_as_array<byte>(30); }
  public ulong ExpireDt { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BuyDt { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<TradeItem> CreateTradeItem(FlatBufferBuilder builder,
      ulong trade_id = 0,
      ulong seller_user_id = 0,
      ulong seller_char_id = 0,
      ulong item_id = 0,
      uint item_tid = 0,
      VectorOffset optionOffset = default(VectorOffset),
      VectorOffset socketsOffset = default(VectorOffset),
      uint item_cnt = 0,
      StringOffset item_passwordOffset = default(StringOffset),
      uint item_total_price = 0,
      float item_price = 0.0f,
      ulong buyer_user_id = 0,
      ulong buyer_char_id = 0,
      StringOffset buyer_nickOffset = default(StringOffset),
      ulong expire_dt = 0,
      ulong buy_dt = 0) {
    builder.StartObject(16);
    TradeItem.AddBuyDt(builder, buy_dt);
    TradeItem.AddExpireDt(builder, expire_dt);
    TradeItem.AddBuyerCharId(builder, buyer_char_id);
    TradeItem.AddBuyerUserId(builder, buyer_user_id);
    TradeItem.AddItemId(builder, item_id);
    TradeItem.AddSellerCharId(builder, seller_char_id);
    TradeItem.AddSellerUserId(builder, seller_user_id);
    TradeItem.AddTradeId(builder, trade_id);
    TradeItem.AddBuyerNick(builder, buyer_nickOffset);
    TradeItem.AddItemPrice(builder, item_price);
    TradeItem.AddItemTotalPrice(builder, item_total_price);
    TradeItem.AddItemPassword(builder, item_passwordOffset);
    TradeItem.AddItemCnt(builder, item_cnt);
    TradeItem.AddSockets(builder, socketsOffset);
    TradeItem.AddOption(builder, optionOffset);
    TradeItem.AddItemTid(builder, item_tid);
    return TradeItem.EndTradeItem(builder);
  }

  public static void StartTradeItem(FlatBufferBuilder builder) { builder.StartObject(16); }
  public static void AddTradeId(FlatBufferBuilder builder, ulong tradeId) { builder.AddUlong(0, tradeId, 0); }
  public static void AddSellerUserId(FlatBufferBuilder builder, ulong sellerUserId) { builder.AddUlong(1, sellerUserId, 0); }
  public static void AddSellerCharId(FlatBufferBuilder builder, ulong sellerCharId) { builder.AddUlong(2, sellerCharId, 0); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(3, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(4, itemTid, 0); }
  public static void AddOption(FlatBufferBuilder builder, VectorOffset optionOffset) { builder.AddOffset(5, optionOffset.Value, 0); }
  public static VectorOffset CreateOptionVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptionVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSockets(FlatBufferBuilder builder, VectorOffset socketsOffset) { builder.AddOffset(6, socketsOffset.Value, 0); }
  public static VectorOffset CreateSocketsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSocketsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSocketsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(7, itemCnt, 0); }
  public static void AddItemPassword(FlatBufferBuilder builder, StringOffset itemPasswordOffset) { builder.AddOffset(8, itemPasswordOffset.Value, 0); }
  public static void AddItemTotalPrice(FlatBufferBuilder builder, uint itemTotalPrice) { builder.AddUint(9, itemTotalPrice, 0); }
  public static void AddItemPrice(FlatBufferBuilder builder, float itemPrice) { builder.AddFloat(10, itemPrice, 0.0f); }
  public static void AddBuyerUserId(FlatBufferBuilder builder, ulong buyerUserId) { builder.AddUlong(11, buyerUserId, 0); }
  public static void AddBuyerCharId(FlatBufferBuilder builder, ulong buyerCharId) { builder.AddUlong(12, buyerCharId, 0); }
  public static void AddBuyerNick(FlatBufferBuilder builder, StringOffset buyerNickOffset) { builder.AddOffset(13, buyerNickOffset.Value, 0); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(14, expireDt, 0); }
  public static void AddBuyDt(FlatBufferBuilder builder, ulong buyDt) { builder.AddUlong(15, buyDt, 0); }
  public static Offset<TradeItem> EndTradeItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TradeItem>(o);
  }
};

public struct Rune : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Rune GetRootAsRune(ByteBuffer _bb) { return GetRootAsRune(_bb, new Rune()); }
  public static Rune GetRootAsRune(ByteBuffer _bb, Rune obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Rune __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte SlotIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint EquipPetTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BaseEnchantTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FirstOptTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint OptTidList1(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptTidList1Length { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptTidList1Bytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetOptTidList1Bytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public uint[] GetOptTidList1Array() { return __p.__vector_as_array<uint>(18); }
  public uint OptTidList2(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptTidList2Length { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptTidList2Bytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetOptTidList2Bytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public uint[] GetOptTidList2Array() { return __p.__vector_as_array<uint>(20); }
  public uint OptTidList3(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptTidList3Length { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptTidList3Bytes() { return __p.__vector_as_span(22); }
#else
  public ArraySegment<byte>? GetOptTidList3Bytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public uint[] GetOptTidList3Array() { return __p.__vector_as_array<uint>(22); }
  public uint OptTidList4(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptTidList4Length { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptTidList4Bytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetOptTidList4Bytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public uint[] GetOptTidList4Array() { return __p.__vector_as_array<uint>(24); }
  public ulong CreateDt { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<Rune> CreateRune(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      byte slot_idx = 0,
      byte is_lock = 0,
      uint equip_pet_tid = 0,
      uint base_enchant_tid = 0,
      uint first_opt_tid = 0,
      VectorOffset opt_tid_list_1Offset = default(VectorOffset),
      VectorOffset opt_tid_list_2Offset = default(VectorOffset),
      VectorOffset opt_tid_list_3Offset = default(VectorOffset),
      VectorOffset opt_tid_list_4Offset = default(VectorOffset),
      ulong create_dt = 0) {
    builder.StartObject(12);
    Rune.AddCreateDt(builder, create_dt);
    Rune.AddItemId(builder, item_id);
    Rune.AddOptTidList4(builder, opt_tid_list_4Offset);
    Rune.AddOptTidList3(builder, opt_tid_list_3Offset);
    Rune.AddOptTidList2(builder, opt_tid_list_2Offset);
    Rune.AddOptTidList1(builder, opt_tid_list_1Offset);
    Rune.AddFirstOptTid(builder, first_opt_tid);
    Rune.AddBaseEnchantTid(builder, base_enchant_tid);
    Rune.AddEquipPetTid(builder, equip_pet_tid);
    Rune.AddItemTid(builder, item_tid);
    Rune.AddIsLock(builder, is_lock);
    Rune.AddSlotIdx(builder, slot_idx);
    return Rune.EndRune(builder);
  }

  public static void StartRune(FlatBufferBuilder builder) { builder.StartObject(12); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddSlotIdx(FlatBufferBuilder builder, byte slotIdx) { builder.AddByte(2, slotIdx, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static void AddEquipPetTid(FlatBufferBuilder builder, uint equipPetTid) { builder.AddUint(4, equipPetTid, 0); }
  public static void AddBaseEnchantTid(FlatBufferBuilder builder, uint baseEnchantTid) { builder.AddUint(5, baseEnchantTid, 0); }
  public static void AddFirstOptTid(FlatBufferBuilder builder, uint firstOptTid) { builder.AddUint(6, firstOptTid, 0); }
  public static void AddOptTidList1(FlatBufferBuilder builder, VectorOffset optTidList1Offset) { builder.AddOffset(7, optTidList1Offset.Value, 0); }
  public static VectorOffset CreateOptTidList1Vector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptTidList1VectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptTidList1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOptTidList2(FlatBufferBuilder builder, VectorOffset optTidList2Offset) { builder.AddOffset(8, optTidList2Offset.Value, 0); }
  public static VectorOffset CreateOptTidList2Vector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptTidList2VectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptTidList2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOptTidList3(FlatBufferBuilder builder, VectorOffset optTidList3Offset) { builder.AddOffset(9, optTidList3Offset.Value, 0); }
  public static VectorOffset CreateOptTidList3Vector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptTidList3VectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptTidList3Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOptTidList4(FlatBufferBuilder builder, VectorOffset optTidList4Offset) { builder.AddOffset(10, optTidList4Offset.Value, 0); }
  public static VectorOffset CreateOptTidList4Vector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptTidList4VectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptTidList4Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(11, createDt, 0); }
  public static Offset<Rune> EndRune(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Rune>(o);
  }
};

public struct DropItemView : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DropItemView GetRootAsDropItemView(ByteBuffer _bb) { return GetRootAsDropItemView(_bb, new DropItemView()); }
  public static DropItemView GetRootAsDropItemView(ByteBuffer _bb, DropItemView obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DropItemView __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint UnetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Cnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<DropItemView> CreateDropItemView(FlatBufferBuilder builder,
      uint unet_id = 0,
      uint item_tid = 0,
      uint cnt = 0) {
    builder.StartObject(3);
    DropItemView.AddCnt(builder, cnt);
    DropItemView.AddItemTid(builder, item_tid);
    DropItemView.AddUnetId(builder, unet_id);
    return DropItemView.EndDropItemView(builder);
  }

  public static void StartDropItemView(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUnetId(FlatBufferBuilder builder, uint unetId) { builder.AddUint(0, unetId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddCnt(FlatBufferBuilder builder, uint cnt) { builder.AddUint(2, cnt, 0); }
  public static Offset<DropItemView> EndDropItemView(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DropItemView>(o);
  }
};

public struct BossKillerInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BossKillerInfo GetRootAsBossKillerInfo(ByteBuffer _bb) { return GetRootAsBossKillerInfo(_bb, new BossKillerInfo()); }
  public static BossKillerInfo GetRootAsBossKillerInfo(ByteBuffer _bb, BossKillerInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BossKillerInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong GuildId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string GuildName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(10); }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BossKillerInfo> CreateBossKillerInfo(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort channel_id = 0,
      ulong guild_id = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      uint guild_mark_tid = 0) {
    builder.StartObject(5);
    BossKillerInfo.AddGuildId(builder, guild_id);
    BossKillerInfo.AddGuildMarkTid(builder, guild_mark_tid);
    BossKillerInfo.AddGuildName(builder, guild_nameOffset);
    BossKillerInfo.AddStageTid(builder, stage_tid);
    BossKillerInfo.AddChannelId(builder, channel_id);
    return BossKillerInfo.EndBossKillerInfo(builder);
  }

  public static void StartBossKillerInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(1, channelId, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(2, guildId, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(3, guildNameOffset.Value, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static Offset<BossKillerInfo> EndBossKillerInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BossKillerInfo>(o);
  }
};

public struct DamageList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DamageList GetRootAsDamageList(ByteBuffer _bb) { return GetRootAsDamageList(_bb, new DamageList()); }
  public static DamageList GetRootAsDamageList(ByteBuffer _bb, DamageList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DamageList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint Damage { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<DamageList> CreateDamageList(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint damage = 0) {
    builder.StartObject(2);
    DamageList.AddCharId(builder, char_id);
    DamageList.AddDamage(builder, damage);
    return DamageList.EndDamageList(builder);
  }

  public static void StartDamageList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddDamage(FlatBufferBuilder builder, uint damage) { builder.AddUint(1, damage, 0); }
  public static Offset<DamageList> EndDamageList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DamageList>(o);
  }
};

public struct TempleStage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TempleStage GetRootAsTempleStage(ByteBuffer _bb) { return GetRootAsTempleStage(_bb, new TempleStage()); }
  public static TempleStage GetRootAsTempleStage(ByteBuffer _bb, TempleStage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TempleStage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ClearDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort IsRewardGachaOpens(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(__p.__vector(o) + j * 2) : (ushort)0; }
  public int IsRewardGachaOpensLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIsRewardGachaOpensBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetIsRewardGachaOpensBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public ushort[] GetIsRewardGachaOpensArray() { return __p.__vector_as_array<ushort>(8); }

  public static Offset<TempleStage> CreateTempleStage(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ulong clear_dt = 0,
      VectorOffset is_reward_gacha_opensOffset = default(VectorOffset)) {
    builder.StartObject(3);
    TempleStage.AddClearDt(builder, clear_dt);
    TempleStage.AddIsRewardGachaOpens(builder, is_reward_gacha_opensOffset);
    TempleStage.AddStageTid(builder, stage_tid);
    return TempleStage.EndTempleStage(builder);
  }

  public static void StartTempleStage(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddClearDt(FlatBufferBuilder builder, ulong clearDt) { builder.AddUlong(1, clearDt, 0); }
  public static void AddIsRewardGachaOpens(FlatBufferBuilder builder, VectorOffset isRewardGachaOpensOffset) { builder.AddOffset(2, isRewardGachaOpensOffset.Value, 0); }
  public static VectorOffset CreateIsRewardGachaOpensVector(FlatBufferBuilder builder, ushort[] data) { builder.StartVector(2, data.Length, 2); for (int i = data.Length - 1; i >= 0; i--) builder.AddUshort(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateIsRewardGachaOpensVectorBlock(FlatBufferBuilder builder, ushort[] data) { builder.StartVector(2, data.Length, 2); builder.Add(data); return builder.EndVector(); }
  public static void StartIsRewardGachaOpensVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(2, numElems, 2); }
  public static Offset<TempleStage> EndTempleStage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TempleStage>(o);
  }
};

public struct ArtifactInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ArtifactInfo GetRootAsArtifactInfo(ByteBuffer _bb) { return GetRootAsArtifactInfo(_bb, new ArtifactInfo()); }
  public static ArtifactInfo GetRootAsArtifactInfo(ByteBuffer _bb, ArtifactInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ArtifactInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ArtifactId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ArtifactTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CreateDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ArtifactInfo> CreateArtifactInfo(FlatBufferBuilder builder,
      ulong artifact_id = 0,
      uint artifact_tid = 0,
      ulong create_dt = 0) {
    builder.StartObject(3);
    ArtifactInfo.AddCreateDt(builder, create_dt);
    ArtifactInfo.AddArtifactId(builder, artifact_id);
    ArtifactInfo.AddArtifactTid(builder, artifact_tid);
    return ArtifactInfo.EndArtifactInfo(builder);
  }

  public static void StartArtifactInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddArtifactId(FlatBufferBuilder builder, ulong artifactId) { builder.AddUlong(0, artifactId, 0); }
  public static void AddArtifactTid(FlatBufferBuilder builder, uint artifactTid) { builder.AddUint(1, artifactTid, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(2, createDt, 0); }
  public static Offset<ArtifactInfo> EndArtifactInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ArtifactInfo>(o);
  }
};

public struct ResultCookingMakeInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResultCookingMakeInfo GetRootAsResultCookingMakeInfo(ByteBuffer _bb) { return GetRootAsResultCookingMakeInfo(_bb, new ResultCookingMakeInfo()); }
  public static ResultCookingMakeInfo GetRootAsResultCookingMakeInfo(ByteBuffer _bb, ResultCookingMakeInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResultCookingMakeInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResultCookingMakeInfo> CreateResultCookingMakeInfo(FlatBufferBuilder builder,
      bool result = false,
      uint item_tid = 0) {
    builder.StartObject(2);
    ResultCookingMakeInfo.AddItemTid(builder, item_tid);
    ResultCookingMakeInfo.AddResult(builder, result);
    return ResultCookingMakeInfo.EndResultCookingMakeInfo(builder);
  }

  public static void StartResultCookingMakeInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static Offset<ResultCookingMakeInfo> EndResultCookingMakeInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResultCookingMakeInfo>(o);
  }
};

public struct CookHistory : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CookHistory GetRootAsCookHistory(ByteBuffer _bb) { return GetRootAsCookHistory(_bb, new CookHistory()); }
  public static CookHistory GetRootAsCookHistory(ByteBuffer _bb, CookHistory obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CookHistory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CookTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CookHistory> CreateCookHistory(FlatBufferBuilder builder,
      uint cook_tid = 0) {
    builder.StartObject(1);
    CookHistory.AddCookTid(builder, cook_tid);
    return CookHistory.EndCookHistory(builder);
  }

  public static void StartCookHistory(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCookTid(FlatBufferBuilder builder, uint cookTid) { builder.AddUint(0, cookTid, 0); }
  public static Offset<CookHistory> EndCookHistory(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CookHistory>(o);
  }
};

public struct GodLandSpotInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GodLandSpotInfo GetRootAsGodLandSpotInfo(ByteBuffer _bb) { return GetRootAsGodLandSpotInfo(_bb, new GodLandSpotInfo()); }
  public static GodLandSpotInfo GetRootAsGodLandSpotInfo(ByteBuffer _bb, GodLandSpotInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GodLandSpotInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SlotGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint MapNumber { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort UnitType { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort TargetType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public GodLandSpotUnitInfo? Data { get { int o = __p.__offset(14); return o != 0 ? (GodLandSpotUnitInfo?)(new GodLandSpotUnitInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<GodLandSpotInfo> CreateGodLandSpotInfo(FlatBufferBuilder builder,
      uint god_land_tid = 0,
      uint slot_group_id = 0,
      uint map_number = 0,
      ushort unit_type = 0,
      ushort target_type = 0,
      Offset<GodLandSpotUnitInfo> dataOffset = default(Offset<GodLandSpotUnitInfo>)) {
    builder.StartObject(6);
    GodLandSpotInfo.AddData(builder, dataOffset);
    GodLandSpotInfo.AddMapNumber(builder, map_number);
    GodLandSpotInfo.AddSlotGroupId(builder, slot_group_id);
    GodLandSpotInfo.AddGodLandTid(builder, god_land_tid);
    GodLandSpotInfo.AddTargetType(builder, target_type);
    GodLandSpotInfo.AddUnitType(builder, unit_type);
    return GodLandSpotInfo.EndGodLandSpotInfo(builder);
  }

  public static void StartGodLandSpotInfo(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static void AddSlotGroupId(FlatBufferBuilder builder, uint slotGroupId) { builder.AddUint(1, slotGroupId, 0); }
  public static void AddMapNumber(FlatBufferBuilder builder, uint mapNumber) { builder.AddUint(2, mapNumber, 0); }
  public static void AddUnitType(FlatBufferBuilder builder, ushort unitType) { builder.AddUshort(3, unitType, 0); }
  public static void AddTargetType(FlatBufferBuilder builder, ushort targetType) { builder.AddUshort(4, targetType, 0); }
  public static void AddData(FlatBufferBuilder builder, Offset<GodLandSpotUnitInfo> dataOffset) { builder.AddOffset(5, dataOffset.Value, 0); }
  public static Offset<GodLandSpotInfo> EndGodLandSpotInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GodLandSpotInfo>(o);
  }
};

public struct GodLandSpotUnitInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GodLandSpotUnitInfo GetRootAsGodLandSpotUnitInfo(ByteBuffer _bb) { return GetRootAsGodLandSpotUnitInfo(_bb, new GodLandSpotUnitInfo()); }
  public static GodLandSpotUnitInfo GetRootAsGodLandSpotUnitInfo(ByteBuffer _bb, GodLandSpotUnitInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GodLandSpotUnitInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MonsterTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(12); }
  public uint Lv { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ProductionCnt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong TimeCnt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint Atk { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Def { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Mdef { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<GodLandSpotUnitInfo> CreateGodLandSpotUnitInfo(FlatBufferBuilder builder,
      uint monster_tid = 0,
      uint char_tid = 0,
      ulong char_id = 0,
      uint change_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint lv = 0,
      uint production_cnt = 0,
      ulong time_cnt = 0,
      uint atk = 0,
      uint def = 0,
      uint mdef = 0) {
    builder.StartObject(11);
    GodLandSpotUnitInfo.AddTimeCnt(builder, time_cnt);
    GodLandSpotUnitInfo.AddCharId(builder, char_id);
    GodLandSpotUnitInfo.AddMdef(builder, mdef);
    GodLandSpotUnitInfo.AddDef(builder, def);
    GodLandSpotUnitInfo.AddAtk(builder, atk);
    GodLandSpotUnitInfo.AddProductionCnt(builder, production_cnt);
    GodLandSpotUnitInfo.AddLv(builder, lv);
    GodLandSpotUnitInfo.AddNick(builder, nickOffset);
    GodLandSpotUnitInfo.AddChangeTid(builder, change_tid);
    GodLandSpotUnitInfo.AddCharTid(builder, char_tid);
    GodLandSpotUnitInfo.AddMonsterTid(builder, monster_tid);
    return GodLandSpotUnitInfo.EndGodLandSpotUnitInfo(builder);
  }

  public static void StartGodLandSpotUnitInfo(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddMonsterTid(FlatBufferBuilder builder, uint monsterTid) { builder.AddUint(0, monsterTid, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(2, charId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(3, changeTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(4, nickOffset.Value, 0); }
  public static void AddLv(FlatBufferBuilder builder, uint lv) { builder.AddUint(5, lv, 0); }
  public static void AddProductionCnt(FlatBufferBuilder builder, uint productionCnt) { builder.AddUint(6, productionCnt, 0); }
  public static void AddTimeCnt(FlatBufferBuilder builder, ulong timeCnt) { builder.AddUlong(7, timeCnt, 0); }
  public static void AddAtk(FlatBufferBuilder builder, uint atk) { builder.AddUint(8, atk, 0); }
  public static void AddDef(FlatBufferBuilder builder, uint def) { builder.AddUint(9, def, 0); }
  public static void AddMdef(FlatBufferBuilder builder, uint mdef) { builder.AddUint(10, mdef, 0); }
  public static Offset<GodLandSpotUnitInfo> EndGodLandSpotUnitInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GodLandSpotUnitInfo>(o);
  }
};

public struct GodLandFightRecode : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GodLandFightRecode GetRootAsGodLandFightRecode(ByteBuffer _bb) { return GetRootAsGodLandFightRecode(_bb, new GodLandFightRecode()); }
  public static GodLandFightRecode GetRootAsGodLandFightRecode(ByteBuffer _bb, GodLandFightRecode obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GodLandFightRecode __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_BATTLE_ROLE Role { get { int o = __p.__offset(6); return o != 0 ? (E_BATTLE_ROLE)__p.bb.Get(o + __p.bb_pos) : E_BATTLE_ROLE.NONE; } }
  public bool Status { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public uint CharTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChangeTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(16); }
  public uint Lv { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(20); }
  public uint MarkTid { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CreateDt { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<GodLandFightRecode> CreateGodLandFightRecode(FlatBufferBuilder builder,
      uint god_land_tid = 0,
      E_BATTLE_ROLE role = E_BATTLE_ROLE.NONE,
      bool status = false,
      ushort server_idx = 0,
      uint char_tid = 0,
      uint change_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint lv = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      uint mark_tid = 0,
      ulong create_dt = 0) {
    builder.StartObject(11);
    GodLandFightRecode.AddCreateDt(builder, create_dt);
    GodLandFightRecode.AddMarkTid(builder, mark_tid);
    GodLandFightRecode.AddGuildName(builder, guild_nameOffset);
    GodLandFightRecode.AddLv(builder, lv);
    GodLandFightRecode.AddNick(builder, nickOffset);
    GodLandFightRecode.AddChangeTid(builder, change_tid);
    GodLandFightRecode.AddCharTid(builder, char_tid);
    GodLandFightRecode.AddGodLandTid(builder, god_land_tid);
    GodLandFightRecode.AddServerIdx(builder, server_idx);
    GodLandFightRecode.AddStatus(builder, status);
    GodLandFightRecode.AddRole(builder, role);
    return GodLandFightRecode.EndGodLandFightRecode(builder);
  }

  public static void StartGodLandFightRecode(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static void AddRole(FlatBufferBuilder builder, E_BATTLE_ROLE role) { builder.AddByte(1, (byte)role, 0); }
  public static void AddStatus(FlatBufferBuilder builder, bool status) { builder.AddBool(2, status, false); }
  public static void AddServerIdx(FlatBufferBuilder builder, ushort serverIdx) { builder.AddUshort(3, serverIdx, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(4, charTid, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(5, changeTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(6, nickOffset.Value, 0); }
  public static void AddLv(FlatBufferBuilder builder, uint lv) { builder.AddUint(7, lv, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(8, guildNameOffset.Value, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, uint markTid) { builder.AddUint(9, markTid, 0); }
  public static void AddCreateDt(FlatBufferBuilder builder, ulong createDt) { builder.AddUlong(10, createDt, 0); }
  public static Offset<GodLandFightRecode> EndGodLandFightRecode(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GodLandFightRecode>(o);
  }
};

public struct GodLandProductFlag : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GodLandProductFlag GetRootAsGodLandProductFlag(ByteBuffer _bb) { return GetRootAsGodLandProductFlag(_bb, new GodLandProductFlag()); }
  public static GodLandProductFlag GetRootAsGodLandProductFlag(ByteBuffer _bb, GodLandProductFlag obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GodLandProductFlag __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool Flag { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GodLandProductFlag> CreateGodLandProductFlag(FlatBufferBuilder builder,
      uint god_land_tid = 0,
      bool flag = false) {
    builder.StartObject(2);
    GodLandProductFlag.AddGodLandTid(builder, god_land_tid);
    GodLandProductFlag.AddFlag(builder, flag);
    return GodLandProductFlag.EndGodLandProductFlag(builder);
  }

  public static void StartGodLandProductFlag(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static void AddFlag(FlatBufferBuilder builder, bool flag) { builder.AddBool(1, flag, false); }
  public static Offset<GodLandProductFlag> EndGodLandProductFlag(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GodLandProductFlag>(o);
  }
};

public struct AccountAttendInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AccountAttendInfo GetRootAsAccountAttendInfo(ByteBuffer _bb) { return GetRootAsAccountAttendInfo(_bb, new AccountAttendInfo()); }
  public static AccountAttendInfo GetRootAsAccountAttendInfo(ByteBuffer _bb, AccountAttendInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AccountAttendInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ATTEND_TYPE MainType { get { int o = __p.__offset(4); return o != 0 ? (E_ATTEND_TYPE)__p.bb.Get(o + __p.bb_pos) : E_ATTEND_TYPE.ATTEND; } }
  public E_EVENT_ATTEND_TYPE SubType { get { int o = __p.__offset(6); return o != 0 ? (E_EVENT_ATTEND_TYPE)__p.bb.Get(o + __p.bb_pos) : E_EVENT_ATTEND_TYPE.NONE; } }
  public uint GroupId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool Pass1 { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Pass2 { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort AttendSeq { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RewardSeq { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RewardSeq1 { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RewardSeq2 { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong RewardDt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<AccountAttendInfo> CreateAccountAttendInfo(FlatBufferBuilder builder,
      E_ATTEND_TYPE main_type = E_ATTEND_TYPE.ATTEND,
      E_EVENT_ATTEND_TYPE sub_type = E_EVENT_ATTEND_TYPE.NONE,
      uint group_id = 0,
      bool pass_1 = false,
      bool pass_2 = false,
      ushort attend_seq = 0,
      ushort reward_seq = 0,
      ushort reward_seq_1 = 0,
      ushort reward_seq_2 = 0,
      ulong reward_dt = 0) {
    builder.StartObject(10);
    AccountAttendInfo.AddRewardDt(builder, reward_dt);
    AccountAttendInfo.AddGroupId(builder, group_id);
    AccountAttendInfo.AddRewardSeq2(builder, reward_seq_2);
    AccountAttendInfo.AddRewardSeq1(builder, reward_seq_1);
    AccountAttendInfo.AddRewardSeq(builder, reward_seq);
    AccountAttendInfo.AddAttendSeq(builder, attend_seq);
    AccountAttendInfo.AddPass2(builder, pass_2);
    AccountAttendInfo.AddPass1(builder, pass_1);
    AccountAttendInfo.AddSubType(builder, sub_type);
    AccountAttendInfo.AddMainType(builder, main_type);
    return AccountAttendInfo.EndAccountAttendInfo(builder);
  }

  public static void StartAccountAttendInfo(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddMainType(FlatBufferBuilder builder, E_ATTEND_TYPE mainType) { builder.AddByte(0, (byte)mainType, 0); }
  public static void AddSubType(FlatBufferBuilder builder, E_EVENT_ATTEND_TYPE subType) { builder.AddByte(1, (byte)subType, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, uint groupId) { builder.AddUint(2, groupId, 0); }
  public static void AddPass1(FlatBufferBuilder builder, bool pass1) { builder.AddBool(3, pass1, false); }
  public static void AddPass2(FlatBufferBuilder builder, bool pass2) { builder.AddBool(4, pass2, false); }
  public static void AddAttendSeq(FlatBufferBuilder builder, ushort attendSeq) { builder.AddUshort(5, attendSeq, 0); }
  public static void AddRewardSeq(FlatBufferBuilder builder, ushort rewardSeq) { builder.AddUshort(6, rewardSeq, 0); }
  public static void AddRewardSeq1(FlatBufferBuilder builder, ushort rewardSeq1) { builder.AddUshort(7, rewardSeq1, 0); }
  public static void AddRewardSeq2(FlatBufferBuilder builder, ushort rewardSeq2) { builder.AddUshort(8, rewardSeq2, 0); }
  public static void AddRewardDt(FlatBufferBuilder builder, ulong rewardDt) { builder.AddUlong(9, rewardDt, 0); }
  public static Offset<AccountAttendInfo> EndAccountAttendInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AccountAttendInfo>(o);
  }
};

public struct GuildDungeonInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildDungeonInfo GetRootAsGuildDungeonInfo(ByteBuffer _bb) { return GetRootAsGuildDungeonInfo(_bb, new GuildDungeonInfo()); }
  public static GuildDungeonInfo GetRootAsGuildDungeonInfo(ByteBuffer _bb, GuildDungeonInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildDungeonInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong OpenGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong OpenTsSec { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BossKillTsSec { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Addr { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAddrBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetAddrBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetAddrArray() { return __p.__vector_as_array<byte>(12); }
  public ulong RoomNo { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildDungeonStatus Status { get { int o = __p.__offset(16); return o != 0 ? (E_GuildDungeonStatus)__p.bb.Get(o + __p.bb_pos) : E_GuildDungeonStatus.None; } }

  public static Offset<GuildDungeonInfo> CreateGuildDungeonInfo(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ulong open_guild_id = 0,
      ulong open_ts_sec = 0,
      ulong boss_kill_ts_sec = 0,
      StringOffset addrOffset = default(StringOffset),
      ulong room_no = 0,
      E_GuildDungeonStatus status = E_GuildDungeonStatus.None) {
    builder.StartObject(7);
    GuildDungeonInfo.AddRoomNo(builder, room_no);
    GuildDungeonInfo.AddBossKillTsSec(builder, boss_kill_ts_sec);
    GuildDungeonInfo.AddOpenTsSec(builder, open_ts_sec);
    GuildDungeonInfo.AddOpenGuildId(builder, open_guild_id);
    GuildDungeonInfo.AddAddr(builder, addrOffset);
    GuildDungeonInfo.AddStageTid(builder, stage_tid);
    GuildDungeonInfo.AddStatus(builder, status);
    return GuildDungeonInfo.EndGuildDungeonInfo(builder);
  }

  public static void StartGuildDungeonInfo(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddOpenGuildId(FlatBufferBuilder builder, ulong openGuildId) { builder.AddUlong(1, openGuildId, 0); }
  public static void AddOpenTsSec(FlatBufferBuilder builder, ulong openTsSec) { builder.AddUlong(2, openTsSec, 0); }
  public static void AddBossKillTsSec(FlatBufferBuilder builder, ulong bossKillTsSec) { builder.AddUlong(3, bossKillTsSec, 0); }
  public static void AddAddr(FlatBufferBuilder builder, StringOffset addrOffset) { builder.AddOffset(4, addrOffset.Value, 0); }
  public static void AddRoomNo(FlatBufferBuilder builder, ulong roomNo) { builder.AddUlong(5, roomNo, 0); }
  public static void AddStatus(FlatBufferBuilder builder, E_GuildDungeonStatus status) { builder.AddByte(6, (byte)status, 0); }
  public static Offset<GuildDungeonInfo> EndGuildDungeonInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildDungeonInfo>(o);
  }
};

public struct ReqAddColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAddColosseumServer GetRootAsReqAddColosseumServer(ByteBuffer _bb) { return GetRootAsReqAddColosseumServer(_bb, new ReqAddColosseumServer()); }
  public static ReqAddColosseumServer GetRootAsReqAddColosseumServer(ByteBuffer _bb, ReqAddColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAddColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort Port { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Domain { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDomainBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetDomainBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDomainArray() { return __p.__vector_as_array<byte>(8); }
  public ulong ClientTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_ColosseumStatus MmoStatus { get { int o = __p.__offset(12); return o != 0 ? (E_ColosseumStatus)__p.bb.Get(o + __p.bb_pos) : E_ColosseumStatus.None; } }

  public static Offset<ReqAddColosseumServer> CreateReqAddColosseumServer(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort port = 0,
      StringOffset domainOffset = default(StringOffset),
      ulong client_time = 0,
      E_ColosseumStatus mmo_status = E_ColosseumStatus.None) {
    builder.StartObject(5);
    ReqAddColosseumServer.AddClientTime(builder, client_time);
    ReqAddColosseumServer.AddDomain(builder, domainOffset);
    ReqAddColosseumServer.AddStageTid(builder, stage_tid);
    ReqAddColosseumServer.AddPort(builder, port);
    ReqAddColosseumServer.AddMmoStatus(builder, mmo_status);
    return ReqAddColosseumServer.EndReqAddColosseumServer(builder);
  }

  public static void StartReqAddColosseumServer(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddPort(FlatBufferBuilder builder, ushort port) { builder.AddUshort(1, port, 0); }
  public static void AddDomain(FlatBufferBuilder builder, StringOffset domainOffset) { builder.AddOffset(2, domainOffset.Value, 0); }
  public static void AddClientTime(FlatBufferBuilder builder, ulong clientTime) { builder.AddUlong(3, clientTime, 0); }
  public static void AddMmoStatus(FlatBufferBuilder builder, E_ColosseumStatus mmoStatus) { builder.AddByte(4, (byte)mmoStatus, 0); }
  public static Offset<ReqAddColosseumServer> EndReqAddColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAddColosseumServer>(o);
  }
};

public struct ResAddColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAddColosseumServer GetRootAsResAddColosseumServer(ByteBuffer _bb) { return GetRootAsResAddColosseumServer(_bb, new ResAddColosseumServer()); }
  public static ResAddColosseumServer GetRootAsResAddColosseumServer(ByteBuffer _bb, ResAddColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAddColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ClientTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ServerTsMs { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResAddColosseumServer> CreateResAddColosseumServer(FlatBufferBuilder builder,
      ulong client_time = 0,
      ulong server_ts_ms = 0) {
    builder.StartObject(2);
    ResAddColosseumServer.AddServerTsMs(builder, server_ts_ms);
    ResAddColosseumServer.AddClientTime(builder, client_time);
    return ResAddColosseumServer.EndResAddColosseumServer(builder);
  }

  public static void StartResAddColosseumServer(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddClientTime(FlatBufferBuilder builder, ulong clientTime) { builder.AddUlong(0, clientTime, 0); }
  public static void AddServerTsMs(FlatBufferBuilder builder, ulong serverTsMs) { builder.AddUlong(1, serverTsMs, 0); }
  public static Offset<ResAddColosseumServer> EndResAddColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAddColosseumServer>(o);
  }
};

public struct ReqRewardColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRewardColosseumServer GetRootAsReqRewardColosseumServer(ByteBuffer _bb) { return GetRootAsReqRewardColosseumServer(_bb, new ReqRewardColosseumServer()); }
  public static ReqRewardColosseumServer GetRootAsReqRewardColosseumServer(ByteBuffer _bb, ReqRewardColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRewardColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ColosseumTeam WinTeam { get { int o = __p.__offset(4); return o != 0 ? (E_ColosseumTeam)__p.bb.Get(o + __p.bb_pos) : E_ColosseumTeam.Blue; } }

  public static Offset<ReqRewardColosseumServer> CreateReqRewardColosseumServer(FlatBufferBuilder builder,
      E_ColosseumTeam win_team = E_ColosseumTeam.Blue) {
    builder.StartObject(1);
    ReqRewardColosseumServer.AddWinTeam(builder, win_team);
    return ReqRewardColosseumServer.EndReqRewardColosseumServer(builder);
  }

  public static void StartReqRewardColosseumServer(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddWinTeam(FlatBufferBuilder builder, E_ColosseumTeam winTeam) { builder.AddByte(0, (byte)winTeam, 0); }
  public static Offset<ReqRewardColosseumServer> EndReqRewardColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRewardColosseumServer>(o);
  }
};

public struct ResRewardColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRewardColosseumServer GetRootAsResRewardColosseumServer(ByteBuffer _bb) { return GetRootAsResRewardColosseumServer(_bb, new ResRewardColosseumServer()); }
  public static ResRewardColosseumServer GetRootAsResRewardColosseumServer(ByteBuffer _bb, ResRewardColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRewardColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResRewardColosseumServer(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResRewardColosseumServer> EndResRewardColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRewardColosseumServer>(o);
  }
};

public struct ReqAddColosseumQueue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAddColosseumQueue GetRootAsReqAddColosseumQueue(ByteBuffer _bb) { return GetRootAsReqAddColosseumQueue(_bb, new ReqAddColosseumQueue()); }
  public static ReqAddColosseumQueue GetRootAsReqAddColosseumQueue(ByteBuffer _bb, ReqAddColosseumQueue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAddColosseumQueue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte IsShowNick { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint StageTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqAddColosseumQueue> CreateReqAddColosseumQueue(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      byte is_show_nick = 0,
      uint server_idx = 0,
      uint stage_tid = 0) {
    builder.StartObject(5);
    ReqAddColosseumQueue.AddCharId(builder, char_id);
    ReqAddColosseumQueue.AddUserId(builder, user_id);
    ReqAddColosseumQueue.AddStageTid(builder, stage_tid);
    ReqAddColosseumQueue.AddServerIdx(builder, server_idx);
    ReqAddColosseumQueue.AddIsShowNick(builder, is_show_nick);
    return ReqAddColosseumQueue.EndReqAddColosseumQueue(builder);
  }

  public static void StartReqAddColosseumQueue(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddIsShowNick(FlatBufferBuilder builder, byte isShowNick) { builder.AddByte(2, isShowNick, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(4, stageTid, 0); }
  public static Offset<ReqAddColosseumQueue> EndReqAddColosseumQueue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAddColosseumQueue>(o);
  }
};

public struct ResAddColosseumQueue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAddColosseumQueue GetRootAsResAddColosseumQueue(ByteBuffer _bb) { return GetRootAsResAddColosseumQueue(_bb, new ResAddColosseumQueue()); }
  public static ResAddColosseumQueue GetRootAsResAddColosseumQueue(ByteBuffer _bb, ResAddColosseumQueue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAddColosseumQueue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResAddColosseumQueue(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResAddColosseumQueue> EndResAddColosseumQueue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAddColosseumQueue>(o);
  }
};

public struct ReqLeaveColosseumQueue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqLeaveColosseumQueue GetRootAsReqLeaveColosseumQueue(ByteBuffer _bb) { return GetRootAsReqLeaveColosseumQueue(_bb, new ReqLeaveColosseumQueue()); }
  public static ReqLeaveColosseumQueue GetRootAsReqLeaveColosseumQueue(ByteBuffer _bb, ReqLeaveColosseumQueue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqLeaveColosseumQueue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqLeaveColosseumQueue> CreateReqLeaveColosseumQueue(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0) {
    builder.StartObject(3);
    ReqLeaveColosseumQueue.AddCharId(builder, char_id);
    ReqLeaveColosseumQueue.AddUserId(builder, user_id);
    ReqLeaveColosseumQueue.AddServerIdx(builder, server_idx);
    return ReqLeaveColosseumQueue.EndReqLeaveColosseumQueue(builder);
  }

  public static void StartReqLeaveColosseumQueue(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static Offset<ReqLeaveColosseumQueue> EndReqLeaveColosseumQueue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqLeaveColosseumQueue>(o);
  }
};

public struct ResLeaveColosseumQueue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResLeaveColosseumQueue GetRootAsResLeaveColosseumQueue(ByteBuffer _bb) { return GetRootAsResLeaveColosseumQueue(_bb, new ResLeaveColosseumQueue()); }
  public static ResLeaveColosseumQueue GetRootAsResLeaveColosseumQueue(ByteBuffer _bb, ResLeaveColosseumQueue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResLeaveColosseumQueue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResLeaveColosseumQueue(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResLeaveColosseumQueue> EndResLeaveColosseumQueue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResLeaveColosseumQueue>(o);
  }
};

public struct BroadcastJoinColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastJoinColosseumServer GetRootAsBroadcastJoinColosseumServer(ByteBuffer _bb) { return GetRootAsBroadcastJoinColosseumServer(_bb, new BroadcastJoinColosseumServer()); }
  public static BroadcastJoinColosseumServer GetRootAsBroadcastJoinColosseumServer(ByteBuffer _bb, BroadcastJoinColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastJoinColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ServerAddr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetServerAddrBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetServerAddrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetServerAddrArray() { return __p.__vector_as_array<byte>(6); }
  public long RoomNo { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public ColosseumMatchUserInfo? MatchUserInfos(int j) { int o = __p.__offset(10); return o != 0 ? (ColosseumMatchUserInfo?)(new ColosseumMatchUserInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MatchUserInfosLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastJoinColosseumServer> CreateBroadcastJoinColosseumServer(FlatBufferBuilder builder,
      uint stage_tid = 0,
      StringOffset server_addrOffset = default(StringOffset),
      long room_no = 0,
      VectorOffset match_user_infosOffset = default(VectorOffset)) {
    builder.StartObject(4);
    BroadcastJoinColosseumServer.AddRoomNo(builder, room_no);
    BroadcastJoinColosseumServer.AddMatchUserInfos(builder, match_user_infosOffset);
    BroadcastJoinColosseumServer.AddServerAddr(builder, server_addrOffset);
    BroadcastJoinColosseumServer.AddStageTid(builder, stage_tid);
    return BroadcastJoinColosseumServer.EndBroadcastJoinColosseumServer(builder);
  }

  public static void StartBroadcastJoinColosseumServer(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddServerAddr(FlatBufferBuilder builder, StringOffset serverAddrOffset) { builder.AddOffset(1, serverAddrOffset.Value, 0); }
  public static void AddRoomNo(FlatBufferBuilder builder, long roomNo) { builder.AddLong(2, roomNo, 0); }
  public static void AddMatchUserInfos(FlatBufferBuilder builder, VectorOffset matchUserInfosOffset) { builder.AddOffset(3, matchUserInfosOffset.Value, 0); }
  public static VectorOffset CreateMatchUserInfosVector(FlatBufferBuilder builder, Offset<ColosseumMatchUserInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMatchUserInfosVectorBlock(FlatBufferBuilder builder, Offset<ColosseumMatchUserInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMatchUserInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastJoinColosseumServer> EndBroadcastJoinColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastJoinColosseumServer>(o);
  }
};

public struct BroadcastJoinColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastJoinColosseum GetRootAsBroadcastJoinColosseum(ByteBuffer _bb) { return GetRootAsBroadcastJoinColosseum(_bb, new BroadcastJoinColosseum()); }
  public static BroadcastJoinColosseum GetRootAsBroadcastJoinColosseum(ByteBuffer _bb, BroadcastJoinColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastJoinColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ServerAddr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetServerAddrBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetServerAddrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetServerAddrArray() { return __p.__vector_as_array<byte>(8); }
  public long RoomNo { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<BroadcastJoinColosseum> CreateBroadcastJoinColosseum(FlatBufferBuilder builder,
      uint stage_tid = 0,
      uint channel_id = 0,
      StringOffset server_addrOffset = default(StringOffset),
      long room_no = 0) {
    builder.StartObject(4);
    BroadcastJoinColosseum.AddRoomNo(builder, room_no);
    BroadcastJoinColosseum.AddServerAddr(builder, server_addrOffset);
    BroadcastJoinColosseum.AddChannelId(builder, channel_id);
    BroadcastJoinColosseum.AddStageTid(builder, stage_tid);
    return BroadcastJoinColosseum.EndBroadcastJoinColosseum(builder);
  }

  public static void StartBroadcastJoinColosseum(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, uint channelId) { builder.AddUint(1, channelId, 0); }
  public static void AddServerAddr(FlatBufferBuilder builder, StringOffset serverAddrOffset) { builder.AddOffset(2, serverAddrOffset.Value, 0); }
  public static void AddRoomNo(FlatBufferBuilder builder, long roomNo) { builder.AddLong(3, roomNo, 0); }
  public static Offset<BroadcastJoinColosseum> EndBroadcastJoinColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastJoinColosseum>(o);
  }
};

public struct BroadcastRewardColosseumServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastRewardColosseumServer GetRootAsBroadcastRewardColosseumServer(ByteBuffer _bb) { return GetRootAsBroadcastRewardColosseumServer(_bb, new BroadcastRewardColosseumServer()); }
  public static BroadcastRewardColosseumServer GetRootAsBroadcastRewardColosseumServer(ByteBuffer _bb, BroadcastRewardColosseumServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastRewardColosseumServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartBroadcastRewardColosseumServer(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<BroadcastRewardColosseumServer> EndBroadcastRewardColosseumServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastRewardColosseumServer>(o);
  }
};

public struct BroadcastLeaveColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastLeaveColosseum GetRootAsBroadcastLeaveColosseum(ByteBuffer _bb) { return GetRootAsBroadcastLeaveColosseum(_bb, new BroadcastLeaveColosseum()); }
  public static BroadcastLeaveColosseum GetRootAsBroadcastLeaveColosseum(ByteBuffer _bb, BroadcastLeaveColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastLeaveColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartBroadcastLeaveColosseum(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<BroadcastLeaveColosseum> EndBroadcastLeaveColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastLeaveColosseum>(o);
  }
};

public struct ReqRewardColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRewardColosseum GetRootAsReqRewardColosseum(ByteBuffer _bb) { return GetRootAsReqRewardColosseum(_bb, new ReqRewardColosseum()); }
  public static ReqRewardColosseum GetRootAsReqRewardColosseum(ByteBuffer _bb, ReqRewardColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRewardColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqRewardColosseum(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqRewardColosseum> EndReqRewardColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRewardColosseum>(o);
  }
};

public struct ResRewardColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRewardColosseum GetRootAsResRewardColosseum(ByteBuffer _bb) { return GetRootAsResRewardColosseum(_bb, new ResRewardColosseum()); }
  public static ResRewardColosseum GetRootAsResRewardColosseum(ByteBuffer _bb, ResRewardColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRewardColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte IsHaveResult { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint StageTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsWin { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint OldRank { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint OldScore { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Rank { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Score { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RewardCnt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(20); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(22); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRewardColosseum> CreateResRewardColosseum(FlatBufferBuilder builder,
      byte is_have_result = 0,
      uint stage_tid = 0,
      byte is_win = 0,
      uint old_rank = 0,
      uint old_score = 0,
      uint rank = 0,
      uint score = 0,
      uint reward_cnt = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(10);
    ResRewardColosseum.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResRewardColosseum.AddGetItems(builder, get_itemsOffset);
    ResRewardColosseum.AddRewardCnt(builder, reward_cnt);
    ResRewardColosseum.AddScore(builder, score);
    ResRewardColosseum.AddRank(builder, rank);
    ResRewardColosseum.AddOldScore(builder, old_score);
    ResRewardColosseum.AddOldRank(builder, old_rank);
    ResRewardColosseum.AddStageTid(builder, stage_tid);
    ResRewardColosseum.AddIsWin(builder, is_win);
    ResRewardColosseum.AddIsHaveResult(builder, is_have_result);
    return ResRewardColosseum.EndResRewardColosseum(builder);
  }

  public static void StartResRewardColosseum(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddIsHaveResult(FlatBufferBuilder builder, byte isHaveResult) { builder.AddByte(0, isHaveResult, 0); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(1, stageTid, 0); }
  public static void AddIsWin(FlatBufferBuilder builder, byte isWin) { builder.AddByte(2, isWin, 0); }
  public static void AddOldRank(FlatBufferBuilder builder, uint oldRank) { builder.AddUint(3, oldRank, 0); }
  public static void AddOldScore(FlatBufferBuilder builder, uint oldScore) { builder.AddUint(4, oldScore, 0); }
  public static void AddRank(FlatBufferBuilder builder, uint rank) { builder.AddUint(5, rank, 0); }
  public static void AddScore(FlatBufferBuilder builder, uint score) { builder.AddUint(6, score, 0); }
  public static void AddRewardCnt(FlatBufferBuilder builder, uint rewardCnt) { builder.AddUint(7, rewardCnt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(8, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(9, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRewardColosseum> EndResRewardColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRewardColosseum>(o);
  }
};

public struct ReqRewardSeasonColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRewardSeasonColosseum GetRootAsReqRewardSeasonColosseum(ByteBuffer _bb) { return GetRootAsReqRewardSeasonColosseum(_bb, new ReqRewardSeasonColosseum()); }
  public static ReqRewardSeasonColosseum GetRootAsReqRewardSeasonColosseum(ByteBuffer _bb, ReqRewardSeasonColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRewardSeasonColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqRewardSeasonColosseum(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqRewardSeasonColosseum> EndReqRewardSeasonColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRewardSeasonColosseum>(o);
  }
};

public struct ResRewardSeasonColosseum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRewardSeasonColosseum GetRootAsResRewardSeasonColosseum(ByteBuffer _bb) { return GetRootAsResRewardSeasonColosseum(_bb, new ResRewardSeasonColosseum()); }
  public static ResRewardSeasonColosseum GetRootAsResRewardSeasonColosseum(ByteBuffer _bb, ResRewardSeasonColosseum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRewardSeasonColosseum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsColosseumSeasonReward { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint OldSeasonRank { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint OldSeasonScore { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(10); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRewardSeasonColosseum> CreateResRewardSeasonColosseum(FlatBufferBuilder builder,
      bool is_colosseum_season_reward = false,
      uint old_season_rank = 0,
      uint old_season_score = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    ResRewardSeasonColosseum.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResRewardSeasonColosseum.AddGetItems(builder, get_itemsOffset);
    ResRewardSeasonColosseum.AddOldSeasonScore(builder, old_season_score);
    ResRewardSeasonColosseum.AddOldSeasonRank(builder, old_season_rank);
    ResRewardSeasonColosseum.AddIsColosseumSeasonReward(builder, is_colosseum_season_reward);
    return ResRewardSeasonColosseum.EndResRewardSeasonColosseum(builder);
  }

  public static void StartResRewardSeasonColosseum(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddIsColosseumSeasonReward(FlatBufferBuilder builder, bool isColosseumSeasonReward) { builder.AddBool(0, isColosseumSeasonReward, false); }
  public static void AddOldSeasonRank(FlatBufferBuilder builder, uint oldSeasonRank) { builder.AddUint(1, oldSeasonRank, 0); }
  public static void AddOldSeasonScore(FlatBufferBuilder builder, uint oldSeasonScore) { builder.AddUint(2, oldSeasonScore, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(3, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(4, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRewardSeasonColosseum> EndResRewardSeasonColosseum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRewardSeasonColosseum>(o);
  }
};

public struct BroadcastLeaveColosseumQueue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastLeaveColosseumQueue GetRootAsBroadcastLeaveColosseumQueue(ByteBuffer _bb) { return GetRootAsBroadcastLeaveColosseumQueue(_bb, new BroadcastLeaveColosseumQueue()); }
  public static BroadcastLeaveColosseumQueue GetRootAsBroadcastLeaveColosseumQueue(ByteBuffer _bb, BroadcastLeaveColosseumQueue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastLeaveColosseumQueue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Reason { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BroadcastLeaveColosseumQueue> CreateBroadcastLeaveColosseumQueue(FlatBufferBuilder builder,
      uint reason = 0) {
    builder.StartObject(1);
    BroadcastLeaveColosseumQueue.AddReason(builder, reason);
    return BroadcastLeaveColosseumQueue.EndBroadcastLeaveColosseumQueue(builder);
  }

  public static void StartBroadcastLeaveColosseumQueue(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddReason(FlatBufferBuilder builder, uint reason) { builder.AddUint(0, reason, 0); }
  public static Offset<BroadcastLeaveColosseumQueue> EndBroadcastLeaveColosseumQueue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastLeaveColosseumQueue>(o);
  }
};

public struct ReqPartyCheck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyCheck GetRootAsReqPartyCheck(ByteBuffer _bb) { return GetRootAsReqPartyCheck(_bb, new ReqPartyCheck()); }
  public static ReqPartyCheck GetRootAsReqPartyCheck(ByteBuffer _bb, ReqPartyCheck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyCheck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqPartyCheck> CreateReqPartyCheck(FlatBufferBuilder builder,
      uint server_idx = 0,
      ulong char_id = 0) {
    builder.StartObject(2);
    ReqPartyCheck.AddCharId(builder, char_id);
    ReqPartyCheck.AddServerIdx(builder, server_idx);
    return ReqPartyCheck.EndReqPartyCheck(builder);
  }

  public static void StartReqPartyCheck(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static Offset<ReqPartyCheck> EndReqPartyCheck(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyCheck>(o);
  }
};

public struct ResPartyCheck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyCheck GetRootAsResPartyCheck(ByteBuffer _bb) { return GetRootAsResPartyCheck(_bb, new ResPartyCheck()); }
  public static ResPartyCheck GetRootAsResPartyCheck(ByteBuffer _bb, ResPartyCheck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyCheck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsParty { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint PartyUid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResPartyCheck> CreateResPartyCheck(FlatBufferBuilder builder,
      bool is_party = false,
      uint party_uid = 0) {
    builder.StartObject(2);
    ResPartyCheck.AddPartyUid(builder, party_uid);
    ResPartyCheck.AddIsParty(builder, is_party);
    return ResPartyCheck.EndResPartyCheck(builder);
  }

  public static void StartResPartyCheck(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIsParty(FlatBufferBuilder builder, bool isParty) { builder.AddBool(0, isParty, false); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(1, partyUid, 0); }
  public static Offset<ResPartyCheck> EndResPartyCheck(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyCheck>(o);
  }
};

public struct ReqPartyMemberInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyMemberInfo GetRootAsReqPartyMemberInfo(ByteBuffer _bb) { return GetRootAsReqPartyMemberInfo(_bb, new ReqPartyMemberInfo()); }
  public static ReqPartyMemberInfo GetRootAsReqPartyMemberInfo(ByteBuffer _bb, ReqPartyMemberInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyMemberInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PartyUid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyMemberInfo> CreateReqPartyMemberInfo(FlatBufferBuilder builder,
      uint server_idx = 0,
      ulong char_id = 0,
      uint party_uid = 0) {
    builder.StartObject(3);
    ReqPartyMemberInfo.AddCharId(builder, char_id);
    ReqPartyMemberInfo.AddPartyUid(builder, party_uid);
    ReqPartyMemberInfo.AddServerIdx(builder, server_idx);
    return ReqPartyMemberInfo.EndReqPartyMemberInfo(builder);
  }

  public static void StartReqPartyMemberInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(2, partyUid, 0); }
  public static Offset<ReqPartyMemberInfo> EndReqPartyMemberInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyMemberInfo>(o);
  }
};

public struct ResPartyMemberInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyMemberInfo GetRootAsResPartyMemberInfo(ByteBuffer _bb) { return GetRootAsResPartyMemberInfo(_bb, new ResPartyMemberInfo()); }
  public static ResPartyMemberInfo GetRootAsResPartyMemberInfo(ByteBuffer _bb, ResPartyMemberInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyMemberInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? MemberInfo(int j) { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MemberInfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPartyMemberInfo> CreateResPartyMemberInfo(FlatBufferBuilder builder,
      VectorOffset member_infoOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResPartyMemberInfo.AddMemberInfo(builder, member_infoOffset);
    return ResPartyMemberInfo.EndResPartyMemberInfo(builder);
  }

  public static void StartResPartyMemberInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMemberInfo(FlatBufferBuilder builder, VectorOffset memberInfoOffset) { builder.AddOffset(0, memberInfoOffset.Value, 0); }
  public static VectorOffset CreateMemberInfoVector(FlatBufferBuilder builder, Offset<PartyMemberDetail>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMemberInfoVectorBlock(FlatBufferBuilder builder, Offset<PartyMemberDetail>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMemberInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPartyMemberInfo> EndResPartyMemberInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyMemberInfo>(o);
  }
};

public struct ReqPartyCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyCreate GetRootAsReqPartyCreate(ByteBuffer _bb) { return GetRootAsReqPartyCreate(_bb, new ReqPartyCreate()); }
  public static ReqPartyCreate GetRootAsReqPartyCreate(ByteBuffer _bb, ReqPartyCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyCreate> CreateReqPartyCreate(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint server_idx = 0) {
    builder.StartObject(4);
    ReqPartyCreate.AddCharId(builder, char_id);
    ReqPartyCreate.AddServerIdx(builder, server_idx);
    ReqPartyCreate.AddNick(builder, nickOffset);
    ReqPartyCreate.AddCharTid(builder, char_tid);
    return ReqPartyCreate.EndReqPartyCreate(builder);
  }

  public static void StartReqPartyCreate(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static Offset<ReqPartyCreate> EndReqPartyCreate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyCreate>(o);
  }
};

public struct ResPartyCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyCreate GetRootAsResPartyCreate(ByteBuffer _bb) { return GetRootAsResPartyCreate(_bb, new ResPartyCreate()); }
  public static ResPartyCreate GetRootAsResPartyCreate(ByteBuffer _bb, ResPartyCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PartyUid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public PartyMemberDetail? PartyMember { get { int o = __p.__offset(6); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPartyCreate> CreateResPartyCreate(FlatBufferBuilder builder,
      uint party_uid = 0,
      Offset<PartyMemberDetail> party_memberOffset = default(Offset<PartyMemberDetail>)) {
    builder.StartObject(2);
    ResPartyCreate.AddPartyMember(builder, party_memberOffset);
    ResPartyCreate.AddPartyUid(builder, party_uid);
    return ResPartyCreate.EndResPartyCreate(builder);
  }

  public static void StartResPartyCreate(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(0, partyUid, 0); }
  public static void AddPartyMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> partyMemberOffset) { builder.AddOffset(1, partyMemberOffset.Value, 0); }
  public static Offset<ResPartyCreate> EndResPartyCreate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyCreate>(o);
  }
};

public struct ReqPartyInvite : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyInvite GetRootAsReqPartyInvite(ByteBuffer _bb) { return GetRootAsReqPartyInvite(_bb, new ReqPartyInvite()); }
  public static ReqPartyInvite GetRootAsReqPartyInvite(ByteBuffer _bb, ReqPartyInvite obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyInvite __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SenderCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SenderCharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string SenderNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSenderNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetSenderNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSenderNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint SenderServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ReceiverCharId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string ReceiverNick { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReceiverNickBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetReceiverNickBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetReceiverNickArray() { return __p.__vector_as_array<byte>(14); }
  public uint ReceiverServerIdx { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyInvite> CreateReqPartyInvite(FlatBufferBuilder builder,
      ulong sender_char_id = 0,
      uint sender_char_tid = 0,
      StringOffset sender_nickOffset = default(StringOffset),
      uint sender_server_idx = 0,
      ulong receiver_char_id = 0,
      StringOffset receiver_nickOffset = default(StringOffset),
      uint receiver_server_idx = 0) {
    builder.StartObject(7);
    ReqPartyInvite.AddReceiverCharId(builder, receiver_char_id);
    ReqPartyInvite.AddSenderCharId(builder, sender_char_id);
    ReqPartyInvite.AddReceiverServerIdx(builder, receiver_server_idx);
    ReqPartyInvite.AddReceiverNick(builder, receiver_nickOffset);
    ReqPartyInvite.AddSenderServerIdx(builder, sender_server_idx);
    ReqPartyInvite.AddSenderNick(builder, sender_nickOffset);
    ReqPartyInvite.AddSenderCharTid(builder, sender_char_tid);
    return ReqPartyInvite.EndReqPartyInvite(builder);
  }

  public static void StartReqPartyInvite(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddSenderCharId(FlatBufferBuilder builder, ulong senderCharId) { builder.AddUlong(0, senderCharId, 0); }
  public static void AddSenderCharTid(FlatBufferBuilder builder, uint senderCharTid) { builder.AddUint(1, senderCharTid, 0); }
  public static void AddSenderNick(FlatBufferBuilder builder, StringOffset senderNickOffset) { builder.AddOffset(2, senderNickOffset.Value, 0); }
  public static void AddSenderServerIdx(FlatBufferBuilder builder, uint senderServerIdx) { builder.AddUint(3, senderServerIdx, 0); }
  public static void AddReceiverCharId(FlatBufferBuilder builder, ulong receiverCharId) { builder.AddUlong(4, receiverCharId, 0); }
  public static void AddReceiverNick(FlatBufferBuilder builder, StringOffset receiverNickOffset) { builder.AddOffset(5, receiverNickOffset.Value, 0); }
  public static void AddReceiverServerIdx(FlatBufferBuilder builder, uint receiverServerIdx) { builder.AddUint(6, receiverServerIdx, 0); }
  public static Offset<ReqPartyInvite> EndReqPartyInvite(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyInvite>(o);
  }
};

public struct ResPartyInvite : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyInvite GetRootAsResPartyInvite(ByteBuffer _bb) { return GetRootAsResPartyInvite(_bb, new ResPartyInvite()); }
  public static ResPartyInvite GetRootAsResPartyInvite(ByteBuffer _bb, ResPartyInvite obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyInvite __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ReceiverNick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReceiverNickBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetReceiverNickBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetReceiverNickArray() { return __p.__vector_as_array<byte>(4); }
  public uint ReceiverServerIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResPartyInvite> CreateResPartyInvite(FlatBufferBuilder builder,
      StringOffset receiver_nickOffset = default(StringOffset),
      uint receiver_server_idx = 0) {
    builder.StartObject(2);
    ResPartyInvite.AddReceiverServerIdx(builder, receiver_server_idx);
    ResPartyInvite.AddReceiverNick(builder, receiver_nickOffset);
    return ResPartyInvite.EndResPartyInvite(builder);
  }

  public static void StartResPartyInvite(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddReceiverNick(FlatBufferBuilder builder, StringOffset receiverNickOffset) { builder.AddOffset(0, receiverNickOffset.Value, 0); }
  public static void AddReceiverServerIdx(FlatBufferBuilder builder, uint receiverServerIdx) { builder.AddUint(1, receiverServerIdx, 0); }
  public static Offset<ResPartyInvite> EndResPartyInvite(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyInvite>(o);
  }
};

public struct BroadcastPartyInvite : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyInvite GetRootAsBroadcastPartyInvite(ByteBuffer _bb) { return GetRootAsBroadcastPartyInvite(_bb, new BroadcastPartyInvite()); }
  public static BroadcastPartyInvite GetRootAsBroadcastPartyInvite(ByteBuffer _bb, BroadcastPartyInvite obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyInvite __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? Sender { get { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public uint PartyUid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Buff? SenderBuffInfo(int j) { int o = __p.__offset(8); return o != 0 ? (Buff?)(new Buff()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SenderBuffInfoLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastPartyInvite> CreateBroadcastPartyInvite(FlatBufferBuilder builder,
      Offset<PartyMemberDetail> senderOffset = default(Offset<PartyMemberDetail>),
      uint party_uid = 0,
      VectorOffset sender_buff_infoOffset = default(VectorOffset)) {
    builder.StartObject(3);
    BroadcastPartyInvite.AddSenderBuffInfo(builder, sender_buff_infoOffset);
    BroadcastPartyInvite.AddPartyUid(builder, party_uid);
    BroadcastPartyInvite.AddSender(builder, senderOffset);
    return BroadcastPartyInvite.EndBroadcastPartyInvite(builder);
  }

  public static void StartBroadcastPartyInvite(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddSender(FlatBufferBuilder builder, Offset<PartyMemberDetail> senderOffset) { builder.AddOffset(0, senderOffset.Value, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(1, partyUid, 0); }
  public static void AddSenderBuffInfo(FlatBufferBuilder builder, VectorOffset senderBuffInfoOffset) { builder.AddOffset(2, senderBuffInfoOffset.Value, 0); }
  public static VectorOffset CreateSenderBuffInfoVector(FlatBufferBuilder builder, Offset<Buff>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSenderBuffInfoVectorBlock(FlatBufferBuilder builder, Offset<Buff>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSenderBuffInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastPartyInvite> EndBroadcastPartyInvite(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyInvite>(o);
  }
};

public struct ReqPartyJoin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyJoin GetRootAsReqPartyJoin(ByteBuffer _bb) { return GetRootAsReqPartyJoin(_bb, new ReqPartyJoin()); }
  public static ReqPartyJoin GetRootAsReqPartyJoin(ByteBuffer _bb, ReqPartyJoin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PartyUid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyJoin> CreateReqPartyJoin(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint server_idx = 0,
      uint party_uid = 0) {
    builder.StartObject(5);
    ReqPartyJoin.AddCharId(builder, char_id);
    ReqPartyJoin.AddPartyUid(builder, party_uid);
    ReqPartyJoin.AddServerIdx(builder, server_idx);
    ReqPartyJoin.AddNick(builder, nickOffset);
    ReqPartyJoin.AddCharTid(builder, char_tid);
    return ReqPartyJoin.EndReqPartyJoin(builder);
  }

  public static void StartReqPartyJoin(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(4, partyUid, 0); }
  public static Offset<ReqPartyJoin> EndReqPartyJoin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyJoin>(o);
  }
};

public struct ResPartyJoin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyJoin GetRootAsResPartyJoin(ByteBuffer _bb) { return GetRootAsResPartyJoin(_bb, new ResPartyJoin()); }
  public static ResPartyJoin GetRootAsResPartyJoin(ByteBuffer _bb, ResPartyJoin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PartyUid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsJoin { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public PartyMemberDetail? PartyMembers(int j) { int o = __p.__offset(8); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PartyMembersLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPartyJoin> CreateResPartyJoin(FlatBufferBuilder builder,
      uint party_uid = 0,
      bool is_join = false,
      VectorOffset party_membersOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResPartyJoin.AddPartyMembers(builder, party_membersOffset);
    ResPartyJoin.AddPartyUid(builder, party_uid);
    ResPartyJoin.AddIsJoin(builder, is_join);
    return ResPartyJoin.EndResPartyJoin(builder);
  }

  public static void StartResPartyJoin(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(0, partyUid, 0); }
  public static void AddIsJoin(FlatBufferBuilder builder, bool isJoin) { builder.AddBool(1, isJoin, false); }
  public static void AddPartyMembers(FlatBufferBuilder builder, VectorOffset partyMembersOffset) { builder.AddOffset(2, partyMembersOffset.Value, 0); }
  public static VectorOffset CreatePartyMembersVector(FlatBufferBuilder builder, Offset<PartyMemberDetail>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePartyMembersVectorBlock(FlatBufferBuilder builder, Offset<PartyMemberDetail>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPartyMembersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPartyJoin> EndResPartyJoin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyJoin>(o);
  }
};

public struct BroadcastPartyJoin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyJoin GetRootAsBroadcastPartyJoin(ByteBuffer _bb) { return GetRootAsBroadcastPartyJoin(_bb, new BroadcastPartyJoin()); }
  public static BroadcastPartyJoin GetRootAsBroadcastPartyJoin(ByteBuffer _bb, BroadcastPartyJoin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? JoinMember { get { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<BroadcastPartyJoin> CreateBroadcastPartyJoin(FlatBufferBuilder builder,
      Offset<PartyMemberDetail> join_memberOffset = default(Offset<PartyMemberDetail>)) {
    builder.StartObject(1);
    BroadcastPartyJoin.AddJoinMember(builder, join_memberOffset);
    return BroadcastPartyJoin.EndBroadcastPartyJoin(builder);
  }

  public static void StartBroadcastPartyJoin(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddJoinMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> joinMemberOffset) { builder.AddOffset(0, joinMemberOffset.Value, 0); }
  public static Offset<BroadcastPartyJoin> EndBroadcastPartyJoin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyJoin>(o);
  }
};

public struct ReqPartyRefuse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyRefuse GetRootAsReqPartyRefuse(ByteBuffer _bb) { return GetRootAsReqPartyRefuse(_bb, new ReqPartyRefuse()); }
  public static ReqPartyRefuse GetRootAsReqPartyRefuse(ByteBuffer _bb, ReqPartyRefuse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyRefuse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Nick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PartyUid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong SenderCharId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SenderServerIdx { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyRefuse> CreateReqPartyRefuse(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset nickOffset = default(StringOffset),
      uint server_idx = 0,
      uint party_uid = 0,
      ulong sender_char_id = 0,
      uint sender_server_idx = 0) {
    builder.StartObject(6);
    ReqPartyRefuse.AddSenderCharId(builder, sender_char_id);
    ReqPartyRefuse.AddCharId(builder, char_id);
    ReqPartyRefuse.AddSenderServerIdx(builder, sender_server_idx);
    ReqPartyRefuse.AddPartyUid(builder, party_uid);
    ReqPartyRefuse.AddServerIdx(builder, server_idx);
    ReqPartyRefuse.AddNick(builder, nickOffset);
    return ReqPartyRefuse.EndReqPartyRefuse(builder);
  }

  public static void StartReqPartyRefuse(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(1, nickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(3, partyUid, 0); }
  public static void AddSenderCharId(FlatBufferBuilder builder, ulong senderCharId) { builder.AddUlong(4, senderCharId, 0); }
  public static void AddSenderServerIdx(FlatBufferBuilder builder, uint senderServerIdx) { builder.AddUint(5, senderServerIdx, 0); }
  public static Offset<ReqPartyRefuse> EndReqPartyRefuse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyRefuse>(o);
  }
};

public struct ResPartyRefuse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyRefuse GetRootAsResPartyRefuse(ByteBuffer _bb) { return GetRootAsResPartyRefuse(_bb, new ResPartyRefuse()); }
  public static ResPartyRefuse GetRootAsResPartyRefuse(ByteBuffer _bb, ResPartyRefuse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyRefuse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResPartyRefuse(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResPartyRefuse> EndResPartyRefuse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyRefuse>(o);
  }
};

public struct BroadcastPartyRefuse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyRefuse GetRootAsBroadcastPartyRefuse(ByteBuffer _bb) { return GetRootAsBroadcastPartyRefuse(_bb, new BroadcastPartyRefuse()); }
  public static BroadcastPartyRefuse GetRootAsBroadcastPartyRefuse(ByteBuffer _bb, BroadcastPartyRefuse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyRefuse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RefuseCharNick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRefuseCharNickBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetRefuseCharNickBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRefuseCharNickArray() { return __p.__vector_as_array<byte>(4); }
  public uint RefuseCharServerIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BroadcastPartyRefuse> CreateBroadcastPartyRefuse(FlatBufferBuilder builder,
      StringOffset refuse_char_nickOffset = default(StringOffset),
      uint refuse_char_server_idx = 0) {
    builder.StartObject(2);
    BroadcastPartyRefuse.AddRefuseCharServerIdx(builder, refuse_char_server_idx);
    BroadcastPartyRefuse.AddRefuseCharNick(builder, refuse_char_nickOffset);
    return BroadcastPartyRefuse.EndBroadcastPartyRefuse(builder);
  }

  public static void StartBroadcastPartyRefuse(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddRefuseCharNick(FlatBufferBuilder builder, StringOffset refuseCharNickOffset) { builder.AddOffset(0, refuseCharNickOffset.Value, 0); }
  public static void AddRefuseCharServerIdx(FlatBufferBuilder builder, uint refuseCharServerIdx) { builder.AddUint(1, refuseCharServerIdx, 0); }
  public static Offset<BroadcastPartyRefuse> EndBroadcastPartyRefuse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyRefuse>(o);
  }
};

public struct ReqPartyOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyOut GetRootAsReqPartyOut(ByteBuffer _bb) { return GetRootAsReqPartyOut(_bb, new ReqPartyOut()); }
  public static ReqPartyOut GetRootAsReqPartyOut(ByteBuffer _bb, ReqPartyOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PartyUid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyOut> CreateReqPartyOut(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0,
      StringOffset nickOffset = default(StringOffset),
      uint server_idx = 0,
      uint party_uid = 0) {
    builder.StartObject(5);
    ReqPartyOut.AddCharId(builder, char_id);
    ReqPartyOut.AddPartyUid(builder, party_uid);
    ReqPartyOut.AddServerIdx(builder, server_idx);
    ReqPartyOut.AddNick(builder, nickOffset);
    ReqPartyOut.AddCharTid(builder, char_tid);
    return ReqPartyOut.EndReqPartyOut(builder);
  }

  public static void StartReqPartyOut(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(2, nickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, uint partyUid) { builder.AddUint(4, partyUid, 0); }
  public static Offset<ReqPartyOut> EndReqPartyOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyOut>(o);
  }
};

public struct ResPartyOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyOut GetRootAsResPartyOut(ByteBuffer _bb) { return GetRootAsResPartyOut(_bb, new ResPartyOut()); }
  public static ResPartyOut GetRootAsResPartyOut(ByteBuffer _bb, ResPartyOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResPartyOut(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResPartyOut> EndResPartyOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyOut>(o);
  }
};

public struct BroadcastPartyOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyOut GetRootAsBroadcastPartyOut(ByteBuffer _bb) { return GetRootAsBroadcastPartyOut(_bb, new BroadcastPartyOut()); }
  public static BroadcastPartyOut GetRootAsBroadcastPartyOut(ByteBuffer _bb, BroadcastPartyOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? OutMember { get { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public PartyMemberDetail? NewMaster { get { int o = __p.__offset(6); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<BroadcastPartyOut> CreateBroadcastPartyOut(FlatBufferBuilder builder,
      Offset<PartyMemberDetail> out_memberOffset = default(Offset<PartyMemberDetail>),
      Offset<PartyMemberDetail> new_masterOffset = default(Offset<PartyMemberDetail>)) {
    builder.StartObject(2);
    BroadcastPartyOut.AddNewMaster(builder, new_masterOffset);
    BroadcastPartyOut.AddOutMember(builder, out_memberOffset);
    return BroadcastPartyOut.EndBroadcastPartyOut(builder);
  }

  public static void StartBroadcastPartyOut(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddOutMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> outMemberOffset) { builder.AddOffset(0, outMemberOffset.Value, 0); }
  public static void AddNewMaster(FlatBufferBuilder builder, Offset<PartyMemberDetail> newMasterOffset) { builder.AddOffset(1, newMasterOffset.Value, 0); }
  public static Offset<BroadcastPartyOut> EndBroadcastPartyOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyOut>(o);
  }
};

public struct ReqPartyKickOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyKickOut GetRootAsReqPartyKickOut(ByteBuffer _bb) { return GetRootAsReqPartyKickOut(_bb, new ReqPartyKickOut()); }
  public static ReqPartyKickOut GetRootAsReqPartyKickOut(ByteBuffer _bb, ReqPartyKickOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyKickOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong KickCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KickCharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string KickNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKickNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetKickNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetKickNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint KickServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong CharId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyKickOut> CreateReqPartyKickOut(FlatBufferBuilder builder,
      ulong kick_char_id = 0,
      uint kick_char_tid = 0,
      StringOffset kick_nickOffset = default(StringOffset),
      uint kick_server_idx = 0,
      ulong char_id = 0,
      uint server_idx = 0) {
    builder.StartObject(6);
    ReqPartyKickOut.AddCharId(builder, char_id);
    ReqPartyKickOut.AddKickCharId(builder, kick_char_id);
    ReqPartyKickOut.AddServerIdx(builder, server_idx);
    ReqPartyKickOut.AddKickServerIdx(builder, kick_server_idx);
    ReqPartyKickOut.AddKickNick(builder, kick_nickOffset);
    ReqPartyKickOut.AddKickCharTid(builder, kick_char_tid);
    return ReqPartyKickOut.EndReqPartyKickOut(builder);
  }

  public static void StartReqPartyKickOut(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddKickCharId(FlatBufferBuilder builder, ulong kickCharId) { builder.AddUlong(0, kickCharId, 0); }
  public static void AddKickCharTid(FlatBufferBuilder builder, uint kickCharTid) { builder.AddUint(1, kickCharTid, 0); }
  public static void AddKickNick(FlatBufferBuilder builder, StringOffset kickNickOffset) { builder.AddOffset(2, kickNickOffset.Value, 0); }
  public static void AddKickServerIdx(FlatBufferBuilder builder, uint kickServerIdx) { builder.AddUint(3, kickServerIdx, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(4, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(5, serverIdx, 0); }
  public static Offset<ReqPartyKickOut> EndReqPartyKickOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyKickOut>(o);
  }
};

public struct ResPartyKickOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyKickOut GetRootAsResPartyKickOut(ByteBuffer _bb) { return GetRootAsResPartyKickOut(_bb, new ResPartyKickOut()); }
  public static ResPartyKickOut GetRootAsResPartyKickOut(ByteBuffer _bb, ResPartyKickOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyKickOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResPartyKickOut(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResPartyKickOut> EndResPartyKickOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyKickOut>(o);
  }
};

public struct BroadcastPartyKickOut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyKickOut GetRootAsBroadcastPartyKickOut(ByteBuffer _bb) { return GetRootAsBroadcastPartyKickOut(_bb, new BroadcastPartyKickOut()); }
  public static BroadcastPartyKickOut GetRootAsBroadcastPartyKickOut(ByteBuffer _bb, BroadcastPartyKickOut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyKickOut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? KickMember { get { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<BroadcastPartyKickOut> CreateBroadcastPartyKickOut(FlatBufferBuilder builder,
      Offset<PartyMemberDetail> kick_memberOffset = default(Offset<PartyMemberDetail>)) {
    builder.StartObject(1);
    BroadcastPartyKickOut.AddKickMember(builder, kick_memberOffset);
    return BroadcastPartyKickOut.EndBroadcastPartyKickOut(builder);
  }

  public static void StartBroadcastPartyKickOut(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddKickMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> kickMemberOffset) { builder.AddOffset(0, kickMemberOffset.Value, 0); }
  public static Offset<BroadcastPartyKickOut> EndBroadcastPartyKickOut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyKickOut>(o);
  }
};

public struct ReqPartyChangeMaster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyChangeMaster GetRootAsReqPartyChangeMaster(ByteBuffer _bb) { return GetRootAsReqPartyChangeMaster(_bb, new ReqPartyChangeMaster()); }
  public static ReqPartyChangeMaster GetRootAsReqPartyChangeMaster(ByteBuffer _bb, ReqPartyChangeMaster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyChangeMaster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong TargetCharId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint TargetCharTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string TargetCharNick { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetCharNickBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetTargetCharNickBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetTargetCharNickArray() { return __p.__vector_as_array<byte>(14); }
  public uint TargetServerIdx { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPartyChangeMaster> CreateReqPartyChangeMaster(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0,
      ulong target_char_id = 0,
      uint target_char_tid = 0,
      StringOffset target_char_nickOffset = default(StringOffset),
      uint target_server_idx = 0) {
    builder.StartObject(7);
    ReqPartyChangeMaster.AddTargetCharId(builder, target_char_id);
    ReqPartyChangeMaster.AddCharId(builder, char_id);
    ReqPartyChangeMaster.AddUserId(builder, user_id);
    ReqPartyChangeMaster.AddTargetServerIdx(builder, target_server_idx);
    ReqPartyChangeMaster.AddTargetCharNick(builder, target_char_nickOffset);
    ReqPartyChangeMaster.AddTargetCharTid(builder, target_char_tid);
    ReqPartyChangeMaster.AddServerIdx(builder, server_idx);
    return ReqPartyChangeMaster.EndReqPartyChangeMaster(builder);
  }

  public static void StartReqPartyChangeMaster(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddTargetCharId(FlatBufferBuilder builder, ulong targetCharId) { builder.AddUlong(3, targetCharId, 0); }
  public static void AddTargetCharTid(FlatBufferBuilder builder, uint targetCharTid) { builder.AddUint(4, targetCharTid, 0); }
  public static void AddTargetCharNick(FlatBufferBuilder builder, StringOffset targetCharNickOffset) { builder.AddOffset(5, targetCharNickOffset.Value, 0); }
  public static void AddTargetServerIdx(FlatBufferBuilder builder, uint targetServerIdx) { builder.AddUint(6, targetServerIdx, 0); }
  public static Offset<ReqPartyChangeMaster> EndReqPartyChangeMaster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyChangeMaster>(o);
  }
};

public struct ResPartyChangeMaster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyChangeMaster GetRootAsResPartyChangeMaster(ByteBuffer _bb) { return GetRootAsResPartyChangeMaster(_bb, new ResPartyChangeMaster()); }
  public static ResPartyChangeMaster GetRootAsResPartyChangeMaster(ByteBuffer _bb, ResPartyChangeMaster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyChangeMaster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResPartyChangeMaster(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResPartyChangeMaster> EndResPartyChangeMaster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyChangeMaster>(o);
  }
};

public struct BroadcastPartyChangeMaster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyChangeMaster GetRootAsBroadcastPartyChangeMaster(ByteBuffer _bb) { return GetRootAsBroadcastPartyChangeMaster(_bb, new BroadcastPartyChangeMaster()); }
  public static BroadcastPartyChangeMaster GetRootAsBroadcastPartyChangeMaster(ByteBuffer _bb, BroadcastPartyChangeMaster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyChangeMaster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PartyMemberDetail? BeforeMasterMember { get { int o = __p.__offset(4); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public PartyMemberDetail? NewMasterMember { get { int o = __p.__offset(6); return o != 0 ? (PartyMemberDetail?)(new PartyMemberDetail()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<BroadcastPartyChangeMaster> CreateBroadcastPartyChangeMaster(FlatBufferBuilder builder,
      Offset<PartyMemberDetail> before_master_memberOffset = default(Offset<PartyMemberDetail>),
      Offset<PartyMemberDetail> new_master_memberOffset = default(Offset<PartyMemberDetail>)) {
    builder.StartObject(2);
    BroadcastPartyChangeMaster.AddNewMasterMember(builder, new_master_memberOffset);
    BroadcastPartyChangeMaster.AddBeforeMasterMember(builder, before_master_memberOffset);
    return BroadcastPartyChangeMaster.EndBroadcastPartyChangeMaster(builder);
  }

  public static void StartBroadcastPartyChangeMaster(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddBeforeMasterMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> beforeMasterMemberOffset) { builder.AddOffset(0, beforeMasterMemberOffset.Value, 0); }
  public static void AddNewMasterMember(FlatBufferBuilder builder, Offset<PartyMemberDetail> newMasterMemberOffset) { builder.AddOffset(1, newMasterMemberOffset.Value, 0); }
  public static Offset<BroadcastPartyChangeMaster> EndBroadcastPartyChangeMaster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyChangeMaster>(o);
  }
};

public struct ReqGetCharacterOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetCharacterOption GetRootAsReqGetCharacterOption(ByteBuffer _bb) { return GetRootAsReqGetCharacterOption(_bb, new ReqGetCharacterOption()); }
  public static ReqGetCharacterOption GetRootAsReqGetCharacterOption(ByteBuffer _bb, ReqGetCharacterOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetCharacterOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Key(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int KeyLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public uint[] GetKeyArray() { return __p.__vector_as_array<uint>(10); }

  public static Offset<ReqGetCharacterOption> CreateReqGetCharacterOption(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0,
      VectorOffset keyOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqGetCharacterOption.AddCharId(builder, char_id);
    ReqGetCharacterOption.AddUserId(builder, user_id);
    ReqGetCharacterOption.AddKey(builder, keyOffset);
    ReqGetCharacterOption.AddServerIdx(builder, server_idx);
    return ReqGetCharacterOption.EndReqGetCharacterOption(builder);
  }

  public static void StartReqGetCharacterOption(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddKey(FlatBufferBuilder builder, VectorOffset keyOffset) { builder.AddOffset(3, keyOffset.Value, 0); }
  public static VectorOffset CreateKeyVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateKeyVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartKeyVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqGetCharacterOption> EndReqGetCharacterOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetCharacterOption>(o);
  }
};

public struct ResGetCharacterOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetCharacterOption GetRootAsResGetCharacterOption(ByteBuffer _bb) { return GetRootAsResGetCharacterOption(_bb, new ResGetCharacterOption()); }
  public static ResGetCharacterOption GetRootAsResGetCharacterOption(ByteBuffer _bb, ResGetCharacterOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetCharacterOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharacterOption? Option(int j) { int o = __p.__offset(4); return o != 0 ? (CharacterOption?)(new CharacterOption()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OptionLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetCharacterOption> CreateResGetCharacterOption(FlatBufferBuilder builder,
      VectorOffset optionOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetCharacterOption.AddOption(builder, optionOffset);
    return ResGetCharacterOption.EndResGetCharacterOption(builder);
  }

  public static void StartResGetCharacterOption(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOption(FlatBufferBuilder builder, VectorOffset optionOffset) { builder.AddOffset(0, optionOffset.Value, 0); }
  public static VectorOffset CreateOptionVector(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOptionVectorBlock(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetCharacterOption> EndResGetCharacterOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetCharacterOption>(o);
  }
};

public struct ReqSetCharacterOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSetCharacterOption GetRootAsReqSetCharacterOption(ByteBuffer _bb) { return GetRootAsReqSetCharacterOption(_bb, new ReqSetCharacterOption()); }
  public static ReqSetCharacterOption GetRootAsReqSetCharacterOption(ByteBuffer _bb, ReqSetCharacterOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSetCharacterOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public CharacterOption? Option(int j) { int o = __p.__offset(10); return o != 0 ? (CharacterOption?)(new CharacterOption()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OptionLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqSetCharacterOption> CreateReqSetCharacterOption(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0,
      VectorOffset optionOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqSetCharacterOption.AddCharId(builder, char_id);
    ReqSetCharacterOption.AddUserId(builder, user_id);
    ReqSetCharacterOption.AddOption(builder, optionOffset);
    ReqSetCharacterOption.AddServerIdx(builder, server_idx);
    return ReqSetCharacterOption.EndReqSetCharacterOption(builder);
  }

  public static void StartReqSetCharacterOption(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddOption(FlatBufferBuilder builder, VectorOffset optionOffset) { builder.AddOffset(3, optionOffset.Value, 0); }
  public static VectorOffset CreateOptionVector(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOptionVectorBlock(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqSetCharacterOption> EndReqSetCharacterOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSetCharacterOption>(o);
  }
};

public struct ResSetCharacterOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSetCharacterOption GetRootAsResSetCharacterOption(ByteBuffer _bb) { return GetRootAsResSetCharacterOption(_bb, new ResSetCharacterOption()); }
  public static ResSetCharacterOption GetRootAsResSetCharacterOption(ByteBuffer _bb, ResSetCharacterOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSetCharacterOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharacterOption? Options(int j) { int o = __p.__offset(4); return o != 0 ? (CharacterOption?)(new CharacterOption()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OptionsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResSetCharacterOption> CreateResSetCharacterOption(FlatBufferBuilder builder,
      VectorOffset optionsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResSetCharacterOption.AddOptions(builder, optionsOffset);
    return ResSetCharacterOption.EndResSetCharacterOption(builder);
  }

  public static void StartResSetCharacterOption(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOptions(FlatBufferBuilder builder, VectorOffset optionsOffset) { builder.AddOffset(0, optionsOffset.Value, 0); }
  public static VectorOffset CreateOptionsVector(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOptionsVectorBlock(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResSetCharacterOption> EndResSetCharacterOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSetCharacterOption>(o);
  }
};

public struct BroadcastNewQuest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastNewQuest GetRootAsBroadcastNewQuest(ByteBuffer _bb) { return GetRootAsBroadcastNewQuest(_bb, new BroadcastNewQuest()); }
  public static BroadcastNewQuest GetRootAsBroadcastNewQuest(ByteBuffer _bb, BroadcastNewQuest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastNewQuest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Quest? NewQuests(int j) { int o = __p.__offset(4); return o != 0 ? (Quest?)(new Quest()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int NewQuestsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastNewQuest> CreateBroadcastNewQuest(FlatBufferBuilder builder,
      VectorOffset new_questsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    BroadcastNewQuest.AddNewQuests(builder, new_questsOffset);
    return BroadcastNewQuest.EndBroadcastNewQuest(builder);
  }

  public static void StartBroadcastNewQuest(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddNewQuests(FlatBufferBuilder builder, VectorOffset newQuestsOffset) { builder.AddOffset(0, newQuestsOffset.Value, 0); }
  public static VectorOffset CreateNewQuestsVector(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateNewQuestsVectorBlock(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartNewQuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastNewQuest> EndBroadcastNewQuest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastNewQuest>(o);
  }
};

public struct BroadcastGodLandFightResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastGodLandFightResult GetRootAsBroadcastGodLandFightResult(ByteBuffer _bb) { return GetRootAsBroadcastGodLandFightResult(_bb, new BroadcastGodLandFightResult()); }
  public static BroadcastGodLandFightResult GetRootAsBroadcastGodLandFightResult(ByteBuffer _bb, BroadcastGodLandFightResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastGodLandFightResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_GOD_LAND_FIGHT_RESULT Result { get { int o = __p.__offset(4); return o != 0 ? (E_GOD_LAND_FIGHT_RESULT)__p.bb.GetUshort(o + __p.bb_pos) : E_GOD_LAND_FIGHT_RESULT.LOSE; } }
  public uint GodLandTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<BroadcastGodLandFightResult> CreateBroadcastGodLandFightResult(FlatBufferBuilder builder,
      E_GOD_LAND_FIGHT_RESULT result = E_GOD_LAND_FIGHT_RESULT.LOSE,
      uint god_land_tid = 0) {
    builder.StartObject(2);
    BroadcastGodLandFightResult.AddGodLandTid(builder, god_land_tid);
    BroadcastGodLandFightResult.AddResult(builder, result);
    return BroadcastGodLandFightResult.EndBroadcastGodLandFightResult(builder);
  }

  public static void StartBroadcastGodLandFightResult(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResult(FlatBufferBuilder builder, E_GOD_LAND_FIGHT_RESULT result) { builder.AddUshort(0, (ushort)result, 0); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(1, godLandTid, 0); }
  public static Offset<BroadcastGodLandFightResult> EndBroadcastGodLandFightResult(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastGodLandFightResult>(o);
  }
};

public struct ReqChatUserConnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChatUserConnect GetRootAsReqChatUserConnect(ByteBuffer _bb) { return GetRootAsReqChatUserConnect(_bb, new ReqChatUserConnect()); }
  public static ReqChatUserConnect GetRootAsReqChatUserConnect(ByteBuffer _bb, ReqChatUserConnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChatUserConnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChatUserConnect> CreateReqChatUserConnect(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      uint server_idx = 0) {
    builder.StartObject(3);
    ReqChatUserConnect.AddCharId(builder, char_id);
    ReqChatUserConnect.AddUserId(builder, user_id);
    ReqChatUserConnect.AddServerIdx(builder, server_idx);
    return ReqChatUserConnect.EndReqChatUserConnect(builder);
  }

  public static void StartReqChatUserConnect(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static Offset<ReqChatUserConnect> EndReqChatUserConnect(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChatUserConnect>(o);
  }
};

public struct ResChatUserConnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChatUserConnect GetRootAsResChatUserConnect(ByteBuffer _bb) { return GetRootAsResChatUserConnect(_bb, new ResChatUserConnect()); }
  public static ResChatUserConnect GetRootAsResChatUserConnect(ByteBuffer _bb, ResChatUserConnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChatUserConnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResChatUserConnect(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResChatUserConnect> EndResChatUserConnect(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChatUserConnect>(o);
  }
};

public struct ReqEnterChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqEnterChat GetRootAsReqEnterChat(ByteBuffer _bb) { return GetRootAsReqEnterChat(_bb, new ReqEnterChat()); }
  public static ReqEnterChat GetRootAsReqEnterChat(ByteBuffer _bb, ReqEnterChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqEnterChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ChatInfo? ChatInfos(int j) { int o = __p.__offset(6); return o != 0 ? (ChatInfo?)(new ChatInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChatInfosLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqEnterChat> CreateReqEnterChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      VectorOffset chat_infosOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqEnterChat.AddCharId(builder, char_id);
    ReqEnterChat.AddChatInfos(builder, chat_infosOffset);
    return ReqEnterChat.EndReqEnterChat(builder);
  }

  public static void StartReqEnterChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddChatInfos(FlatBufferBuilder builder, VectorOffset chatInfosOffset) { builder.AddOffset(1, chatInfosOffset.Value, 0); }
  public static VectorOffset CreateChatInfosVector(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChatInfosVectorBlock(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChatInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqEnterChat> EndReqEnterChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqEnterChat>(o);
  }
};

public struct ResEnterChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResEnterChat GetRootAsResEnterChat(ByteBuffer _bb) { return GetRootAsResEnterChat(_bb, new ResEnterChat()); }
  public static ResEnterChat GetRootAsResEnterChat(ByteBuffer _bb, ResEnterChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResEnterChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ChatInfo? ChatInfos(int j) { int o = __p.__offset(4); return o != 0 ? (ChatInfo?)(new ChatInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChatInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResEnterChat> CreateResEnterChat(FlatBufferBuilder builder,
      VectorOffset chat_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResEnterChat.AddChatInfos(builder, chat_infosOffset);
    return ResEnterChat.EndResEnterChat(builder);
  }

  public static void StartResEnterChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChatInfos(FlatBufferBuilder builder, VectorOffset chatInfosOffset) { builder.AddOffset(0, chatInfosOffset.Value, 0); }
  public static VectorOffset CreateChatInfosVector(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChatInfosVectorBlock(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChatInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResEnterChat> EndResEnterChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResEnterChat>(o);
  }
};

public struct ReqOutChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqOutChat GetRootAsReqOutChat(ByteBuffer _bb) { return GetRootAsReqOutChat(_bb, new ReqOutChat()); }
  public static ReqOutChat GetRootAsReqOutChat(ByteBuffer _bb, ReqOutChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqOutChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ChatInfo? ChatInfos(int j) { int o = __p.__offset(6); return o != 0 ? (ChatInfo?)(new ChatInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChatInfosLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqOutChat> CreateReqOutChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      VectorOffset chat_infosOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqOutChat.AddCharId(builder, char_id);
    ReqOutChat.AddChatInfos(builder, chat_infosOffset);
    return ReqOutChat.EndReqOutChat(builder);
  }

  public static void StartReqOutChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddChatInfos(FlatBufferBuilder builder, VectorOffset chatInfosOffset) { builder.AddOffset(1, chatInfosOffset.Value, 0); }
  public static VectorOffset CreateChatInfosVector(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChatInfosVectorBlock(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChatInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqOutChat> EndReqOutChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqOutChat>(o);
  }
};

public struct ResOutChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResOutChat GetRootAsResOutChat(ByteBuffer _bb) { return GetRootAsResOutChat(_bb, new ResOutChat()); }
  public static ResOutChat GetRootAsResOutChat(ByteBuffer _bb, ResOutChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResOutChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ChatInfo? ChatInfos(int j) { int o = __p.__offset(4); return o != 0 ? (ChatInfo?)(new ChatInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChatInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResOutChat> CreateResOutChat(FlatBufferBuilder builder,
      VectorOffset chat_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResOutChat.AddChatInfos(builder, chat_infosOffset);
    return ResOutChat.EndResOutChat(builder);
  }

  public static void StartResOutChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChatInfos(FlatBufferBuilder builder, VectorOffset chatInfosOffset) { builder.AddOffset(0, chatInfosOffset.Value, 0); }
  public static VectorOffset CreateChatInfosVector(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChatInfosVectorBlock(FlatBufferBuilder builder, Offset<ChatInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChatInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResOutChat> EndResOutChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResOutChat>(o);
  }
};

public struct ReqServerChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqServerChat GetRootAsReqServerChat(ByteBuffer _bb) { return GetRootAsReqServerChat(_bb, new ReqServerChat()); }
  public static ReqServerChat GetRootAsReqServerChat(ByteBuffer _bb, ReqServerChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqServerChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public string Message { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<ReqServerChat> CreateReqServerChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(7);
    ReqServerChat.AddGuildId(builder, guild_id);
    ReqServerChat.AddCharId(builder, char_id);
    ReqServerChat.AddMessage(builder, messageOffset);
    ReqServerChat.AddGuildName(builder, guild_nameOffset);
    ReqServerChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqServerChat.AddServerIdx(builder, server_idx);
    ReqServerChat.AddCharNick(builder, char_nickOffset);
    return ReqServerChat.EndReqServerChat(builder);
  }

  public static void StartReqServerChat(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(6, messageOffset.Value, 0); }
  public static Offset<ReqServerChat> EndReqServerChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqServerChat>(o);
  }
};

public struct ResServerChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResServerChat GetRootAsResServerChat(ByteBuffer _bb) { return GetRootAsResServerChat(_bb, new ResServerChat()); }
  public static ResServerChat GetRootAsResServerChat(ByteBuffer _bb, ResServerChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResServerChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResServerChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResServerChat> EndResServerChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResServerChat>(o);
  }
};

public struct ReqNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqNormalChat GetRootAsReqNormalChat(ByteBuffer _bb) { return GetRootAsReqNormalChat(_bb, new ReqNormalChat()); }
  public static ReqNormalChat GetRootAsReqNormalChat(ByteBuffer _bb, ReqNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public string Message { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(16); }
  public uint StageTid { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ChannelId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqNormalChat> CreateReqNormalChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset),
      uint stage_tid = 0,
      ulong channel_id = 0) {
    builder.StartObject(9);
    ReqNormalChat.AddChannelId(builder, channel_id);
    ReqNormalChat.AddGuildId(builder, guild_id);
    ReqNormalChat.AddCharId(builder, char_id);
    ReqNormalChat.AddStageTid(builder, stage_tid);
    ReqNormalChat.AddMessage(builder, messageOffset);
    ReqNormalChat.AddGuildName(builder, guild_nameOffset);
    ReqNormalChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqNormalChat.AddServerIdx(builder, server_idx);
    ReqNormalChat.AddCharNick(builder, char_nickOffset);
    return ReqNormalChat.EndReqNormalChat(builder);
  }

  public static void StartReqNormalChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(6, messageOffset.Value, 0); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(7, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ulong channelId) { builder.AddUlong(8, channelId, 0); }
  public static Offset<ReqNormalChat> EndReqNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqNormalChat>(o);
  }
};

public struct ResNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResNormalChat GetRootAsResNormalChat(ByteBuffer _bb) { return GetRootAsResNormalChat(_bb, new ResNormalChat()); }
  public static ResNormalChat GetRootAsResNormalChat(ByteBuffer _bb, ResNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResNormalChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResNormalChat> EndResNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResNormalChat>(o);
  }
};

public struct ReqPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPartyChat GetRootAsReqPartyChat(ByteBuffer _bb) { return GetRootAsReqPartyChat(_bb, new ReqPartyChat()); }
  public static ReqPartyChat GetRootAsReqPartyChat(ByteBuffer _bb, ReqPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatPartySubType ChatSubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatPartySubType)__p.bb.Get(o + __p.bb_pos) : E_ChatPartySubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(16); }
  public ulong PartyUid { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Message { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<ReqPartyChat> CreateReqPartyChat(FlatBufferBuilder builder,
      E_ChatPartySubType chat_sub_type = E_ChatPartySubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong party_uid = 0,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(9);
    ReqPartyChat.AddPartyUid(builder, party_uid);
    ReqPartyChat.AddGuildId(builder, guild_id);
    ReqPartyChat.AddCharId(builder, char_id);
    ReqPartyChat.AddMessage(builder, messageOffset);
    ReqPartyChat.AddGuildName(builder, guild_nameOffset);
    ReqPartyChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqPartyChat.AddServerIdx(builder, server_idx);
    ReqPartyChat.AddCharNick(builder, char_nickOffset);
    ReqPartyChat.AddChatSubType(builder, chat_sub_type);
    return ReqPartyChat.EndReqPartyChat(builder);
  }

  public static void StartReqPartyChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddChatSubType(FlatBufferBuilder builder, E_ChatPartySubType chatSubType) { builder.AddByte(0, (byte)chatSubType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(4, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(5, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(6, guildNameOffset.Value, 0); }
  public static void AddPartyUid(FlatBufferBuilder builder, ulong partyUid) { builder.AddUlong(7, partyUid, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(8, messageOffset.Value, 0); }
  public static Offset<ReqPartyChat> EndReqPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPartyChat>(o);
  }
};

public struct ResPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPartyChat GetRootAsResPartyChat(ByteBuffer _bb) { return GetRootAsResPartyChat(_bb, new ResPartyChat()); }
  public static ResPartyChat GetRootAsResPartyChat(ByteBuffer _bb, ResPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResPartyChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResPartyChat> EndResPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPartyChat>(o);
  }
};

public struct ReqGuildChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildChat GetRootAsReqGuildChat(ByteBuffer _bb) { return GetRootAsReqGuildChat(_bb, new ReqGuildChat()); }
  public static ReqGuildChat GetRootAsReqGuildChat(ByteBuffer _bb, ReqGuildChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public string Message { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<ReqGuildChat> CreateReqGuildChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(7);
    ReqGuildChat.AddGuildId(builder, guild_id);
    ReqGuildChat.AddCharId(builder, char_id);
    ReqGuildChat.AddMessage(builder, messageOffset);
    ReqGuildChat.AddGuildName(builder, guild_nameOffset);
    ReqGuildChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqGuildChat.AddServerIdx(builder, server_idx);
    ReqGuildChat.AddCharNick(builder, char_nickOffset);
    return ReqGuildChat.EndReqGuildChat(builder);
  }

  public static void StartReqGuildChat(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(6, messageOffset.Value, 0); }
  public static Offset<ReqGuildChat> EndReqGuildChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildChat>(o);
  }
};

public struct ResGuildChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildChat GetRootAsResGuildChat(ByteBuffer _bb) { return GetRootAsResGuildChat(_bb, new ResGuildChat()); }
  public static ResGuildChat GetRootAsResGuildChat(ByteBuffer _bb, ResGuildChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildChat> EndResGuildChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildChat>(o);
  }
};

public struct ReqAllianceChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAllianceChat GetRootAsReqAllianceChat(ByteBuffer _bb) { return GetRootAsReqAllianceChat(_bb, new ReqAllianceChat()); }
  public static ReqAllianceChat GetRootAsReqAllianceChat(ByteBuffer _bb, ReqAllianceChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAllianceChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public ulong AllianceRoomId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Message { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<ReqAllianceChat> CreateReqAllianceChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong alliance_room_id = 0,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(8);
    ReqAllianceChat.AddAllianceRoomId(builder, alliance_room_id);
    ReqAllianceChat.AddGuildId(builder, guild_id);
    ReqAllianceChat.AddCharId(builder, char_id);
    ReqAllianceChat.AddMessage(builder, messageOffset);
    ReqAllianceChat.AddGuildName(builder, guild_nameOffset);
    ReqAllianceChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqAllianceChat.AddServerIdx(builder, server_idx);
    ReqAllianceChat.AddCharNick(builder, char_nickOffset);
    return ReqAllianceChat.EndReqAllianceChat(builder);
  }

  public static void StartReqAllianceChat(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddAllianceRoomId(FlatBufferBuilder builder, ulong allianceRoomId) { builder.AddUlong(6, allianceRoomId, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(7, messageOffset.Value, 0); }
  public static Offset<ReqAllianceChat> EndReqAllianceChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAllianceChat>(o);
  }
};

public struct ResAllianceChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAllianceChat GetRootAsResAllianceChat(ByteBuffer _bb) { return GetRootAsResAllianceChat(_bb, new ResAllianceChat()); }
  public static ResAllianceChat GetRootAsResAllianceChat(ByteBuffer _bb, ResAllianceChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAllianceChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResAllianceChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResAllianceChat> EndResAllianceChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAllianceChat>(o);
  }
};

public struct ReqUserChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqUserChat GetRootAsReqUserChat(ByteBuffer _bb) { return GetRootAsReqUserChat(_bb, new ReqUserChat()); }
  public static ReqUserChat GetRootAsReqUserChat(ByteBuffer _bb, ReqUserChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqUserChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public ulong TargetCharId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string TargetCharNick { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetCharNickBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetTargetCharNickBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetTargetCharNickArray() { return __p.__vector_as_array<byte>(18); }
  public string Message { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<ReqUserChat> CreateReqUserChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong target_char_id = 0,
      StringOffset target_char_nickOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(9);
    ReqUserChat.AddTargetCharId(builder, target_char_id);
    ReqUserChat.AddGuildId(builder, guild_id);
    ReqUserChat.AddCharId(builder, char_id);
    ReqUserChat.AddMessage(builder, messageOffset);
    ReqUserChat.AddTargetCharNick(builder, target_char_nickOffset);
    ReqUserChat.AddGuildName(builder, guild_nameOffset);
    ReqUserChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqUserChat.AddServerIdx(builder, server_idx);
    ReqUserChat.AddCharNick(builder, char_nickOffset);
    return ReqUserChat.EndReqUserChat(builder);
  }

  public static void StartReqUserChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddTargetCharId(FlatBufferBuilder builder, ulong targetCharId) { builder.AddUlong(6, targetCharId, 0); }
  public static void AddTargetCharNick(FlatBufferBuilder builder, StringOffset targetCharNickOffset) { builder.AddOffset(7, targetCharNickOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(8, messageOffset.Value, 0); }
  public static Offset<ReqUserChat> EndReqUserChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqUserChat>(o);
  }
};

public struct ResUserChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResUserChat GetRootAsResUserChat(ByteBuffer _bb) { return GetRootAsResUserChat(_bb, new ResUserChat()); }
  public static ResUserChat GetRootAsResUserChat(ByteBuffer _bb, ResUserChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResUserChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResUserChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResUserChat> EndResUserChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResUserChat>(o);
  }
};

public struct ReqInterNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInterNormalChat GetRootAsReqInterNormalChat(ByteBuffer _bb) { return GetRootAsReqInterNormalChat(_bb, new ReqInterNormalChat()); }
  public static ReqInterNormalChat GetRootAsReqInterNormalChat(ByteBuffer _bb, ReqInterNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInterNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public uint InterStageTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort InterChannelId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Message { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<ReqInterNormalChat> CreateReqInterNormalChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      uint inter_stage_tid = 0,
      ushort inter_channel_id = 0,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(9);
    ReqInterNormalChat.AddGuildId(builder, guild_id);
    ReqInterNormalChat.AddCharId(builder, char_id);
    ReqInterNormalChat.AddMessage(builder, messageOffset);
    ReqInterNormalChat.AddInterStageTid(builder, inter_stage_tid);
    ReqInterNormalChat.AddGuildName(builder, guild_nameOffset);
    ReqInterNormalChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqInterNormalChat.AddServerIdx(builder, server_idx);
    ReqInterNormalChat.AddCharNick(builder, char_nickOffset);
    ReqInterNormalChat.AddInterChannelId(builder, inter_channel_id);
    return ReqInterNormalChat.EndReqInterNormalChat(builder);
  }

  public static void StartReqInterNormalChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddInterStageTid(FlatBufferBuilder builder, uint interStageTid) { builder.AddUint(6, interStageTid, 0); }
  public static void AddInterChannelId(FlatBufferBuilder builder, ushort interChannelId) { builder.AddUshort(7, interChannelId, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(8, messageOffset.Value, 0); }
  public static Offset<ReqInterNormalChat> EndReqInterNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInterNormalChat>(o);
  }
};

public struct ResInterNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInterNormalChat GetRootAsResInterNormalChat(ByteBuffer _bb) { return GetRootAsResInterNormalChat(_bb, new ResInterNormalChat()); }
  public static ResInterNormalChat GetRootAsResInterNormalChat(ByteBuffer _bb, ResInterNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInterNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResInterNormalChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResInterNormalChat> EndResInterNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInterNormalChat>(o);
  }
};

public struct ReqInterPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInterPartyChat GetRootAsReqInterPartyChat(ByteBuffer _bb) { return GetRootAsReqInterPartyChat(_bb, new ReqInterPartyChat()); }
  public static ReqInterPartyChat GetRootAsReqInterPartyChat(ByteBuffer _bb, ReqInterPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInterPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public ulong InterPartyUid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Message { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<ReqInterPartyChat> CreateReqInterPartyChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong inter_party_uid = 0,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(8);
    ReqInterPartyChat.AddInterPartyUid(builder, inter_party_uid);
    ReqInterPartyChat.AddGuildId(builder, guild_id);
    ReqInterPartyChat.AddCharId(builder, char_id);
    ReqInterPartyChat.AddMessage(builder, messageOffset);
    ReqInterPartyChat.AddGuildName(builder, guild_nameOffset);
    ReqInterPartyChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqInterPartyChat.AddServerIdx(builder, server_idx);
    ReqInterPartyChat.AddCharNick(builder, char_nickOffset);
    return ReqInterPartyChat.EndReqInterPartyChat(builder);
  }

  public static void StartReqInterPartyChat(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddInterPartyUid(FlatBufferBuilder builder, ulong interPartyUid) { builder.AddUlong(6, interPartyUid, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(7, messageOffset.Value, 0); }
  public static Offset<ReqInterPartyChat> EndReqInterPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInterPartyChat>(o);
  }
};

public struct ResInterPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInterPartyChat GetRootAsResInterPartyChat(ByteBuffer _bb) { return GetRootAsResInterPartyChat(_bb, new ResInterPartyChat()); }
  public static ResInterPartyChat GetRootAsResInterPartyChat(ByteBuffer _bb, ResInterPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInterPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResInterPartyChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResInterPartyChat> EndResInterPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInterPartyChat>(o);
  }
};

public struct ReqTradeChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeChat GetRootAsReqTradeChat(ByteBuffer _bb) { return GetRootAsReqTradeChat(_bb, new ReqTradeChat()); }
  public static ReqTradeChat GetRootAsReqTradeChat(ByteBuffer _bb, ReqTradeChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(6); }
  public uint ServerIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong GuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(14); }
  public string Message { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<ReqTradeChat> CreateReqTradeChat(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(7);
    ReqTradeChat.AddGuildId(builder, guild_id);
    ReqTradeChat.AddCharId(builder, char_id);
    ReqTradeChat.AddMessage(builder, messageOffset);
    ReqTradeChat.AddGuildName(builder, guild_nameOffset);
    ReqTradeChat.AddGuildMarkTid(builder, guild_mark_tid);
    ReqTradeChat.AddServerIdx(builder, server_idx);
    ReqTradeChat.AddCharNick(builder, char_nickOffset);
    return ReqTradeChat.EndReqTradeChat(builder);
  }

  public static void StartReqTradeChat(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(1, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(2, serverIdx, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(3, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(4, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(5, guildNameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(6, messageOffset.Value, 0); }
  public static Offset<ReqTradeChat> EndReqTradeChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeChat>(o);
  }
};

public struct ResTradeChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeChat GetRootAsResTradeChat(ByteBuffer _bb) { return GetRootAsResTradeChat(_bb, new ResTradeChat()); }
  public static ResTradeChat GetRootAsResTradeChat(ByteBuffer _bb, ResTradeChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResTradeChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResTradeChat> EndResTradeChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeChat>(o);
  }
};

public struct BroadcastServerChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastServerChat GetRootAsBroadcastServerChat(ByteBuffer _bb) { return GetRootAsBroadcastServerChat(_bb, new BroadcastServerChat()); }
  public static BroadcastServerChat GetRootAsBroadcastServerChat(ByteBuffer _bb, BroadcastServerChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastServerChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatServerSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatServerSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatServerSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastServerChat> CreateBroadcastServerChat(FlatBufferBuilder builder,
      E_ChatServerSubType sub_type = E_ChatServerSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastServerChat.AddGuildId(builder, guild_id);
    BroadcastServerChat.AddCharId(builder, char_id);
    BroadcastServerChat.AddArgs(builder, argsOffset);
    BroadcastServerChat.AddGuildName(builder, guild_nameOffset);
    BroadcastServerChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastServerChat.AddMessage(builder, messageOffset);
    BroadcastServerChat.AddServerIdx(builder, server_idx);
    BroadcastServerChat.AddCharNick(builder, char_nickOffset);
    BroadcastServerChat.AddSubType(builder, sub_type);
    return BroadcastServerChat.EndBroadcastServerChat(builder);
  }

  public static void StartBroadcastServerChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatServerSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastServerChat> EndBroadcastServerChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastServerChat>(o);
  }
};

public struct BroadcastNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastNormalChat GetRootAsBroadcastNormalChat(ByteBuffer _bb) { return GetRootAsBroadcastNormalChat(_bb, new BroadcastNormalChat()); }
  public static BroadcastNormalChat GetRootAsBroadcastNormalChat(ByteBuffer _bb, BroadcastNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatNormalSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatNormalSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatNormalSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastNormalChat> CreateBroadcastNormalChat(FlatBufferBuilder builder,
      E_ChatNormalSubType sub_type = E_ChatNormalSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastNormalChat.AddGuildId(builder, guild_id);
    BroadcastNormalChat.AddCharId(builder, char_id);
    BroadcastNormalChat.AddArgs(builder, argsOffset);
    BroadcastNormalChat.AddGuildName(builder, guild_nameOffset);
    BroadcastNormalChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastNormalChat.AddMessage(builder, messageOffset);
    BroadcastNormalChat.AddServerIdx(builder, server_idx);
    BroadcastNormalChat.AddCharNick(builder, char_nickOffset);
    BroadcastNormalChat.AddSubType(builder, sub_type);
    return BroadcastNormalChat.EndBroadcastNormalChat(builder);
  }

  public static void StartBroadcastNormalChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatNormalSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastNormalChat> EndBroadcastNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastNormalChat>(o);
  }
};

public struct BroadcastPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastPartyChat GetRootAsBroadcastPartyChat(ByteBuffer _bb) { return GetRootAsBroadcastPartyChat(_bb, new BroadcastPartyChat()); }
  public static BroadcastPartyChat GetRootAsBroadcastPartyChat(ByteBuffer _bb, BroadcastPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatPartySubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatPartySubType)__p.bb.Get(o + __p.bb_pos) : E_ChatPartySubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastPartyChat> CreateBroadcastPartyChat(FlatBufferBuilder builder,
      E_ChatPartySubType sub_type = E_ChatPartySubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastPartyChat.AddGuildId(builder, guild_id);
    BroadcastPartyChat.AddCharId(builder, char_id);
    BroadcastPartyChat.AddArgs(builder, argsOffset);
    BroadcastPartyChat.AddGuildName(builder, guild_nameOffset);
    BroadcastPartyChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastPartyChat.AddMessage(builder, messageOffset);
    BroadcastPartyChat.AddServerIdx(builder, server_idx);
    BroadcastPartyChat.AddCharNick(builder, char_nickOffset);
    BroadcastPartyChat.AddSubType(builder, sub_type);
    return BroadcastPartyChat.EndBroadcastPartyChat(builder);
  }

  public static void StartBroadcastPartyChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatPartySubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastPartyChat> EndBroadcastPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastPartyChat>(o);
  }
};

public struct BroadcastGuildChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastGuildChat GetRootAsBroadcastGuildChat(ByteBuffer _bb) { return GetRootAsBroadcastGuildChat(_bb, new BroadcastGuildChat()); }
  public static BroadcastGuildChat GetRootAsBroadcastGuildChat(ByteBuffer _bb, BroadcastGuildChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastGuildChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatGuildSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatGuildSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatGuildSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastGuildChat> CreateBroadcastGuildChat(FlatBufferBuilder builder,
      E_ChatGuildSubType sub_type = E_ChatGuildSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastGuildChat.AddGuildId(builder, guild_id);
    BroadcastGuildChat.AddCharId(builder, char_id);
    BroadcastGuildChat.AddArgs(builder, argsOffset);
    BroadcastGuildChat.AddGuildName(builder, guild_nameOffset);
    BroadcastGuildChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastGuildChat.AddMessage(builder, messageOffset);
    BroadcastGuildChat.AddServerIdx(builder, server_idx);
    BroadcastGuildChat.AddCharNick(builder, char_nickOffset);
    BroadcastGuildChat.AddSubType(builder, sub_type);
    return BroadcastGuildChat.EndBroadcastGuildChat(builder);
  }

  public static void StartBroadcastGuildChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatGuildSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastGuildChat> EndBroadcastGuildChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastGuildChat>(o);
  }
};

public struct BroadcastAllianceChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastAllianceChat GetRootAsBroadcastAllianceChat(ByteBuffer _bb) { return GetRootAsBroadcastAllianceChat(_bb, new BroadcastAllianceChat()); }
  public static BroadcastAllianceChat GetRootAsBroadcastAllianceChat(ByteBuffer _bb, BroadcastAllianceChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastAllianceChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatAllianceSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatAllianceSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatAllianceSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastAllianceChat> CreateBroadcastAllianceChat(FlatBufferBuilder builder,
      E_ChatAllianceSubType sub_type = E_ChatAllianceSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastAllianceChat.AddGuildId(builder, guild_id);
    BroadcastAllianceChat.AddCharId(builder, char_id);
    BroadcastAllianceChat.AddArgs(builder, argsOffset);
    BroadcastAllianceChat.AddGuildName(builder, guild_nameOffset);
    BroadcastAllianceChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastAllianceChat.AddMessage(builder, messageOffset);
    BroadcastAllianceChat.AddServerIdx(builder, server_idx);
    BroadcastAllianceChat.AddCharNick(builder, char_nickOffset);
    BroadcastAllianceChat.AddSubType(builder, sub_type);
    return BroadcastAllianceChat.EndBroadcastAllianceChat(builder);
  }

  public static void StartBroadcastAllianceChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatAllianceSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastAllianceChat> EndBroadcastAllianceChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastAllianceChat>(o);
  }
};

public struct BroadcastUserChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastUserChat GetRootAsBroadcastUserChat(ByteBuffer _bb) { return GetRootAsBroadcastUserChat(_bb, new BroadcastUserChat()); }
  public static BroadcastUserChat GetRootAsBroadcastUserChat(ByteBuffer _bb, BroadcastUserChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastUserChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatUserSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatUserSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatUserSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastUserChat> CreateBroadcastUserChat(FlatBufferBuilder builder,
      E_ChatUserSubType sub_type = E_ChatUserSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastUserChat.AddGuildId(builder, guild_id);
    BroadcastUserChat.AddCharId(builder, char_id);
    BroadcastUserChat.AddArgs(builder, argsOffset);
    BroadcastUserChat.AddGuildName(builder, guild_nameOffset);
    BroadcastUserChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastUserChat.AddMessage(builder, messageOffset);
    BroadcastUserChat.AddServerIdx(builder, server_idx);
    BroadcastUserChat.AddCharNick(builder, char_nickOffset);
    BroadcastUserChat.AddSubType(builder, sub_type);
    return BroadcastUserChat.EndBroadcastUserChat(builder);
  }

  public static void StartBroadcastUserChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatUserSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastUserChat> EndBroadcastUserChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastUserChat>(o);
  }
};

public struct BroadcastInterNormalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastInterNormalChat GetRootAsBroadcastInterNormalChat(ByteBuffer _bb) { return GetRootAsBroadcastInterNormalChat(_bb, new BroadcastInterNormalChat()); }
  public static BroadcastInterNormalChat GetRootAsBroadcastInterNormalChat(ByteBuffer _bb, BroadcastInterNormalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastInterNormalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatInterNormalSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatInterNormalSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatInterNormalSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastInterNormalChat> CreateBroadcastInterNormalChat(FlatBufferBuilder builder,
      E_ChatInterNormalSubType sub_type = E_ChatInterNormalSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastInterNormalChat.AddGuildId(builder, guild_id);
    BroadcastInterNormalChat.AddCharId(builder, char_id);
    BroadcastInterNormalChat.AddArgs(builder, argsOffset);
    BroadcastInterNormalChat.AddGuildName(builder, guild_nameOffset);
    BroadcastInterNormalChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastInterNormalChat.AddMessage(builder, messageOffset);
    BroadcastInterNormalChat.AddServerIdx(builder, server_idx);
    BroadcastInterNormalChat.AddCharNick(builder, char_nickOffset);
    BroadcastInterNormalChat.AddSubType(builder, sub_type);
    return BroadcastInterNormalChat.EndBroadcastInterNormalChat(builder);
  }

  public static void StartBroadcastInterNormalChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatInterNormalSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastInterNormalChat> EndBroadcastInterNormalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastInterNormalChat>(o);
  }
};

public struct BroadcastInterPartyChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastInterPartyChat GetRootAsBroadcastInterPartyChat(ByteBuffer _bb) { return GetRootAsBroadcastInterPartyChat(_bb, new BroadcastInterPartyChat()); }
  public static BroadcastInterPartyChat GetRootAsBroadcastInterPartyChat(ByteBuffer _bb, BroadcastInterPartyChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastInterPartyChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatInterPartySubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatInterPartySubType)__p.bb.Get(o + __p.bb_pos) : E_ChatInterPartySubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastInterPartyChat> CreateBroadcastInterPartyChat(FlatBufferBuilder builder,
      E_ChatInterPartySubType sub_type = E_ChatInterPartySubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastInterPartyChat.AddGuildId(builder, guild_id);
    BroadcastInterPartyChat.AddCharId(builder, char_id);
    BroadcastInterPartyChat.AddArgs(builder, argsOffset);
    BroadcastInterPartyChat.AddGuildName(builder, guild_nameOffset);
    BroadcastInterPartyChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastInterPartyChat.AddMessage(builder, messageOffset);
    BroadcastInterPartyChat.AddServerIdx(builder, server_idx);
    BroadcastInterPartyChat.AddCharNick(builder, char_nickOffset);
    BroadcastInterPartyChat.AddSubType(builder, sub_type);
    return BroadcastInterPartyChat.EndBroadcastInterPartyChat(builder);
  }

  public static void StartBroadcastInterPartyChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatInterPartySubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastInterPartyChat> EndBroadcastInterPartyChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastInterPartyChat>(o);
  }
};

public struct BroadcastGlobalChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastGlobalChat GetRootAsBroadcastGlobalChat(ByteBuffer _bb) { return GetRootAsBroadcastGlobalChat(_bb, new BroadcastGlobalChat()); }
  public static BroadcastGlobalChat GetRootAsBroadcastGlobalChat(ByteBuffer _bb, BroadcastGlobalChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastGlobalChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ChatGlobalSubType SubType { get { int o = __p.__offset(4); return o != 0 ? (E_ChatGlobalSubType)__p.bb.Get(o + __p.bb_pos) : E_ChatGlobalSubType.None; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string CharNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetCharNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCharNickArray() { return __p.__vector_as_array<byte>(8); }
  public uint ServerIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public ulong GuildId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildMarkTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string GuildName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Args(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ArgsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastGlobalChat> CreateBroadcastGlobalChat(FlatBufferBuilder builder,
      E_ChatGlobalSubType sub_type = E_ChatGlobalSubType.None,
      ulong char_id = 0,
      StringOffset char_nickOffset = default(StringOffset),
      uint server_idx = 0,
      StringOffset messageOffset = default(StringOffset),
      ulong guild_id = 0,
      uint guild_mark_tid = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      VectorOffset argsOffset = default(VectorOffset)) {
    builder.StartObject(9);
    BroadcastGlobalChat.AddGuildId(builder, guild_id);
    BroadcastGlobalChat.AddCharId(builder, char_id);
    BroadcastGlobalChat.AddArgs(builder, argsOffset);
    BroadcastGlobalChat.AddGuildName(builder, guild_nameOffset);
    BroadcastGlobalChat.AddGuildMarkTid(builder, guild_mark_tid);
    BroadcastGlobalChat.AddMessage(builder, messageOffset);
    BroadcastGlobalChat.AddServerIdx(builder, server_idx);
    BroadcastGlobalChat.AddCharNick(builder, char_nickOffset);
    BroadcastGlobalChat.AddSubType(builder, sub_type);
    return BroadcastGlobalChat.EndBroadcastGlobalChat(builder);
  }

  public static void StartBroadcastGlobalChat(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddSubType(FlatBufferBuilder builder, E_ChatGlobalSubType subType) { builder.AddByte(0, (byte)subType, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddCharNick(FlatBufferBuilder builder, StringOffset charNickOffset) { builder.AddOffset(2, charNickOffset.Value, 0); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(3, serverIdx, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(4, messageOffset.Value, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(5, guildId, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, uint guildMarkTid) { builder.AddUint(6, guildMarkTid, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(7, guildNameOffset.Value, 0); }
  public static void AddArgs(FlatBufferBuilder builder, VectorOffset argsOffset) { builder.AddOffset(8, argsOffset.Value, 0); }
  public static VectorOffset CreateArgsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArgsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArgsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastGlobalChat> EndBroadcastGlobalChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastGlobalChat>(o);
  }
};

public struct BroadcastMonsterKillReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastMonsterKillReward GetRootAsBroadcastMonsterKillReward(ByteBuffer _bb) { return GetRootAsBroadcastMonsterKillReward(_bb, new BroadcastMonsterKillReward()); }
  public static BroadcastMonsterKillReward GetRootAsBroadcastMonsterKillReward(ByteBuffer _bb, BroadcastMonsterKillReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastMonsterKillReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte IsInterReward { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<BroadcastMonsterKillReward> CreateBroadcastMonsterKillReward(FlatBufferBuilder builder,
      byte is_inter_reward = 0) {
    builder.StartObject(1);
    BroadcastMonsterKillReward.AddIsInterReward(builder, is_inter_reward);
    return BroadcastMonsterKillReward.EndBroadcastMonsterKillReward(builder);
  }

  public static void StartBroadcastMonsterKillReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddIsInterReward(FlatBufferBuilder builder, byte isInterReward) { builder.AddByte(0, isInterReward, 0); }
  public static Offset<BroadcastMonsterKillReward> EndBroadcastMonsterKillReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastMonsterKillReward>(o);
  }
};

public struct BroadcastChatBlock : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastChatBlock GetRootAsBroadcastChatBlock(ByteBuffer _bb) { return GetRootAsBroadcastChatBlock(_bb, new BroadcastChatBlock()); }
  public static BroadcastChatBlock GetRootAsBroadcastChatBlock(ByteBuffer _bb, BroadcastChatBlock obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastChatBlock __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ExpireDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<BroadcastChatBlock> CreateBroadcastChatBlock(FlatBufferBuilder builder,
      ulong expire_dt = 0) {
    builder.StartObject(1);
    BroadcastChatBlock.AddExpireDt(builder, expire_dt);
    return BroadcastChatBlock.EndBroadcastChatBlock(builder);
  }

  public static void StartBroadcastChatBlock(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddExpireDt(FlatBufferBuilder builder, ulong expireDt) { builder.AddUlong(0, expireDt, 0); }
  public static Offset<BroadcastChatBlock> EndBroadcastChatBlock(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastChatBlock>(o);
  }
};

public struct ReqAttributeEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAttributeEnchant GetRootAsReqAttributeEnchant(ByteBuffer _bb) { return GetRootAsReqAttributeEnchant(_bb, new ReqAttributeEnchant()); }
  public static ReqAttributeEnchant GetRootAsReqAttributeEnchant(ByteBuffer _bb, ReqAttributeEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAttributeEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AttributeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint AddRateCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqAttributeEnchant> CreateReqAttributeEnchant(FlatBufferBuilder builder,
      uint attribute_tid = 0,
      uint add_rate_cnt = 0) {
    builder.StartObject(2);
    ReqAttributeEnchant.AddAddRateCnt(builder, add_rate_cnt);
    ReqAttributeEnchant.AddAttributeTid(builder, attribute_tid);
    return ReqAttributeEnchant.EndReqAttributeEnchant(builder);
  }

  public static void StartReqAttributeEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAttributeTid(FlatBufferBuilder builder, uint attributeTid) { builder.AddUint(0, attributeTid, 0); }
  public static void AddAddRateCnt(FlatBufferBuilder builder, uint addRateCnt) { builder.AddUint(1, addRateCnt, 0); }
  public static Offset<ReqAttributeEnchant> EndReqAttributeEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAttributeEnchant>(o);
  }
};

public struct ResAttributeEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAttributeEnchant GetRootAsResAttributeEnchant(ByteBuffer _bb) { return GetRootAsResAttributeEnchant(_bb, new ResAttributeEnchant()); }
  public static ResAttributeEnchant GetRootAsResAttributeEnchant(ByteBuffer _bb, ResAttributeEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAttributeEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsSuccess { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Attribute? Attribute { get { int o = __p.__offset(6); return o != 0 ? (Attribute?)(new Attribute()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResAttributeEnchant> CreateResAttributeEnchant(FlatBufferBuilder builder,
      bool is_success = false,
      Offset<Attribute> attributeOffset = default(Offset<Attribute>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResAttributeEnchant.AddResultStackItems(builder, result_stack_itemsOffset);
    ResAttributeEnchant.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResAttributeEnchant.AddAttribute(builder, attributeOffset);
    ResAttributeEnchant.AddIsSuccess(builder, is_success);
    return ResAttributeEnchant.EndResAttributeEnchant(builder);
  }

  public static void StartResAttributeEnchant(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(0, isSuccess, false); }
  public static void AddAttribute(FlatBufferBuilder builder, Offset<Attribute> attributeOffset) { builder.AddOffset(1, attributeOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResAttributeEnchant> EndResAttributeEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAttributeEnchant>(o);
  }
};

public struct ReqPaymentInit : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPaymentInit GetRootAsReqPaymentInit(ByteBuffer _bb) { return GetRootAsReqPaymentInit(_bb, new ReqPaymentInit()); }
  public static ReqPaymentInit GetRootAsReqPaymentInit(ByteBuffer _bb, ReqPaymentInit obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPaymentInit __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ShopTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_MarketType MarketType { get { int o = __p.__offset(6); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public string Os { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(8); }
  public float Price { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public string Currency { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCurrencyBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetCurrencyBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCurrencyArray() { return __p.__vector_as_array<byte>(12); }
  public string ClientVersion { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClientVersionBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetClientVersionBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetClientVersionArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<ReqPaymentInit> CreateReqPaymentInit(FlatBufferBuilder builder,
      uint shop_tid = 0,
      E_MarketType market_type = E_MarketType.None,
      StringOffset osOffset = default(StringOffset),
      float price = 0.0f,
      StringOffset currencyOffset = default(StringOffset),
      StringOffset client_versionOffset = default(StringOffset)) {
    builder.StartObject(6);
    ReqPaymentInit.AddClientVersion(builder, client_versionOffset);
    ReqPaymentInit.AddCurrency(builder, currencyOffset);
    ReqPaymentInit.AddPrice(builder, price);
    ReqPaymentInit.AddOs(builder, osOffset);
    ReqPaymentInit.AddShopTid(builder, shop_tid);
    ReqPaymentInit.AddMarketType(builder, market_type);
    return ReqPaymentInit.EndReqPaymentInit(builder);
  }

  public static void StartReqPaymentInit(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddShopTid(FlatBufferBuilder builder, uint shopTid) { builder.AddUint(0, shopTid, 0); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(1, (byte)marketType, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(2, osOffset.Value, 0); }
  public static void AddPrice(FlatBufferBuilder builder, float price) { builder.AddFloat(3, price, 0.0f); }
  public static void AddCurrency(FlatBufferBuilder builder, StringOffset currencyOffset) { builder.AddOffset(4, currencyOffset.Value, 0); }
  public static void AddClientVersion(FlatBufferBuilder builder, StringOffset clientVersionOffset) { builder.AddOffset(5, clientVersionOffset.Value, 0); }
  public static Offset<ReqPaymentInit> EndReqPaymentInit(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPaymentInit>(o);
  }
};

public struct ResPaymentInit : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPaymentInit GetRootAsResPaymentInit(ByteBuffer _bb) { return GetRootAsResPaymentInit(_bb, new ResPaymentInit()); }
  public static ResPaymentInit GetRootAsResPaymentInit(ByteBuffer _bb, ResPaymentInit obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPaymentInit __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PayId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPayIdBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetPayIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPayIdArray() { return __p.__vector_as_array<byte>(4); }
  public string LineOrderId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLineOrderIdBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetLineOrderIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetLineOrderIdArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ResPaymentInit> CreateResPaymentInit(FlatBufferBuilder builder,
      StringOffset pay_idOffset = default(StringOffset),
      StringOffset line_order_idOffset = default(StringOffset)) {
    builder.StartObject(2);
    ResPaymentInit.AddLineOrderId(builder, line_order_idOffset);
    ResPaymentInit.AddPayId(builder, pay_idOffset);
    return ResPaymentInit.EndResPaymentInit(builder);
  }

  public static void StartResPaymentInit(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPayId(FlatBufferBuilder builder, StringOffset payIdOffset) { builder.AddOffset(0, payIdOffset.Value, 0); }
  public static void AddLineOrderId(FlatBufferBuilder builder, StringOffset lineOrderIdOffset) { builder.AddOffset(1, lineOrderIdOffset.Value, 0); }
  public static Offset<ResPaymentInit> EndResPaymentInit(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPaymentInit>(o);
  }
};

public struct ReqPaymentPurchase : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPaymentPurchase GetRootAsReqPaymentPurchase(ByteBuffer _bb) { return GetRootAsReqPaymentPurchase(_bb, new ReqPaymentPurchase()); }
  public static ReqPaymentPurchase GetRootAsReqPaymentPurchase(ByteBuffer _bb, ReqPaymentPurchase obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPaymentPurchase __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public string Receipt { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReceiptBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetReceiptBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetReceiptArray() { return __p.__vector_as_array<byte>(6); }
  public string Os { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(8); }
  public string Osv { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsvBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetOsvBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetOsvArray() { return __p.__vector_as_array<byte>(10); }
  public string Currency { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCurrencyBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetCurrencyBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCurrencyArray() { return __p.__vector_as_array<byte>(12); }
  public string Adid { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAdidBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetAdidBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetAdidArray() { return __p.__vector_as_array<byte>(14); }
  public string Idfa { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdfaBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetIdfaBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetIdfaArray() { return __p.__vector_as_array<byte>(16); }
  public string Idfv { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdfvBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetIdfvBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIdfvArray() { return __p.__vector_as_array<byte>(18); }
  public string GpsAdid { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGpsAdidBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetGpsAdidBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGpsAdidArray() { return __p.__vector_as_array<byte>(20); }
  public string Region { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRegionBytes() { return __p.__vector_as_span(22); }
#else
  public ArraySegment<byte>? GetRegionBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetRegionArray() { return __p.__vector_as_array<byte>(22); }
  public string Lang { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangBytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetLangBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetLangArray() { return __p.__vector_as_array<byte>(24); }
  public string LangGame { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangGameBytes() { return __p.__vector_as_span(26); }
#else
  public ArraySegment<byte>? GetLangGameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetLangGameArray() { return __p.__vector_as_array<byte>(26); }
  public float Price { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ReqPaymentPurchase> CreateReqPaymentPurchase(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      StringOffset receiptOffset = default(StringOffset),
      StringOffset osOffset = default(StringOffset),
      StringOffset osvOffset = default(StringOffset),
      StringOffset currencyOffset = default(StringOffset),
      StringOffset adidOffset = default(StringOffset),
      StringOffset idfaOffset = default(StringOffset),
      StringOffset idfvOffset = default(StringOffset),
      StringOffset gps_adidOffset = default(StringOffset),
      StringOffset regionOffset = default(StringOffset),
      StringOffset langOffset = default(StringOffset),
      StringOffset lang_gameOffset = default(StringOffset),
      float price = 0.0f) {
    builder.StartObject(13);
    ReqPaymentPurchase.AddPrice(builder, price);
    ReqPaymentPurchase.AddLangGame(builder, lang_gameOffset);
    ReqPaymentPurchase.AddLang(builder, langOffset);
    ReqPaymentPurchase.AddRegion(builder, regionOffset);
    ReqPaymentPurchase.AddGpsAdid(builder, gps_adidOffset);
    ReqPaymentPurchase.AddIdfv(builder, idfvOffset);
    ReqPaymentPurchase.AddIdfa(builder, idfaOffset);
    ReqPaymentPurchase.AddAdid(builder, adidOffset);
    ReqPaymentPurchase.AddCurrency(builder, currencyOffset);
    ReqPaymentPurchase.AddOsv(builder, osvOffset);
    ReqPaymentPurchase.AddOs(builder, osOffset);
    ReqPaymentPurchase.AddReceipt(builder, receiptOffset);
    ReqPaymentPurchase.AddMarketType(builder, market_type);
    return ReqPaymentPurchase.EndReqPaymentPurchase(builder);
  }

  public static void StartReqPaymentPurchase(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddReceipt(FlatBufferBuilder builder, StringOffset receiptOffset) { builder.AddOffset(1, receiptOffset.Value, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(2, osOffset.Value, 0); }
  public static void AddOsv(FlatBufferBuilder builder, StringOffset osvOffset) { builder.AddOffset(3, osvOffset.Value, 0); }
  public static void AddCurrency(FlatBufferBuilder builder, StringOffset currencyOffset) { builder.AddOffset(4, currencyOffset.Value, 0); }
  public static void AddAdid(FlatBufferBuilder builder, StringOffset adidOffset) { builder.AddOffset(5, adidOffset.Value, 0); }
  public static void AddIdfa(FlatBufferBuilder builder, StringOffset idfaOffset) { builder.AddOffset(6, idfaOffset.Value, 0); }
  public static void AddIdfv(FlatBufferBuilder builder, StringOffset idfvOffset) { builder.AddOffset(7, idfvOffset.Value, 0); }
  public static void AddGpsAdid(FlatBufferBuilder builder, StringOffset gpsAdidOffset) { builder.AddOffset(8, gpsAdidOffset.Value, 0); }
  public static void AddRegion(FlatBufferBuilder builder, StringOffset regionOffset) { builder.AddOffset(9, regionOffset.Value, 0); }
  public static void AddLang(FlatBufferBuilder builder, StringOffset langOffset) { builder.AddOffset(10, langOffset.Value, 0); }
  public static void AddLangGame(FlatBufferBuilder builder, StringOffset langGameOffset) { builder.AddOffset(11, langGameOffset.Value, 0); }
  public static void AddPrice(FlatBufferBuilder builder, float price) { builder.AddFloat(12, price, 0.0f); }
  public static Offset<ReqPaymentPurchase> EndReqPaymentPurchase(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPaymentPurchase>(o);
  }
};

public struct ResPaymentPurchase : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPaymentPurchase GetRootAsResPaymentPurchase(ByteBuffer _bb) { return GetRootAsResPaymentPurchase(_bb, new ResPaymentPurchase()); }
  public static ResPaymentPurchase GetRootAsResPaymentPurchase(ByteBuffer _bb, ResPaymentPurchase obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPaymentPurchase __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string GoodsId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGoodsIdBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetGoodsIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetGoodsIdArray() { return __p.__vector_as_array<byte>(4); }
  public BuyLimitInfo? ResultBuyLimit { get { int o = __p.__offset(6); return o != 0 ? (BuyLimitInfo?)(new BuyLimitInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public byte IsTakeMail { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ResPaymentPurchase> CreateResPaymentPurchase(FlatBufferBuilder builder,
      StringOffset goods_idOffset = default(StringOffset),
      Offset<BuyLimitInfo> result_buy_limitOffset = default(Offset<BuyLimitInfo>),
      byte is_take_mail = 0) {
    builder.StartObject(3);
    ResPaymentPurchase.AddResultBuyLimit(builder, result_buy_limitOffset);
    ResPaymentPurchase.AddGoodsId(builder, goods_idOffset);
    ResPaymentPurchase.AddIsTakeMail(builder, is_take_mail);
    return ResPaymentPurchase.EndResPaymentPurchase(builder);
  }

  public static void StartResPaymentPurchase(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGoodsId(FlatBufferBuilder builder, StringOffset goodsIdOffset) { builder.AddOffset(0, goodsIdOffset.Value, 0); }
  public static void AddResultBuyLimit(FlatBufferBuilder builder, Offset<BuyLimitInfo> resultBuyLimitOffset) { builder.AddOffset(1, resultBuyLimitOffset.Value, 0); }
  public static void AddIsTakeMail(FlatBufferBuilder builder, byte isTakeMail) { builder.AddByte(2, isTakeMail, 0); }
  public static Offset<ResPaymentPurchase> EndResPaymentPurchase(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPaymentPurchase>(o);
  }
};

public struct ReqChangeCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeCompose GetRootAsReqChangeCompose(ByteBuffer _bb) { return GetRootAsReqChangeCompose(_bb, new ReqChangeCompose()); }
  public static ReqChangeCompose GetRootAsReqChangeCompose(ByteBuffer _bb, ReqChangeCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeComposeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ComposeCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseGoldItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ChangeComposeMaterial? ChangeMaterials(int j) { int o = __p.__offset(10); return o != 0 ? (ChangeComposeMaterial?)(new ChangeComposeMaterial()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeMaterialsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqChangeCompose> CreateReqChangeCompose(FlatBufferBuilder builder,
      uint change_compose_tid = 0,
      uint compose_cnt = 0,
      ulong use_gold_item_id = 0,
      VectorOffset change_materialsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqChangeCompose.AddUseGoldItemId(builder, use_gold_item_id);
    ReqChangeCompose.AddChangeMaterials(builder, change_materialsOffset);
    ReqChangeCompose.AddComposeCnt(builder, compose_cnt);
    ReqChangeCompose.AddChangeComposeTid(builder, change_compose_tid);
    return ReqChangeCompose.EndReqChangeCompose(builder);
  }

  public static void StartReqChangeCompose(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddChangeComposeTid(FlatBufferBuilder builder, uint changeComposeTid) { builder.AddUint(0, changeComposeTid, 0); }
  public static void AddComposeCnt(FlatBufferBuilder builder, uint composeCnt) { builder.AddUint(1, composeCnt, 0); }
  public static void AddUseGoldItemId(FlatBufferBuilder builder, ulong useGoldItemId) { builder.AddUlong(2, useGoldItemId, 0); }
  public static void AddChangeMaterials(FlatBufferBuilder builder, VectorOffset changeMaterialsOffset) { builder.AddOffset(3, changeMaterialsOffset.Value, 0); }
  public static VectorOffset CreateChangeMaterialsVector(FlatBufferBuilder builder, Offset<ChangeComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeMaterialsVectorBlock(FlatBufferBuilder builder, Offset<ChangeComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqChangeCompose> EndReqChangeCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeCompose>(o);
  }
};

public struct ResChangeCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeCompose GetRootAsResChangeCompose(ByteBuffer _bb) { return GetRootAsResChangeCompose(_bb, new ResChangeCompose()); }
  public static ResChangeCompose GetRootAsResChangeCompose(ByteBuffer _bb, ResChangeCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultChangeCompose? ResultCompose(int j) { int o = __p.__offset(4); return o != 0 ? (ResultChangeCompose?)(new ResultChangeCompose()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultComposeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeComposeMaterial? MaterialChanges(int j) { int o = __p.__offset(6); return o != 0 ? (ChangeComposeMaterial?)(new ChangeComposeMaterial()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MaterialChangesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(10); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ResultChangesGachaKeeps(int j) { int o = __p.__offset(12); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesGachaKeepsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeCompose> CreateResChangeCompose(FlatBufferBuilder builder,
      VectorOffset result_composeOffset = default(VectorOffset),
      VectorOffset material_changesOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_changesOffset = default(VectorOffset),
      VectorOffset result_changes_gacha_keepsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    ResChangeCompose.AddResultChangesGachaKeeps(builder, result_changes_gacha_keepsOffset);
    ResChangeCompose.AddResultChanges(builder, result_changesOffset);
    ResChangeCompose.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResChangeCompose.AddMaterialChanges(builder, material_changesOffset);
    ResChangeCompose.AddResultCompose(builder, result_composeOffset);
    return ResChangeCompose.EndResChangeCompose(builder);
  }

  public static void StartResChangeCompose(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddResultCompose(FlatBufferBuilder builder, VectorOffset resultComposeOffset) { builder.AddOffset(0, resultComposeOffset.Value, 0); }
  public static VectorOffset CreateResultComposeVector(FlatBufferBuilder builder, Offset<ResultChangeCompose>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultComposeVectorBlock(FlatBufferBuilder builder, Offset<ResultChangeCompose>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultComposeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaterialChanges(FlatBufferBuilder builder, VectorOffset materialChangesOffset) { builder.AddOffset(1, materialChangesOffset.Value, 0); }
  public static VectorOffset CreateMaterialChangesVector(FlatBufferBuilder builder, Offset<ChangeComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMaterialChangesVectorBlock(FlatBufferBuilder builder, Offset<ChangeComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaterialChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(3, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChangesGachaKeeps(FlatBufferBuilder builder, VectorOffset resultChangesGachaKeepsOffset) { builder.AddOffset(4, resultChangesGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultChangesGachaKeepsVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeCompose> EndResChangeCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeCompose>(o);
  }
};

public struct ReqChangeEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeEquip GetRootAsReqChangeEquip(ByteBuffer _bb) { return GetRootAsReqChangeEquip(_bb, new ReqChangeEquip()); }
  public static ReqChangeEquip GetRootAsReqChangeEquip(ByteBuffer _bb, ReqChangeEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqChangeEquip> CreateReqChangeEquip(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0,
      ulong use_item_id = 0) {
    builder.StartObject(3);
    ReqChangeEquip.AddUseItemId(builder, use_item_id);
    ReqChangeEquip.AddChangeId(builder, change_id);
    ReqChangeEquip.AddChangeTid(builder, change_tid);
    return ReqChangeEquip.EndReqChangeEquip(builder);
  }

  public static void StartReqChangeEquip(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(2, useItemId, 0); }
  public static Offset<ReqChangeEquip> EndReqChangeEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeEquip>(o);
  }
};

public struct ResChangeEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeEquip GetRootAsResChangeEquip(ByteBuffer _bb) { return GetRootAsResChangeEquip(_bb, new ResChangeEquip()); }
  public static ResChangeEquip GetRootAsResChangeEquip(ByteBuffer _bb, ResChangeEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ChangeExpireDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeEquip> CreateResChangeEquip(FlatBufferBuilder builder,
      uint change_tid = 0,
      ulong change_expire_dt = 0,
      uint use_item_tid = 0,
      uint use_item_cnt = 0,
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    ResChangeEquip.AddChangeExpireDt(builder, change_expire_dt);
    ResChangeEquip.AddResultStackItems(builder, result_stack_itemsOffset);
    ResChangeEquip.AddUseItemCnt(builder, use_item_cnt);
    ResChangeEquip.AddUseItemTid(builder, use_item_tid);
    ResChangeEquip.AddChangeTid(builder, change_tid);
    return ResChangeEquip.EndResChangeEquip(builder);
  }

  public static void StartResChangeEquip(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(0, changeTid, 0); }
  public static void AddChangeExpireDt(FlatBufferBuilder builder, ulong changeExpireDt) { builder.AddUlong(1, changeExpireDt, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(2, useItemTid, 0); }
  public static void AddUseItemCnt(FlatBufferBuilder builder, uint useItemCnt) { builder.AddUint(3, useItemCnt, 0); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(4, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeEquip> EndResChangeEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeEquip>(o);
  }
};

public struct ReqChangeUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeUnequip GetRootAsReqChangeUnequip(ByteBuffer _bb) { return GetRootAsReqChangeUnequip(_bb, new ReqChangeUnequip()); }
  public static ReqChangeUnequip GetRootAsReqChangeUnequip(ByteBuffer _bb, ReqChangeUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqChangeUnequip(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqChangeUnequip> EndReqChangeUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeUnequip>(o);
  }
};

public struct ResChangeUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeUnequip GetRootAsResChangeUnequip(ByteBuffer _bb) { return GetRootAsResChangeUnequip(_bb, new ResChangeUnequip()); }
  public static ResChangeUnequip GetRootAsResChangeUnequip(ByteBuffer _bb, ResChangeUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResChangeUnequip(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResChangeUnequip> EndResChangeUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeUnequip>(o);
  }
};

public struct ReqChangeEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeEnchant GetRootAsReqChangeEnchant(ByteBuffer _bb) { return GetRootAsReqChangeEnchant(_bb, new ReqChangeEnchant()); }
  public static ReqChangeEnchant GetRootAsReqChangeEnchant(ByteBuffer _bb, ReqChangeEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeEnchant> CreateReqChangeEnchant(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0) {
    builder.StartObject(2);
    ReqChangeEnchant.AddChangeId(builder, change_id);
    ReqChangeEnchant.AddChangeTid(builder, change_tid);
    return ReqChangeEnchant.EndReqChangeEnchant(builder);
  }

  public static void StartReqChangeEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static Offset<ReqChangeEnchant> EndReqChangeEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeEnchant>(o);
  }
};

public struct ResChangeEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeEnchant GetRootAsResChangeEnchant(ByteBuffer _bb) { return GetRootAsResChangeEnchant(_bb, new ResChangeEnchant()); }
  public static ResChangeEnchant GetRootAsResChangeEnchant(ByteBuffer _bb, ResChangeEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AddAbilityAcid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Change? ResultChange { get { int o = __p.__offset(6); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResChangeEnchant> CreateResChangeEnchant(FlatBufferBuilder builder,
      uint add_ability_acid = 0,
      Offset<Change> result_changeOffset = default(Offset<Change>)) {
    builder.StartObject(2);
    ResChangeEnchant.AddResultChange(builder, result_changeOffset);
    ResChangeEnchant.AddAddAbilityAcid(builder, add_ability_acid);
    return ResChangeEnchant.EndResChangeEnchant(builder);
  }

  public static void StartResChangeEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAddAbilityAcid(FlatBufferBuilder builder, uint addAbilityAcid) { builder.AddUint(0, addAbilityAcid, 0); }
  public static void AddResultChange(FlatBufferBuilder builder, Offset<Change> resultChangeOffset) { builder.AddOffset(1, resultChangeOffset.Value, 0); }
  public static Offset<ResChangeEnchant> EndResChangeEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeEnchant>(o);
  }
};

public struct ReqChangeRetryGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeRetryGachaKeep GetRootAsReqChangeRetryGachaKeep(ByteBuffer _bb) { return GetRootAsReqChangeRetryGachaKeep(_bb, new ReqChangeRetryGachaKeep()); }
  public static ReqChangeRetryGachaKeep GetRootAsReqChangeRetryGachaKeep(ByteBuffer _bb, ReqChangeRetryGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeRetryGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong KeepChangeId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KeepChangeTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeRetryGachaKeep> CreateReqChangeRetryGachaKeep(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong keep_change_id = 0,
      uint keep_change_tid = 0) {
    builder.StartObject(3);
    ReqChangeRetryGachaKeep.AddKeepChangeId(builder, keep_change_id);
    ReqChangeRetryGachaKeep.AddKeepChangeTid(builder, keep_change_tid);
    ReqChangeRetryGachaKeep.AddMarketType(builder, market_type);
    return ReqChangeRetryGachaKeep.EndReqChangeRetryGachaKeep(builder);
  }

  public static void StartReqChangeRetryGachaKeep(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddKeepChangeId(FlatBufferBuilder builder, ulong keepChangeId) { builder.AddUlong(1, keepChangeId, 0); }
  public static void AddKeepChangeTid(FlatBufferBuilder builder, uint keepChangeTid) { builder.AddUint(2, keepChangeTid, 0); }
  public static Offset<ReqChangeRetryGachaKeep> EndReqChangeRetryGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeRetryGachaKeep>(o);
  }
};

public struct ResChangeRetryGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeRetryGachaKeep GetRootAsResChangeRetryGachaKeep(ByteBuffer _bb) { return GetRootAsResChangeRetryGachaKeep(_bb, new ResChangeRetryGachaKeep()); }
  public static ResChangeRetryGachaKeep GetRootAsResChangeRetryGachaKeep(ByteBuffer _bb, ResChangeRetryGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeRetryGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ResultChangesGachaKeeps(int j) { int o = __p.__offset(6); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesGachaKeepsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResChangeRetryGachaKeep> CreateResChangeRetryGachaKeep(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_changes_gacha_keepsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(3);
    ResChangeRetryGachaKeep.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResChangeRetryGachaKeep.AddResultChangesGachaKeeps(builder, result_changes_gacha_keepsOffset);
    ResChangeRetryGachaKeep.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResChangeRetryGachaKeep.EndResChangeRetryGachaKeep(builder);
  }

  public static void StartResChangeRetryGachaKeep(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChangesGachaKeeps(FlatBufferBuilder builder, VectorOffset resultChangesGachaKeepsOffset) { builder.AddOffset(1, resultChangesGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultChangesGachaKeepsVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(2, resultCashCoinBalance, 0); }
  public static Offset<ResChangeRetryGachaKeep> EndResChangeRetryGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeRetryGachaKeep>(o);
  }
};

public struct ReqChangeTakeGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeTakeGachaKeep GetRootAsReqChangeTakeGachaKeep(ByteBuffer _bb) { return GetRootAsReqChangeTakeGachaKeep(_bb, new ReqChangeTakeGachaKeep()); }
  public static ReqChangeTakeGachaKeep GetRootAsReqChangeTakeGachaKeep(ByteBuffer _bb, ReqChangeTakeGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeTakeGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong KeepChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KeepChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeTakeGachaKeep> CreateReqChangeTakeGachaKeep(FlatBufferBuilder builder,
      ulong keep_change_id = 0,
      uint keep_change_tid = 0) {
    builder.StartObject(2);
    ReqChangeTakeGachaKeep.AddKeepChangeId(builder, keep_change_id);
    ReqChangeTakeGachaKeep.AddKeepChangeTid(builder, keep_change_tid);
    return ReqChangeTakeGachaKeep.EndReqChangeTakeGachaKeep(builder);
  }

  public static void StartReqChangeTakeGachaKeep(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddKeepChangeId(FlatBufferBuilder builder, ulong keepChangeId) { builder.AddUlong(0, keepChangeId, 0); }
  public static void AddKeepChangeTid(FlatBufferBuilder builder, uint keepChangeTid) { builder.AddUint(1, keepChangeTid, 0); }
  public static Offset<ReqChangeTakeGachaKeep> EndReqChangeTakeGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeTakeGachaKeep>(o);
  }
};

public struct ResChangeTakeGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeTakeGachaKeep GetRootAsResChangeTakeGachaKeep(ByteBuffer _bb) { return GetRootAsResChangeTakeGachaKeep(_bb, new ResChangeTakeGachaKeep()); }
  public static ResChangeTakeGachaKeep GetRootAsResChangeTakeGachaKeep(ByteBuffer _bb, ResChangeTakeGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeTakeGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Change? ResultChanges(int j) { int o = __p.__offset(4); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeTakeGachaKeep> CreateResChangeTakeGachaKeep(FlatBufferBuilder builder,
      VectorOffset result_changesOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResChangeTakeGachaKeep.AddResultChanges(builder, result_changesOffset);
    return ResChangeTakeGachaKeep.EndResChangeTakeGachaKeep(builder);
  }

  public static void StartResChangeTakeGachaKeep(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(0, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeTakeGachaKeep> EndResChangeTakeGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeTakeGachaKeep>(o);
  }
};

public struct ReqChangeExtraction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeExtraction GetRootAsReqChangeExtraction(ByteBuffer _bb) { return GetRootAsReqChangeExtraction(_bb, new ReqChangeExtraction()); }
  public static ReqChangeExtraction GetRootAsReqChangeExtraction(ByteBuffer _bb, ReqChangeExtraction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeExtraction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeExtraction> CreateReqChangeExtraction(FlatBufferBuilder builder,
      ulong change_id = 0,
      uint change_tid = 0) {
    builder.StartObject(2);
    ReqChangeExtraction.AddChangeId(builder, change_id);
    ReqChangeExtraction.AddChangeTid(builder, change_tid);
    return ReqChangeExtraction.EndReqChangeExtraction(builder);
  }

  public static void StartReqChangeExtraction(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(0, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static Offset<ReqChangeExtraction> EndReqChangeExtraction(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeExtraction>(o);
  }
};

public struct ResChangeExtraction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeExtraction GetRootAsResChangeExtraction(ByteBuffer _bb) { return GetRootAsResChangeExtraction(_bb, new ResChangeExtraction()); }
  public static ResChangeExtraction GetRootAsResChangeExtraction(ByteBuffer _bb, ResChangeExtraction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeExtraction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? GetItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResChangeExtraction> CreateResChangeExtraction(FlatBufferBuilder builder,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(2);
    ResChangeExtraction.AddRemainItems(builder, remain_itemsOffset);
    ResChangeExtraction.AddGetItems(builder, get_itemsOffset);
    return ResChangeExtraction.EndResChangeExtraction(builder);
  }

  public static void StartResChangeExtraction(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(0, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static Offset<ResChangeExtraction> EndResChangeExtraction(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeExtraction>(o);
  }
};

public struct ReqChangeQuestDailyReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeQuestDailyReset GetRootAsReqChangeQuestDailyReset(ByteBuffer _bb) { return GetRootAsReqChangeQuestDailyReset(_bb, new ReqChangeQuestDailyReset()); }
  public static ReqChangeQuestDailyReset GetRootAsReqChangeQuestDailyReset(ByteBuffer _bb, ReqChangeQuestDailyReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeQuestDailyReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqChangeQuestDailyReset(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqChangeQuestDailyReset> EndReqChangeQuestDailyReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeQuestDailyReset>(o);
  }
};

public struct ResChangeQuestDailyReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeQuestDailyReset GetRootAsResChangeQuestDailyReset(ByteBuffer _bb) { return GetRootAsResChangeQuestDailyReset(_bb, new ResChangeQuestDailyReset()); }
  public static ResChangeQuestDailyReset GetRootAsResChangeQuestDailyReset(ByteBuffer _bb, ResChangeQuestDailyReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeQuestDailyReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ChangeQuestIssuedDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ChangeQuest? ChangeQuests(int j) { int o = __p.__offset(6); return o != 0 ? (ChangeQuest?)(new ChangeQuest()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeQuestsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeQuestDailyReset> CreateResChangeQuestDailyReset(FlatBufferBuilder builder,
      ulong change_quest_issued_dt = 0,
      VectorOffset change_questsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResChangeQuestDailyReset.AddChangeQuestIssuedDt(builder, change_quest_issued_dt);
    ResChangeQuestDailyReset.AddChangeQuests(builder, change_questsOffset);
    return ResChangeQuestDailyReset.EndResChangeQuestDailyReset(builder);
  }

  public static void StartResChangeQuestDailyReset(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeQuestIssuedDt(FlatBufferBuilder builder, ulong changeQuestIssuedDt) { builder.AddUlong(0, changeQuestIssuedDt, 0); }
  public static void AddChangeQuests(FlatBufferBuilder builder, VectorOffset changeQuestsOffset) { builder.AddOffset(1, changeQuestsOffset.Value, 0); }
  public static VectorOffset CreateChangeQuestsVector(FlatBufferBuilder builder, Offset<ChangeQuest>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeQuestsVectorBlock(FlatBufferBuilder builder, Offset<ChangeQuest>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeQuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeQuestDailyReset> EndResChangeQuestDailyReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeQuestDailyReset>(o);
  }
};

public struct ReqChangeQuestRegistChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeQuestRegistChange GetRootAsReqChangeQuestRegistChange(ByteBuffer _bb) { return GetRootAsReqChangeQuestRegistChange(_bb, new ReqChangeQuestRegistChange()); }
  public static ReqChangeQuestRegistChange GetRootAsReqChangeQuestRegistChange(ByteBuffer _bb, ReqChangeQuestRegistChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeQuestRegistChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ChangeTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetChangeTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetChangeTidsArray() { return __p.__vector_as_array<uint>(4); }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeQuestRegistChange> CreateReqChangeQuestRegistChange(FlatBufferBuilder builder,
      VectorOffset change_tidsOffset = default(VectorOffset),
      uint quest_tid = 0) {
    builder.StartObject(2);
    ReqChangeQuestRegistChange.AddQuestTid(builder, quest_tid);
    ReqChangeQuestRegistChange.AddChangeTids(builder, change_tidsOffset);
    return ReqChangeQuestRegistChange.EndReqChangeQuestRegistChange(builder);
  }

  public static void StartReqChangeQuestRegistChange(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeTids(FlatBufferBuilder builder, VectorOffset changeTidsOffset) { builder.AddOffset(0, changeTidsOffset.Value, 0); }
  public static VectorOffset CreateChangeTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateChangeTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static Offset<ReqChangeQuestRegistChange> EndReqChangeQuestRegistChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeQuestRegistChange>(o);
  }
};

public struct ResChangeQuestRegistChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeQuestRegistChange GetRootAsResChangeQuestRegistChange(ByteBuffer _bb) { return GetRootAsResChangeQuestRegistChange(_bb, new ResChangeQuestRegistChange()); }
  public static ResChangeQuestRegistChange GetRootAsResChangeQuestRegistChange(ByteBuffer _bb, ResChangeQuestRegistChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeQuestRegistChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ChangeQuest? ResultQuest { get { int o = __p.__offset(4); return o != 0 ? (ChangeQuest?)(new ChangeQuest()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(6); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeQuestRegistChange> CreateResChangeQuestRegistChange(FlatBufferBuilder builder,
      Offset<ChangeQuest> result_questOffset = default(Offset<ChangeQuest>),
      VectorOffset result_changesOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResChangeQuestRegistChange.AddResultChanges(builder, result_changesOffset);
    ResChangeQuestRegistChange.AddResultQuest(builder, result_questOffset);
    return ResChangeQuestRegistChange.EndResChangeQuestRegistChange(builder);
  }

  public static void StartResChangeQuestRegistChange(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultQuest(FlatBufferBuilder builder, Offset<ChangeQuest> resultQuestOffset) { builder.AddOffset(0, resultQuestOffset.Value, 0); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(1, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeQuestRegistChange> EndResChangeQuestRegistChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeQuestRegistChange>(o);
  }
};

public struct ReqChangeQuestReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeQuestReward GetRootAsReqChangeQuestReward(ByteBuffer _bb) { return GetRootAsReqChangeQuestReward(_bb, new ReqChangeQuestReward()); }
  public static ReqChangeQuestReward GetRootAsReqChangeQuestReward(ByteBuffer _bb, ReqChangeQuestReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeQuestReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ChangeTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetChangeTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetChangeTidsArray() { return __p.__vector_as_array<uint>(4); }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeQuestReward> CreateReqChangeQuestReward(FlatBufferBuilder builder,
      VectorOffset change_tidsOffset = default(VectorOffset),
      uint quest_tid = 0) {
    builder.StartObject(2);
    ReqChangeQuestReward.AddQuestTid(builder, quest_tid);
    ReqChangeQuestReward.AddChangeTids(builder, change_tidsOffset);
    return ReqChangeQuestReward.EndReqChangeQuestReward(builder);
  }

  public static void StartReqChangeQuestReward(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeTids(FlatBufferBuilder builder, VectorOffset changeTidsOffset) { builder.AddOffset(0, changeTidsOffset.Value, 0); }
  public static VectorOffset CreateChangeTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateChangeTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static Offset<ReqChangeQuestReward> EndReqChangeQuestReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeQuestReward>(o);
  }
};

public struct ResChangeQuestReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeQuestReward GetRootAsResChangeQuestReward(ByteBuffer _bb) { return GetRootAsResChangeQuestReward(_bb, new ResChangeQuestReward()); }
  public static ResChangeQuestReward GetRootAsResChangeQuestReward(ByteBuffer _bb, ResChangeQuestReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeQuestReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeQuestLv { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChangeQuestExp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(10); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ChangeQuest? ResultQuest { get { int o = __p.__offset(12); return o != 0 ? (ChangeQuest?)(new ChangeQuest()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(14); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResChangeQuestReward> CreateResChangeQuestReward(FlatBufferBuilder builder,
      uint change_quest_lv = 0,
      uint change_quest_exp = 0,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>),
      Offset<ChangeQuest> result_questOffset = default(Offset<ChangeQuest>),
      VectorOffset result_changesOffset = default(VectorOffset)) {
    builder.StartObject(6);
    ResChangeQuestReward.AddResultChanges(builder, result_changesOffset);
    ResChangeQuestReward.AddResultQuest(builder, result_questOffset);
    ResChangeQuestReward.AddRemainItems(builder, remain_itemsOffset);
    ResChangeQuestReward.AddGetItems(builder, get_itemsOffset);
    ResChangeQuestReward.AddChangeQuestExp(builder, change_quest_exp);
    ResChangeQuestReward.AddChangeQuestLv(builder, change_quest_lv);
    return ResChangeQuestReward.EndResChangeQuestReward(builder);
  }

  public static void StartResChangeQuestReward(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddChangeQuestLv(FlatBufferBuilder builder, uint changeQuestLv) { builder.AddUint(0, changeQuestLv, 0); }
  public static void AddChangeQuestExp(FlatBufferBuilder builder, uint changeQuestExp) { builder.AddUint(1, changeQuestExp, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(3, remainItemsOffset.Value, 0); }
  public static void AddResultQuest(FlatBufferBuilder builder, Offset<ChangeQuest> resultQuestOffset) { builder.AddOffset(4, resultQuestOffset.Value, 0); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(5, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResChangeQuestReward> EndResChangeQuestReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeQuestReward>(o);
  }
};

public struct ReqChangeQuestLevelUp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeQuestLevelUp GetRootAsReqChangeQuestLevelUp(ByteBuffer _bb) { return GetRootAsReqChangeQuestLevelUp(_bb, new ReqChangeQuestLevelUp()); }
  public static ReqChangeQuestLevelUp GetRootAsReqChangeQuestLevelUp(ByteBuffer _bb, ReqChangeQuestLevelUp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeQuestLevelUp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqChangeQuestLevelUp(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqChangeQuestLevelUp> EndReqChangeQuestLevelUp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeQuestLevelUp>(o);
  }
};

public struct ResChangeQuestLevelUp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeQuestLevelUp GetRootAsResChangeQuestLevelUp(ByteBuffer _bb) { return GetRootAsResChangeQuestLevelUp(_bb, new ResChangeQuestLevelUp()); }
  public static ResChangeQuestLevelUp GetRootAsResChangeQuestLevelUp(ByteBuffer _bb, ResChangeQuestLevelUp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeQuestLevelUp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeQuestLv { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResChangeQuestLevelUp> CreateResChangeQuestLevelUp(FlatBufferBuilder builder,
      uint change_quest_lv = 0) {
    builder.StartObject(1);
    ResChangeQuestLevelUp.AddChangeQuestLv(builder, change_quest_lv);
    return ResChangeQuestLevelUp.EndResChangeQuestLevelUp(builder);
  }

  public static void StartResChangeQuestLevelUp(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChangeQuestLv(FlatBufferBuilder builder, uint changeQuestLv) { builder.AddUint(0, changeQuestLv, 0); }
  public static Offset<ResChangeQuestLevelUp> EndResChangeQuestLevelUp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeQuestLevelUp>(o);
  }
};

public struct ReqCheatSendMail : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCheatSendMail GetRootAsReqCheatSendMail(ByteBuffer _bb) { return GetRootAsReqCheatSendMail(_bb, new ReqCheatSendMail()); }
  public static ReqCheatSendMail GetRootAsReqCheatSendMail(ByteBuffer _bb, ReqCheatSendMail obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCheatSendMail __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Cmd { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string SendData { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSendDataBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetSendDataBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetSendDataArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqCheatSendMail> CreateReqCheatSendMail(FlatBufferBuilder builder,
      uint cmd = 0,
      StringOffset send_dataOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqCheatSendMail.AddSendData(builder, send_dataOffset);
    ReqCheatSendMail.AddCmd(builder, cmd);
    return ReqCheatSendMail.EndReqCheatSendMail(builder);
  }

  public static void StartReqCheatSendMail(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCmd(FlatBufferBuilder builder, uint cmd) { builder.AddUint(0, cmd, 0); }
  public static void AddSendData(FlatBufferBuilder builder, StringOffset sendDataOffset) { builder.AddOffset(1, sendDataOffset.Value, 0); }
  public static Offset<ReqCheatSendMail> EndReqCheatSendMail(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCheatSendMail>(o);
  }
};

public struct ResCheatSendMail : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCheatSendMail GetRootAsResCheatSendMail(ByteBuffer _bb) { return GetRootAsResCheatSendMail(_bb, new ResCheatSendMail()); }
  public static ResCheatSendMail GetRootAsResCheatSendMail(ByteBuffer _bb, ResCheatSendMail obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCheatSendMail __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResCheatSendMail(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResCheatSendMail> EndResCheatSendMail(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCheatSendMail>(o);
  }
};

public struct ReqItemCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemCollectMake GetRootAsReqItemCollectMake(ByteBuffer _bb) { return GetRootAsReqItemCollectMake(_bb, new ReqItemCollectMake()); }
  public static ReqItemCollectMake GetRootAsReqItemCollectMake(ByteBuffer _bb, ReqItemCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemCollectTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MaterialCollect? Material { get { int o = __p.__offset(6); return o != 0 ? (MaterialCollect?)(new MaterialCollect()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ReqItemCollectMake> CreateReqItemCollectMake(FlatBufferBuilder builder,
      uint item_collect_tid = 0,
      Offset<MaterialCollect> materialOffset = default(Offset<MaterialCollect>)) {
    builder.StartObject(2);
    ReqItemCollectMake.AddMaterial(builder, materialOffset);
    ReqItemCollectMake.AddItemCollectTid(builder, item_collect_tid);
    return ReqItemCollectMake.EndReqItemCollectMake(builder);
  }

  public static void StartReqItemCollectMake(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddItemCollectTid(FlatBufferBuilder builder, uint itemCollectTid) { builder.AddUint(0, itemCollectTid, 0); }
  public static void AddMaterial(FlatBufferBuilder builder, Offset<MaterialCollect> materialOffset) { builder.AddOffset(1, materialOffset.Value, 0); }
  public static Offset<ReqItemCollectMake> EndReqItemCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemCollectMake>(o);
  }
};

public struct ResItemCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemCollectMake GetRootAsResItemCollectMake(ByteBuffer _bb) { return GetRootAsResItemCollectMake(_bb, new ResItemCollectMake()); }
  public static ResItemCollectMake GetRootAsResItemCollectMake(ByteBuffer _bb, ResItemCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemCollectTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MaterialCollect? Material { get { int o = __p.__offset(6); return o != 0 ? (MaterialCollect?)(new MaterialCollect()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public byte DailyQuestFastClearMaxCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ResItemCollectMake> CreateResItemCollectMake(FlatBufferBuilder builder,
      uint item_collect_tid = 0,
      Offset<MaterialCollect> materialOffset = default(Offset<MaterialCollect>),
      byte daily_quest_fast_clear_max_cnt = 0) {
    builder.StartObject(3);
    ResItemCollectMake.AddMaterial(builder, materialOffset);
    ResItemCollectMake.AddItemCollectTid(builder, item_collect_tid);
    ResItemCollectMake.AddDailyQuestFastClearMaxCnt(builder, daily_quest_fast_clear_max_cnt);
    return ResItemCollectMake.EndResItemCollectMake(builder);
  }

  public static void StartResItemCollectMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemCollectTid(FlatBufferBuilder builder, uint itemCollectTid) { builder.AddUint(0, itemCollectTid, 0); }
  public static void AddMaterial(FlatBufferBuilder builder, Offset<MaterialCollect> materialOffset) { builder.AddOffset(1, materialOffset.Value, 0); }
  public static void AddDailyQuestFastClearMaxCnt(FlatBufferBuilder builder, byte dailyQuestFastClearMaxCnt) { builder.AddByte(2, dailyQuestFastClearMaxCnt, 0); }
  public static Offset<ResItemCollectMake> EndResItemCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemCollectMake>(o);
  }
};

public struct ReqChangeCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeCollectMake GetRootAsReqChangeCollectMake(ByteBuffer _bb) { return GetRootAsReqChangeCollectMake(_bb, new ReqChangeCollectMake()); }
  public static ReqChangeCollectMake GetRootAsReqChangeCollectMake(ByteBuffer _bb, ReqChangeCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CollectMake? ChangeCollectMakes(int j) { int o = __p.__offset(4); return o != 0 ? (CollectMake?)(new CollectMake()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeCollectMakesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ulong ChangeId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqChangeCollectMake> CreateReqChangeCollectMake(FlatBufferBuilder builder,
      VectorOffset change_collect_makesOffset = default(VectorOffset),
      ulong change_id = 0,
      uint change_tid = 0) {
    builder.StartObject(3);
    ReqChangeCollectMake.AddChangeId(builder, change_id);
    ReqChangeCollectMake.AddChangeTid(builder, change_tid);
    ReqChangeCollectMake.AddChangeCollectMakes(builder, change_collect_makesOffset);
    return ReqChangeCollectMake.EndReqChangeCollectMake(builder);
  }

  public static void StartReqChangeCollectMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddChangeCollectMakes(FlatBufferBuilder builder, VectorOffset changeCollectMakesOffset) { builder.AddOffset(0, changeCollectMakesOffset.Value, 0); }
  public static VectorOffset CreateChangeCollectMakesVector(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeCollectMakesVectorBlock(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeCollectMakesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeId(FlatBufferBuilder builder, ulong changeId) { builder.AddUlong(1, changeId, 0); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(2, changeTid, 0); }
  public static Offset<ReqChangeCollectMake> EndReqChangeCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeCollectMake>(o);
  }
};

public struct ResChangeCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeCollectMake GetRootAsResChangeCollectMake(ByteBuffer _bb) { return GetRootAsResChangeCollectMake(_bb, new ResChangeCollectMake()); }
  public static ResChangeCollectMake GetRootAsResChangeCollectMake(ByteBuffer _bb, ResChangeCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CollectMake? ChangeCollectMakes(int j) { int o = __p.__offset(4); return o != 0 ? (CollectMake?)(new CollectMake()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeCollectMakesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint ChangeTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte DailyQuestFastClearMaxCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ResChangeCollectMake> CreateResChangeCollectMake(FlatBufferBuilder builder,
      VectorOffset change_collect_makesOffset = default(VectorOffset),
      uint change_tid = 0,
      byte daily_quest_fast_clear_max_cnt = 0) {
    builder.StartObject(3);
    ResChangeCollectMake.AddChangeTid(builder, change_tid);
    ResChangeCollectMake.AddChangeCollectMakes(builder, change_collect_makesOffset);
    ResChangeCollectMake.AddDailyQuestFastClearMaxCnt(builder, daily_quest_fast_clear_max_cnt);
    return ResChangeCollectMake.EndResChangeCollectMake(builder);
  }

  public static void StartResChangeCollectMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddChangeCollectMakes(FlatBufferBuilder builder, VectorOffset changeCollectMakesOffset) { builder.AddOffset(0, changeCollectMakesOffset.Value, 0); }
  public static VectorOffset CreateChangeCollectMakesVector(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeCollectMakesVectorBlock(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeCollectMakesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeTid(FlatBufferBuilder builder, uint changeTid) { builder.AddUint(1, changeTid, 0); }
  public static void AddDailyQuestFastClearMaxCnt(FlatBufferBuilder builder, byte dailyQuestFastClearMaxCnt) { builder.AddByte(2, dailyQuestFastClearMaxCnt, 0); }
  public static Offset<ResChangeCollectMake> EndResChangeCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeCollectMake>(o);
  }
};

public struct ReqPetCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetCollectMake GetRootAsReqPetCollectMake(ByteBuffer _bb) { return GetRootAsReqPetCollectMake(_bb, new ReqPetCollectMake()); }
  public static ReqPetCollectMake GetRootAsReqPetCollectMake(ByteBuffer _bb, ReqPetCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CollectMake? PetCollectMakes(int j) { int o = __p.__offset(4); return o != 0 ? (CollectMake?)(new CollectMake()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetCollectMakesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ulong PetId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetCollectMake> CreateReqPetCollectMake(FlatBufferBuilder builder,
      VectorOffset pet_collect_makesOffset = default(VectorOffset),
      ulong pet_id = 0,
      uint pet_tid = 0) {
    builder.StartObject(3);
    ReqPetCollectMake.AddPetId(builder, pet_id);
    ReqPetCollectMake.AddPetTid(builder, pet_tid);
    ReqPetCollectMake.AddPetCollectMakes(builder, pet_collect_makesOffset);
    return ReqPetCollectMake.EndReqPetCollectMake(builder);
  }

  public static void StartReqPetCollectMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPetCollectMakes(FlatBufferBuilder builder, VectorOffset petCollectMakesOffset) { builder.AddOffset(0, petCollectMakesOffset.Value, 0); }
  public static VectorOffset CreatePetCollectMakesVector(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetCollectMakesVectorBlock(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetCollectMakesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(1, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(2, petTid, 0); }
  public static Offset<ReqPetCollectMake> EndReqPetCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetCollectMake>(o);
  }
};

public struct ResPetCollectMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetCollectMake GetRootAsResPetCollectMake(ByteBuffer _bb) { return GetRootAsResPetCollectMake(_bb, new ResPetCollectMake()); }
  public static ResPetCollectMake GetRootAsResPetCollectMake(ByteBuffer _bb, ResPetCollectMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetCollectMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CollectMake? PetCollectMakes(int j) { int o = __p.__offset(4); return o != 0 ? (CollectMake?)(new CollectMake()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetCollectMakesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte DailyQuestFastClearMaxCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ResPetCollectMake> CreateResPetCollectMake(FlatBufferBuilder builder,
      VectorOffset pet_collect_makesOffset = default(VectorOffset),
      uint pet_tid = 0,
      byte daily_quest_fast_clear_max_cnt = 0) {
    builder.StartObject(3);
    ResPetCollectMake.AddPetTid(builder, pet_tid);
    ResPetCollectMake.AddPetCollectMakes(builder, pet_collect_makesOffset);
    ResPetCollectMake.AddDailyQuestFastClearMaxCnt(builder, daily_quest_fast_clear_max_cnt);
    return ResPetCollectMake.EndResPetCollectMake(builder);
  }

  public static void StartResPetCollectMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPetCollectMakes(FlatBufferBuilder builder, VectorOffset petCollectMakesOffset) { builder.AddOffset(0, petCollectMakesOffset.Value, 0); }
  public static VectorOffset CreatePetCollectMakesVector(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetCollectMakesVectorBlock(FlatBufferBuilder builder, Offset<CollectMake>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetCollectMakesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddDailyQuestFastClearMaxCnt(FlatBufferBuilder builder, byte dailyQuestFastClearMaxCnt) { builder.AddByte(2, dailyQuestFastClearMaxCnt, 0); }
  public static Offset<ResPetCollectMake> EndResPetCollectMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetCollectMake>(o);
  }
};

public struct ReqGetAttendEventInfoList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetAttendEventInfoList GetRootAsReqGetAttendEventInfoList(ByteBuffer _bb) { return GetRootAsReqGetAttendEventInfoList(_bb, new ReqGetAttendEventInfoList()); }
  public static ReqGetAttendEventInfoList GetRootAsReqGetAttendEventInfoList(ByteBuffer _bb, ReqGetAttendEventInfoList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetAttendEventInfoList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetAttendEventInfoList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetAttendEventInfoList> EndReqGetAttendEventInfoList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetAttendEventInfoList>(o);
  }
};

public struct ResGetAttendEventInfoList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetAttendEventInfoList GetRootAsResGetAttendEventInfoList(ByteBuffer _bb) { return GetRootAsResGetAttendEventInfoList(_bb, new ResGetAttendEventInfoList()); }
  public static ResGetAttendEventInfoList GetRootAsResGetAttendEventInfoList(ByteBuffer _bb, ResGetAttendEventInfoList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetAttendEventInfoList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountAttendInfo? Info(int j) { int o = __p.__offset(4); return o != 0 ? (AccountAttendInfo?)(new AccountAttendInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetAttendEventInfoList> CreateResGetAttendEventInfoList(FlatBufferBuilder builder,
      VectorOffset infoOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetAttendEventInfoList.AddInfo(builder, infoOffset);
    return ResGetAttendEventInfoList.EndResGetAttendEventInfoList(builder);
  }

  public static void StartResGetAttendEventInfoList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfo(FlatBufferBuilder builder, VectorOffset infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static VectorOffset CreateInfoVector(FlatBufferBuilder builder, Offset<AccountAttendInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInfoVectorBlock(FlatBufferBuilder builder, Offset<AccountAttendInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetAttendEventInfoList> EndResGetAttendEventInfoList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetAttendEventInfoList>(o);
  }
};

public struct ReqGetAttendReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetAttendReward GetRootAsReqGetAttendReward(ByteBuffer _bb) { return GetRootAsReqGetAttendReward(_bb, new ReqGetAttendReward()); }
  public static ReqGetAttendReward GetRootAsReqGetAttendReward(ByteBuffer _bb, ReqGetAttendReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetAttendReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ATTEND_TYPE AttendType { get { int o = __p.__offset(4); return o != 0 ? (E_ATTEND_TYPE)__p.bb.Get(o + __p.bb_pos) : E_ATTEND_TYPE.ATTEND; } }
  public uint AttendGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool GetReward { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqGetAttendReward> CreateReqGetAttendReward(FlatBufferBuilder builder,
      E_ATTEND_TYPE attend_type = E_ATTEND_TYPE.ATTEND,
      uint attend_group_id = 0,
      bool get_reward = false) {
    builder.StartObject(3);
    ReqGetAttendReward.AddAttendGroupId(builder, attend_group_id);
    ReqGetAttendReward.AddGetReward(builder, get_reward);
    ReqGetAttendReward.AddAttendType(builder, attend_type);
    return ReqGetAttendReward.EndReqGetAttendReward(builder);
  }

  public static void StartReqGetAttendReward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAttendType(FlatBufferBuilder builder, E_ATTEND_TYPE attendType) { builder.AddByte(0, (byte)attendType, 0); }
  public static void AddAttendGroupId(FlatBufferBuilder builder, uint attendGroupId) { builder.AddUint(1, attendGroupId, 0); }
  public static void AddGetReward(FlatBufferBuilder builder, bool getReward) { builder.AddBool(2, getReward, false); }
  public static Offset<ReqGetAttendReward> EndReqGetAttendReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetAttendReward>(o);
  }
};

public struct ResGetAttendReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetAttendReward GetRootAsResGetAttendReward(ByteBuffer _bb) { return GetRootAsResGetAttendReward(_bb, new ResGetAttendReward()); }
  public static ResGetAttendReward GetRootAsResGetAttendReward(ByteBuffer _bb, ResGetAttendReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetAttendReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountAttendInfo? Info { get { int o = __p.__offset(4); return o != 0 ? (AccountAttendInfo?)(new AccountAttendInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ulong AttendRewardDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsSendReward { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ResGetAttendReward> CreateResGetAttendReward(FlatBufferBuilder builder,
      Offset<AccountAttendInfo> infoOffset = default(Offset<AccountAttendInfo>),
      ulong attend_reward_dt = 0,
      bool is_send_reward = false) {
    builder.StartObject(3);
    ResGetAttendReward.AddAttendRewardDt(builder, attend_reward_dt);
    ResGetAttendReward.AddInfo(builder, infoOffset);
    ResGetAttendReward.AddIsSendReward(builder, is_send_reward);
    return ResGetAttendReward.EndResGetAttendReward(builder);
  }

  public static void StartResGetAttendReward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddInfo(FlatBufferBuilder builder, Offset<AccountAttendInfo> infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static void AddAttendRewardDt(FlatBufferBuilder builder, ulong attendRewardDt) { builder.AddUlong(1, attendRewardDt, 0); }
  public static void AddIsSendReward(FlatBufferBuilder builder, bool isSendReward) { builder.AddBool(2, isSendReward, false); }
  public static Offset<ResGetAttendReward> EndResGetAttendReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetAttendReward>(o);
  }
};

public struct ReqDailyAttendEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqDailyAttendEvent GetRootAsReqDailyAttendEvent(ByteBuffer _bb) { return GetRootAsReqDailyAttendEvent(_bb, new ReqDailyAttendEvent()); }
  public static ReqDailyAttendEvent GetRootAsReqDailyAttendEvent(ByteBuffer _bb, ReqDailyAttendEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqDailyAttendEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ATTEND_TYPE AttendType { get { int o = __p.__offset(4); return o != 0 ? (E_ATTEND_TYPE)__p.bb.Get(o + __p.bb_pos) : E_ATTEND_TYPE.ATTEND; } }
  public uint AttendGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqDailyAttendEvent> CreateReqDailyAttendEvent(FlatBufferBuilder builder,
      E_ATTEND_TYPE attend_type = E_ATTEND_TYPE.ATTEND,
      uint attend_group_id = 0) {
    builder.StartObject(2);
    ReqDailyAttendEvent.AddAttendGroupId(builder, attend_group_id);
    ReqDailyAttendEvent.AddAttendType(builder, attend_type);
    return ReqDailyAttendEvent.EndReqDailyAttendEvent(builder);
  }

  public static void StartReqDailyAttendEvent(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAttendType(FlatBufferBuilder builder, E_ATTEND_TYPE attendType) { builder.AddByte(0, (byte)attendType, 0); }
  public static void AddAttendGroupId(FlatBufferBuilder builder, uint attendGroupId) { builder.AddUint(1, attendGroupId, 0); }
  public static Offset<ReqDailyAttendEvent> EndReqDailyAttendEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqDailyAttendEvent>(o);
  }
};

public struct ResDailyAttendEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResDailyAttendEvent GetRootAsResDailyAttendEvent(ByteBuffer _bb) { return GetRootAsResDailyAttendEvent(_bb, new ResDailyAttendEvent()); }
  public static ResDailyAttendEvent GetRootAsResDailyAttendEvent(ByteBuffer _bb, ResDailyAttendEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResDailyAttendEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ATTEND_TYPE AttendType { get { int o = __p.__offset(4); return o != 0 ? (E_ATTEND_TYPE)__p.bb.Get(o + __p.bb_pos) : E_ATTEND_TYPE.ATTEND; } }
  public uint AttendGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort AttendRewardSeq { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort AttendContinuityRewardSeq { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong AttendRewardDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(14); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(16); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(18); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResDailyAttendEvent> CreateResDailyAttendEvent(FlatBufferBuilder builder,
      E_ATTEND_TYPE attend_type = E_ATTEND_TYPE.ATTEND,
      uint attend_group_id = 0,
      ushort attend_reward_seq = 0,
      ushort attend_continuity_reward_seq = 0,
      ulong attend_reward_dt = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(8);
    ResDailyAttendEvent.AddAttendRewardDt(builder, attend_reward_dt);
    ResDailyAttendEvent.AddResultStackItems(builder, result_stack_itemsOffset);
    ResDailyAttendEvent.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResDailyAttendEvent.AddGetItems(builder, get_itemsOffset);
    ResDailyAttendEvent.AddAttendGroupId(builder, attend_group_id);
    ResDailyAttendEvent.AddAttendContinuityRewardSeq(builder, attend_continuity_reward_seq);
    ResDailyAttendEvent.AddAttendRewardSeq(builder, attend_reward_seq);
    ResDailyAttendEvent.AddAttendType(builder, attend_type);
    return ResDailyAttendEvent.EndResDailyAttendEvent(builder);
  }

  public static void StartResDailyAttendEvent(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddAttendType(FlatBufferBuilder builder, E_ATTEND_TYPE attendType) { builder.AddByte(0, (byte)attendType, 0); }
  public static void AddAttendGroupId(FlatBufferBuilder builder, uint attendGroupId) { builder.AddUint(1, attendGroupId, 0); }
  public static void AddAttendRewardSeq(FlatBufferBuilder builder, ushort attendRewardSeq) { builder.AddUshort(2, attendRewardSeq, 0); }
  public static void AddAttendContinuityRewardSeq(FlatBufferBuilder builder, ushort attendContinuityRewardSeq) { builder.AddUshort(3, attendContinuityRewardSeq, 0); }
  public static void AddAttendRewardDt(FlatBufferBuilder builder, ulong attendRewardDt) { builder.AddUlong(4, attendRewardDt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(5, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(6, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(7, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResDailyAttendEvent> EndResDailyAttendEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResDailyAttendEvent>(o);
  }
};

public struct ReqCheckDailyResetEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCheckDailyResetEvent GetRootAsReqCheckDailyResetEvent(ByteBuffer _bb) { return GetRootAsReqCheckDailyResetEvent(_bb, new ReqCheckDailyResetEvent()); }
  public static ReqCheckDailyResetEvent GetRootAsReqCheckDailyResetEvent(ByteBuffer _bb, ReqCheckDailyResetEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCheckDailyResetEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqCheckDailyResetEvent(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqCheckDailyResetEvent> EndReqCheckDailyResetEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCheckDailyResetEvent>(o);
  }
};

public struct ResCheckDailyResetEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCheckDailyResetEvent GetRootAsResCheckDailyResetEvent(ByteBuffer _bb) { return GetRootAsResCheckDailyResetEvent(_bb, new ResCheckDailyResetEvent()); }
  public static ResCheckDailyResetEvent GetRootAsResCheckDailyResetEvent(ByteBuffer _bb, ResCheckDailyResetEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCheckDailyResetEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DailyResetDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint NormalMsgSendCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GuildMsgSendCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint DailyQuestFastClearCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GuildDonateCnt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ColosseumRewardCnt { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ScenarioDungeonCnt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte CharInfoReqNum(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int CharInfoReqNumLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharInfoReqNumBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetCharInfoReqNumBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetCharInfoReqNumArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<ResCheckDailyResetEvent> CreateResCheckDailyResetEvent(FlatBufferBuilder builder,
      ulong daily_reset_dt = 0,
      uint normal_msg_send_cnt = 0,
      uint guildMsg_send_cnt = 0,
      uint daily_quest_fast_clear_cnt = 0,
      uint guild_donate_cnt = 0,
      uint colosseum_reward_cnt = 0,
      uint scenario_dungeon_cnt = 0,
      VectorOffset char_info_req_numOffset = default(VectorOffset)) {
    builder.StartObject(8);
    ResCheckDailyResetEvent.AddDailyResetDt(builder, daily_reset_dt);
    ResCheckDailyResetEvent.AddCharInfoReqNum(builder, char_info_req_numOffset);
    ResCheckDailyResetEvent.AddScenarioDungeonCnt(builder, scenario_dungeon_cnt);
    ResCheckDailyResetEvent.AddColosseumRewardCnt(builder, colosseum_reward_cnt);
    ResCheckDailyResetEvent.AddGuildDonateCnt(builder, guild_donate_cnt);
    ResCheckDailyResetEvent.AddDailyQuestFastClearCnt(builder, daily_quest_fast_clear_cnt);
    ResCheckDailyResetEvent.AddGuildMsgSendCnt(builder, guildMsg_send_cnt);
    ResCheckDailyResetEvent.AddNormalMsgSendCnt(builder, normal_msg_send_cnt);
    return ResCheckDailyResetEvent.EndResCheckDailyResetEvent(builder);
  }

  public static void StartResCheckDailyResetEvent(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddDailyResetDt(FlatBufferBuilder builder, ulong dailyResetDt) { builder.AddUlong(0, dailyResetDt, 0); }
  public static void AddNormalMsgSendCnt(FlatBufferBuilder builder, uint normalMsgSendCnt) { builder.AddUint(1, normalMsgSendCnt, 0); }
  public static void AddGuildMsgSendCnt(FlatBufferBuilder builder, uint guildMsgSendCnt) { builder.AddUint(2, guildMsgSendCnt, 0); }
  public static void AddDailyQuestFastClearCnt(FlatBufferBuilder builder, uint dailyQuestFastClearCnt) { builder.AddUint(3, dailyQuestFastClearCnt, 0); }
  public static void AddGuildDonateCnt(FlatBufferBuilder builder, uint guildDonateCnt) { builder.AddUint(4, guildDonateCnt, 0); }
  public static void AddColosseumRewardCnt(FlatBufferBuilder builder, uint colosseumRewardCnt) { builder.AddUint(5, colosseumRewardCnt, 0); }
  public static void AddScenarioDungeonCnt(FlatBufferBuilder builder, uint scenarioDungeonCnt) { builder.AddUint(6, scenarioDungeonCnt, 0); }
  public static void AddCharInfoReqNum(FlatBufferBuilder builder, VectorOffset charInfoReqNumOffset) { builder.AddOffset(7, charInfoReqNumOffset.Value, 0); }
  public static VectorOffset CreateCharInfoReqNumVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCharInfoReqNumVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartCharInfoReqNumVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ResCheckDailyResetEvent> EndResCheckDailyResetEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCheckDailyResetEvent>(o);
  }
};

public struct ReqCheckLoginEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCheckLoginEvent GetRootAsReqCheckLoginEvent(ByteBuffer _bb) { return GetRootAsReqCheckLoginEvent(_bb, new ReqCheckLoginEvent()); }
  public static ReqCheckLoginEvent GetRootAsReqCheckLoginEvent(ByteBuffer _bb, ReqCheckLoginEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCheckLoginEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqCheckLoginEvent(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqCheckLoginEvent> EndReqCheckLoginEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCheckLoginEvent>(o);
  }
};

public struct ResCheckLoginEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCheckLoginEvent GetRootAsResCheckLoginEvent(ByteBuffer _bb) { return GetRootAsResCheckLoginEvent(_bb, new ResCheckLoginEvent()); }
  public static ResCheckLoginEvent GetRootAsResCheckLoginEvent(ByteBuffer _bb, ResCheckLoginEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCheckLoginEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong LoginEventDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsHaveMail { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string PushTitle { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPushTitleBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetPushTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetPushTitleArray() { return __p.__vector_as_array<byte>(8); }
  public GetItemInfo? RewardItems(int j) { int o = __p.__offset(10); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RewardItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string BgUrl { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgUrlBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetBgUrlBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetBgUrlArray() { return __p.__vector_as_array<byte>(12); }
  public string BgHash { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBgHashBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetBgHashBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetBgHashArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<ResCheckLoginEvent> CreateResCheckLoginEvent(FlatBufferBuilder builder,
      ulong login_event_dt = 0,
      bool is_have_mail = false,
      StringOffset push_titleOffset = default(StringOffset),
      VectorOffset reward_itemsOffset = default(VectorOffset),
      StringOffset bg_urlOffset = default(StringOffset),
      StringOffset bg_hashOffset = default(StringOffset)) {
    builder.StartObject(6);
    ResCheckLoginEvent.AddLoginEventDt(builder, login_event_dt);
    ResCheckLoginEvent.AddBgHash(builder, bg_hashOffset);
    ResCheckLoginEvent.AddBgUrl(builder, bg_urlOffset);
    ResCheckLoginEvent.AddRewardItems(builder, reward_itemsOffset);
    ResCheckLoginEvent.AddPushTitle(builder, push_titleOffset);
    ResCheckLoginEvent.AddIsHaveMail(builder, is_have_mail);
    return ResCheckLoginEvent.EndResCheckLoginEvent(builder);
  }

  public static void StartResCheckLoginEvent(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddLoginEventDt(FlatBufferBuilder builder, ulong loginEventDt) { builder.AddUlong(0, loginEventDt, 0); }
  public static void AddIsHaveMail(FlatBufferBuilder builder, bool isHaveMail) { builder.AddBool(1, isHaveMail, false); }
  public static void AddPushTitle(FlatBufferBuilder builder, StringOffset pushTitleOffset) { builder.AddOffset(2, pushTitleOffset.Value, 0); }
  public static void AddRewardItems(FlatBufferBuilder builder, VectorOffset rewardItemsOffset) { builder.AddOffset(3, rewardItemsOffset.Value, 0); }
  public static VectorOffset CreateRewardItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRewardItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRewardItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBgUrl(FlatBufferBuilder builder, StringOffset bgUrlOffset) { builder.AddOffset(4, bgUrlOffset.Value, 0); }
  public static void AddBgHash(FlatBufferBuilder builder, StringOffset bgHashOffset) { builder.AddOffset(5, bgHashOffset.Value, 0); }
  public static Offset<ResCheckLoginEvent> EndResCheckLoginEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCheckLoginEvent>(o);
  }
};

public struct ReqGetServerEventList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetServerEventList GetRootAsReqGetServerEventList(ByteBuffer _bb) { return GetRootAsReqGetServerEventList(_bb, new ReqGetServerEventList()); }
  public static ReqGetServerEventList GetRootAsReqGetServerEventList(ByteBuffer _bb, ReqGetServerEventList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetServerEventList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ServerEventCategory Categorys(int j) { int o = __p.__offset(4); return o != 0 ? (E_ServerEventCategory)__p.bb.Get(__p.__vector(o) + j * 1) : (E_ServerEventCategory)0; }
  public int CategorysLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCategorysBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetCategorysBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public E_ServerEventCategory[] GetCategorysArray() { return __p.__vector_as_array<E_ServerEventCategory>(4); }
  public E_ServerEventSubCategory SubCategorys(int j) { int o = __p.__offset(6); return o != 0 ? (E_ServerEventSubCategory)__p.bb.Get(__p.__vector(o) + j * 1) : (E_ServerEventSubCategory)0; }
  public int SubCategorysLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSubCategorysBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetSubCategorysBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public E_ServerEventSubCategory[] GetSubCategorysArray() { return __p.__vector_as_array<E_ServerEventSubCategory>(6); }

  public static Offset<ReqGetServerEventList> CreateReqGetServerEventList(FlatBufferBuilder builder,
      VectorOffset categorysOffset = default(VectorOffset),
      VectorOffset sub_categorysOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqGetServerEventList.AddSubCategorys(builder, sub_categorysOffset);
    ReqGetServerEventList.AddCategorys(builder, categorysOffset);
    return ReqGetServerEventList.EndReqGetServerEventList(builder);
  }

  public static void StartReqGetServerEventList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCategorys(FlatBufferBuilder builder, VectorOffset categorysOffset) { builder.AddOffset(0, categorysOffset.Value, 0); }
  public static VectorOffset CreateCategorysVector(FlatBufferBuilder builder, E_ServerEventCategory[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCategorysVectorBlock(FlatBufferBuilder builder, E_ServerEventCategory[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartCategorysVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddSubCategorys(FlatBufferBuilder builder, VectorOffset subCategorysOffset) { builder.AddOffset(1, subCategorysOffset.Value, 0); }
  public static VectorOffset CreateSubCategorysVector(FlatBufferBuilder builder, E_ServerEventSubCategory[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSubCategorysVectorBlock(FlatBufferBuilder builder, E_ServerEventSubCategory[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartSubCategorysVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ReqGetServerEventList> EndReqGetServerEventList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetServerEventList>(o);
  }
};

public struct ResGetServerEventList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetServerEventList GetRootAsResGetServerEventList(ByteBuffer _bb) { return GetRootAsResGetServerEventList(_bb, new ResGetServerEventList()); }
  public static ResGetServerEventList GetRootAsResGetServerEventList(ByteBuffer _bb, ResGetServerEventList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetServerEventList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ServerEventInfo? ServerEvents(int j) { int o = __p.__offset(4); return o != 0 ? (ServerEventInfo?)(new ServerEventInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ServerEventsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetServerEventList> CreateResGetServerEventList(FlatBufferBuilder builder,
      VectorOffset server_eventsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetServerEventList.AddServerEvents(builder, server_eventsOffset);
    return ResGetServerEventList.EndResGetServerEventList(builder);
  }

  public static void StartResGetServerEventList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddServerEvents(FlatBufferBuilder builder, VectorOffset serverEventsOffset) { builder.AddOffset(0, serverEventsOffset.Value, 0); }
  public static VectorOffset CreateServerEventsVector(FlatBufferBuilder builder, Offset<ServerEventInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateServerEventsVectorBlock(FlatBufferBuilder builder, Offset<ServerEventInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartServerEventsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetServerEventList> EndResGetServerEventList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetServerEventList>(o);
  }
};

public struct ReqGameSurvey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGameSurvey GetRootAsReqGameSurvey(ByteBuffer _bb) { return GetRootAsReqGameSurvey(_bb, new ReqGameSurvey()); }
  public static ReqGameSurvey GetRootAsReqGameSurvey(ByteBuffer _bb, ReqGameSurvey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGameSurvey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte IsAnswer { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public string AnswerJson { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAnswerJsonBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetAnswerJsonBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetAnswerJsonArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqGameSurvey> CreateReqGameSurvey(FlatBufferBuilder builder,
      byte is_answer = 0,
      StringOffset answer_jsonOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqGameSurvey.AddAnswerJson(builder, answer_jsonOffset);
    ReqGameSurvey.AddIsAnswer(builder, is_answer);
    return ReqGameSurvey.EndReqGameSurvey(builder);
  }

  public static void StartReqGameSurvey(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIsAnswer(FlatBufferBuilder builder, byte isAnswer) { builder.AddByte(0, isAnswer, 0); }
  public static void AddAnswerJson(FlatBufferBuilder builder, StringOffset answerJsonOffset) { builder.AddOffset(1, answerJsonOffset.Value, 0); }
  public static Offset<ReqGameSurvey> EndReqGameSurvey(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGameSurvey>(o);
  }
};

public struct ResGameSurvey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGameSurvey GetRootAsResGameSurvey(ByteBuffer _bb) { return GetRootAsResGameSurvey(_bb, new ResGameSurvey()); }
  public static ResGameSurvey GetRootAsResGameSurvey(ByteBuffer _bb, ResGameSurvey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGameSurvey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AccountOptionBit { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public GetItemInfo? GetItem { get { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultItemStack { get { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGameSurvey> CreateResGameSurvey(FlatBufferBuilder builder,
      ulong account_option_bit = 0,
      Offset<GetItemInfo> get_itemOffset = default(Offset<GetItemInfo>),
      Offset<ItemStack> result_item_stackOffset = default(Offset<ItemStack>)) {
    builder.StartObject(3);
    ResGameSurvey.AddAccountOptionBit(builder, account_option_bit);
    ResGameSurvey.AddResultItemStack(builder, result_item_stackOffset);
    ResGameSurvey.AddGetItem(builder, get_itemOffset);
    return ResGameSurvey.EndResGameSurvey(builder);
  }

  public static void StartResGameSurvey(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAccountOptionBit(FlatBufferBuilder builder, ulong accountOptionBit) { builder.AddUlong(0, accountOptionBit, 0); }
  public static void AddGetItem(FlatBufferBuilder builder, Offset<GetItemInfo> getItemOffset) { builder.AddOffset(1, getItemOffset.Value, 0); }
  public static void AddResultItemStack(FlatBufferBuilder builder, Offset<ItemStack> resultItemStackOffset) { builder.AddOffset(2, resultItemStackOffset.Value, 0); }
  public static Offset<ResGameSurvey> EndResGameSurvey(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGameSurvey>(o);
  }
};

public struct ReqExchangeSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeSell GetRootAsReqExchangeSell(ByteBuffer _bb) { return GetRootAsReqExchangeSell(_bb, new ReqExchangeSell()); }
  public static ReqExchangeSell GetRootAsReqExchangeSell(ByteBuffer _bb, ReqExchangeSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SellItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SellItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemTotalPrice { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong TexItemId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqExchangeSell> CreateReqExchangeSell(FlatBufferBuilder builder,
      ulong sell_item_id = 0,
      uint sell_item_tid = 0,
      uint sell_item_cnt = 0,
      uint sell_item_total_price = 0,
      ulong tex_item_id = 0) {
    builder.StartObject(5);
    ReqExchangeSell.AddTexItemId(builder, tex_item_id);
    ReqExchangeSell.AddSellItemId(builder, sell_item_id);
    ReqExchangeSell.AddSellItemTotalPrice(builder, sell_item_total_price);
    ReqExchangeSell.AddSellItemCnt(builder, sell_item_cnt);
    ReqExchangeSell.AddSellItemTid(builder, sell_item_tid);
    return ReqExchangeSell.EndReqExchangeSell(builder);
  }

  public static void StartReqExchangeSell(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddSellItemId(FlatBufferBuilder builder, ulong sellItemId) { builder.AddUlong(0, sellItemId, 0); }
  public static void AddSellItemTid(FlatBufferBuilder builder, uint sellItemTid) { builder.AddUint(1, sellItemTid, 0); }
  public static void AddSellItemCnt(FlatBufferBuilder builder, uint sellItemCnt) { builder.AddUint(2, sellItemCnt, 0); }
  public static void AddSellItemTotalPrice(FlatBufferBuilder builder, uint sellItemTotalPrice) { builder.AddUint(3, sellItemTotalPrice, 0); }
  public static void AddTexItemId(FlatBufferBuilder builder, ulong texItemId) { builder.AddUlong(4, texItemId, 0); }
  public static Offset<ReqExchangeSell> EndReqExchangeSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeSell>(o);
  }
};

public struct ResExchangeSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeSell GetRootAsResExchangeSell(ByteBuffer _bb) { return GetRootAsResExchangeSell(_bb, new ResExchangeSell()); }
  public static ResExchangeSell GetRootAsResExchangeSell(ByteBuffer _bb, ResExchangeSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SellItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SellItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResExchangeSell> CreateResExchangeSell(FlatBufferBuilder builder,
      ulong sell_item_id = 0,
      uint sell_item_tid = 0,
      uint sell_item_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(5);
    ResExchangeSell.AddSellItemId(builder, sell_item_id);
    ResExchangeSell.AddResultStackItem(builder, result_stack_itemOffset);
    ResExchangeSell.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResExchangeSell.AddSellItemCnt(builder, sell_item_cnt);
    ResExchangeSell.AddSellItemTid(builder, sell_item_tid);
    return ResExchangeSell.EndResExchangeSell(builder);
  }

  public static void StartResExchangeSell(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddSellItemId(FlatBufferBuilder builder, ulong sellItemId) { builder.AddUlong(0, sellItemId, 0); }
  public static void AddSellItemTid(FlatBufferBuilder builder, uint sellItemTid) { builder.AddUint(1, sellItemTid, 0); }
  public static void AddSellItemCnt(FlatBufferBuilder builder, uint sellItemCnt) { builder.AddUint(2, sellItemCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(3, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(4, resultStackItemOffset.Value, 0); }
  public static Offset<ResExchangeSell> EndResExchangeSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeSell>(o);
  }
};

public struct ReqExchangeSearchPrice : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeSearchPrice GetRootAsReqExchangeSearchPrice(ByteBuffer _bb) { return GetRootAsReqExchangeSearchPrice(_bb, new ReqExchangeSearchPrice()); }
  public static ReqExchangeSearchPrice GetRootAsReqExchangeSearchPrice(ByteBuffer _bb, ReqExchangeSearchPrice obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeSearchPrice __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TradeTapType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TradeSubTapType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemUseCharType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PageIndex { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemGroupId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeSearchPrice> CreateReqExchangeSearchPrice(FlatBufferBuilder builder,
      uint trade_tap_type = 0,
      uint trade_sub_tap_type = 0,
      uint item_use_char_type = 0,
      uint page_index = 0,
      uint item_group_id = 0) {
    builder.StartObject(5);
    ReqExchangeSearchPrice.AddItemGroupId(builder, item_group_id);
    ReqExchangeSearchPrice.AddPageIndex(builder, page_index);
    ReqExchangeSearchPrice.AddItemUseCharType(builder, item_use_char_type);
    ReqExchangeSearchPrice.AddTradeSubTapType(builder, trade_sub_tap_type);
    ReqExchangeSearchPrice.AddTradeTapType(builder, trade_tap_type);
    return ReqExchangeSearchPrice.EndReqExchangeSearchPrice(builder);
  }

  public static void StartReqExchangeSearchPrice(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddTradeTapType(FlatBufferBuilder builder, uint tradeTapType) { builder.AddUint(0, tradeTapType, 0); }
  public static void AddTradeSubTapType(FlatBufferBuilder builder, uint tradeSubTapType) { builder.AddUint(1, tradeSubTapType, 0); }
  public static void AddItemUseCharType(FlatBufferBuilder builder, uint itemUseCharType) { builder.AddUint(2, itemUseCharType, 0); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(3, pageIndex, 0); }
  public static void AddItemGroupId(FlatBufferBuilder builder, uint itemGroupId) { builder.AddUint(4, itemGroupId, 0); }
  public static Offset<ReqExchangeSearchPrice> EndReqExchangeSearchPrice(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeSearchPrice>(o);
  }
};

public struct ResExchangeSearchPrice : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeSearchPrice GetRootAsResExchangeSearchPrice(ByteBuffer _bb) { return GetRootAsResExchangeSearchPrice(_bb, new ResExchangeSearchPrice()); }
  public static ResExchangeSearchPrice GetRootAsResExchangeSearchPrice(ByteBuffer _bb, ResExchangeSearchPrice obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeSearchPrice __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsNextPage { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ExchangeItemPrice? SearchPrices(int j) { int o = __p.__offset(8); return o != 0 ? (ExchangeItemPrice?)(new ExchangeItemPrice()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SearchPricesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResExchangeSearchPrice> CreateResExchangeSearchPrice(FlatBufferBuilder builder,
      uint page_index = 0,
      bool is_next_page = false,
      VectorOffset search_pricesOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResExchangeSearchPrice.AddSearchPrices(builder, search_pricesOffset);
    ResExchangeSearchPrice.AddPageIndex(builder, page_index);
    ResExchangeSearchPrice.AddIsNextPage(builder, is_next_page);
    return ResExchangeSearchPrice.EndResExchangeSearchPrice(builder);
  }

  public static void StartResExchangeSearchPrice(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddIsNextPage(FlatBufferBuilder builder, bool isNextPage) { builder.AddBool(1, isNextPage, false); }
  public static void AddSearchPrices(FlatBufferBuilder builder, VectorOffset searchPricesOffset) { builder.AddOffset(2, searchPricesOffset.Value, 0); }
  public static VectorOffset CreateSearchPricesVector(FlatBufferBuilder builder, Offset<ExchangeItemPrice>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSearchPricesVectorBlock(FlatBufferBuilder builder, Offset<ExchangeItemPrice>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSearchPricesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResExchangeSearchPrice> EndResExchangeSearchPrice(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeSearchPrice>(o);
  }
};

public struct ReqExchangeSearchItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeSearchItem GetRootAsReqExchangeSearchItem(ByteBuffer _bb) { return GetRootAsReqExchangeSearchItem(_bb, new ReqExchangeSearchItem()); }
  public static ReqExchangeSearchItem GetRootAsReqExchangeSearchItem(ByteBuffer _bb, ReqExchangeSearchItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeSearchItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTids(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ItemTidsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemTidsBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetItemTidsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetItemTidsArray() { return __p.__vector_as_array<uint>(6); }
  public E_ExchangeSortType SortType { get { int o = __p.__offset(8); return o != 0 ? (E_ExchangeSortType)__p.bb.Get(o + __p.bb_pos) : E_ExchangeSortType.TotalPriceAsc; } }
  public uint ItemOptionCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeSearchItem> CreateReqExchangeSearchItem(FlatBufferBuilder builder,
      uint page_index = 0,
      VectorOffset item_tidsOffset = default(VectorOffset),
      E_ExchangeSortType sort_type = E_ExchangeSortType.TotalPriceAsc,
      uint item_option_cnt = 0) {
    builder.StartObject(4);
    ReqExchangeSearchItem.AddItemOptionCnt(builder, item_option_cnt);
    ReqExchangeSearchItem.AddItemTids(builder, item_tidsOffset);
    ReqExchangeSearchItem.AddPageIndex(builder, page_index);
    ReqExchangeSearchItem.AddSortType(builder, sort_type);
    return ReqExchangeSearchItem.EndReqExchangeSearchItem(builder);
  }

  public static void StartReqExchangeSearchItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddItemTids(FlatBufferBuilder builder, VectorOffset itemTidsOffset) { builder.AddOffset(1, itemTidsOffset.Value, 0); }
  public static VectorOffset CreateItemTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSortType(FlatBufferBuilder builder, E_ExchangeSortType sortType) { builder.AddByte(2, (byte)sortType, 0); }
  public static void AddItemOptionCnt(FlatBufferBuilder builder, uint itemOptionCnt) { builder.AddUint(3, itemOptionCnt, 0); }
  public static Offset<ReqExchangeSearchItem> EndReqExchangeSearchItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeSearchItem>(o);
  }
};

public struct ResExchangeSearchItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeSearchItem GetRootAsResExchangeSearchItem(ByteBuffer _bb) { return GetRootAsResExchangeSearchItem(_bb, new ResExchangeSearchItem()); }
  public static ResExchangeSearchItem GetRootAsResExchangeSearchItem(ByteBuffer _bb, ResExchangeSearchItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeSearchItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsNextPage { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public E_ExchangeSortType SortType { get { int o = __p.__offset(8); return o != 0 ? (E_ExchangeSortType)__p.bb.Get(o + __p.bb_pos) : E_ExchangeSortType.TotalPriceAsc; } }
  public ExchangeItem? SearchItems(int j) { int o = __p.__offset(10); return o != 0 ? (ExchangeItem?)(new ExchangeItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SearchItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResExchangeSearchItem> CreateResExchangeSearchItem(FlatBufferBuilder builder,
      uint page_index = 0,
      bool is_next_page = false,
      E_ExchangeSortType sort_type = E_ExchangeSortType.TotalPriceAsc,
      VectorOffset search_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResExchangeSearchItem.AddSearchItems(builder, search_itemsOffset);
    ResExchangeSearchItem.AddPageIndex(builder, page_index);
    ResExchangeSearchItem.AddSortType(builder, sort_type);
    ResExchangeSearchItem.AddIsNextPage(builder, is_next_page);
    return ResExchangeSearchItem.EndResExchangeSearchItem(builder);
  }

  public static void StartResExchangeSearchItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddIsNextPage(FlatBufferBuilder builder, bool isNextPage) { builder.AddBool(1, isNextPage, false); }
  public static void AddSortType(FlatBufferBuilder builder, E_ExchangeSortType sortType) { builder.AddByte(2, (byte)sortType, 0); }
  public static void AddSearchItems(FlatBufferBuilder builder, VectorOffset searchItemsOffset) { builder.AddOffset(3, searchItemsOffset.Value, 0); }
  public static VectorOffset CreateSearchItemsVector(FlatBufferBuilder builder, Offset<ExchangeItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSearchItemsVectorBlock(FlatBufferBuilder builder, Offset<ExchangeItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSearchItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResExchangeSearchItem> EndResExchangeSearchItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeSearchItem>(o);
  }
};

public struct ReqExchangeBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeBuy GetRootAsReqExchangeBuy(ByteBuffer _bb) { return GetRootAsReqExchangeBuy(_bb, new ReqExchangeBuy()); }
  public static ReqExchangeBuy GetRootAsReqExchangeBuy(ByteBuffer _bb, ReqExchangeBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong ExchangeId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BuyItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint BuyItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeBuy> CreateReqExchangeBuy(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong exchange_id = 0,
      ulong buy_item_id = 0,
      uint buy_item_tid = 0) {
    builder.StartObject(4);
    ReqExchangeBuy.AddBuyItemId(builder, buy_item_id);
    ReqExchangeBuy.AddExchangeId(builder, exchange_id);
    ReqExchangeBuy.AddBuyItemTid(builder, buy_item_tid);
    ReqExchangeBuy.AddMarketType(builder, market_type);
    return ReqExchangeBuy.EndReqExchangeBuy(builder);
  }

  public static void StartReqExchangeBuy(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddExchangeId(FlatBufferBuilder builder, ulong exchangeId) { builder.AddUlong(1, exchangeId, 0); }
  public static void AddBuyItemId(FlatBufferBuilder builder, ulong buyItemId) { builder.AddUlong(2, buyItemId, 0); }
  public static void AddBuyItemTid(FlatBufferBuilder builder, uint buyItemTid) { builder.AddUint(3, buyItemTid, 0); }
  public static Offset<ReqExchangeBuy> EndReqExchangeBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeBuy>(o);
  }
};

public struct ResExchangeBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeBuy GetRootAsResExchangeBuy(ByteBuffer _bb) { return GetRootAsResExchangeBuy(_bb, new ResExchangeBuy()); }
  public static ResExchangeBuy GetRootAsResExchangeBuy(ByteBuffer _bb, ResExchangeBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint BuyItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BuyItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ItemEquipment? ResultEquipItem { get { int o = __p.__offset(10); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResExchangeBuy> CreateResExchangeBuy(FlatBufferBuilder builder,
      uint buy_item_tid = 0,
      uint buy_item_cnt = 0,
      int result_cash_coin_balance = 0,
      Offset<ItemEquipment> result_equip_itemOffset = default(Offset<ItemEquipment>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(5);
    ResExchangeBuy.AddResultStackItem(builder, result_stack_itemOffset);
    ResExchangeBuy.AddResultEquipItem(builder, result_equip_itemOffset);
    ResExchangeBuy.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResExchangeBuy.AddBuyItemCnt(builder, buy_item_cnt);
    ResExchangeBuy.AddBuyItemTid(builder, buy_item_tid);
    return ResExchangeBuy.EndResExchangeBuy(builder);
  }

  public static void StartResExchangeBuy(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddBuyItemTid(FlatBufferBuilder builder, uint buyItemTid) { builder.AddUint(0, buyItemTid, 0); }
  public static void AddBuyItemCnt(FlatBufferBuilder builder, uint buyItemCnt) { builder.AddUint(1, buyItemCnt, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(2, resultCashCoinBalance, 0); }
  public static void AddResultEquipItem(FlatBufferBuilder builder, Offset<ItemEquipment> resultEquipItemOffset) { builder.AddOffset(3, resultEquipItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(4, resultStackItemOffset.Value, 0); }
  public static Offset<ResExchangeBuy> EndResExchangeBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeBuy>(o);
  }
};

public struct ReqExchangeWithDraw : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeWithDraw GetRootAsReqExchangeWithDraw(ByteBuffer _bb) { return GetRootAsReqExchangeWithDraw(_bb, new ReqExchangeWithDraw()); }
  public static ReqExchangeWithDraw GetRootAsReqExchangeWithDraw(ByteBuffer _bb, ReqExchangeWithDraw obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeWithDraw __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ExchangeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WithdrawItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint WithdrawItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeWithDraw> CreateReqExchangeWithDraw(FlatBufferBuilder builder,
      ulong exchange_id = 0,
      ulong withdraw_item_id = 0,
      uint withdraw_item_tid = 0) {
    builder.StartObject(3);
    ReqExchangeWithDraw.AddWithdrawItemId(builder, withdraw_item_id);
    ReqExchangeWithDraw.AddExchangeId(builder, exchange_id);
    ReqExchangeWithDraw.AddWithdrawItemTid(builder, withdraw_item_tid);
    return ReqExchangeWithDraw.EndReqExchangeWithDraw(builder);
  }

  public static void StartReqExchangeWithDraw(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddExchangeId(FlatBufferBuilder builder, ulong exchangeId) { builder.AddUlong(0, exchangeId, 0); }
  public static void AddWithdrawItemId(FlatBufferBuilder builder, ulong withdrawItemId) { builder.AddUlong(1, withdrawItemId, 0); }
  public static void AddWithdrawItemTid(FlatBufferBuilder builder, uint withdrawItemTid) { builder.AddUint(2, withdrawItemTid, 0); }
  public static Offset<ReqExchangeWithDraw> EndReqExchangeWithDraw(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeWithDraw>(o);
  }
};

public struct ResExchangeWithDraw : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeWithDraw GetRootAsResExchangeWithDraw(ByteBuffer _bb) { return GetRootAsResExchangeWithDraw(_bb, new ResExchangeWithDraw()); }
  public static ResExchangeWithDraw GetRootAsResExchangeWithDraw(ByteBuffer _bb, ResExchangeWithDraw obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeWithDraw __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint WithdrawItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint WithdrawItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemEquipment? ResultEquipItem { get { int o = __p.__offset(8); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResExchangeWithDraw> CreateResExchangeWithDraw(FlatBufferBuilder builder,
      uint withdraw_item_tid = 0,
      uint withdraw_item_cnt = 0,
      Offset<ItemEquipment> result_equip_itemOffset = default(Offset<ItemEquipment>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(4);
    ResExchangeWithDraw.AddResultStackItem(builder, result_stack_itemOffset);
    ResExchangeWithDraw.AddResultEquipItem(builder, result_equip_itemOffset);
    ResExchangeWithDraw.AddWithdrawItemCnt(builder, withdraw_item_cnt);
    ResExchangeWithDraw.AddWithdrawItemTid(builder, withdraw_item_tid);
    return ResExchangeWithDraw.EndResExchangeWithDraw(builder);
  }

  public static void StartResExchangeWithDraw(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddWithdrawItemTid(FlatBufferBuilder builder, uint withdrawItemTid) { builder.AddUint(0, withdrawItemTid, 0); }
  public static void AddWithdrawItemCnt(FlatBufferBuilder builder, uint withdrawItemCnt) { builder.AddUint(1, withdrawItemCnt, 0); }
  public static void AddResultEquipItem(FlatBufferBuilder builder, Offset<ItemEquipment> resultEquipItemOffset) { builder.AddOffset(2, resultEquipItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(3, resultStackItemOffset.Value, 0); }
  public static Offset<ResExchangeWithDraw> EndResExchangeWithDraw(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeWithDraw>(o);
  }
};

public struct ReqExchangeSellList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeSellList GetRootAsReqExchangeSellList(ByteBuffer _bb) { return GetRootAsReqExchangeSellList(_bb, new ReqExchangeSellList()); }
  public static ReqExchangeSellList GetRootAsReqExchangeSellList(ByteBuffer _bb, ReqExchangeSellList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeSellList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqExchangeSellList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqExchangeSellList> EndReqExchangeSellList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeSellList>(o);
  }
};

public struct ResExchangeSellList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeSellList GetRootAsResExchangeSellList(ByteBuffer _bb) { return GetRootAsResExchangeSellList(_bb, new ResExchangeSellList()); }
  public static ResExchangeSellList GetRootAsResExchangeSellList(ByteBuffer _bb, ResExchangeSellList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeSellList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ExchangeItem? SellItems(int j) { int o = __p.__offset(4); return o != 0 ? (ExchangeItem?)(new ExchangeItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SellItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResExchangeSellList> CreateResExchangeSellList(FlatBufferBuilder builder,
      VectorOffset sell_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResExchangeSellList.AddSellItems(builder, sell_itemsOffset);
    return ResExchangeSellList.EndResExchangeSellList(builder);
  }

  public static void StartResExchangeSellList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSellItems(FlatBufferBuilder builder, VectorOffset sellItemsOffset) { builder.AddOffset(0, sellItemsOffset.Value, 0); }
  public static VectorOffset CreateSellItemsVector(FlatBufferBuilder builder, Offset<ExchangeItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSellItemsVectorBlock(FlatBufferBuilder builder, Offset<ExchangeItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSellItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResExchangeSellList> EndResExchangeSellList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeSellList>(o);
  }
};

public struct ReqExchangeSoldOutList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeSoldOutList GetRootAsReqExchangeSoldOutList(ByteBuffer _bb) { return GetRootAsReqExchangeSoldOutList(_bb, new ReqExchangeSoldOutList()); }
  public static ReqExchangeSoldOutList GetRootAsReqExchangeSoldOutList(ByteBuffer _bb, ReqExchangeSoldOutList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeSoldOutList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_ExchangeTransactionState State { get { int o = __p.__offset(4); return o != 0 ? (E_ExchangeTransactionState)__p.bb.Get(o + __p.bb_pos) : E_ExchangeTransactionState.SoldOut; } }
  public uint PageIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeSoldOutList> CreateReqExchangeSoldOutList(FlatBufferBuilder builder,
      E_ExchangeTransactionState state = E_ExchangeTransactionState.SoldOut,
      uint page_index = 0) {
    builder.StartObject(2);
    ReqExchangeSoldOutList.AddPageIndex(builder, page_index);
    ReqExchangeSoldOutList.AddState(builder, state);
    return ReqExchangeSoldOutList.EndReqExchangeSoldOutList(builder);
  }

  public static void StartReqExchangeSoldOutList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddState(FlatBufferBuilder builder, E_ExchangeTransactionState state) { builder.AddByte(0, (byte)state, 0); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(1, pageIndex, 0); }
  public static Offset<ReqExchangeSoldOutList> EndReqExchangeSoldOutList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeSoldOutList>(o);
  }
};

public struct ResExchangeSoldOutList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeSoldOutList GetRootAsResExchangeSoldOutList(ByteBuffer _bb) { return GetRootAsResExchangeSoldOutList(_bb, new ResExchangeSoldOutList()); }
  public static ResExchangeSoldOutList GetRootAsResExchangeSoldOutList(ByteBuffer _bb, ResExchangeSoldOutList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeSoldOutList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsNextPage { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ExchangeTransaction? SoldOuts(int j) { int o = __p.__offset(8); return o != 0 ? (ExchangeTransaction?)(new ExchangeTransaction()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SoldOutsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResExchangeSoldOutList> CreateResExchangeSoldOutList(FlatBufferBuilder builder,
      uint page_index = 0,
      bool is_next_page = false,
      VectorOffset sold_outsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResExchangeSoldOutList.AddSoldOuts(builder, sold_outsOffset);
    ResExchangeSoldOutList.AddPageIndex(builder, page_index);
    ResExchangeSoldOutList.AddIsNextPage(builder, is_next_page);
    return ResExchangeSoldOutList.EndResExchangeSoldOutList(builder);
  }

  public static void StartResExchangeSoldOutList(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddIsNextPage(FlatBufferBuilder builder, bool isNextPage) { builder.AddBool(1, isNextPage, false); }
  public static void AddSoldOuts(FlatBufferBuilder builder, VectorOffset soldOutsOffset) { builder.AddOffset(2, soldOutsOffset.Value, 0); }
  public static VectorOffset CreateSoldOutsVector(FlatBufferBuilder builder, Offset<ExchangeTransaction>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSoldOutsVectorBlock(FlatBufferBuilder builder, Offset<ExchangeTransaction>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSoldOutsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResExchangeSoldOutList> EndResExchangeSoldOutList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeSoldOutList>(o);
  }
};

public struct ReqExchangeTakeMoney : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeTakeMoney GetRootAsReqExchangeTakeMoney(ByteBuffer _bb) { return GetRootAsReqExchangeTakeMoney(_bb, new ReqExchangeTakeMoney()); }
  public static ReqExchangeTakeMoney GetRootAsReqExchangeTakeMoney(ByteBuffer _bb, ReqExchangeTakeMoney obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeTakeMoney __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong TransactionIds(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int TransactionIdsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTransactionIdsBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetTransactionIdsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetTransactionIdsArray() { return __p.__vector_as_array<ulong>(6); }

  public static Offset<ReqExchangeTakeMoney> CreateReqExchangeTakeMoney(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      VectorOffset transaction_idsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqExchangeTakeMoney.AddTransactionIds(builder, transaction_idsOffset);
    ReqExchangeTakeMoney.AddMarketType(builder, market_type);
    return ReqExchangeTakeMoney.EndReqExchangeTakeMoney(builder);
  }

  public static void StartReqExchangeTakeMoney(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddTransactionIds(FlatBufferBuilder builder, VectorOffset transactionIdsOffset) { builder.AddOffset(1, transactionIdsOffset.Value, 0); }
  public static VectorOffset CreateTransactionIdsVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTransactionIdsVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartTransactionIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqExchangeTakeMoney> EndReqExchangeTakeMoney(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeTakeMoney>(o);
  }
};

public struct ResExchangeTakeMoney : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeTakeMoney GetRootAsResExchangeTakeMoney(ByteBuffer _bb) { return GetRootAsResExchangeTakeMoney(_bb, new ResExchangeTakeMoney()); }
  public static ResExchangeTakeMoney GetRootAsResExchangeTakeMoney(ByteBuffer _bb, ResExchangeTakeMoney obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeTakeMoney __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TotalPrice { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TotalTax { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResExchangeTakeMoney> CreateResExchangeTakeMoney(FlatBufferBuilder builder,
      uint total_price = 0,
      uint total_tax = 0,
      int result_cash_coin_balance = 0) {
    builder.StartObject(3);
    ResExchangeTakeMoney.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResExchangeTakeMoney.AddTotalTax(builder, total_tax);
    ResExchangeTakeMoney.AddTotalPrice(builder, total_price);
    return ResExchangeTakeMoney.EndResExchangeTakeMoney(builder);
  }

  public static void StartResExchangeTakeMoney(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTotalPrice(FlatBufferBuilder builder, uint totalPrice) { builder.AddUint(0, totalPrice, 0); }
  public static void AddTotalTax(FlatBufferBuilder builder, uint totalTax) { builder.AddUint(1, totalTax, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(2, resultCashCoinBalance, 0); }
  public static Offset<ResExchangeTakeMoney> EndResExchangeTakeMoney(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeTakeMoney>(o);
  }
};

public struct ReqExchangeItemDetailInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExchangeItemDetailInfo GetRootAsReqExchangeItemDetailInfo(ByteBuffer _bb) { return GetRootAsReqExchangeItemDetailInfo(_bb, new ReqExchangeItemDetailInfo()); }
  public static ReqExchangeItemDetailInfo GetRootAsReqExchangeItemDetailInfo(ByteBuffer _bb, ReqExchangeItemDetailInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExchangeItemDetailInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TradeTapType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TradeSubTapType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemUseCharType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemGroupId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExchangeItemDetailInfo> CreateReqExchangeItemDetailInfo(FlatBufferBuilder builder,
      uint trade_tap_type = 0,
      uint trade_sub_tap_type = 0,
      uint item_use_char_type = 0,
      uint item_group_id = 0,
      uint item_tid = 0) {
    builder.StartObject(5);
    ReqExchangeItemDetailInfo.AddItemTid(builder, item_tid);
    ReqExchangeItemDetailInfo.AddItemGroupId(builder, item_group_id);
    ReqExchangeItemDetailInfo.AddItemUseCharType(builder, item_use_char_type);
    ReqExchangeItemDetailInfo.AddTradeSubTapType(builder, trade_sub_tap_type);
    ReqExchangeItemDetailInfo.AddTradeTapType(builder, trade_tap_type);
    return ReqExchangeItemDetailInfo.EndReqExchangeItemDetailInfo(builder);
  }

  public static void StartReqExchangeItemDetailInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddTradeTapType(FlatBufferBuilder builder, uint tradeTapType) { builder.AddUint(0, tradeTapType, 0); }
  public static void AddTradeSubTapType(FlatBufferBuilder builder, uint tradeSubTapType) { builder.AddUint(1, tradeSubTapType, 0); }
  public static void AddItemUseCharType(FlatBufferBuilder builder, uint itemUseCharType) { builder.AddUint(2, itemUseCharType, 0); }
  public static void AddItemGroupId(FlatBufferBuilder builder, uint itemGroupId) { builder.AddUint(3, itemGroupId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(4, itemTid, 0); }
  public static Offset<ReqExchangeItemDetailInfo> EndReqExchangeItemDetailInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExchangeItemDetailInfo>(o);
  }
};

public struct ResExchangeItemDetailInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExchangeItemDetailInfo GetRootAsResExchangeItemDetailInfo(ByteBuffer _bb) { return GetRootAsResExchangeItemDetailInfo(_bb, new ResExchangeItemDetailInfo()); }
  public static ResExchangeItemDetailInfo GetRootAsResExchangeItemDetailInfo(ByteBuffer _bb, ResExchangeItemDetailInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExchangeItemDetailInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemTotalCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float ItemMinPrice { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float ItemMaxPrice { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ResExchangeItemDetailInfo> CreateResExchangeItemDetailInfo(FlatBufferBuilder builder,
      uint item_total_cnt = 0,
      float item_min_price = 0.0f,
      float item_max_price = 0.0f) {
    builder.StartObject(3);
    ResExchangeItemDetailInfo.AddItemMaxPrice(builder, item_max_price);
    ResExchangeItemDetailInfo.AddItemMinPrice(builder, item_min_price);
    ResExchangeItemDetailInfo.AddItemTotalCnt(builder, item_total_cnt);
    return ResExchangeItemDetailInfo.EndResExchangeItemDetailInfo(builder);
  }

  public static void StartResExchangeItemDetailInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemTotalCnt(FlatBufferBuilder builder, uint itemTotalCnt) { builder.AddUint(0, itemTotalCnt, 0); }
  public static void AddItemMinPrice(FlatBufferBuilder builder, float itemMinPrice) { builder.AddFloat(1, itemMinPrice, 0.0f); }
  public static void AddItemMaxPrice(FlatBufferBuilder builder, float itemMaxPrice) { builder.AddFloat(2, itemMaxPrice, 0.0f); }
  public static Offset<ResExchangeItemDetailInfo> EndResExchangeItemDetailInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExchangeItemDetailInfo>(o);
  }
};

public struct ReqGetFriendList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetFriendList GetRootAsReqGetFriendList(ByteBuffer _bb) { return GetRootAsReqGetFriendList(_bb, new ReqGetFriendList()); }
  public static ReqGetFriendList GetRootAsReqGetFriendList(ByteBuffer _bb, ReqGetFriendList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetFriendList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetFriendList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetFriendList> EndReqGetFriendList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetFriendList>(o);
  }
};

public struct ResGetFriendList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetFriendList GetRootAsResGetFriendList(ByteBuffer _bb) { return GetRootAsResGetFriendList(_bb, new ResGetFriendList()); }
  public static ResGetFriendList GetRootAsResGetFriendList(ByteBuffer _bb, ResGetFriendList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetFriendList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FriendInfo? Friends(int j) { int o = __p.__offset(4); return o != 0 ? (FriendInfo?)(new FriendInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FriendsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetFriendList> CreateResGetFriendList(FlatBufferBuilder builder,
      VectorOffset friendsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetFriendList.AddFriends(builder, friendsOffset);
    return ResGetFriendList.EndResGetFriendList(builder);
  }

  public static void StartResGetFriendList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddFriends(FlatBufferBuilder builder, VectorOffset friendsOffset) { builder.AddOffset(0, friendsOffset.Value, 0); }
  public static VectorOffset CreateFriendsVector(FlatBufferBuilder builder, Offset<FriendInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFriendsVectorBlock(FlatBufferBuilder builder, Offset<FriendInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFriendsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetFriendList> EndResGetFriendList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetFriendList>(o);
  }
};

public struct ReqFindFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqFindFriend GetRootAsReqFindFriend(ByteBuffer _bb) { return GetRootAsReqFindFriend(_bb, new ReqFindFriend()); }
  public static ReqFindFriend GetRootAsReqFindFriend(ByteBuffer _bb, ReqFindFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqFindFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Nick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqFindFriend> CreateReqFindFriend(FlatBufferBuilder builder,
      StringOffset nickOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqFindFriend.AddNick(builder, nickOffset);
    return ReqFindFriend.EndReqFindFriend(builder);
  }

  public static void StartReqFindFriend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset nickOffset) { builder.AddOffset(0, nickOffset.Value, 0); }
  public static Offset<ReqFindFriend> EndReqFindFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqFindFriend>(o);
  }
};

public struct ResFindFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResFindFriend GetRootAsResFindFriend(ByteBuffer _bb) { return GetRootAsResFindFriend(_bb, new ResFindFriend()); }
  public static ResFindFriend GetRootAsResFindFriend(ByteBuffer _bb, ResFindFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResFindFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong FindCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint FindCharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string FindNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFindNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetFindNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetFindNickArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsLogin { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ResFindFriend> CreateResFindFriend(FlatBufferBuilder builder,
      ulong find_char_id = 0,
      uint find_char_tid = 0,
      StringOffset find_nickOffset = default(StringOffset),
      bool is_login = false) {
    builder.StartObject(4);
    ResFindFriend.AddFindCharId(builder, find_char_id);
    ResFindFriend.AddFindNick(builder, find_nickOffset);
    ResFindFriend.AddFindCharTid(builder, find_char_tid);
    ResFindFriend.AddIsLogin(builder, is_login);
    return ResFindFriend.EndResFindFriend(builder);
  }

  public static void StartResFindFriend(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddFindCharId(FlatBufferBuilder builder, ulong findCharId) { builder.AddUlong(0, findCharId, 0); }
  public static void AddFindCharTid(FlatBufferBuilder builder, uint findCharTid) { builder.AddUint(1, findCharTid, 0); }
  public static void AddFindNick(FlatBufferBuilder builder, StringOffset findNickOffset) { builder.AddOffset(2, findNickOffset.Value, 0); }
  public static void AddIsLogin(FlatBufferBuilder builder, bool isLogin) { builder.AddBool(3, isLogin, false); }
  public static Offset<ResFindFriend> EndResFindFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResFindFriend>(o);
  }
};

public struct ReqRequestFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRequestFriend GetRootAsReqRequestFriend(ByteBuffer _bb) { return GetRootAsReqRequestFriend(_bb, new ReqRequestFriend()); }
  public static ReqRequestFriend GetRootAsReqRequestFriend(ByteBuffer _bb, ReqRequestFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRequestFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RequestCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqRequestFriend> CreateReqRequestFriend(FlatBufferBuilder builder,
      ulong request_char_id = 0) {
    builder.StartObject(1);
    ReqRequestFriend.AddRequestCharId(builder, request_char_id);
    return ReqRequestFriend.EndReqRequestFriend(builder);
  }

  public static void StartReqRequestFriend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRequestCharId(FlatBufferBuilder builder, ulong requestCharId) { builder.AddUlong(0, requestCharId, 0); }
  public static Offset<ReqRequestFriend> EndReqRequestFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRequestFriend>(o);
  }
};

public struct ResRequestFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRequestFriend GetRootAsResRequestFriend(ByteBuffer _bb) { return GetRootAsResRequestFriend(_bb, new ResRequestFriend()); }
  public static ResRequestFriend GetRootAsResRequestFriend(ByteBuffer _bb, ResRequestFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRequestFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FriendRequestInfo? RequestFriend { get { int o = __p.__offset(4); return o != 0 ? (FriendRequestInfo?)(new FriendRequestInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRequestFriend> CreateResRequestFriend(FlatBufferBuilder builder,
      Offset<FriendRequestInfo> request_friendOffset = default(Offset<FriendRequestInfo>)) {
    builder.StartObject(1);
    ResRequestFriend.AddRequestFriend(builder, request_friendOffset);
    return ResRequestFriend.EndResRequestFriend(builder);
  }

  public static void StartResRequestFriend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRequestFriend(FlatBufferBuilder builder, Offset<FriendRequestInfo> requestFriendOffset) { builder.AddOffset(0, requestFriendOffset.Value, 0); }
  public static Offset<ResRequestFriend> EndResRequestFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRequestFriend>(o);
  }
};

public struct ReqRequestFriendList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRequestFriendList GetRootAsReqRequestFriendList(ByteBuffer _bb) { return GetRootAsReqRequestFriendList(_bb, new ReqRequestFriendList()); }
  public static ReqRequestFriendList GetRootAsReqRequestFriendList(ByteBuffer _bb, ReqRequestFriendList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRequestFriendList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqRequestFriendList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqRequestFriendList> EndReqRequestFriendList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRequestFriendList>(o);
  }
};

public struct ResRequestFriendList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRequestFriendList GetRootAsResRequestFriendList(ByteBuffer _bb) { return GetRootAsResRequestFriendList(_bb, new ResRequestFriendList()); }
  public static ResRequestFriendList GetRootAsResRequestFriendList(ByteBuffer _bb, ResRequestFriendList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRequestFriendList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FriendRequestInfo? RequestFriends(int j) { int o = __p.__offset(4); return o != 0 ? (FriendRequestInfo?)(new FriendRequestInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RequestFriendsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRequestFriendList> CreateResRequestFriendList(FlatBufferBuilder builder,
      VectorOffset request_friendsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRequestFriendList.AddRequestFriends(builder, request_friendsOffset);
    return ResRequestFriendList.EndResRequestFriendList(builder);
  }

  public static void StartResRequestFriendList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRequestFriends(FlatBufferBuilder builder, VectorOffset requestFriendsOffset) { builder.AddOffset(0, requestFriendsOffset.Value, 0); }
  public static VectorOffset CreateRequestFriendsVector(FlatBufferBuilder builder, Offset<FriendRequestInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRequestFriendsVectorBlock(FlatBufferBuilder builder, Offset<FriendRequestInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRequestFriendsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRequestFriendList> EndResRequestFriendList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRequestFriendList>(o);
  }
};

public struct ReqRequestFriendAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRequestFriendAccept GetRootAsReqRequestFriendAccept(ByteBuffer _bb) { return GetRootAsReqRequestFriendAccept(_bb, new ReqRequestFriendAccept()); }
  public static ReqRequestFriendAccept GetRootAsReqRequestFriendAccept(ByteBuffer _bb, ReqRequestFriendAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRequestFriendAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AcceptCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqRequestFriendAccept> CreateReqRequestFriendAccept(FlatBufferBuilder builder,
      ulong accept_char_id = 0) {
    builder.StartObject(1);
    ReqRequestFriendAccept.AddAcceptCharId(builder, accept_char_id);
    return ReqRequestFriendAccept.EndReqRequestFriendAccept(builder);
  }

  public static void StartReqRequestFriendAccept(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAcceptCharId(FlatBufferBuilder builder, ulong acceptCharId) { builder.AddUlong(0, acceptCharId, 0); }
  public static Offset<ReqRequestFriendAccept> EndReqRequestFriendAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRequestFriendAccept>(o);
  }
};

public struct ResRequestFriendAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRequestFriendAccept GetRootAsResRequestFriendAccept(ByteBuffer _bb) { return GetRootAsResRequestFriendAccept(_bb, new ResRequestFriendAccept()); }
  public static ResRequestFriendAccept GetRootAsResRequestFriendAccept(ByteBuffer _bb, ResRequestFriendAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRequestFriendAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FriendInfo? Friend { get { int o = __p.__offset(4); return o != 0 ? (FriendInfo?)(new FriendInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRequestFriendAccept> CreateResRequestFriendAccept(FlatBufferBuilder builder,
      Offset<FriendInfo> friendOffset = default(Offset<FriendInfo>)) {
    builder.StartObject(1);
    ResRequestFriendAccept.AddFriend(builder, friendOffset);
    return ResRequestFriendAccept.EndResRequestFriendAccept(builder);
  }

  public static void StartResRequestFriendAccept(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddFriend(FlatBufferBuilder builder, Offset<FriendInfo> friendOffset) { builder.AddOffset(0, friendOffset.Value, 0); }
  public static Offset<ResRequestFriendAccept> EndResRequestFriendAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRequestFriendAccept>(o);
  }
};

public struct ReqRequestFriendCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRequestFriendCancel GetRootAsReqRequestFriendCancel(ByteBuffer _bb) { return GetRootAsReqRequestFriendCancel(_bb, new ReqRequestFriendCancel()); }
  public static ReqRequestFriendCancel GetRootAsReqRequestFriendCancel(ByteBuffer _bb, ReqRequestFriendCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRequestFriendCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CancelCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqRequestFriendCancel> CreateReqRequestFriendCancel(FlatBufferBuilder builder,
      ulong cancel_char_id = 0) {
    builder.StartObject(1);
    ReqRequestFriendCancel.AddCancelCharId(builder, cancel_char_id);
    return ReqRequestFriendCancel.EndReqRequestFriendCancel(builder);
  }

  public static void StartReqRequestFriendCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCancelCharId(FlatBufferBuilder builder, ulong cancelCharId) { builder.AddUlong(0, cancelCharId, 0); }
  public static Offset<ReqRequestFriendCancel> EndReqRequestFriendCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRequestFriendCancel>(o);
  }
};

public struct ResRequestFriendCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRequestFriendCancel GetRootAsResRequestFriendCancel(ByteBuffer _bb) { return GetRootAsResRequestFriendCancel(_bb, new ResRequestFriendCancel()); }
  public static ResRequestFriendCancel GetRootAsResRequestFriendCancel(ByteBuffer _bb, ResRequestFriendCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRequestFriendCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CancelCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResRequestFriendCancel> CreateResRequestFriendCancel(FlatBufferBuilder builder,
      ulong cancel_char_id = 0) {
    builder.StartObject(1);
    ResRequestFriendCancel.AddCancelCharId(builder, cancel_char_id);
    return ResRequestFriendCancel.EndResRequestFriendCancel(builder);
  }

  public static void StartResRequestFriendCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCancelCharId(FlatBufferBuilder builder, ulong cancelCharId) { builder.AddUlong(0, cancelCharId, 0); }
  public static Offset<ResRequestFriendCancel> EndResRequestFriendCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRequestFriendCancel>(o);
  }
};

public struct ReqDelFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqDelFriend GetRootAsReqDelFriend(ByteBuffer _bb) { return GetRootAsReqDelFriend(_bb, new ReqDelFriend()); }
  public static ReqDelFriend GetRootAsReqDelFriend(ByteBuffer _bb, ReqDelFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqDelFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_FriendState State { get { int o = __p.__offset(4); return o != 0 ? (E_FriendState)__p.bb.Get(o + __p.bb_pos) : E_FriendState.Friend; } }
  public ulong DelCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqDelFriend> CreateReqDelFriend(FlatBufferBuilder builder,
      E_FriendState state = E_FriendState.Friend,
      ulong del_char_id = 0) {
    builder.StartObject(2);
    ReqDelFriend.AddDelCharId(builder, del_char_id);
    ReqDelFriend.AddState(builder, state);
    return ReqDelFriend.EndReqDelFriend(builder);
  }

  public static void StartReqDelFriend(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddState(FlatBufferBuilder builder, E_FriendState state) { builder.AddByte(0, (byte)state, 0); }
  public static void AddDelCharId(FlatBufferBuilder builder, ulong delCharId) { builder.AddUlong(1, delCharId, 0); }
  public static Offset<ReqDelFriend> EndReqDelFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqDelFriend>(o);
  }
};

public struct ResDelFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResDelFriend GetRootAsResDelFriend(ByteBuffer _bb) { return GetRootAsResDelFriend(_bb, new ResDelFriend()); }
  public static ResDelFriend GetRootAsResDelFriend(ByteBuffer _bb, ResDelFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResDelFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_FriendState State { get { int o = __p.__offset(4); return o != 0 ? (E_FriendState)__p.bb.Get(o + __p.bb_pos) : E_FriendState.Friend; } }
  public ulong DelCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResDelFriend> CreateResDelFriend(FlatBufferBuilder builder,
      E_FriendState state = E_FriendState.Friend,
      ulong del_char_id = 0) {
    builder.StartObject(2);
    ResDelFriend.AddDelCharId(builder, del_char_id);
    ResDelFriend.AddState(builder, state);
    return ResDelFriend.EndResDelFriend(builder);
  }

  public static void StartResDelFriend(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddState(FlatBufferBuilder builder, E_FriendState state) { builder.AddByte(0, (byte)state, 0); }
  public static void AddDelCharId(FlatBufferBuilder builder, ulong delCharId) { builder.AddUlong(1, delCharId, 0); }
  public static Offset<ResDelFriend> EndResDelFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResDelFriend>(o);
  }
};

public struct ReqAddAlertFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAddAlertFriend GetRootAsReqAddAlertFriend(ByteBuffer _bb) { return GetRootAsReqAddAlertFriend(_bb, new ReqAddAlertFriend()); }
  public static ReqAddAlertFriend GetRootAsReqAddAlertFriend(ByteBuffer _bb, ReqAddAlertFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAddAlertFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AlertCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqAddAlertFriend> CreateReqAddAlertFriend(FlatBufferBuilder builder,
      ulong alert_char_id = 0) {
    builder.StartObject(1);
    ReqAddAlertFriend.AddAlertCharId(builder, alert_char_id);
    return ReqAddAlertFriend.EndReqAddAlertFriend(builder);
  }

  public static void StartReqAddAlertFriend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAlertCharId(FlatBufferBuilder builder, ulong alertCharId) { builder.AddUlong(0, alertCharId, 0); }
  public static Offset<ReqAddAlertFriend> EndReqAddAlertFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAddAlertFriend>(o);
  }
};

public struct ResAddAlertFriend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAddAlertFriend GetRootAsResAddAlertFriend(ByteBuffer _bb) { return GetRootAsResAddAlertFriend(_bb, new ResAddAlertFriend()); }
  public static ResAddAlertFriend GetRootAsResAddAlertFriend(ByteBuffer _bb, ResAddAlertFriend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAddAlertFriend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FriendInfo? Friend { get { int o = __p.__offset(4); return o != 0 ? (FriendInfo?)(new FriendInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResAddAlertFriend> CreateResAddAlertFriend(FlatBufferBuilder builder,
      Offset<FriendInfo> friendOffset = default(Offset<FriendInfo>)) {
    builder.StartObject(1);
    ResAddAlertFriend.AddFriend(builder, friendOffset);
    return ResAddAlertFriend.EndResAddAlertFriend(builder);
  }

  public static void StartResAddAlertFriend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddFriend(FlatBufferBuilder builder, Offset<FriendInfo> friendOffset) { builder.AddOffset(0, friendOffset.Value, 0); }
  public static Offset<ResAddAlertFriend> EndResAddAlertFriend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAddAlertFriend>(o);
  }
};

public struct ReqCreateGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCreateGuild GetRootAsReqCreateGuild(ByteBuffer _bb) { return GetRootAsReqCreateGuild(_bb, new ReqCreateGuild()); }
  public static ReqCreateGuild GetRootAsReqCreateGuild(ByteBuffer _bb, ReqCreateGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCreateGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string GuildName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(4); }
  public string GuildNotice { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNoticeBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetGuildNoticeBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetGuildNoticeArray() { return __p.__vector_as_array<byte>(6); }
  public string GuildIntro { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildIntroBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetGuildIntroBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetGuildIntroArray() { return __p.__vector_as_array<byte>(8); }
  public byte GuildMarkTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UseItemId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsQuickJoin { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort LoginBanStep { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort DonateBanStep { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqCreateGuild> CreateReqCreateGuild(FlatBufferBuilder builder,
      StringOffset guild_nameOffset = default(StringOffset),
      StringOffset guild_noticeOffset = default(StringOffset),
      StringOffset guild_introOffset = default(StringOffset),
      byte guild_mark_tid = 0,
      ulong use_item_id = 0,
      bool is_quick_join = false,
      ushort login_ban_step = 0,
      ushort donate_ban_step = 0) {
    builder.StartObject(8);
    ReqCreateGuild.AddUseItemId(builder, use_item_id);
    ReqCreateGuild.AddGuildIntro(builder, guild_introOffset);
    ReqCreateGuild.AddGuildNotice(builder, guild_noticeOffset);
    ReqCreateGuild.AddGuildName(builder, guild_nameOffset);
    ReqCreateGuild.AddDonateBanStep(builder, donate_ban_step);
    ReqCreateGuild.AddLoginBanStep(builder, login_ban_step);
    ReqCreateGuild.AddIsQuickJoin(builder, is_quick_join);
    ReqCreateGuild.AddGuildMarkTid(builder, guild_mark_tid);
    return ReqCreateGuild.EndReqCreateGuild(builder);
  }

  public static void StartReqCreateGuild(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(0, guildNameOffset.Value, 0); }
  public static void AddGuildNotice(FlatBufferBuilder builder, StringOffset guildNoticeOffset) { builder.AddOffset(1, guildNoticeOffset.Value, 0); }
  public static void AddGuildIntro(FlatBufferBuilder builder, StringOffset guildIntroOffset) { builder.AddOffset(2, guildIntroOffset.Value, 0); }
  public static void AddGuildMarkTid(FlatBufferBuilder builder, byte guildMarkTid) { builder.AddByte(3, guildMarkTid, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(4, useItemId, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(5, isQuickJoin, false); }
  public static void AddLoginBanStep(FlatBufferBuilder builder, ushort loginBanStep) { builder.AddUshort(6, loginBanStep, 0); }
  public static void AddDonateBanStep(FlatBufferBuilder builder, ushort donateBanStep) { builder.AddUshort(7, donateBanStep, 0); }
  public static Offset<ReqCreateGuild> EndReqCreateGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCreateGuild>(o);
  }
};

public struct ResCreateGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCreateGuild GetRootAsResCreateGuild(ByteBuffer _bb) { return GetRootAsResCreateGuild(_bb, new ResCreateGuild()); }
  public static ResCreateGuild GetRootAsResCreateGuild(ByteBuffer _bb, ResCreateGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCreateGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GuildMemberInfo? GuildMemberInfos(int j) { int o = __p.__offset(6); return o != 0 ? (GuildMemberInfo?)(new GuildMemberInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildMemberInfosLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResCreateGuild> CreateResCreateGuild(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>),
      VectorOffset guild_member_infosOffset = default(VectorOffset),
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(3);
    ResCreateGuild.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResCreateGuild.AddGuildMemberInfos(builder, guild_member_infosOffset);
    ResCreateGuild.AddGuildInfo(builder, guild_infoOffset);
    return ResCreateGuild.EndResCreateGuild(builder);
  }

  public static void StartResCreateGuild(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static void AddGuildMemberInfos(FlatBufferBuilder builder, VectorOffset guildMemberInfosOffset) { builder.AddOffset(1, guildMemberInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildMemberInfosVector(FlatBufferBuilder builder, Offset<GuildMemberInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildMemberInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildMemberInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildMemberInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(2, resultAccountStackItemOffset.Value, 0); }
  public static Offset<ResCreateGuild> EndResCreateGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCreateGuild>(o);
  }
};

public struct ReqDismissGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqDismissGuild GetRootAsReqDismissGuild(ByteBuffer _bb) { return GetRootAsReqDismissGuild(_bb, new ReqDismissGuild()); }
  public static ReqDismissGuild GetRootAsReqDismissGuild(ByteBuffer _bb, ReqDismissGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqDismissGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ChatId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceChatGrade ChatGrade { get { int o = __p.__offset(8); return o != 0 ? (E_GuildAllianceChatGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatGrade.None; } }

  public static Offset<ReqDismissGuild> CreateReqDismissGuild(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong chat_id = 0,
      E_GuildAllianceChatGrade chat_grade = E_GuildAllianceChatGrade.None) {
    builder.StartObject(3);
    ReqDismissGuild.AddChatId(builder, chat_id);
    ReqDismissGuild.AddGuildId(builder, guild_id);
    ReqDismissGuild.AddChatGrade(builder, chat_grade);
    return ReqDismissGuild.EndReqDismissGuild(builder);
  }

  public static void StartReqDismissGuild(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddChatId(FlatBufferBuilder builder, ulong chatId) { builder.AddUlong(1, chatId, 0); }
  public static void AddChatGrade(FlatBufferBuilder builder, E_GuildAllianceChatGrade chatGrade) { builder.AddByte(2, (byte)chatGrade, 0); }
  public static Offset<ReqDismissGuild> EndReqDismissGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqDismissGuild>(o);
  }
};

public struct ResDismissGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResDismissGuild GetRootAsResDismissGuild(ByteBuffer _bb) { return GetRootAsResDismissGuild(_bb, new ResDismissGuild()); }
  public static ResDismissGuild GetRootAsResDismissGuild(ByteBuffer _bb, ResDismissGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResDismissGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResDismissGuild(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResDismissGuild> EndResDismissGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResDismissGuild>(o);
  }
};

public struct ReqAppointGuildMember : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAppointGuildMember GetRootAsReqAppointGuildMember(ByteBuffer _bb) { return GetRootAsReqAppointGuildMember(_bb, new ReqAppointGuildMember()); }
  public static ReqAppointGuildMember GetRootAsReqAppointGuildMember(ByteBuffer _bb, ReqAppointGuildMember obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAppointGuildMember __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong MemberCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildGrade { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqAppointGuildMember> CreateReqAppointGuildMember(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong member_char_id = 0,
      uint guild_grade = 0) {
    builder.StartObject(3);
    ReqAppointGuildMember.AddMemberCharId(builder, member_char_id);
    ReqAppointGuildMember.AddGuildId(builder, guild_id);
    ReqAppointGuildMember.AddGuildGrade(builder, guild_grade);
    return ReqAppointGuildMember.EndReqAppointGuildMember(builder);
  }

  public static void StartReqAppointGuildMember(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddMemberCharId(FlatBufferBuilder builder, ulong memberCharId) { builder.AddUlong(1, memberCharId, 0); }
  public static void AddGuildGrade(FlatBufferBuilder builder, uint guildGrade) { builder.AddUint(2, guildGrade, 0); }
  public static Offset<ReqAppointGuildMember> EndReqAppointGuildMember(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAppointGuildMember>(o);
  }
};

public struct ResAppointGuildMember : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAppointGuildMember GetRootAsResAppointGuildMember(ByteBuffer _bb) { return GetRootAsResAppointGuildMember(_bb, new ResAppointGuildMember()); }
  public static ResAppointGuildMember GetRootAsResAppointGuildMember(ByteBuffer _bb, ResAppointGuildMember obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAppointGuildMember __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResAppointGuildMember> CreateResAppointGuildMember(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResAppointGuildMember.AddGuildInfo(builder, guild_infoOffset);
    return ResAppointGuildMember.EndResAppointGuildMember(builder);
  }

  public static void StartResAppointGuildMember(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResAppointGuildMember> EndResAppointGuildMember(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAppointGuildMember>(o);
  }
};

public struct ReqGuildRequestListForGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestListForGuild GetRootAsReqGuildRequestListForGuild(ByteBuffer _bb) { return GetRootAsReqGuildRequestListForGuild(_bb, new ReqGuildRequestListForGuild()); }
  public static ReqGuildRequestListForGuild GetRootAsReqGuildRequestListForGuild(ByteBuffer _bb, ReqGuildRequestListForGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestListForGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildRequestListForGuild> CreateReqGuildRequestListForGuild(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildRequestListForGuild.AddGuildId(builder, guild_id);
    return ReqGuildRequestListForGuild.EndReqGuildRequestListForGuild(builder);
  }

  public static void StartReqGuildRequestListForGuild(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildRequestListForGuild> EndReqGuildRequestListForGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestListForGuild>(o);
  }
};

public struct ResGuildRequestListForGuild : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestListForGuild GetRootAsResGuildRequestListForGuild(ByteBuffer _bb) { return GetRootAsResGuildRequestListForGuild(_bb, new ResGuildRequestListForGuild()); }
  public static ResGuildRequestListForGuild GetRootAsResGuildRequestListForGuild(ByteBuffer _bb, ResGuildRequestListForGuild obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestListForGuild __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildRequestInfoForGuild? GuildRequestInfos(int j) { int o = __p.__offset(4); return o != 0 ? (GuildRequestInfoForGuild?)(new GuildRequestInfoForGuild()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildRequestInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGuildRequestListForGuild> CreateResGuildRequestListForGuild(FlatBufferBuilder builder,
      VectorOffset guild_request_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGuildRequestListForGuild.AddGuildRequestInfos(builder, guild_request_infosOffset);
    return ResGuildRequestListForGuild.EndResGuildRequestListForGuild(builder);
  }

  public static void StartResGuildRequestListForGuild(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildRequestInfos(FlatBufferBuilder builder, VectorOffset guildRequestInfosOffset) { builder.AddOffset(0, guildRequestInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildRequestInfosVector(FlatBufferBuilder builder, Offset<GuildRequestInfoForGuild>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildRequestInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildRequestInfoForGuild>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildRequestInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGuildRequestListForGuild> EndResGuildRequestListForGuild(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestListForGuild>(o);
  }
};

public struct ReqGuildRequestListForChar : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestListForChar GetRootAsReqGuildRequestListForChar(ByteBuffer _bb) { return GetRootAsReqGuildRequestListForChar(_bb, new ReqGuildRequestListForChar()); }
  public static ReqGuildRequestListForChar GetRootAsReqGuildRequestListForChar(ByteBuffer _bb, ReqGuildRequestListForChar obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestListForChar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGuildRequestListForChar(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGuildRequestListForChar> EndReqGuildRequestListForChar(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestListForChar>(o);
  }
};

public struct ResGuildRequestListForChar : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestListForChar GetRootAsResGuildRequestListForChar(ByteBuffer _bb) { return GetRootAsResGuildRequestListForChar(_bb, new ResGuildRequestListForChar()); }
  public static ResGuildRequestListForChar GetRootAsResGuildRequestListForChar(ByteBuffer _bb, ResGuildRequestListForChar obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestListForChar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildRequestInfoForChar? GuildRequestInfos(int j) { int o = __p.__offset(4); return o != 0 ? (GuildRequestInfoForChar?)(new GuildRequestInfoForChar()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildRequestInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGuildRequestListForChar> CreateResGuildRequestListForChar(FlatBufferBuilder builder,
      VectorOffset guild_request_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGuildRequestListForChar.AddGuildRequestInfos(builder, guild_request_infosOffset);
    return ResGuildRequestListForChar.EndResGuildRequestListForChar(builder);
  }

  public static void StartResGuildRequestListForChar(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildRequestInfos(FlatBufferBuilder builder, VectorOffset guildRequestInfosOffset) { builder.AddOffset(0, guildRequestInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildRequestInfosVector(FlatBufferBuilder builder, Offset<GuildRequestInfoForChar>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildRequestInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildRequestInfoForChar>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildRequestInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGuildRequestListForChar> EndResGuildRequestListForChar(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestListForChar>(o);
  }
};

public struct ReqGuildRequestAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestAccept GetRootAsReqGuildRequestAccept(ByteBuffer _bb) { return GetRootAsReqGuildRequestAccept(_bb, new ReqGuildRequestAccept()); }
  public static ReqGuildRequestAccept GetRootAsReqGuildRequestAccept(ByteBuffer _bb, ReqGuildRequestAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong AcceptCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildRequestAccept> CreateReqGuildRequestAccept(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong accept_char_id = 0) {
    builder.StartObject(2);
    ReqGuildRequestAccept.AddAcceptCharId(builder, accept_char_id);
    ReqGuildRequestAccept.AddGuildId(builder, guild_id);
    return ReqGuildRequestAccept.EndReqGuildRequestAccept(builder);
  }

  public static void StartReqGuildRequestAccept(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddAcceptCharId(FlatBufferBuilder builder, ulong acceptCharId) { builder.AddUlong(1, acceptCharId, 0); }
  public static Offset<ReqGuildRequestAccept> EndReqGuildRequestAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestAccept>(o);
  }
};

public struct ResGuildRequestAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestAccept GetRootAsResGuildRequestAccept(ByteBuffer _bb) { return GetRootAsResGuildRequestAccept(_bb, new ResGuildRequestAccept()); }
  public static ResGuildRequestAccept GetRootAsResGuildRequestAccept(ByteBuffer _bb, ResGuildRequestAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AcceptCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildRequestAccept> CreateResGuildRequestAccept(FlatBufferBuilder builder,
      ulong accept_char_id = 0) {
    builder.StartObject(1);
    ResGuildRequestAccept.AddAcceptCharId(builder, accept_char_id);
    return ResGuildRequestAccept.EndResGuildRequestAccept(builder);
  }

  public static void StartResGuildRequestAccept(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAcceptCharId(FlatBufferBuilder builder, ulong acceptCharId) { builder.AddUlong(0, acceptCharId, 0); }
  public static Offset<ResGuildRequestAccept> EndResGuildRequestAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestAccept>(o);
  }
};

public struct ReqGuildRequestReject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestReject GetRootAsReqGuildRequestReject(ByteBuffer _bb) { return GetRootAsReqGuildRequestReject(_bb, new ReqGuildRequestReject()); }
  public static ReqGuildRequestReject GetRootAsReqGuildRequestReject(ByteBuffer _bb, ReqGuildRequestReject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestReject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong RejectCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildRequestReject> CreateReqGuildRequestReject(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong reject_char_id = 0) {
    builder.StartObject(2);
    ReqGuildRequestReject.AddRejectCharId(builder, reject_char_id);
    ReqGuildRequestReject.AddGuildId(builder, guild_id);
    return ReqGuildRequestReject.EndReqGuildRequestReject(builder);
  }

  public static void StartReqGuildRequestReject(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddRejectCharId(FlatBufferBuilder builder, ulong rejectCharId) { builder.AddUlong(1, rejectCharId, 0); }
  public static Offset<ReqGuildRequestReject> EndReqGuildRequestReject(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestReject>(o);
  }
};

public struct ResGuildRequestReject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestReject GetRootAsResGuildRequestReject(ByteBuffer _bb) { return GetRootAsResGuildRequestReject(_bb, new ResGuildRequestReject()); }
  public static ResGuildRequestReject GetRootAsResGuildRequestReject(ByteBuffer _bb, ResGuildRequestReject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestReject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RejectCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildRequestReject> CreateResGuildRequestReject(FlatBufferBuilder builder,
      ulong reject_char_id = 0) {
    builder.StartObject(1);
    ResGuildRequestReject.AddRejectCharId(builder, reject_char_id);
    return ResGuildRequestReject.EndResGuildRequestReject(builder);
  }

  public static void StartResGuildRequestReject(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRejectCharId(FlatBufferBuilder builder, ulong rejectCharId) { builder.AddUlong(0, rejectCharId, 0); }
  public static Offset<ResGuildRequestReject> EndResGuildRequestReject(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestReject>(o);
  }
};

public struct ReqGuildMemberBan : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildMemberBan GetRootAsReqGuildMemberBan(ByteBuffer _bb) { return GetRootAsReqGuildMemberBan(_bb, new ReqGuildMemberBan()); }
  public static ReqGuildMemberBan GetRootAsReqGuildMemberBan(ByteBuffer _bb, ReqGuildMemberBan obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildMemberBan __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BanCharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildMemberBan> CreateReqGuildMemberBan(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong ban_char_id = 0) {
    builder.StartObject(2);
    ReqGuildMemberBan.AddBanCharId(builder, ban_char_id);
    ReqGuildMemberBan.AddGuildId(builder, guild_id);
    return ReqGuildMemberBan.EndReqGuildMemberBan(builder);
  }

  public static void StartReqGuildMemberBan(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddBanCharId(FlatBufferBuilder builder, ulong banCharId) { builder.AddUlong(1, banCharId, 0); }
  public static Offset<ReqGuildMemberBan> EndReqGuildMemberBan(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildMemberBan>(o);
  }
};

public struct ResGuildMemberBan : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildMemberBan GetRootAsResGuildMemberBan(ByteBuffer _bb) { return GetRootAsResGuildMemberBan(_bb, new ResGuildMemberBan()); }
  public static ResGuildMemberBan GetRootAsResGuildMemberBan(ByteBuffer _bb, ResGuildMemberBan obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildMemberBan __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong BanCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildMemberBan> CreateResGuildMemberBan(FlatBufferBuilder builder,
      ulong ban_char_id = 0) {
    builder.StartObject(1);
    ResGuildMemberBan.AddBanCharId(builder, ban_char_id);
    return ResGuildMemberBan.EndResGuildMemberBan(builder);
  }

  public static void StartResGuildMemberBan(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBanCharId(FlatBufferBuilder builder, ulong banCharId) { builder.AddUlong(0, banCharId, 0); }
  public static Offset<ResGuildMemberBan> EndResGuildMemberBan(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildMemberBan>(o);
  }
};

public struct ReqGuildMemberLeave : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildMemberLeave GetRootAsReqGuildMemberLeave(ByteBuffer _bb) { return GetRootAsReqGuildMemberLeave(_bb, new ReqGuildMemberLeave()); }
  public static ReqGuildMemberLeave GetRootAsReqGuildMemberLeave(ByteBuffer _bb, ReqGuildMemberLeave obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildMemberLeave __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildMemberLeave> CreateReqGuildMemberLeave(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildMemberLeave.AddGuildId(builder, guild_id);
    return ReqGuildMemberLeave.EndReqGuildMemberLeave(builder);
  }

  public static void StartReqGuildMemberLeave(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildMemberLeave> EndReqGuildMemberLeave(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildMemberLeave>(o);
  }
};

public struct ResGuildMemberLeave : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildMemberLeave GetRootAsResGuildMemberLeave(ByteBuffer _bb) { return GetRootAsResGuildMemberLeave(_bb, new ResGuildMemberLeave()); }
  public static ResGuildMemberLeave GetRootAsResGuildMemberLeave(ByteBuffer _bb, ResGuildMemberLeave obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildMemberLeave __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildMemberLeave(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildMemberLeave> EndResGuildMemberLeave(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildMemberLeave>(o);
  }
};

public struct ReqUpdateGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqUpdateGuildInfo GetRootAsReqUpdateGuildInfo(ByteBuffer _bb) { return GetRootAsReqUpdateGuildInfo(_bb, new ReqUpdateGuildInfo()); }
  public static ReqUpdateGuildInfo GetRootAsReqUpdateGuildInfo(ByteBuffer _bb, ReqUpdateGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqUpdateGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Intro { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetIntroBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIntroArray() { return __p.__vector_as_array<byte>(6); }
  public string Notice { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNoticeBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNoticeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNoticeArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsQuickJoin { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort LoginBanStep { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort DonateBanStep { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqUpdateGuildInfo> CreateReqUpdateGuildInfo(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset introOffset = default(StringOffset),
      StringOffset noticeOffset = default(StringOffset),
      bool is_quick_join = false,
      ushort login_ban_step = 0,
      ushort donate_ban_step = 0) {
    builder.StartObject(6);
    ReqUpdateGuildInfo.AddGuildId(builder, guild_id);
    ReqUpdateGuildInfo.AddNotice(builder, noticeOffset);
    ReqUpdateGuildInfo.AddIntro(builder, introOffset);
    ReqUpdateGuildInfo.AddDonateBanStep(builder, donate_ban_step);
    ReqUpdateGuildInfo.AddLoginBanStep(builder, login_ban_step);
    ReqUpdateGuildInfo.AddIsQuickJoin(builder, is_quick_join);
    return ReqUpdateGuildInfo.EndReqUpdateGuildInfo(builder);
  }

  public static void StartReqUpdateGuildInfo(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddIntro(FlatBufferBuilder builder, StringOffset introOffset) { builder.AddOffset(1, introOffset.Value, 0); }
  public static void AddNotice(FlatBufferBuilder builder, StringOffset noticeOffset) { builder.AddOffset(2, noticeOffset.Value, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(3, isQuickJoin, false); }
  public static void AddLoginBanStep(FlatBufferBuilder builder, ushort loginBanStep) { builder.AddUshort(4, loginBanStep, 0); }
  public static void AddDonateBanStep(FlatBufferBuilder builder, ushort donateBanStep) { builder.AddUshort(5, donateBanStep, 0); }
  public static Offset<ReqUpdateGuildInfo> EndReqUpdateGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqUpdateGuildInfo>(o);
  }
};

public struct ResUpdateGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResUpdateGuildInfo GetRootAsResUpdateGuildInfo(ByteBuffer _bb) { return GetRootAsResUpdateGuildInfo(_bb, new ResUpdateGuildInfo()); }
  public static ResUpdateGuildInfo GetRootAsResUpdateGuildInfo(ByteBuffer _bb, ResUpdateGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResUpdateGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Intro { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntroBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetIntroBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIntroArray() { return __p.__vector_as_array<byte>(6); }
  public string Notice { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNoticeBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNoticeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNoticeArray() { return __p.__vector_as_array<byte>(8); }
  public bool IsQuickJoin { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort LoginBanStep { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort DonateBanStep { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResUpdateGuildInfo> CreateResUpdateGuildInfo(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset introOffset = default(StringOffset),
      StringOffset noticeOffset = default(StringOffset),
      bool is_quick_join = false,
      ushort login_ban_step = 0,
      ushort donate_ban_step = 0) {
    builder.StartObject(6);
    ResUpdateGuildInfo.AddGuildId(builder, guild_id);
    ResUpdateGuildInfo.AddNotice(builder, noticeOffset);
    ResUpdateGuildInfo.AddIntro(builder, introOffset);
    ResUpdateGuildInfo.AddDonateBanStep(builder, donate_ban_step);
    ResUpdateGuildInfo.AddLoginBanStep(builder, login_ban_step);
    ResUpdateGuildInfo.AddIsQuickJoin(builder, is_quick_join);
    return ResUpdateGuildInfo.EndResUpdateGuildInfo(builder);
  }

  public static void StartResUpdateGuildInfo(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddIntro(FlatBufferBuilder builder, StringOffset introOffset) { builder.AddOffset(1, introOffset.Value, 0); }
  public static void AddNotice(FlatBufferBuilder builder, StringOffset noticeOffset) { builder.AddOffset(2, noticeOffset.Value, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(3, isQuickJoin, false); }
  public static void AddLoginBanStep(FlatBufferBuilder builder, ushort loginBanStep) { builder.AddUshort(4, loginBanStep, 0); }
  public static void AddDonateBanStep(FlatBufferBuilder builder, ushort donateBanStep) { builder.AddUshort(5, donateBanStep, 0); }
  public static Offset<ResUpdateGuildInfo> EndResUpdateGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResUpdateGuildInfo>(o);
  }
};

public struct ReqUpdateGuildMark : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqUpdateGuildMark GetRootAsReqUpdateGuildMark(ByteBuffer _bb) { return GetRootAsReqUpdateGuildMark(_bb, new ReqUpdateGuildMark()); }
  public static ReqUpdateGuildMark GetRootAsReqUpdateGuildMark(ByteBuffer _bb, ReqUpdateGuildMark obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqUpdateGuildMark __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte MarkTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ReqUpdateGuildMark> CreateReqUpdateGuildMark(FlatBufferBuilder builder,
      ulong guild_id = 0,
      byte mark_tid = 0) {
    builder.StartObject(2);
    ReqUpdateGuildMark.AddGuildId(builder, guild_id);
    ReqUpdateGuildMark.AddMarkTid(builder, mark_tid);
    return ReqUpdateGuildMark.EndReqUpdateGuildMark(builder);
  }

  public static void StartReqUpdateGuildMark(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(1, markTid, 0); }
  public static Offset<ReqUpdateGuildMark> EndReqUpdateGuildMark(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqUpdateGuildMark>(o);
  }
};

public struct ResUpdateGuildMark : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResUpdateGuildMark GetRootAsResUpdateGuildMark(ByteBuffer _bb) { return GetRootAsResUpdateGuildMark(_bb, new ResUpdateGuildMark()); }
  public static ResUpdateGuildMark GetRootAsResUpdateGuildMark(ByteBuffer _bb, ResUpdateGuildMark obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResUpdateGuildMark __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte MarkTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong MarkUpdateDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ResultGuildMoney { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResUpdateGuildMark> CreateResUpdateGuildMark(FlatBufferBuilder builder,
      ulong guild_id = 0,
      byte mark_tid = 0,
      ulong mark_update_dt = 0,
      ulong result_guild_money = 0) {
    builder.StartObject(4);
    ResUpdateGuildMark.AddResultGuildMoney(builder, result_guild_money);
    ResUpdateGuildMark.AddMarkUpdateDt(builder, mark_update_dt);
    ResUpdateGuildMark.AddGuildId(builder, guild_id);
    ResUpdateGuildMark.AddMarkTid(builder, mark_tid);
    return ResUpdateGuildMark.EndResUpdateGuildMark(builder);
  }

  public static void StartResUpdateGuildMark(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddMarkTid(FlatBufferBuilder builder, byte markTid) { builder.AddByte(1, markTid, 0); }
  public static void AddMarkUpdateDt(FlatBufferBuilder builder, ulong markUpdateDt) { builder.AddUlong(2, markUpdateDt, 0); }
  public static void AddResultGuildMoney(FlatBufferBuilder builder, ulong resultGuildMoney) { builder.AddUlong(3, resultGuildMoney, 0); }
  public static Offset<ResUpdateGuildMark> EndResUpdateGuildMark(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResUpdateGuildMark>(o);
  }
};

public struct ReqGuildRequestJoin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestJoin GetRootAsReqGuildRequestJoin(ByteBuffer _bb) { return GetRootAsReqGuildRequestJoin(_bb, new ReqGuildRequestJoin()); }
  public static ReqGuildRequestJoin GetRootAsReqGuildRequestJoin(ByteBuffer _bb, ReqGuildRequestJoin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Comment { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCommentBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCommentBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCommentArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqGuildRequestJoin> CreateReqGuildRequestJoin(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset commentOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqGuildRequestJoin.AddGuildId(builder, guild_id);
    ReqGuildRequestJoin.AddComment(builder, commentOffset);
    return ReqGuildRequestJoin.EndReqGuildRequestJoin(builder);
  }

  public static void StartReqGuildRequestJoin(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddComment(FlatBufferBuilder builder, StringOffset commentOffset) { builder.AddOffset(1, commentOffset.Value, 0); }
  public static Offset<ReqGuildRequestJoin> EndReqGuildRequestJoin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestJoin>(o);
  }
};

public struct ResGuildRequestJoin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestJoin GetRootAsResGuildRequestJoin(ByteBuffer _bb) { return GetRootAsResGuildRequestJoin(_bb, new ResGuildRequestJoin()); }
  public static ResGuildRequestJoin GetRootAsResGuildRequestJoin(ByteBuffer _bb, ResGuildRequestJoin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsQuickJoin { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ResGuildRequestJoin> CreateResGuildRequestJoin(FlatBufferBuilder builder,
      ulong guild_id = 0,
      bool is_quick_join = false) {
    builder.StartObject(2);
    ResGuildRequestJoin.AddGuildId(builder, guild_id);
    ResGuildRequestJoin.AddIsQuickJoin(builder, is_quick_join);
    return ResGuildRequestJoin.EndResGuildRequestJoin(builder);
  }

  public static void StartResGuildRequestJoin(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddIsQuickJoin(FlatBufferBuilder builder, bool isQuickJoin) { builder.AddBool(1, isQuickJoin, false); }
  public static Offset<ResGuildRequestJoin> EndResGuildRequestJoin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestJoin>(o);
  }
};

public struct ReqGuildRequestJoinCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildRequestJoinCancel GetRootAsReqGuildRequestJoinCancel(ByteBuffer _bb) { return GetRootAsReqGuildRequestJoinCancel(_bb, new ReqGuildRequestJoinCancel()); }
  public static ReqGuildRequestJoinCancel GetRootAsReqGuildRequestJoinCancel(ByteBuffer _bb, ReqGuildRequestJoinCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildRequestJoinCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildRequestJoinCancel> CreateReqGuildRequestJoinCancel(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildRequestJoinCancel.AddGuildId(builder, guild_id);
    return ReqGuildRequestJoinCancel.EndReqGuildRequestJoinCancel(builder);
  }

  public static void StartReqGuildRequestJoinCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildRequestJoinCancel> EndReqGuildRequestJoinCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildRequestJoinCancel>(o);
  }
};

public struct ResGuildRequestJoinCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildRequestJoinCancel GetRootAsResGuildRequestJoinCancel(ByteBuffer _bb) { return GetRootAsResGuildRequestJoinCancel(_bb, new ResGuildRequestJoinCancel()); }
  public static ResGuildRequestJoinCancel GetRootAsResGuildRequestJoinCancel(ByteBuffer _bb, ResGuildRequestJoinCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildRequestJoinCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildRequestJoinCancel(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildRequestJoinCancel> EndResGuildRequestJoinCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildRequestJoinCancel>(o);
  }
};

public struct ReqRecommendGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRecommendGuildInfo GetRootAsReqRecommendGuildInfo(ByteBuffer _bb) { return GetRootAsReqRecommendGuildInfo(_bb, new ReqRecommendGuildInfo()); }
  public static ReqRecommendGuildInfo GetRootAsReqRecommendGuildInfo(ByteBuffer _bb, ReqRecommendGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRecommendGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqRecommendGuildInfo(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqRecommendGuildInfo> EndReqRecommendGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRecommendGuildInfo>(o);
  }
};

public struct ResRecommendGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRecommendGuildInfo GetRootAsResRecommendGuildInfo(ByteBuffer _bb) { return GetRootAsResRecommendGuildInfo(_bb, new ResRecommendGuildInfo()); }
  public static ResRecommendGuildInfo GetRootAsResRecommendGuildInfo(ByteBuffer _bb, ResRecommendGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRecommendGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfos(int j) { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRecommendGuildInfo> CreateResRecommendGuildInfo(FlatBufferBuilder builder,
      VectorOffset guild_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRecommendGuildInfo.AddGuildInfos(builder, guild_infosOffset);
    return ResRecommendGuildInfo.EndResRecommendGuildInfo(builder);
  }

  public static void StartResRecommendGuildInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfos(FlatBufferBuilder builder, VectorOffset guildInfosOffset) { builder.AddOffset(0, guildInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildInfosVector(FlatBufferBuilder builder, Offset<GuildInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRecommendGuildInfo> EndResRecommendGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRecommendGuildInfo>(o);
  }
};

public struct ReqFindGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqFindGuildInfo GetRootAsReqFindGuildInfo(ByteBuffer _bb) { return GetRootAsReqFindGuildInfo(_bb, new ReqFindGuildInfo()); }
  public static ReqFindGuildInfo GetRootAsReqFindGuildInfo(ByteBuffer _bb, ReqFindGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqFindGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string GuildName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqFindGuildInfo> CreateReqFindGuildInfo(FlatBufferBuilder builder,
      StringOffset guild_nameOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqFindGuildInfo.AddGuildName(builder, guild_nameOffset);
    return ReqFindGuildInfo.EndReqFindGuildInfo(builder);
  }

  public static void StartReqFindGuildInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(0, guildNameOffset.Value, 0); }
  public static Offset<ReqFindGuildInfo> EndReqFindGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqFindGuildInfo>(o);
  }
};

public struct ResFindGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResFindGuildInfo GetRootAsResFindGuildInfo(ByteBuffer _bb) { return GetRootAsResFindGuildInfo(_bb, new ResFindGuildInfo()); }
  public static ResFindGuildInfo GetRootAsResFindGuildInfo(ByteBuffer _bb, ResFindGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResFindGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResFindGuildInfo> CreateResFindGuildInfo(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResFindGuildInfo.AddGuildInfo(builder, guild_infoOffset);
    return ResFindGuildInfo.EndResFindGuildInfo(builder);
  }

  public static void StartResFindGuildInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResFindGuildInfo> EndResFindGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResFindGuildInfo>(o);
  }
};

public struct ReqGetGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGuildInfo GetRootAsReqGetGuildInfo(ByteBuffer _bb) { return GetRootAsReqGetGuildInfo(_bb, new ReqGetGuildInfo()); }
  public static ReqGetGuildInfo GetRootAsReqGetGuildInfo(ByteBuffer _bb, ReqGetGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGetGuildInfo> CreateReqGetGuildInfo(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGetGuildInfo.AddGuildId(builder, guild_id);
    return ReqGetGuildInfo.EndReqGetGuildInfo(builder);
  }

  public static void StartReqGetGuildInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGetGuildInfo> EndReqGetGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGuildInfo>(o);
  }
};

public struct ResGetGuildInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGuildInfo GetRootAsResGetGuildInfo(ByteBuffer _bb) { return GetRootAsResGetGuildInfo(_bb, new ResGetGuildInfo()); }
  public static ResGetGuildInfo GetRootAsResGetGuildInfo(ByteBuffer _bb, ResGetGuildInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGuildInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GuildMemberInfo? GuildMemberInfos(int j) { int o = __p.__offset(6); return o != 0 ? (GuildMemberInfo?)(new GuildMemberInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildMemberInfosLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GuildBuff? GuildBuffInfos(int j) { int o = __p.__offset(8); return o != 0 ? (GuildBuff?)(new GuildBuff()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildBuffInfosLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGuildInfo> CreateResGetGuildInfo(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>),
      VectorOffset guild_member_infosOffset = default(VectorOffset),
      VectorOffset guild_buff_infosOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResGetGuildInfo.AddGuildBuffInfos(builder, guild_buff_infosOffset);
    ResGetGuildInfo.AddGuildMemberInfos(builder, guild_member_infosOffset);
    ResGetGuildInfo.AddGuildInfo(builder, guild_infoOffset);
    return ResGetGuildInfo.EndResGetGuildInfo(builder);
  }

  public static void StartResGetGuildInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static void AddGuildMemberInfos(FlatBufferBuilder builder, VectorOffset guildMemberInfosOffset) { builder.AddOffset(1, guildMemberInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildMemberInfosVector(FlatBufferBuilder builder, Offset<GuildMemberInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildMemberInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildMemberInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildMemberInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGuildBuffInfos(FlatBufferBuilder builder, VectorOffset guildBuffInfosOffset) { builder.AddOffset(2, guildBuffInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildBuffInfosVector(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildBuffInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildBuffInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGuildInfo> EndResGetGuildInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGuildInfo>(o);
  }
};

public struct ReqGuildAttendReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAttendReward GetRootAsReqGuildAttendReward(ByteBuffer _bb) { return GetRootAsReqGuildAttendReward(_bb, new ReqGuildAttendReward()); }
  public static ReqGuildAttendReward GetRootAsReqGuildAttendReward(ByteBuffer _bb, ReqGuildAttendReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAttendReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAttendReward> CreateReqGuildAttendReward(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildAttendReward.AddGuildId(builder, guild_id);
    return ReqGuildAttendReward.EndReqGuildAttendReward(builder);
  }

  public static void StartReqGuildAttendReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildAttendReward> EndReqGuildAttendReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAttendReward>(o);
  }
};

public struct ResGuildAttendReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAttendReward GetRootAsResGuildAttendReward(ByteBuffer _bb) { return GetRootAsResGuildAttendReward(_bb, new ResGuildAttendReward()); }
  public static ResGuildAttendReward GetRootAsResGuildAttendReward(ByteBuffer _bb, ResGuildAttendReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAttendReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AttendRewardDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint YesterdayAttendCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(8); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGuildAttendReward> CreateResGuildAttendReward(FlatBufferBuilder builder,
      ulong attend_reward_dt = 0,
      uint yesterday_attend_cnt = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    ResGuildAttendReward.AddAttendRewardDt(builder, attend_reward_dt);
    ResGuildAttendReward.AddResultStackItems(builder, result_stack_itemsOffset);
    ResGuildAttendReward.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResGuildAttendReward.AddGetItems(builder, get_itemsOffset);
    ResGuildAttendReward.AddYesterdayAttendCnt(builder, yesterday_attend_cnt);
    return ResGuildAttendReward.EndResGuildAttendReward(builder);
  }

  public static void StartResGuildAttendReward(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddAttendRewardDt(FlatBufferBuilder builder, ulong attendRewardDt) { builder.AddUlong(0, attendRewardDt, 0); }
  public static void AddYesterdayAttendCnt(FlatBufferBuilder builder, uint yesterdayAttendCnt) { builder.AddUint(1, yesterdayAttendCnt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(3, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(4, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGuildAttendReward> EndResGuildAttendReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAttendReward>(o);
  }
};

public struct ReqGetGuildExpRank : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGuildExpRank GetRootAsReqGetGuildExpRank(ByteBuffer _bb) { return GetRootAsReqGetGuildExpRank(_bb, new ReqGetGuildExpRank()); }
  public static ReqGetGuildExpRank GetRootAsReqGetGuildExpRank(ByteBuffer _bb, ReqGetGuildExpRank obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGuildExpRank __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetGuildExpRank(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetGuildExpRank> EndReqGetGuildExpRank(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGuildExpRank>(o);
  }
};

public struct ResGetGuildExpRank : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGuildExpRank GetRootAsResGetGuildExpRank(ByteBuffer _bb) { return GetRootAsResGetGuildExpRank(_bb, new ResGetGuildExpRank()); }
  public static ResGetGuildExpRank GetRootAsResGetGuildExpRank(ByteBuffer _bb, ResGetGuildExpRank obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGuildExpRank __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildRankInfo? GuildInfos(int j) { int o = __p.__offset(4); return o != 0 ? (GuildRankInfo?)(new GuildRankInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGuildExpRank> CreateResGetGuildExpRank(FlatBufferBuilder builder,
      VectorOffset guild_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetGuildExpRank.AddGuildInfos(builder, guild_infosOffset);
    return ResGetGuildExpRank.EndResGetGuildExpRank(builder);
  }

  public static void StartResGetGuildExpRank(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfos(FlatBufferBuilder builder, VectorOffset guildInfosOffset) { builder.AddOffset(0, guildInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildInfosVector(FlatBufferBuilder builder, Offset<GuildRankInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildRankInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGuildExpRank> EndResGetGuildExpRank(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGuildExpRank>(o);
  }
};

public struct ReqGetGuildAllianceList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGuildAllianceList GetRootAsReqGetGuildAllianceList(ByteBuffer _bb) { return GetRootAsReqGetGuildAllianceList(_bb, new ReqGetGuildAllianceList()); }
  public static ReqGetGuildAllianceList GetRootAsReqGetGuildAllianceList(ByteBuffer _bb, ReqGetGuildAllianceList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGuildAllianceList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceState States(int j) { int o = __p.__offset(6); return o != 0 ? (E_GuildAllianceState)__p.bb.Get(__p.__vector(o) + j * 1) : (E_GuildAllianceState)0; }
  public int StatesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStatesBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetStatesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public E_GuildAllianceState[] GetStatesArray() { return __p.__vector_as_array<E_GuildAllianceState>(6); }

  public static Offset<ReqGetGuildAllianceList> CreateReqGetGuildAllianceList(FlatBufferBuilder builder,
      ulong guild_id = 0,
      VectorOffset statesOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqGetGuildAllianceList.AddGuildId(builder, guild_id);
    ReqGetGuildAllianceList.AddStates(builder, statesOffset);
    return ReqGetGuildAllianceList.EndReqGetGuildAllianceList(builder);
  }

  public static void StartReqGetGuildAllianceList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddStates(FlatBufferBuilder builder, VectorOffset statesOffset) { builder.AddOffset(1, statesOffset.Value, 0); }
  public static VectorOffset CreateStatesVector(FlatBufferBuilder builder, E_GuildAllianceState[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateStatesVectorBlock(FlatBufferBuilder builder, E_GuildAllianceState[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartStatesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ReqGetGuildAllianceList> EndReqGetGuildAllianceList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGuildAllianceList>(o);
  }
};

public struct ResGetGuildAllianceList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGuildAllianceList GetRootAsResGetGuildAllianceList(ByteBuffer _bb) { return GetRootAsResGetGuildAllianceList(_bb, new ResGetGuildAllianceList()); }
  public static ResGetGuildAllianceList GetRootAsResGetGuildAllianceList(ByteBuffer _bb, ResGetGuildAllianceList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGuildAllianceList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildAllianceInfo? GuildAllianceInfos(int j) { int o = __p.__offset(4); return o != 0 ? (GuildAllianceInfo?)(new GuildAllianceInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildAllianceInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGuildAllianceList> CreateResGetGuildAllianceList(FlatBufferBuilder builder,
      VectorOffset guild_alliance_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetGuildAllianceList.AddGuildAllianceInfos(builder, guild_alliance_infosOffset);
    return ResGetGuildAllianceList.EndResGetGuildAllianceList(builder);
  }

  public static void StartResGetGuildAllianceList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildAllianceInfos(FlatBufferBuilder builder, VectorOffset guildAllianceInfosOffset) { builder.AddOffset(0, guildAllianceInfosOffset.Value, 0); }
  public static VectorOffset CreateGuildAllianceInfosVector(FlatBufferBuilder builder, Offset<GuildAllianceInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildAllianceInfosVectorBlock(FlatBufferBuilder builder, Offset<GuildAllianceInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildAllianceInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGuildAllianceList> EndResGetGuildAllianceList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGuildAllianceList>(o);
  }
};

public struct ReqGuildAllianceRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceRequest GetRootAsReqGuildAllianceRequest(ByteBuffer _bb) { return GetRootAsReqGuildAllianceRequest(_bb, new ReqGuildAllianceRequest()); }
  public static ReqGuildAllianceRequest GetRootAsReqGuildAllianceRequest(ByteBuffer _bb, ReqGuildAllianceRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsEnemy { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string TargetGuildName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetGuildNameBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetTargetGuildNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTargetGuildNameArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ReqGuildAllianceRequest> CreateReqGuildAllianceRequest(FlatBufferBuilder builder,
      ulong guild_id = 0,
      bool is_enemy = false,
      StringOffset target_guild_nameOffset = default(StringOffset)) {
    builder.StartObject(3);
    ReqGuildAllianceRequest.AddGuildId(builder, guild_id);
    ReqGuildAllianceRequest.AddTargetGuildName(builder, target_guild_nameOffset);
    ReqGuildAllianceRequest.AddIsEnemy(builder, is_enemy);
    return ReqGuildAllianceRequest.EndReqGuildAllianceRequest(builder);
  }

  public static void StartReqGuildAllianceRequest(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddIsEnemy(FlatBufferBuilder builder, bool isEnemy) { builder.AddBool(1, isEnemy, false); }
  public static void AddTargetGuildName(FlatBufferBuilder builder, StringOffset targetGuildNameOffset) { builder.AddOffset(2, targetGuildNameOffset.Value, 0); }
  public static Offset<ReqGuildAllianceRequest> EndReqGuildAllianceRequest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceRequest>(o);
  }
};

public struct ResGuildAllianceRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceRequest GetRootAsResGuildAllianceRequest(ByteBuffer _bb) { return GetRootAsResGuildAllianceRequest(_bb, new ResGuildAllianceRequest()); }
  public static ResGuildAllianceRequest GetRootAsResGuildAllianceRequest(ByteBuffer _bb, ResGuildAllianceRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildAllianceInfo? GuildAllianceInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildAllianceInfo?)(new GuildAllianceInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceRequest> CreateResGuildAllianceRequest(FlatBufferBuilder builder,
      Offset<GuildAllianceInfo> guild_alliance_infoOffset = default(Offset<GuildAllianceInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceRequest.AddGuildAllianceInfo(builder, guild_alliance_infoOffset);
    return ResGuildAllianceRequest.EndResGuildAllianceRequest(builder);
  }

  public static void StartResGuildAllianceRequest(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildAllianceInfo(FlatBufferBuilder builder, Offset<GuildAllianceInfo> guildAllianceInfoOffset) { builder.AddOffset(0, guildAllianceInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceRequest> EndResGuildAllianceRequest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceRequest>(o);
  }
};

public struct ReqGuildAllianceAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceAccept GetRootAsReqGuildAllianceAccept(ByteBuffer _bb) { return GetRootAsReqGuildAllianceAccept(_bb, new ReqGuildAllianceAccept()); }
  public static ReqGuildAllianceAccept GetRootAsReqGuildAllianceAccept(ByteBuffer _bb, ReqGuildAllianceAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string GuildName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(6); }
  public ulong TargetGuildId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceAccept> CreateReqGuildAllianceAccept(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      ulong target_guild_id = 0) {
    builder.StartObject(3);
    ReqGuildAllianceAccept.AddTargetGuildId(builder, target_guild_id);
    ReqGuildAllianceAccept.AddGuildId(builder, guild_id);
    ReqGuildAllianceAccept.AddGuildName(builder, guild_nameOffset);
    return ReqGuildAllianceAccept.EndReqGuildAllianceAccept(builder);
  }

  public static void StartReqGuildAllianceAccept(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(1, guildNameOffset.Value, 0); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(2, targetGuildId, 0); }
  public static Offset<ReqGuildAllianceAccept> EndReqGuildAllianceAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceAccept>(o);
  }
};

public struct ResGuildAllianceAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceAccept GetRootAsResGuildAllianceAccept(ByteBuffer _bb) { return GetRootAsResGuildAllianceAccept(_bb, new ResGuildAllianceAccept()); }
  public static ResGuildAllianceAccept GetRootAsResGuildAllianceAccept(ByteBuffer _bb, ResGuildAllianceAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildAllianceInfo? GuildAllianceInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildAllianceInfo?)(new GuildAllianceInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceAccept> CreateResGuildAllianceAccept(FlatBufferBuilder builder,
      Offset<GuildAllianceInfo> guild_alliance_infoOffset = default(Offset<GuildAllianceInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceAccept.AddGuildAllianceInfo(builder, guild_alliance_infoOffset);
    return ResGuildAllianceAccept.EndResGuildAllianceAccept(builder);
  }

  public static void StartResGuildAllianceAccept(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildAllianceInfo(FlatBufferBuilder builder, Offset<GuildAllianceInfo> guildAllianceInfoOffset) { builder.AddOffset(0, guildAllianceInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceAccept> EndResGuildAllianceAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceAccept>(o);
  }
};

public struct ReqGuildAllianceReject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceReject GetRootAsReqGuildAllianceReject(ByteBuffer _bb) { return GetRootAsReqGuildAllianceReject(_bb, new ReqGuildAllianceReject()); }
  public static ReqGuildAllianceReject GetRootAsReqGuildAllianceReject(ByteBuffer _bb, ReqGuildAllianceReject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceReject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong TargetGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceReject> CreateReqGuildAllianceReject(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong target_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceReject.AddTargetGuildId(builder, target_guild_id);
    ReqGuildAllianceReject.AddGuildId(builder, guild_id);
    return ReqGuildAllianceReject.EndReqGuildAllianceReject(builder);
  }

  public static void StartReqGuildAllianceReject(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(1, targetGuildId, 0); }
  public static Offset<ReqGuildAllianceReject> EndReqGuildAllianceReject(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceReject>(o);
  }
};

public struct ResGuildAllianceReject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceReject GetRootAsResGuildAllianceReject(ByteBuffer _bb) { return GetRootAsResGuildAllianceReject(_bb, new ResGuildAllianceReject()); }
  public static ResGuildAllianceReject GetRootAsResGuildAllianceReject(ByteBuffer _bb, ResGuildAllianceReject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceReject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TargetGuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildAllianceReject> CreateResGuildAllianceReject(FlatBufferBuilder builder,
      ulong target_guild_id = 0) {
    builder.StartObject(1);
    ResGuildAllianceReject.AddTargetGuildId(builder, target_guild_id);
    return ResGuildAllianceReject.EndResGuildAllianceReject(builder);
  }

  public static void StartResGuildAllianceReject(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(0, targetGuildId, 0); }
  public static Offset<ResGuildAllianceReject> EndResGuildAllianceReject(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceReject>(o);
  }
};

public struct ReqGuildAllianceRemove : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceRemove GetRootAsReqGuildAllianceRemove(ByteBuffer _bb) { return GetRootAsReqGuildAllianceRemove(_bb, new ReqGuildAllianceRemove()); }
  public static ReqGuildAllianceRemove GetRootAsReqGuildAllianceRemove(ByteBuffer _bb, ReqGuildAllianceRemove obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceRemove __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string GuildName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetGuildNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetGuildNameArray() { return __p.__vector_as_array<byte>(6); }
  public bool IsEnemy { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong TargetGuildId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string TargetGuildName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetGuildNameBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetTargetGuildNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetTargetGuildNameArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<ReqGuildAllianceRemove> CreateReqGuildAllianceRemove(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset guild_nameOffset = default(StringOffset),
      bool is_enemy = false,
      ulong target_guild_id = 0,
      StringOffset target_guild_nameOffset = default(StringOffset)) {
    builder.StartObject(5);
    ReqGuildAllianceRemove.AddTargetGuildId(builder, target_guild_id);
    ReqGuildAllianceRemove.AddGuildId(builder, guild_id);
    ReqGuildAllianceRemove.AddTargetGuildName(builder, target_guild_nameOffset);
    ReqGuildAllianceRemove.AddGuildName(builder, guild_nameOffset);
    ReqGuildAllianceRemove.AddIsEnemy(builder, is_enemy);
    return ReqGuildAllianceRemove.EndReqGuildAllianceRemove(builder);
  }

  public static void StartReqGuildAllianceRemove(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddGuildName(FlatBufferBuilder builder, StringOffset guildNameOffset) { builder.AddOffset(1, guildNameOffset.Value, 0); }
  public static void AddIsEnemy(FlatBufferBuilder builder, bool isEnemy) { builder.AddBool(2, isEnemy, false); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(3, targetGuildId, 0); }
  public static void AddTargetGuildName(FlatBufferBuilder builder, StringOffset targetGuildNameOffset) { builder.AddOffset(4, targetGuildNameOffset.Value, 0); }
  public static Offset<ReqGuildAllianceRemove> EndReqGuildAllianceRemove(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceRemove>(o);
  }
};

public struct ResGuildAllianceRemove : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceRemove GetRootAsResGuildAllianceRemove(ByteBuffer _bb) { return GetRootAsResGuildAllianceRemove(_bb, new ResGuildAllianceRemove()); }
  public static ResGuildAllianceRemove GetRootAsResGuildAllianceRemove(ByteBuffer _bb, ResGuildAllianceRemove obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceRemove __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TargetGuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildAllianceRemove> CreateResGuildAllianceRemove(FlatBufferBuilder builder,
      ulong target_guild_id = 0) {
    builder.StartObject(1);
    ResGuildAllianceRemove.AddTargetGuildId(builder, target_guild_id);
    return ResGuildAllianceRemove.EndResGuildAllianceRemove(builder);
  }

  public static void StartResGuildAllianceRemove(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(0, targetGuildId, 0); }
  public static Offset<ResGuildAllianceRemove> EndResGuildAllianceRemove(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceRemove>(o);
  }
};

public struct ReqGuildDonation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildDonation GetRootAsReqGuildDonation(ByteBuffer _bb) { return GetRootAsReqGuildDonation(_bb, new ReqGuildDonation()); }
  public static ReqGuildDonation GetRootAsReqGuildDonation(ByteBuffer _bb, ReqGuildDonation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildDonation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong GuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildDonationType DonationType { get { int o = __p.__offset(8); return o != 0 ? (E_GuildDonationType)__p.bb.Get(o + __p.bb_pos) : E_GuildDonationType.SMALL; } }
  public ulong UseItemId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildDonation> CreateReqGuildDonation(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong guild_id = 0,
      E_GuildDonationType donation_type = E_GuildDonationType.SMALL,
      ulong use_item_id = 0) {
    builder.StartObject(4);
    ReqGuildDonation.AddUseItemId(builder, use_item_id);
    ReqGuildDonation.AddGuildId(builder, guild_id);
    ReqGuildDonation.AddDonationType(builder, donation_type);
    ReqGuildDonation.AddMarketType(builder, market_type);
    return ReqGuildDonation.EndReqGuildDonation(builder);
  }

  public static void StartReqGuildDonation(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(1, guildId, 0); }
  public static void AddDonationType(FlatBufferBuilder builder, E_GuildDonationType donationType) { builder.AddByte(2, (byte)donationType, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(3, useItemId, 0); }
  public static Offset<ReqGuildDonation> EndReqGuildDonation(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildDonation>(o);
  }
};

public struct ResGuildDonation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildDonation GetRootAsResGuildDonation(ByteBuffer _bb) { return GetRootAsResGuildDonation(_bb, new ResGuildDonation()); }
  public static ResGuildDonation GetRootAsResGuildDonation(ByteBuffer _bb, ResGuildDonation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildDonation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint DonateCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  /// 얻은 길드 공헌도
  public ulong GetGuildExp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  /// 얻은 길드 자금
  public ulong GetGuildMoney { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  /// 얻은 아이템
  public GetItemInfo? GetItem { get { int o = __p.__offset(10); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  /// 삭제된 아이템
  public DelItemInfo? DelItem { get { int o = __p.__offset(12); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GuildInfo? GuildInfo { get { int o = __p.__offset(14); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GuildMemberInfo? GuildMemberInfo { get { int o = __p.__offset(16); return o != 0 ? (GuildMemberInfo?)(new GuildMemberInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(18); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResGuildDonation> CreateResGuildDonation(FlatBufferBuilder builder,
      uint donate_cnt = 0,
      ulong get_guild_exp = 0,
      ulong get_guild_money = 0,
      Offset<GetItemInfo> get_itemOffset = default(Offset<GetItemInfo>),
      Offset<DelItemInfo> del_itemOffset = default(Offset<DelItemInfo>),
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>),
      Offset<GuildMemberInfo> guild_member_infoOffset = default(Offset<GuildMemberInfo>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(9);
    ResGuildDonation.AddGetGuildMoney(builder, get_guild_money);
    ResGuildDonation.AddGetGuildExp(builder, get_guild_exp);
    ResGuildDonation.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResGuildDonation.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResGuildDonation.AddGuildMemberInfo(builder, guild_member_infoOffset);
    ResGuildDonation.AddGuildInfo(builder, guild_infoOffset);
    ResGuildDonation.AddDelItem(builder, del_itemOffset);
    ResGuildDonation.AddGetItem(builder, get_itemOffset);
    ResGuildDonation.AddDonateCnt(builder, donate_cnt);
    return ResGuildDonation.EndResGuildDonation(builder);
  }

  public static void StartResGuildDonation(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddDonateCnt(FlatBufferBuilder builder, uint donateCnt) { builder.AddUint(0, donateCnt, 0); }
  public static void AddGetGuildExp(FlatBufferBuilder builder, ulong getGuildExp) { builder.AddUlong(1, getGuildExp, 0); }
  public static void AddGetGuildMoney(FlatBufferBuilder builder, ulong getGuildMoney) { builder.AddUlong(2, getGuildMoney, 0); }
  public static void AddGetItem(FlatBufferBuilder builder, Offset<GetItemInfo> getItemOffset) { builder.AddOffset(3, getItemOffset.Value, 0); }
  public static void AddDelItem(FlatBufferBuilder builder, Offset<DelItemInfo> delItemOffset) { builder.AddOffset(4, delItemOffset.Value, 0); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(5, guildInfoOffset.Value, 0); }
  public static void AddGuildMemberInfo(FlatBufferBuilder builder, Offset<GuildMemberInfo> guildMemberInfoOffset) { builder.AddOffset(6, guildMemberInfoOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(7, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(8, resultCashCoinBalance, 0); }
  public static Offset<ResGuildDonation> EndResGuildDonation(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildDonation>(o);
  }
};

public struct ReqGetGuildBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGuildBuffList GetRootAsReqGetGuildBuffList(ByteBuffer _bb) { return GetRootAsReqGetGuildBuffList(_bb, new ReqGetGuildBuffList()); }
  public static ReqGetGuildBuffList GetRootAsReqGetGuildBuffList(ByteBuffer _bb, ReqGetGuildBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGuildBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGetGuildBuffList> CreateReqGetGuildBuffList(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGetGuildBuffList.AddGuildId(builder, guild_id);
    return ReqGetGuildBuffList.EndReqGetGuildBuffList(builder);
  }

  public static void StartReqGetGuildBuffList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGetGuildBuffList> EndReqGetGuildBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGuildBuffList>(o);
  }
};

public struct ResGetGuildBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGuildBuffList GetRootAsResGetGuildBuffList(ByteBuffer _bb) { return GetRootAsResGetGuildBuffList(_bb, new ResGetGuildBuffList()); }
  public static ResGetGuildBuffList GetRootAsResGetGuildBuffList(ByteBuffer _bb, ResGetGuildBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGuildBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildBuff? GuildBuffs(int j) { int o = __p.__offset(4); return o != 0 ? (GuildBuff?)(new GuildBuff()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildBuffsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGuildBuffList> CreateResGetGuildBuffList(FlatBufferBuilder builder,
      VectorOffset guild_buffsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetGuildBuffList.AddGuildBuffs(builder, guild_buffsOffset);
    return ResGetGuildBuffList.EndResGetGuildBuffList(builder);
  }

  public static void StartResGetGuildBuffList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildBuffs(FlatBufferBuilder builder, VectorOffset guildBuffsOffset) { builder.AddOffset(0, guildBuffsOffset.Value, 0); }
  public static VectorOffset CreateGuildBuffsVector(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildBuffsVectorBlock(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildBuffsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGuildBuffList> EndResGetGuildBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGuildBuffList>(o);
  }
};

public struct ReqGuildAutoBuyBuffToggle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAutoBuyBuffToggle GetRootAsReqGuildAutoBuyBuffToggle(ByteBuffer _bb) { return GetRootAsReqGuildAutoBuyBuffToggle(_bb, new ReqGuildAutoBuyBuffToggle()); }
  public static ReqGuildAutoBuyBuffToggle GetRootAsReqGuildAutoBuyBuffToggle(ByteBuffer _bb, ReqGuildAutoBuyBuffToggle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAutoBuyBuffToggle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint AbilityAcid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsAutoBuy { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqGuildAutoBuyBuffToggle> CreateReqGuildAutoBuyBuffToggle(FlatBufferBuilder builder,
      ulong guild_id = 0,
      uint ability_acid = 0,
      bool is_auto_buy = false) {
    builder.StartObject(3);
    ReqGuildAutoBuyBuffToggle.AddGuildId(builder, guild_id);
    ReqGuildAutoBuyBuffToggle.AddAbilityAcid(builder, ability_acid);
    ReqGuildAutoBuyBuffToggle.AddIsAutoBuy(builder, is_auto_buy);
    return ReqGuildAutoBuyBuffToggle.EndReqGuildAutoBuyBuffToggle(builder);
  }

  public static void StartReqGuildAutoBuyBuffToggle(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddAbilityAcid(FlatBufferBuilder builder, uint abilityAcid) { builder.AddUint(1, abilityAcid, 0); }
  public static void AddIsAutoBuy(FlatBufferBuilder builder, bool isAutoBuy) { builder.AddBool(2, isAutoBuy, false); }
  public static Offset<ReqGuildAutoBuyBuffToggle> EndReqGuildAutoBuyBuffToggle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAutoBuyBuffToggle>(o);
  }
};

public struct ResGuildAutoBuyBuffToggle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAutoBuyBuffToggle GetRootAsResGuildAutoBuyBuffToggle(ByteBuffer _bb) { return GetRootAsResGuildAutoBuyBuffToggle(_bb, new ResGuildAutoBuyBuffToggle()); }
  public static ResGuildAutoBuyBuffToggle GetRootAsResGuildAutoBuyBuffToggle(ByteBuffer _bb, ResGuildAutoBuyBuffToggle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAutoBuyBuffToggle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildBuff? GuildBuff { get { int o = __p.__offset(4); return o != 0 ? (GuildBuff?)(new GuildBuff()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAutoBuyBuffToggle> CreateResGuildAutoBuyBuffToggle(FlatBufferBuilder builder,
      Offset<GuildBuff> guild_buffOffset = default(Offset<GuildBuff>)) {
    builder.StartObject(1);
    ResGuildAutoBuyBuffToggle.AddGuildBuff(builder, guild_buffOffset);
    return ResGuildAutoBuyBuffToggle.EndResGuildAutoBuyBuffToggle(builder);
  }

  public static void StartResGuildAutoBuyBuffToggle(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildBuff(FlatBufferBuilder builder, Offset<GuildBuff> guildBuffOffset) { builder.AddOffset(0, guildBuffOffset.Value, 0); }
  public static Offset<ResGuildAutoBuyBuffToggle> EndResGuildAutoBuyBuffToggle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAutoBuyBuffToggle>(o);
  }
};

public struct ReqGuildBuyBuff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildBuyBuff GetRootAsReqGuildBuyBuff(ByteBuffer _bb) { return GetRootAsReqGuildBuyBuff(_bb, new ReqGuildBuyBuff()); }
  public static ReqGuildBuyBuff GetRootAsReqGuildBuyBuff(ByteBuffer _bb, ReqGuildBuyBuff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildBuyBuff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GuildBuffTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsAutoBuy { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqGuildBuyBuff> CreateReqGuildBuyBuff(FlatBufferBuilder builder,
      ulong guild_id = 0,
      uint guild_buff_tid = 0,
      bool is_auto_buy = false) {
    builder.StartObject(3);
    ReqGuildBuyBuff.AddGuildId(builder, guild_id);
    ReqGuildBuyBuff.AddGuildBuffTid(builder, guild_buff_tid);
    ReqGuildBuyBuff.AddIsAutoBuy(builder, is_auto_buy);
    return ReqGuildBuyBuff.EndReqGuildBuyBuff(builder);
  }

  public static void StartReqGuildBuyBuff(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddGuildBuffTid(FlatBufferBuilder builder, uint guildBuffTid) { builder.AddUint(1, guildBuffTid, 0); }
  public static void AddIsAutoBuy(FlatBufferBuilder builder, bool isAutoBuy) { builder.AddBool(2, isAutoBuy, false); }
  public static Offset<ReqGuildBuyBuff> EndReqGuildBuyBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildBuyBuff>(o);
  }
};

public struct ResGuildBuyBuff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildBuyBuff GetRootAsResGuildBuyBuff(ByteBuffer _bb) { return GetRootAsResGuildBuyBuff(_bb, new ResGuildBuyBuff()); }
  public static ResGuildBuyBuff GetRootAsResGuildBuyBuff(ByteBuffer _bb, ResGuildBuyBuff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildBuyBuff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GuildBuff? GuildBuff { get { int o = __p.__offset(6); return o != 0 ? (GuildBuff?)(new GuildBuff()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildBuyBuff> CreateResGuildBuyBuff(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>),
      Offset<GuildBuff> guild_buffOffset = default(Offset<GuildBuff>)) {
    builder.StartObject(2);
    ResGuildBuyBuff.AddGuildBuff(builder, guild_buffOffset);
    ResGuildBuyBuff.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildBuyBuff.EndResGuildBuyBuff(builder);
  }

  public static void StartResGuildBuyBuff(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static void AddGuildBuff(FlatBufferBuilder builder, Offset<GuildBuff> guildBuffOffset) { builder.AddOffset(1, guildBuffOffset.Value, 0); }
  public static Offset<ResGuildBuyBuff> EndResGuildBuyBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildBuyBuff>(o);
  }
};

public struct ReqUpdateGuildMemberComment : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqUpdateGuildMemberComment GetRootAsReqUpdateGuildMemberComment(ByteBuffer _bb) { return GetRootAsReqUpdateGuildMemberComment(_bb, new ReqUpdateGuildMemberComment()); }
  public static ReqUpdateGuildMemberComment GetRootAsReqUpdateGuildMemberComment(ByteBuffer _bb, ReqUpdateGuildMemberComment obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqUpdateGuildMemberComment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Comment { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCommentBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCommentBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCommentArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqUpdateGuildMemberComment> CreateReqUpdateGuildMemberComment(FlatBufferBuilder builder,
      ulong guild_id = 0,
      StringOffset commentOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqUpdateGuildMemberComment.AddGuildId(builder, guild_id);
    ReqUpdateGuildMemberComment.AddComment(builder, commentOffset);
    return ReqUpdateGuildMemberComment.EndReqUpdateGuildMemberComment(builder);
  }

  public static void StartReqUpdateGuildMemberComment(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddComment(FlatBufferBuilder builder, StringOffset commentOffset) { builder.AddOffset(1, commentOffset.Value, 0); }
  public static Offset<ReqUpdateGuildMemberComment> EndReqUpdateGuildMemberComment(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqUpdateGuildMemberComment>(o);
  }
};

public struct ResUpdateGuildMemberComment : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResUpdateGuildMemberComment GetRootAsResUpdateGuildMemberComment(ByteBuffer _bb) { return GetRootAsResUpdateGuildMemberComment(_bb, new ResUpdateGuildMemberComment()); }
  public static ResUpdateGuildMemberComment GetRootAsResUpdateGuildMemberComment(ByteBuffer _bb, ResUpdateGuildMemberComment obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResUpdateGuildMemberComment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResUpdateGuildMemberComment(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResUpdateGuildMemberComment> EndResUpdateGuildMemberComment(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResUpdateGuildMemberComment>(o);
  }
};

public struct ReqGuildAllianceCreateChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceCreateChat GetRootAsReqGuildAllianceCreateChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceCreateChat(_bb, new ReqGuildAllianceCreateChat()); }
  public static ReqGuildAllianceCreateChat GetRootAsReqGuildAllianceCreateChat(ByteBuffer _bb, ReqGuildAllianceCreateChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceCreateChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceCreateChat> CreateReqGuildAllianceCreateChat(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildAllianceCreateChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceCreateChat.EndReqGuildAllianceCreateChat(builder);
  }

  public static void StartReqGuildAllianceCreateChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildAllianceCreateChat> EndReqGuildAllianceCreateChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceCreateChat>(o);
  }
};

public struct ResGuildAllianceCreateChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceCreateChat GetRootAsResGuildAllianceCreateChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceCreateChat(_bb, new ResGuildAllianceCreateChat()); }
  public static ResGuildAllianceCreateChat GetRootAsResGuildAllianceCreateChat(ByteBuffer _bb, ResGuildAllianceCreateChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceCreateChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceCreateChat> CreateResGuildAllianceCreateChat(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceCreateChat.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceCreateChat.EndResGuildAllianceCreateChat(builder);
  }

  public static void StartResGuildAllianceCreateChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceCreateChat> EndResGuildAllianceCreateChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceCreateChat>(o);
  }
};

public struct ReqGuildAllianceRequestChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceRequestChat GetRootAsReqGuildAllianceRequestChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceRequestChat(_bb, new ReqGuildAllianceRequestChat()); }
  public static ReqGuildAllianceRequestChat GetRootAsReqGuildAllianceRequestChat(ByteBuffer _bb, ReqGuildAllianceRequestChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceRequestChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong MasterGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceRequestChat> CreateReqGuildAllianceRequestChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong master_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceRequestChat.AddMasterGuildId(builder, master_guild_id);
    ReqGuildAllianceRequestChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceRequestChat.EndReqGuildAllianceRequestChat(builder);
  }

  public static void StartReqGuildAllianceRequestChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddMasterGuildId(FlatBufferBuilder builder, ulong masterGuildId) { builder.AddUlong(1, masterGuildId, 0); }
  public static Offset<ReqGuildAllianceRequestChat> EndReqGuildAllianceRequestChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceRequestChat>(o);
  }
};

public struct ResGuildAllianceRequestChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceRequestChat GetRootAsResGuildAllianceRequestChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceRequestChat(_bb, new ResGuildAllianceRequestChat()); }
  public static ResGuildAllianceRequestChat GetRootAsResGuildAllianceRequestChat(ByteBuffer _bb, ResGuildAllianceRequestChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceRequestChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceRequestChat> CreateResGuildAllianceRequestChat(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceRequestChat.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceRequestChat.EndResGuildAllianceRequestChat(builder);
  }

  public static void StartResGuildAllianceRequestChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceRequestChat> EndResGuildAllianceRequestChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceRequestChat>(o);
  }
};

public struct ReqGuildAllianceCancelChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceCancelChat GetRootAsReqGuildAllianceCancelChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceCancelChat(_bb, new ReqGuildAllianceCancelChat()); }
  public static ReqGuildAllianceCancelChat GetRootAsReqGuildAllianceCancelChat(ByteBuffer _bb, ReqGuildAllianceCancelChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceCancelChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceCancelChat> CreateReqGuildAllianceCancelChat(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildAllianceCancelChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceCancelChat.EndReqGuildAllianceCancelChat(builder);
  }

  public static void StartReqGuildAllianceCancelChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildAllianceCancelChat> EndReqGuildAllianceCancelChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceCancelChat>(o);
  }
};

public struct ResGuildAllianceCancelChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceCancelChat GetRootAsResGuildAllianceCancelChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceCancelChat(_bb, new ResGuildAllianceCancelChat()); }
  public static ResGuildAllianceCancelChat GetRootAsResGuildAllianceCancelChat(ByteBuffer _bb, ResGuildAllianceCancelChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceCancelChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceCancelChat> CreateResGuildAllianceCancelChat(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceCancelChat.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceCancelChat.EndResGuildAllianceCancelChat(builder);
  }

  public static void StartResGuildAllianceCancelChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceCancelChat> EndResGuildAllianceCancelChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceCancelChat>(o);
  }
};

public struct ReqGuildAllianceAcceptChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceAcceptChat GetRootAsReqGuildAllianceAcceptChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceAcceptChat(_bb, new ReqGuildAllianceAcceptChat()); }
  public static ReqGuildAllianceAcceptChat GetRootAsReqGuildAllianceAcceptChat(ByteBuffer _bb, ReqGuildAllianceAcceptChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceAcceptChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong AcceptGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceAcceptChat> CreateReqGuildAllianceAcceptChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong accept_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceAcceptChat.AddAcceptGuildId(builder, accept_guild_id);
    ReqGuildAllianceAcceptChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceAcceptChat.EndReqGuildAllianceAcceptChat(builder);
  }

  public static void StartReqGuildAllianceAcceptChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddAcceptGuildId(FlatBufferBuilder builder, ulong acceptGuildId) { builder.AddUlong(1, acceptGuildId, 0); }
  public static Offset<ReqGuildAllianceAcceptChat> EndReqGuildAllianceAcceptChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceAcceptChat>(o);
  }
};

public struct ResGuildAllianceAcceptChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceAcceptChat GetRootAsResGuildAllianceAcceptChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceAcceptChat(_bb, new ResGuildAllianceAcceptChat()); }
  public static ResGuildAllianceAcceptChat GetRootAsResGuildAllianceAcceptChat(ByteBuffer _bb, ResGuildAllianceAcceptChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceAcceptChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildAllianceAcceptChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildAllianceAcceptChat> EndResGuildAllianceAcceptChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceAcceptChat>(o);
  }
};

public struct ReqGuildAllianceRejectChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceRejectChat GetRootAsReqGuildAllianceRejectChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceRejectChat(_bb, new ReqGuildAllianceRejectChat()); }
  public static ReqGuildAllianceRejectChat GetRootAsReqGuildAllianceRejectChat(ByteBuffer _bb, ReqGuildAllianceRejectChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceRejectChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong RejectGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceRejectChat> CreateReqGuildAllianceRejectChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong reject_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceRejectChat.AddRejectGuildId(builder, reject_guild_id);
    ReqGuildAllianceRejectChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceRejectChat.EndReqGuildAllianceRejectChat(builder);
  }

  public static void StartReqGuildAllianceRejectChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddRejectGuildId(FlatBufferBuilder builder, ulong rejectGuildId) { builder.AddUlong(1, rejectGuildId, 0); }
  public static Offset<ReqGuildAllianceRejectChat> EndReqGuildAllianceRejectChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceRejectChat>(o);
  }
};

public struct ResGuildAllianceRejectChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceRejectChat GetRootAsResGuildAllianceRejectChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceRejectChat(_bb, new ResGuildAllianceRejectChat()); }
  public static ResGuildAllianceRejectChat GetRootAsResGuildAllianceRejectChat(ByteBuffer _bb, ResGuildAllianceRejectChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceRejectChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildAllianceRejectChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildAllianceRejectChat> EndResGuildAllianceRejectChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceRejectChat>(o);
  }
};

public struct ReqGuildAllianceInviteRequestChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceInviteRequestChat GetRootAsReqGuildAllianceInviteRequestChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceInviteRequestChat(_bb, new ReqGuildAllianceInviteRequestChat()); }
  public static ReqGuildAllianceInviteRequestChat GetRootAsReqGuildAllianceInviteRequestChat(ByteBuffer _bb, ReqGuildAllianceInviteRequestChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceInviteRequestChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong InviteGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceInviteRequestChat> CreateReqGuildAllianceInviteRequestChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong invite_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceInviteRequestChat.AddInviteGuildId(builder, invite_guild_id);
    ReqGuildAllianceInviteRequestChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceInviteRequestChat.EndReqGuildAllianceInviteRequestChat(builder);
  }

  public static void StartReqGuildAllianceInviteRequestChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddInviteGuildId(FlatBufferBuilder builder, ulong inviteGuildId) { builder.AddUlong(1, inviteGuildId, 0); }
  public static Offset<ReqGuildAllianceInviteRequestChat> EndReqGuildAllianceInviteRequestChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceInviteRequestChat>(o);
  }
};

public struct ResGuildAllianceInviteRequestChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceInviteRequestChat GetRootAsResGuildAllianceInviteRequestChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceInviteRequestChat(_bb, new ResGuildAllianceInviteRequestChat()); }
  public static ResGuildAllianceInviteRequestChat GetRootAsResGuildAllianceInviteRequestChat(ByteBuffer _bb, ResGuildAllianceInviteRequestChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceInviteRequestChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildAllianceInviteRequestChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildAllianceInviteRequestChat> EndResGuildAllianceInviteRequestChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceInviteRequestChat>(o);
  }
};

public struct ReqGuildAllianceInviteCancelChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceInviteCancelChat GetRootAsReqGuildAllianceInviteCancelChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceInviteCancelChat(_bb, new ReqGuildAllianceInviteCancelChat()); }
  public static ReqGuildAllianceInviteCancelChat GetRootAsReqGuildAllianceInviteCancelChat(ByteBuffer _bb, ReqGuildAllianceInviteCancelChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceInviteCancelChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CancelGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceInviteCancelChat> CreateReqGuildAllianceInviteCancelChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong cancel_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceInviteCancelChat.AddCancelGuildId(builder, cancel_guild_id);
    ReqGuildAllianceInviteCancelChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceInviteCancelChat.EndReqGuildAllianceInviteCancelChat(builder);
  }

  public static void StartReqGuildAllianceInviteCancelChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddCancelGuildId(FlatBufferBuilder builder, ulong cancelGuildId) { builder.AddUlong(1, cancelGuildId, 0); }
  public static Offset<ReqGuildAllianceInviteCancelChat> EndReqGuildAllianceInviteCancelChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceInviteCancelChat>(o);
  }
};

public struct ResGuildAllianceInviteCancelChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceInviteCancelChat GetRootAsResGuildAllianceInviteCancelChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceInviteCancelChat(_bb, new ResGuildAllianceInviteCancelChat()); }
  public static ResGuildAllianceInviteCancelChat GetRootAsResGuildAllianceInviteCancelChat(ByteBuffer _bb, ResGuildAllianceInviteCancelChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceInviteCancelChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildAllianceInviteCancelChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildAllianceInviteCancelChat> EndResGuildAllianceInviteCancelChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceInviteCancelChat>(o);
  }
};

public struct ReqGuildAllianceInviteAcceptChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceInviteAcceptChat GetRootAsReqGuildAllianceInviteAcceptChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceInviteAcceptChat(_bb, new ReqGuildAllianceInviteAcceptChat()); }
  public static ReqGuildAllianceInviteAcceptChat GetRootAsReqGuildAllianceInviteAcceptChat(ByteBuffer _bb, ReqGuildAllianceInviteAcceptChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceInviteAcceptChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceInviteAcceptChat> CreateReqGuildAllianceInviteAcceptChat(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildAllianceInviteAcceptChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceInviteAcceptChat.EndReqGuildAllianceInviteAcceptChat(builder);
  }

  public static void StartReqGuildAllianceInviteAcceptChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildAllianceInviteAcceptChat> EndReqGuildAllianceInviteAcceptChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceInviteAcceptChat>(o);
  }
};

public struct ResGuildAllianceInviteAcceptChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceInviteAcceptChat GetRootAsResGuildAllianceInviteAcceptChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceInviteAcceptChat(_bb, new ResGuildAllianceInviteAcceptChat()); }
  public static ResGuildAllianceInviteAcceptChat GetRootAsResGuildAllianceInviteAcceptChat(ByteBuffer _bb, ResGuildAllianceInviteAcceptChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceInviteAcceptChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceInviteAcceptChat> CreateResGuildAllianceInviteAcceptChat(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceInviteAcceptChat.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceInviteAcceptChat.EndResGuildAllianceInviteAcceptChat(builder);
  }

  public static void StartResGuildAllianceInviteAcceptChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceInviteAcceptChat> EndResGuildAllianceInviteAcceptChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceInviteAcceptChat>(o);
  }
};

public struct ReqGuildAllianceLeaveChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceLeaveChat GetRootAsReqGuildAllianceLeaveChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceLeaveChat(_bb, new ReqGuildAllianceLeaveChat()); }
  public static ReqGuildAllianceLeaveChat GetRootAsReqGuildAllianceLeaveChat(ByteBuffer _bb, ReqGuildAllianceLeaveChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceLeaveChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ChatId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public E_GuildAllianceChatGrade ChatGrade { get { int o = __p.__offset(8); return o != 0 ? (E_GuildAllianceChatGrade)__p.bb.Get(o + __p.bb_pos) : E_GuildAllianceChatGrade.None; } }

  public static Offset<ReqGuildAllianceLeaveChat> CreateReqGuildAllianceLeaveChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong chat_id = 0,
      E_GuildAllianceChatGrade chat_grade = E_GuildAllianceChatGrade.None) {
    builder.StartObject(3);
    ReqGuildAllianceLeaveChat.AddChatId(builder, chat_id);
    ReqGuildAllianceLeaveChat.AddGuildId(builder, guild_id);
    ReqGuildAllianceLeaveChat.AddChatGrade(builder, chat_grade);
    return ReqGuildAllianceLeaveChat.EndReqGuildAllianceLeaveChat(builder);
  }

  public static void StartReqGuildAllianceLeaveChat(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddChatId(FlatBufferBuilder builder, ulong chatId) { builder.AddUlong(1, chatId, 0); }
  public static void AddChatGrade(FlatBufferBuilder builder, E_GuildAllianceChatGrade chatGrade) { builder.AddByte(2, (byte)chatGrade, 0); }
  public static Offset<ReqGuildAllianceLeaveChat> EndReqGuildAllianceLeaveChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceLeaveChat>(o);
  }
};

public struct ResGuildAllianceLeaveChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceLeaveChat GetRootAsResGuildAllianceLeaveChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceLeaveChat(_bb, new ResGuildAllianceLeaveChat()); }
  public static ResGuildAllianceLeaveChat GetRootAsResGuildAllianceLeaveChat(ByteBuffer _bb, ResGuildAllianceLeaveChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceLeaveChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceLeaveChat> CreateResGuildAllianceLeaveChat(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceLeaveChat.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceLeaveChat.EndResGuildAllianceLeaveChat(builder);
  }

  public static void StartResGuildAllianceLeaveChat(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceLeaveChat> EndResGuildAllianceLeaveChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceLeaveChat>(o);
  }
};

public struct ReqGuildAllianceBanChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceBanChat GetRootAsReqGuildAllianceBanChat(ByteBuffer _bb) { return GetRootAsReqGuildAllianceBanChat(_bb, new ReqGuildAllianceBanChat()); }
  public static ReqGuildAllianceBanChat GetRootAsReqGuildAllianceBanChat(ByteBuffer _bb, ReqGuildAllianceBanChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceBanChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong TargetGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceBanChat> CreateReqGuildAllianceBanChat(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong target_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceBanChat.AddTargetGuildId(builder, target_guild_id);
    ReqGuildAllianceBanChat.AddGuildId(builder, guild_id);
    return ReqGuildAllianceBanChat.EndReqGuildAllianceBanChat(builder);
  }

  public static void StartReqGuildAllianceBanChat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddTargetGuildId(FlatBufferBuilder builder, ulong targetGuildId) { builder.AddUlong(1, targetGuildId, 0); }
  public static Offset<ReqGuildAllianceBanChat> EndReqGuildAllianceBanChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceBanChat>(o);
  }
};

public struct ResGuildAllianceBanChat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceBanChat GetRootAsResGuildAllianceBanChat(ByteBuffer _bb) { return GetRootAsResGuildAllianceBanChat(_bb, new ResGuildAllianceBanChat()); }
  public static ResGuildAllianceBanChat GetRootAsResGuildAllianceBanChat(ByteBuffer _bb, ResGuildAllianceBanChat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceBanChat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGuildAllianceBanChat(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGuildAllianceBanChat> EndResGuildAllianceBanChat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceBanChat>(o);
  }
};

public struct ReqGuildAllianceChangeMaster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildAllianceChangeMaster GetRootAsReqGuildAllianceChangeMaster(ByteBuffer _bb) { return GetRootAsReqGuildAllianceChangeMaster(_bb, new ReqGuildAllianceChangeMaster()); }
  public static ReqGuildAllianceChangeMaster GetRootAsReqGuildAllianceChangeMaster(ByteBuffer _bb, ReqGuildAllianceChangeMaster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildAllianceChangeMaster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ChangeGuildId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildAllianceChangeMaster> CreateReqGuildAllianceChangeMaster(FlatBufferBuilder builder,
      ulong guild_id = 0,
      ulong change_guild_id = 0) {
    builder.StartObject(2);
    ReqGuildAllianceChangeMaster.AddChangeGuildId(builder, change_guild_id);
    ReqGuildAllianceChangeMaster.AddGuildId(builder, guild_id);
    return ReqGuildAllianceChangeMaster.EndReqGuildAllianceChangeMaster(builder);
  }

  public static void StartReqGuildAllianceChangeMaster(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddChangeGuildId(FlatBufferBuilder builder, ulong changeGuildId) { builder.AddUlong(1, changeGuildId, 0); }
  public static Offset<ReqGuildAllianceChangeMaster> EndReqGuildAllianceChangeMaster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildAllianceChangeMaster>(o);
  }
};

public struct ResGuildAllianceChangeMaster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildAllianceChangeMaster GetRootAsResGuildAllianceChangeMaster(ByteBuffer _bb) { return GetRootAsResGuildAllianceChangeMaster(_bb, new ResGuildAllianceChangeMaster()); }
  public static ResGuildAllianceChangeMaster GetRootAsResGuildAllianceChangeMaster(ByteBuffer _bb, ResGuildAllianceChangeMaster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildAllianceChangeMaster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildInfo? GuildInfo { get { int o = __p.__offset(4); return o != 0 ? (GuildInfo?)(new GuildInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildAllianceChangeMaster> CreateResGuildAllianceChangeMaster(FlatBufferBuilder builder,
      Offset<GuildInfo> guild_infoOffset = default(Offset<GuildInfo>)) {
    builder.StartObject(1);
    ResGuildAllianceChangeMaster.AddGuildInfo(builder, guild_infoOffset);
    return ResGuildAllianceChangeMaster.EndResGuildAllianceChangeMaster(builder);
  }

  public static void StartResGuildAllianceChangeMaster(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildInfo(FlatBufferBuilder builder, Offset<GuildInfo> guildInfoOffset) { builder.AddOffset(0, guildInfoOffset.Value, 0); }
  public static Offset<ResGuildAllianceChangeMaster> EndResGuildAllianceChangeMaster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildAllianceChangeMaster>(o);
  }
};

public struct ReqGuildDungeonInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildDungeonInfo GetRootAsReqGuildDungeonInfo(ByteBuffer _bb) { return GetRootAsReqGuildDungeonInfo(_bb, new ReqGuildDungeonInfo()); }
  public static ReqGuildDungeonInfo GetRootAsReqGuildDungeonInfo(ByteBuffer _bb, ReqGuildDungeonInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildDungeonInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqGuildDungeonInfo> CreateReqGuildDungeonInfo(FlatBufferBuilder builder,
      ulong guild_id = 0) {
    builder.StartObject(1);
    ReqGuildDungeonInfo.AddGuildId(builder, guild_id);
    return ReqGuildDungeonInfo.EndReqGuildDungeonInfo(builder);
  }

  public static void StartReqGuildDungeonInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static Offset<ReqGuildDungeonInfo> EndReqGuildDungeonInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildDungeonInfo>(o);
  }
};

public struct ResGuildDungeonInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildDungeonInfo GetRootAsResGuildDungeonInfo(ByteBuffer _bb) { return GetRootAsResGuildDungeonInfo(_bb, new ResGuildDungeonInfo()); }
  public static ResGuildDungeonInfo GetRootAsResGuildDungeonInfo(ByteBuffer _bb, ResGuildDungeonInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildDungeonInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildDungeonInfo? Info(int j) { int o = __p.__offset(4); return o != 0 ? (GuildDungeonInfo?)(new GuildDungeonInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint DungeonOpenCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong DungeonLastOpenDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildDungeonInfo> CreateResGuildDungeonInfo(FlatBufferBuilder builder,
      VectorOffset infoOffset = default(VectorOffset),
      uint dungeon_open_cnt = 0,
      ulong dungeon_last_open_dt = 0) {
    builder.StartObject(3);
    ResGuildDungeonInfo.AddDungeonLastOpenDt(builder, dungeon_last_open_dt);
    ResGuildDungeonInfo.AddDungeonOpenCnt(builder, dungeon_open_cnt);
    ResGuildDungeonInfo.AddInfo(builder, infoOffset);
    return ResGuildDungeonInfo.EndResGuildDungeonInfo(builder);
  }

  public static void StartResGuildDungeonInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddInfo(FlatBufferBuilder builder, VectorOffset infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static VectorOffset CreateInfoVector(FlatBufferBuilder builder, Offset<GuildDungeonInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInfoVectorBlock(FlatBufferBuilder builder, Offset<GuildDungeonInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDungeonOpenCnt(FlatBufferBuilder builder, uint dungeonOpenCnt) { builder.AddUint(1, dungeonOpenCnt, 0); }
  public static void AddDungeonLastOpenDt(FlatBufferBuilder builder, ulong dungeonLastOpenDt) { builder.AddUlong(2, dungeonLastOpenDt, 0); }
  public static Offset<ResGuildDungeonInfo> EndResGuildDungeonInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildDungeonInfo>(o);
  }
};

public struct ReqGuildDungeonOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildDungeonOpen GetRootAsReqGuildDungeonOpen(ByteBuffer _bb) { return GetRootAsReqGuildDungeonOpen(_bb, new ReqGuildDungeonOpen()); }
  public static ReqGuildDungeonOpen GetRootAsReqGuildDungeonOpen(ByteBuffer _bb, ReqGuildDungeonOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildDungeonOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GuildId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint StageTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGuildDungeonOpen> CreateReqGuildDungeonOpen(FlatBufferBuilder builder,
      ulong guild_id = 0,
      uint stage_tid = 0) {
    builder.StartObject(2);
    ReqGuildDungeonOpen.AddGuildId(builder, guild_id);
    ReqGuildDungeonOpen.AddStageTid(builder, stage_tid);
    return ReqGuildDungeonOpen.EndReqGuildDungeonOpen(builder);
  }

  public static void StartReqGuildDungeonOpen(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGuildId(FlatBufferBuilder builder, ulong guildId) { builder.AddUlong(0, guildId, 0); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(1, stageTid, 0); }
  public static Offset<ReqGuildDungeonOpen> EndReqGuildDungeonOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildDungeonOpen>(o);
  }
};

public struct ResGuildDungeonOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildDungeonOpen GetRootAsResGuildDungeonOpen(ByteBuffer _bb) { return GetRootAsResGuildDungeonOpen(_bb, new ResGuildDungeonOpen()); }
  public static ResGuildDungeonOpen GetRootAsResGuildDungeonOpen(ByteBuffer _bb, ResGuildDungeonOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildDungeonOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildDungeonInfo? Info { get { int o = __p.__offset(4); return o != 0 ? (GuildDungeonInfo?)(new GuildDungeonInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ulong RemainGuildMoney { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte RemainDungeonOpenCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong RemainDungeonLastOpenDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildDungeonOpen> CreateResGuildDungeonOpen(FlatBufferBuilder builder,
      Offset<GuildDungeonInfo> infoOffset = default(Offset<GuildDungeonInfo>),
      ulong remain_guild_money = 0,
      byte remain_dungeon_open_cnt = 0,
      ulong remain_dungeon_last_open_dt = 0) {
    builder.StartObject(4);
    ResGuildDungeonOpen.AddRemainDungeonLastOpenDt(builder, remain_dungeon_last_open_dt);
    ResGuildDungeonOpen.AddRemainGuildMoney(builder, remain_guild_money);
    ResGuildDungeonOpen.AddInfo(builder, infoOffset);
    ResGuildDungeonOpen.AddRemainDungeonOpenCnt(builder, remain_dungeon_open_cnt);
    return ResGuildDungeonOpen.EndResGuildDungeonOpen(builder);
  }

  public static void StartResGuildDungeonOpen(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddInfo(FlatBufferBuilder builder, Offset<GuildDungeonInfo> infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static void AddRemainGuildMoney(FlatBufferBuilder builder, ulong remainGuildMoney) { builder.AddUlong(1, remainGuildMoney, 0); }
  public static void AddRemainDungeonOpenCnt(FlatBufferBuilder builder, byte remainDungeonOpenCnt) { builder.AddByte(2, remainDungeonOpenCnt, 0); }
  public static void AddRemainDungeonLastOpenDt(FlatBufferBuilder builder, ulong remainDungeonLastOpenDt) { builder.AddUlong(3, remainDungeonLastOpenDt, 0); }
  public static Offset<ResGuildDungeonOpen> EndResGuildDungeonOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildDungeonOpen>(o);
  }
};

public struct ReqGuildDungeonEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildDungeonEnter GetRootAsReqGuildDungeonEnter(ByteBuffer _bb) { return GetRootAsReqGuildDungeonEnter(_bb, new ReqGuildDungeonEnter()); }
  public static ReqGuildDungeonEnter GetRootAsReqGuildDungeonEnter(ByteBuffer _bb, ReqGuildDungeonEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildDungeonEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PortalTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGuildDungeonEnter> CreateReqGuildDungeonEnter(FlatBufferBuilder builder,
      uint portal_tid = 0) {
    builder.StartObject(1);
    ReqGuildDungeonEnter.AddPortalTid(builder, portal_tid);
    return ReqGuildDungeonEnter.EndReqGuildDungeonEnter(builder);
  }

  public static void StartReqGuildDungeonEnter(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPortalTid(FlatBufferBuilder builder, uint portalTid) { builder.AddUint(0, portalTid, 0); }
  public static Offset<ReqGuildDungeonEnter> EndReqGuildDungeonEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildDungeonEnter>(o);
  }
};

public struct ResGuildDungeonEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildDungeonEnter GetRootAsResGuildDungeonEnter(ByteBuffer _bb) { return GetRootAsResGuildDungeonEnter(_bb, new ResGuildDungeonEnter()); }
  public static ResGuildDungeonEnter GetRootAsResGuildDungeonEnter(ByteBuffer _bb, ResGuildDungeonEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildDungeonEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string JoinAddr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(6); }
  public ulong RoomNo { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGuildDungeonEnter> CreateResGuildDungeonEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      StringOffset join_addrOffset = default(StringOffset),
      ulong room_no = 0) {
    builder.StartObject(3);
    ResGuildDungeonEnter.AddRoomNo(builder, room_no);
    ResGuildDungeonEnter.AddJoinAddr(builder, join_addrOffset);
    ResGuildDungeonEnter.AddStageTid(builder, stage_tid);
    return ResGuildDungeonEnter.EndResGuildDungeonEnter(builder);
  }

  public static void StartResGuildDungeonEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(1, joinAddrOffset.Value, 0); }
  public static void AddRoomNo(FlatBufferBuilder builder, ulong roomNo) { builder.AddUlong(2, roomNo, 0); }
  public static Offset<ResGuildDungeonEnter> EndResGuildDungeonEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildDungeonEnter>(o);
  }
};

public struct ReqGuildDungeonClose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGuildDungeonClose GetRootAsReqGuildDungeonClose(ByteBuffer _bb) { return GetRootAsReqGuildDungeonClose(_bb, new ReqGuildDungeonClose()); }
  public static ReqGuildDungeonClose GetRootAsReqGuildDungeonClose(ByteBuffer _bb, ReqGuildDungeonClose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGuildDungeonClose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGuildDungeonClose> CreateReqGuildDungeonClose(FlatBufferBuilder builder,
      uint stage_tid = 0) {
    builder.StartObject(1);
    ReqGuildDungeonClose.AddStageTid(builder, stage_tid);
    return ReqGuildDungeonClose.EndReqGuildDungeonClose(builder);
  }

  public static void StartReqGuildDungeonClose(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static Offset<ReqGuildDungeonClose> EndReqGuildDungeonClose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGuildDungeonClose>(o);
  }
};

public struct ResGuildDungeonClose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGuildDungeonClose GetRootAsResGuildDungeonClose(ByteBuffer _bb) { return GetRootAsResGuildDungeonClose(_bb, new ResGuildDungeonClose()); }
  public static ResGuildDungeonClose GetRootAsResGuildDungeonClose(ByteBuffer _bb, ResGuildDungeonClose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGuildDungeonClose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GuildDungeonInfo? Info { get { int o = __p.__offset(4); return o != 0 ? (GuildDungeonInfo?)(new GuildDungeonInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGuildDungeonClose> CreateResGuildDungeonClose(FlatBufferBuilder builder,
      Offset<GuildDungeonInfo> infoOffset = default(Offset<GuildDungeonInfo>)) {
    builder.StartObject(1);
    ResGuildDungeonClose.AddInfo(builder, infoOffset);
    return ResGuildDungeonClose.EndResGuildDungeonClose(builder);
  }

  public static void StartResGuildDungeonClose(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfo(FlatBufferBuilder builder, Offset<GuildDungeonInfo> infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static Offset<ResGuildDungeonClose> EndResGuildDungeonClose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGuildDungeonClose>(o);
  }
};

public struct ReqGetItemList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetItemList GetRootAsReqGetItemList(ByteBuffer _bb) { return GetRootAsReqGetItemList(_bb, new ReqGetItemList()); }
  public static ReqGetItemList GetRootAsReqGetItemList(ByteBuffer _bb, ReqGetItemList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetItemList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetItemList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetItemList> EndReqGetItemList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetItemList>(o);
  }
};

public struct ResGetItemList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetItemList GetRootAsResGetItemList(ByteBuffer _bb) { return GetRootAsResGetItemList(_bb, new ResGetItemList()); }
  public static ResGetItemList GetRootAsResGetItemList(ByteBuffer _bb, ResGetItemList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetItemList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? ItemList { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGetItemList> CreateResGetItemList(FlatBufferBuilder builder,
      Offset<ItemInfo> item_listOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(1);
    ResGetItemList.AddItemList(builder, item_listOffset);
    return ResGetItemList.EndResGetItemList(builder);
  }

  public static void StartResGetItemList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddItemList(FlatBufferBuilder builder, Offset<ItemInfo> itemListOffset) { builder.AddOffset(0, itemListOffset.Value, 0); }
  public static Offset<ResGetItemList> EndResGetItemList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetItemList>(o);
  }
};

public struct ReqItemEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemEquip GetRootAsReqItemEquip(ByteBuffer _bb) { return GetRootAsReqItemEquip(_bb, new ReqItemEquip()); }
  public static ReqItemEquip GetRootAsReqItemEquip(ByteBuffer _bb, ReqItemEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public EquipInfo? EquipInfos(int j) { int o = __p.__offset(4); return o != 0 ? (EquipInfo?)(new EquipInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemEquip> CreateReqItemEquip(FlatBufferBuilder builder,
      VectorOffset equip_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqItemEquip.AddEquipInfos(builder, equip_infosOffset);
    return ReqItemEquip.EndReqItemEquip(builder);
  }

  public static void StartReqItemEquip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddEquipInfos(FlatBufferBuilder builder, VectorOffset equipInfosOffset) { builder.AddOffset(0, equipInfosOffset.Value, 0); }
  public static VectorOffset CreateEquipInfosVector(FlatBufferBuilder builder, Offset<EquipInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipInfosVectorBlock(FlatBufferBuilder builder, Offset<EquipInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemEquip> EndReqItemEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemEquip>(o);
  }
};

public struct ResItemEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemEquip GetRootAsResItemEquip(ByteBuffer _bb) { return GetRootAsResItemEquip(_bb, new ResItemEquip()); }
  public static ResItemEquip GetRootAsResItemEquip(ByteBuffer _bb, ResItemEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public EquipResultInfo? EquipResultInfos(int j) { int o = __p.__offset(4); return o != 0 ? (EquipResultInfo?)(new EquipResultInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipResultInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemEquip> CreateResItemEquip(FlatBufferBuilder builder,
      VectorOffset equip_result_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResItemEquip.AddEquipResultInfos(builder, equip_result_infosOffset);
    return ResItemEquip.EndResItemEquip(builder);
  }

  public static void StartResItemEquip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddEquipResultInfos(FlatBufferBuilder builder, VectorOffset equipResultInfosOffset) { builder.AddOffset(0, equipResultInfosOffset.Value, 0); }
  public static VectorOffset CreateEquipResultInfosVector(FlatBufferBuilder builder, Offset<EquipResultInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipResultInfosVectorBlock(FlatBufferBuilder builder, Offset<EquipResultInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipResultInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemEquip> EndResItemEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemEquip>(o);
  }
};

public struct ReqItemUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemUnequip GetRootAsReqItemUnequip(ByteBuffer _bb) { return GetRootAsReqItemUnequip(_bb, new ReqItemUnequip()); }
  public static ReqItemUnequip GetRootAsReqItemUnequip(ByteBuffer _bb, ReqItemUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public EquipInfo? UnequipInfos(int j) { int o = __p.__offset(4); return o != 0 ? (EquipInfo?)(new EquipInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UnequipInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemUnequip> CreateReqItemUnequip(FlatBufferBuilder builder,
      VectorOffset unequip_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqItemUnequip.AddUnequipInfos(builder, unequip_infosOffset);
    return ReqItemUnequip.EndReqItemUnequip(builder);
  }

  public static void StartReqItemUnequip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUnequipInfos(FlatBufferBuilder builder, VectorOffset unequipInfosOffset) { builder.AddOffset(0, unequipInfosOffset.Value, 0); }
  public static VectorOffset CreateUnequipInfosVector(FlatBufferBuilder builder, Offset<EquipInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUnequipInfosVectorBlock(FlatBufferBuilder builder, Offset<EquipInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUnequipInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemUnequip> EndReqItemUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemUnequip>(o);
  }
};

public struct ResItemUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemUnequip GetRootAsResItemUnequip(ByteBuffer _bb) { return GetRootAsResItemUnequip(_bb, new ResItemUnequip()); }
  public static ResItemUnequip GetRootAsResItemUnequip(ByteBuffer _bb, ResItemUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UnequipResultInfos(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int UnequipResultInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUnequipResultInfosBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetUnequipResultInfosBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetUnequipResultInfosArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ResItemUnequip> CreateResItemUnequip(FlatBufferBuilder builder,
      VectorOffset unequip_result_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResItemUnequip.AddUnequipResultInfos(builder, unequip_result_infosOffset);
    return ResItemUnequip.EndResItemUnequip(builder);
  }

  public static void StartResItemUnequip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUnequipResultInfos(FlatBufferBuilder builder, VectorOffset unequipResultInfosOffset) { builder.AddOffset(0, unequipResultInfosOffset.Value, 0); }
  public static VectorOffset CreateUnequipResultInfosVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateUnequipResultInfosVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartUnequipResultInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ResItemUnequip> EndResItemUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemUnequip>(o);
  }
};

public struct ReqItemUse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemUse GetRootAsReqItemUse(ByteBuffer _bb) { return GetRootAsReqItemUse(_bb, new ReqItemUse()); }
  public static ReqItemUse GetRootAsReqItemUse(ByteBuffer _bb, ReqItemUse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemUse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemUse> CreateReqItemUse(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      uint item_cnt = 0) {
    builder.StartObject(3);
    ReqItemUse.AddItemId(builder, item_id);
    ReqItemUse.AddItemCnt(builder, item_cnt);
    ReqItemUse.AddItemTid(builder, item_tid);
    return ReqItemUse.EndReqItemUse(builder);
  }

  public static void StartReqItemUse(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemCnt(FlatBufferBuilder builder, uint itemCnt) { builder.AddUint(2, itemCnt, 0); }
  public static Offset<ReqItemUse> EndReqItemUse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemUse>(o);
  }
};

public struct ResItemUse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemUse GetRootAsResItemUse(ByteBuffer _bb) { return GetRootAsResItemUse(_bb, new ResItemUse()); }
  public static ResItemUse GetRootAsResItemUse(ByteBuffer _bb, ResItemUse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemUse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemStack? RemainStack { get { int o = __p.__offset(4); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemUse> CreateResItemUse(FlatBufferBuilder builder,
      Offset<ItemStack> remain_stackOffset = default(Offset<ItemStack>)) {
    builder.StartObject(1);
    ResItemUse.AddRemainStack(builder, remain_stackOffset);
    return ResItemUse.EndResItemUse(builder);
  }

  public static void StartResItemUse(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRemainStack(FlatBufferBuilder builder, Offset<ItemStack> remainStackOffset) { builder.AddOffset(0, remainStackOffset.Value, 0); }
  public static Offset<ResItemUse> EndResItemUse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemUse>(o);
  }
};

public struct ReqItemUpgrade : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemUpgrade GetRootAsReqItemUpgrade(ByteBuffer _bb) { return GetRootAsReqItemUpgrade(_bb, new ReqItemUpgrade()); }
  public static ReqItemUpgrade GetRootAsReqItemUpgrade(ByteBuffer _bb, ReqItemUpgrade obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemUpgrade __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte ItemSlotIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UseItemId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseGoldItemId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UpgradeListTid { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemUpgrade> CreateReqItemUpgrade(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      byte item_slot_idx = 0,
      ulong use_item_id = 0,
      uint use_item_tid = 0,
      ulong use_gold_item_id = 0,
      uint upgrade_list_tid = 0) {
    builder.StartObject(7);
    ReqItemUpgrade.AddUseGoldItemId(builder, use_gold_item_id);
    ReqItemUpgrade.AddUseItemId(builder, use_item_id);
    ReqItemUpgrade.AddItemId(builder, item_id);
    ReqItemUpgrade.AddUpgradeListTid(builder, upgrade_list_tid);
    ReqItemUpgrade.AddUseItemTid(builder, use_item_tid);
    ReqItemUpgrade.AddItemTid(builder, item_tid);
    ReqItemUpgrade.AddItemSlotIdx(builder, item_slot_idx);
    return ReqItemUpgrade.EndReqItemUpgrade(builder);
  }

  public static void StartReqItemUpgrade(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddItemSlotIdx(FlatBufferBuilder builder, byte itemSlotIdx) { builder.AddByte(2, itemSlotIdx, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(3, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(4, useItemTid, 0); }
  public static void AddUseGoldItemId(FlatBufferBuilder builder, ulong useGoldItemId) { builder.AddUlong(5, useGoldItemId, 0); }
  public static void AddUpgradeListTid(FlatBufferBuilder builder, uint upgradeListTid) { builder.AddUint(6, upgradeListTid, 0); }
  public static Offset<ReqItemUpgrade> EndReqItemUpgrade(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemUpgrade>(o);
  }
};

public struct ResItemUpgrade : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemUpgrade GetRootAsResItemUpgrade(ByteBuffer _bb) { return GetRootAsResItemUpgrade(_bb, new ResItemUpgrade()); }
  public static ResItemUpgrade GetRootAsResItemUpgrade(ByteBuffer _bb, ResItemUpgrade obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemUpgrade __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ChangeItemInfo? UpgradeItem { get { int o = __p.__offset(4); return o != 0 ? (ChangeItemInfo?)(new ChangeItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(8); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemUpgrade> CreateResItemUpgrade(FlatBufferBuilder builder,
      Offset<ChangeItemInfo> upgrade_itemOffset = default(Offset<ChangeItemInfo>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResItemUpgrade.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemUpgrade.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResItemUpgrade.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResItemUpgrade.AddUpgradeItem(builder, upgrade_itemOffset);
    return ResItemUpgrade.EndResItemUpgrade(builder);
  }

  public static void StartResItemUpgrade(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddUpgradeItem(FlatBufferBuilder builder, Offset<ChangeItemInfo> upgradeItemOffset) { builder.AddOffset(0, upgradeItemOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(1, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(2, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemUpgrade> EndResItemUpgrade(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemUpgrade>(o);
  }
};

public struct ReqItemEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemEnchant GetRootAsReqItemEnchant(ByteBuffer _bb) { return GetRootAsReqItemEnchant(_bb, new ReqItemEnchant()); }
  public static ReqItemEnchant GetRootAsReqItemEnchant(ByteBuffer _bb, ReqItemEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort EnchantType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong UseGoldItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public EnchantItemInfo? EnchantItems(int j) { int o = __p.__offset(8); return o != 0 ? (EnchantItemInfo?)(new EnchantItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EnchantItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemEnchant> CreateReqItemEnchant(FlatBufferBuilder builder,
      ushort enchant_type = 0,
      ulong use_gold_item_id = 0,
      VectorOffset enchant_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ReqItemEnchant.AddUseGoldItemId(builder, use_gold_item_id);
    ReqItemEnchant.AddEnchantItems(builder, enchant_itemsOffset);
    ReqItemEnchant.AddEnchantType(builder, enchant_type);
    return ReqItemEnchant.EndReqItemEnchant(builder);
  }

  public static void StartReqItemEnchant(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddEnchantType(FlatBufferBuilder builder, ushort enchantType) { builder.AddUshort(0, enchantType, 0); }
  public static void AddUseGoldItemId(FlatBufferBuilder builder, ulong useGoldItemId) { builder.AddUlong(1, useGoldItemId, 0); }
  public static void AddEnchantItems(FlatBufferBuilder builder, VectorOffset enchantItemsOffset) { builder.AddOffset(2, enchantItemsOffset.Value, 0); }
  public static VectorOffset CreateEnchantItemsVector(FlatBufferBuilder builder, Offset<EnchantItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEnchantItemsVectorBlock(FlatBufferBuilder builder, Offset<EnchantItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEnchantItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemEnchant> EndReqItemEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemEnchant>(o);
  }
};

public struct ResItemEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemEnchant GetRootAsResItemEnchant(ByteBuffer _bb) { return GetRootAsResItemEnchant(_bb, new ResItemEnchant()); }
  public static ResItemEnchant GetRootAsResItemEnchant(ByteBuffer _bb, ResItemEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultEnchantInfo? ResultEnchant(int j) { int o = __p.__offset(4); return o != 0 ? (ResultEnchantInfo?)(new ResultEnchantInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEnchantLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public DelItemInfo? DelItems(int j) { int o = __p.__offset(6); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DelItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(8); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(14); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemEnchant> CreateResItemEnchant(FlatBufferBuilder builder,
      VectorOffset result_enchantOffset = default(VectorOffset),
      VectorOffset del_itemsOffset = default(VectorOffset),
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(6);
    ResItemEnchant.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemEnchant.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResItemEnchant.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResItemEnchant.AddGetItems(builder, get_itemsOffset);
    ResItemEnchant.AddDelItems(builder, del_itemsOffset);
    ResItemEnchant.AddResultEnchant(builder, result_enchantOffset);
    return ResItemEnchant.EndResItemEnchant(builder);
  }

  public static void StartResItemEnchant(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddResultEnchant(FlatBufferBuilder builder, VectorOffset resultEnchantOffset) { builder.AddOffset(0, resultEnchantOffset.Value, 0); }
  public static VectorOffset CreateResultEnchantVector(FlatBufferBuilder builder, Offset<ResultEnchantInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEnchantVectorBlock(FlatBufferBuilder builder, Offset<ResultEnchantInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEnchantVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDelItems(FlatBufferBuilder builder, VectorOffset delItemsOffset) { builder.AddOffset(1, delItemsOffset.Value, 0); }
  public static VectorOffset CreateDelItemsVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDelItemsVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDelItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(3, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(4, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(5, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemEnchant> EndResItemEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemEnchant>(o);
  }
};

public struct ReqItemMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemMake GetRootAsReqItemMake(ByteBuffer _bb) { return GetRootAsReqItemMake(_bb, new ReqItemMake()); }
  public static ReqItemMake GetRootAsReqItemMake(ByteBuffer _bb, ReqItemMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MakeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint MakeItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MakeMaterialItem? MakeMaterialItems(int j) { int o = __p.__offset(8); return o != 0 ? (MakeMaterialItem?)(new MakeMaterialItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MakeMaterialItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemMake> CreateReqItemMake(FlatBufferBuilder builder,
      uint make_tid = 0,
      uint make_item_cnt = 0,
      VectorOffset make_material_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ReqItemMake.AddMakeMaterialItems(builder, make_material_itemsOffset);
    ReqItemMake.AddMakeItemCnt(builder, make_item_cnt);
    ReqItemMake.AddMakeTid(builder, make_tid);
    return ReqItemMake.EndReqItemMake(builder);
  }

  public static void StartReqItemMake(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMakeTid(FlatBufferBuilder builder, uint makeTid) { builder.AddUint(0, makeTid, 0); }
  public static void AddMakeItemCnt(FlatBufferBuilder builder, uint makeItemCnt) { builder.AddUint(1, makeItemCnt, 0); }
  public static void AddMakeMaterialItems(FlatBufferBuilder builder, VectorOffset makeMaterialItemsOffset) { builder.AddOffset(2, makeMaterialItemsOffset.Value, 0); }
  public static VectorOffset CreateMakeMaterialItemsVector(FlatBufferBuilder builder, Offset<MakeMaterialItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMakeMaterialItemsVectorBlock(FlatBufferBuilder builder, Offset<MakeMaterialItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMakeMaterialItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemMake> EndReqItemMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemMake>(o);
  }
};

public struct ResItemMake : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemMake GetRootAsResItemMake(ByteBuffer _bb) { return GetRootAsResItemMake(_bb, new ResItemMake()); }
  public static ResItemMake GetRootAsResItemMake(ByteBuffer _bb, ResItemMake obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemMake __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultMakeInfo? ResultMake(int j) { int o = __p.__offset(4); return o != 0 ? (ResultMakeInfo?)(new ResultMakeInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultMakeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public DelItemInfo? DelItems(int j) { int o = __p.__offset(6); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DelItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public MakeLimitInfo? MakeLimit { get { int o = __p.__offset(14); return o != 0 ? (MakeLimitInfo?)(new MakeLimitInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemMake> CreateResItemMake(FlatBufferBuilder builder,
      VectorOffset result_makeOffset = default(VectorOffset),
      VectorOffset del_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      Offset<MakeLimitInfo> make_limitOffset = default(Offset<MakeLimitInfo>)) {
    builder.StartObject(6);
    ResItemMake.AddMakeLimit(builder, make_limitOffset);
    ResItemMake.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemMake.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResItemMake.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResItemMake.AddDelItems(builder, del_itemsOffset);
    ResItemMake.AddResultMake(builder, result_makeOffset);
    return ResItemMake.EndResItemMake(builder);
  }

  public static void StartResItemMake(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddResultMake(FlatBufferBuilder builder, VectorOffset resultMakeOffset) { builder.AddOffset(0, resultMakeOffset.Value, 0); }
  public static VectorOffset CreateResultMakeVector(FlatBufferBuilder builder, Offset<ResultMakeInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultMakeVectorBlock(FlatBufferBuilder builder, Offset<ResultMakeInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultMakeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDelItems(FlatBufferBuilder builder, VectorOffset delItemsOffset) { builder.AddOffset(1, delItemsOffset.Value, 0); }
  public static VectorOffset CreateDelItemsVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDelItemsVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDelItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(3, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(4, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMakeLimit(FlatBufferBuilder builder, Offset<MakeLimitInfo> makeLimitOffset) { builder.AddOffset(5, makeLimitOffset.Value, 0); }
  public static Offset<ResItemMake> EndResItemMake(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemMake>(o);
  }
};

public struct ReqItemBreak : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemBreak GetRootAsReqItemBreak(ByteBuffer _bb) { return GetRootAsReqItemBreak(_bb, new ReqItemBreak()); }
  public static ReqItemBreak GetRootAsReqItemBreak(ByteBuffer _bb, ReqItemBreak obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemBreak __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public BreakItemInfo? BreakItems(int j) { int o = __p.__offset(4); return o != 0 ? (BreakItemInfo?)(new BreakItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BreakItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemBreak> CreateReqItemBreak(FlatBufferBuilder builder,
      VectorOffset break_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqItemBreak.AddBreakItems(builder, break_itemsOffset);
    return ReqItemBreak.EndReqItemBreak(builder);
  }

  public static void StartReqItemBreak(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBreakItems(FlatBufferBuilder builder, VectorOffset breakItemsOffset) { builder.AddOffset(0, breakItemsOffset.Value, 0); }
  public static VectorOffset CreateBreakItemsVector(FlatBufferBuilder builder, Offset<BreakItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBreakItemsVectorBlock(FlatBufferBuilder builder, Offset<BreakItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBreakItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemBreak> EndReqItemBreak(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemBreak>(o);
  }
};

public struct ResItemBreak : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemBreak GetRootAsResItemBreak(ByteBuffer _bb) { return GetRootAsResItemBreak(_bb, new ResItemBreak()); }
  public static ResItemBreak GetRootAsResItemBreak(ByteBuffer _bb, ResItemBreak obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemBreak __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DelItemInfo? BreakItems(int j) { int o = __p.__offset(4); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BreakItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemBreak> CreateResItemBreak(FlatBufferBuilder builder,
      VectorOffset break_itemsOffset = default(VectorOffset),
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResItemBreak.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemBreak.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResItemBreak.AddGetItems(builder, get_itemsOffset);
    ResItemBreak.AddBreakItems(builder, break_itemsOffset);
    return ResItemBreak.EndResItemBreak(builder);
  }

  public static void StartResItemBreak(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddBreakItems(FlatBufferBuilder builder, VectorOffset breakItemsOffset) { builder.AddOffset(0, breakItemsOffset.Value, 0); }
  public static VectorOffset CreateBreakItemsVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBreakItemsVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBreakItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemBreak> EndResItemBreak(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemBreak>(o);
  }
};

public struct ReqItemDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemDelete GetRootAsReqItemDelete(ByteBuffer _bb) { return GetRootAsReqItemDelete(_bb, new ReqItemDelete()); }
  public static ReqItemDelete GetRootAsReqItemDelete(ByteBuffer _bb, ReqItemDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DelItemInfo? DelItems(int j) { int o = __p.__offset(4); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DelItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemDelete> CreateReqItemDelete(FlatBufferBuilder builder,
      VectorOffset del_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqItemDelete.AddDelItems(builder, del_itemsOffset);
    return ReqItemDelete.EndReqItemDelete(builder);
  }

  public static void StartReqItemDelete(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelItems(FlatBufferBuilder builder, VectorOffset delItemsOffset) { builder.AddOffset(0, delItemsOffset.Value, 0); }
  public static VectorOffset CreateDelItemsVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDelItemsVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDelItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemDelete> EndReqItemDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemDelete>(o);
  }
};

public struct ResItemDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemDelete GetRootAsResItemDelete(ByteBuffer _bb) { return GetRootAsResItemDelete(_bb, new ResItemDelete()); }
  public static ResItemDelete GetRootAsResItemDelete(ByteBuffer _bb, ResItemDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DelItemInfo? DelItems(int j) { int o = __p.__offset(4); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DelItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemDelete> CreateResItemDelete(FlatBufferBuilder builder,
      VectorOffset del_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResItemDelete.AddDelItems(builder, del_itemsOffset);
    return ResItemDelete.EndResItemDelete(builder);
  }

  public static void StartResItemDelete(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelItems(FlatBufferBuilder builder, VectorOffset delItemsOffset) { builder.AddOffset(0, delItemsOffset.Value, 0); }
  public static VectorOffset CreateDelItemsVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDelItemsVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDelItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemDelete> EndResItemDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemDelete>(o);
  }
};

public struct ReqItemGacha : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemGacha GetRootAsReqItemGacha(ByteBuffer _bb) { return GetRootAsReqItemGacha(_bb, new ReqItemGacha()); }
  public static ReqItemGacha GetRootAsReqItemGacha(ByteBuffer _bb, ReqItemGacha obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemGacha __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GachaItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint GachaItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GachaCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SelectGachaGroupTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SelectRuneType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemGacha> CreateReqItemGacha(FlatBufferBuilder builder,
      ulong gacha_item_id = 0,
      uint gacha_item_tid = 0,
      uint gacha_count = 0,
      uint select_gacha_group_tid = 0,
      uint select_rune_type = 0) {
    builder.StartObject(5);
    ReqItemGacha.AddGachaItemId(builder, gacha_item_id);
    ReqItemGacha.AddSelectRuneType(builder, select_rune_type);
    ReqItemGacha.AddSelectGachaGroupTid(builder, select_gacha_group_tid);
    ReqItemGacha.AddGachaCount(builder, gacha_count);
    ReqItemGacha.AddGachaItemTid(builder, gacha_item_tid);
    return ReqItemGacha.EndReqItemGacha(builder);
  }

  public static void StartReqItemGacha(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddGachaItemId(FlatBufferBuilder builder, ulong gachaItemId) { builder.AddUlong(0, gachaItemId, 0); }
  public static void AddGachaItemTid(FlatBufferBuilder builder, uint gachaItemTid) { builder.AddUint(1, gachaItemTid, 0); }
  public static void AddGachaCount(FlatBufferBuilder builder, uint gachaCount) { builder.AddUint(2, gachaCount, 0); }
  public static void AddSelectGachaGroupTid(FlatBufferBuilder builder, uint selectGachaGroupTid) { builder.AddUint(3, selectGachaGroupTid, 0); }
  public static void AddSelectRuneType(FlatBufferBuilder builder, uint selectRuneType) { builder.AddUint(4, selectRuneType, 0); }
  public static Offset<ReqItemGacha> EndReqItemGacha(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemGacha>(o);
  }
};

public struct ResItemGacha : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemGacha GetRootAsResItemGacha(ByteBuffer _bb) { return GetRootAsResItemGacha(_bb, new ResItemGacha()); }
  public static ResItemGacha GetRootAsResItemGacha(ByteBuffer _bb, ResItemGacha obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemGacha __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? GetItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemGacha> CreateResItemGacha(FlatBufferBuilder builder,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(2);
    ResItemGacha.AddRemainItems(builder, remain_itemsOffset);
    ResItemGacha.AddGetItems(builder, get_itemsOffset);
    return ResItemGacha.EndResItemGacha(builder);
  }

  public static void StartResItemGacha(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(0, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static Offset<ResItemGacha> EndResItemGacha(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemGacha>(o);
  }
};

public struct ReqExpHonorCoinTrade : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqExpHonorCoinTrade GetRootAsReqExpHonorCoinTrade(ByteBuffer _bb) { return GetRootAsReqExpHonorCoinTrade(_bb, new ReqExpHonorCoinTrade()); }
  public static ReqExpHonorCoinTrade GetRootAsReqExpHonorCoinTrade(ByteBuffer _bb, ReqExpHonorCoinTrade obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqExpHonorCoinTrade __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TradeCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqExpHonorCoinTrade> CreateReqExpHonorCoinTrade(FlatBufferBuilder builder,
      uint trade_cnt = 0) {
    builder.StartObject(1);
    ReqExpHonorCoinTrade.AddTradeCnt(builder, trade_cnt);
    return ReqExpHonorCoinTrade.EndReqExpHonorCoinTrade(builder);
  }

  public static void StartReqExpHonorCoinTrade(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTradeCnt(FlatBufferBuilder builder, uint tradeCnt) { builder.AddUint(0, tradeCnt, 0); }
  public static Offset<ReqExpHonorCoinTrade> EndReqExpHonorCoinTrade(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqExpHonorCoinTrade>(o);
  }
};

public struct ResExpHonorCoinTrade : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResExpHonorCoinTrade GetRootAsResExpHonorCoinTrade(ByteBuffer _bb) { return GetRootAsResExpHonorCoinTrade(_bb, new ResExpHonorCoinTrade()); }
  public static ResExpHonorCoinTrade GetRootAsResExpHonorCoinTrade(ByteBuffer _bb, ResExpHonorCoinTrade obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResExpHonorCoinTrade __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UseExp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ResultExp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(8); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResExpHonorCoinTrade> CreateResExpHonorCoinTrade(FlatBufferBuilder builder,
      ulong use_exp = 0,
      ulong result_exp = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResExpHonorCoinTrade.AddResultExp(builder, result_exp);
    ResExpHonorCoinTrade.AddUseExp(builder, use_exp);
    ResExpHonorCoinTrade.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResExpHonorCoinTrade.AddGetItems(builder, get_itemsOffset);
    return ResExpHonorCoinTrade.EndResExpHonorCoinTrade(builder);
  }

  public static void StartResExpHonorCoinTrade(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddUseExp(FlatBufferBuilder builder, ulong useExp) { builder.AddUlong(0, useExp, 0); }
  public static void AddResultExp(FlatBufferBuilder builder, ulong resultExp) { builder.AddUlong(1, resultExp, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(3, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResExpHonorCoinTrade> EndResExpHonorCoinTrade(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResExpHonorCoinTrade>(o);
  }
};

public struct ReqItemLockToggle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemLockToggle GetRootAsReqItemLockToggle(ByteBuffer _bb) { return GetRootAsReqItemLockToggle(_bb, new ReqItemLockToggle()); }
  public static ReqItemLockToggle GetRootAsReqItemLockToggle(ByteBuffer _bb, ReqItemLockToggle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemLockToggle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte GoodsType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong ItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsLock { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ReqItemLockToggle> CreateReqItemLockToggle(FlatBufferBuilder builder,
      byte goods_type = 0,
      ulong item_id = 0,
      uint item_tid = 0,
      byte is_lock = 0) {
    builder.StartObject(4);
    ReqItemLockToggle.AddItemId(builder, item_id);
    ReqItemLockToggle.AddItemTid(builder, item_tid);
    ReqItemLockToggle.AddIsLock(builder, is_lock);
    ReqItemLockToggle.AddGoodsType(builder, goods_type);
    return ReqItemLockToggle.EndReqItemLockToggle(builder);
  }

  public static void StartReqItemLockToggle(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddGoodsType(FlatBufferBuilder builder, byte goodsType) { builder.AddByte(0, goodsType, 0); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(1, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(2, itemTid, 0); }
  public static void AddIsLock(FlatBufferBuilder builder, byte isLock) { builder.AddByte(3, isLock, 0); }
  public static Offset<ReqItemLockToggle> EndReqItemLockToggle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemLockToggle>(o);
  }
};

public struct ResItemLockToggle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemLockToggle GetRootAsResItemLockToggle(ByteBuffer _bb) { return GetRootAsResItemLockToggle(_bb, new ResItemLockToggle()); }
  public static ResItemLockToggle GetRootAsResItemLockToggle(ByteBuffer _bb, ResItemLockToggle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemLockToggle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? RemainItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemLockToggle> CreateResItemLockToggle(FlatBufferBuilder builder,
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(1);
    ResItemLockToggle.AddRemainItems(builder, remain_itemsOffset);
    return ResItemLockToggle.EndResItemLockToggle(builder);
  }

  public static void StartResItemLockToggle(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(0, remainItemsOffset.Value, 0); }
  public static Offset<ResItemLockToggle> EndResItemLockToggle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemLockToggle>(o);
  }
};

public struct ReqItemUseTendency : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemUseTendency GetRootAsReqItemUseTendency(ByteBuffer _bb) { return GetRootAsReqItemUseTendency(_bb, new ReqItemUseTendency()); }
  public static ReqItemUseTendency GetRootAsReqItemUseTendency(ByteBuffer _bb, ReqItemUseTendency obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemUseTendency __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemUseTendency> CreateReqItemUseTendency(FlatBufferBuilder builder,
      uint item_tid = 0) {
    builder.StartObject(1);
    ReqItemUseTendency.AddItemTid(builder, item_tid);
    return ReqItemUseTendency.EndReqItemUseTendency(builder);
  }

  public static void StartReqItemUseTendency(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(0, itemTid, 0); }
  public static Offset<ReqItemUseTendency> EndReqItemUseTendency(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemUseTendency>(o);
  }
};

public struct ResItemUseTendency : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemUseTendency GetRootAsResItemUseTendency(ByteBuffer _bb) { return GetRootAsResItemUseTendency(_bb, new ResItemUseTendency()); }
  public static ResItemUseTendency GetRootAsResItemUseTendency(ByteBuffer _bb, ResItemUseTendency obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemUseTendency __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int IncTendency { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ResultTendency { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemUseTendency> CreateResItemUseTendency(FlatBufferBuilder builder,
      int inc_tendency = 0,
      int result_tendency = 0,
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResItemUseTendency.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemUseTendency.AddResultTendency(builder, result_tendency);
    ResItemUseTendency.AddIncTendency(builder, inc_tendency);
    return ResItemUseTendency.EndResItemUseTendency(builder);
  }

  public static void StartResItemUseTendency(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddIncTendency(FlatBufferBuilder builder, int incTendency) { builder.AddInt(0, incTendency, 0); }
  public static void AddResultTendency(FlatBufferBuilder builder, int resultTendency) { builder.AddInt(1, resultTendency, 0); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(2, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemUseTendency> EndResItemUseTendency(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemUseTendency>(o);
  }
};

public struct ReqGetMakeItemLimitList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetMakeItemLimitList GetRootAsReqGetMakeItemLimitList(ByteBuffer _bb) { return GetRootAsReqGetMakeItemLimitList(_bb, new ReqGetMakeItemLimitList()); }
  public static ReqGetMakeItemLimitList GetRootAsReqGetMakeItemLimitList(ByteBuffer _bb, ReqGetMakeItemLimitList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetMakeItemLimitList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetMakeItemLimitList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetMakeItemLimitList> EndReqGetMakeItemLimitList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetMakeItemLimitList>(o);
  }
};

public struct ResGetMakeItemLimitList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetMakeItemLimitList GetRootAsResGetMakeItemLimitList(ByteBuffer _bb) { return GetRootAsResGetMakeItemLimitList(_bb, new ResGetMakeItemLimitList()); }
  public static ResGetMakeItemLimitList GetRootAsResGetMakeItemLimitList(ByteBuffer _bb, ResGetMakeItemLimitList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetMakeItemLimitList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MakeLimitInfo? MakeLimits(int j) { int o = __p.__offset(4); return o != 0 ? (MakeLimitInfo?)(new MakeLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MakeLimitsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetMakeItemLimitList> CreateResGetMakeItemLimitList(FlatBufferBuilder builder,
      VectorOffset make_limitsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetMakeItemLimitList.AddMakeLimits(builder, make_limitsOffset);
    return ResGetMakeItemLimitList.EndResGetMakeItemLimitList(builder);
  }

  public static void StartResGetMakeItemLimitList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMakeLimits(FlatBufferBuilder builder, VectorOffset makeLimitsOffset) { builder.AddOffset(0, makeLimitsOffset.Value, 0); }
  public static VectorOffset CreateMakeLimitsVector(FlatBufferBuilder builder, Offset<MakeLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMakeLimitsVectorBlock(FlatBufferBuilder builder, Offset<MakeLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMakeLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetMakeItemLimitList> EndResGetMakeItemLimitList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetMakeItemLimitList>(o);
  }
};

public struct ReqGetCheckItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetCheckItem GetRootAsReqGetCheckItem(ByteBuffer _bb) { return GetRootAsReqGetCheckItem(_bb, new ReqGetCheckItem()); }
  public static ReqGetCheckItem GetRootAsReqGetCheckItem(ByteBuffer _bb, ReqGetCheckItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetCheckItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GetItemIds(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int GetItemIdsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGetItemIdsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetGetItemIdsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetGetItemIdsArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqGetCheckItem> CreateReqGetCheckItem(FlatBufferBuilder builder,
      VectorOffset get_item_idsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqGetCheckItem.AddGetItemIds(builder, get_item_idsOffset);
    return ReqGetCheckItem.EndReqGetCheckItem(builder);
  }

  public static void StartReqGetCheckItem(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGetItemIds(FlatBufferBuilder builder, VectorOffset getItemIdsOffset) { builder.AddOffset(0, getItemIdsOffset.Value, 0); }
  public static VectorOffset CreateGetItemIdsVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateGetItemIdsVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqGetCheckItem> EndReqGetCheckItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetCheckItem>(o);
  }
};

public struct ResGetCheckItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetCheckItem GetRootAsResGetCheckItem(ByteBuffer _bb) { return GetRootAsResGetCheckItem(_bb, new ResGetCheckItem()); }
  public static ResGetCheckItem GetRootAsResGetCheckItem(ByteBuffer _bb, ResGetCheckItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetCheckItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetCheckItem> CreateResGetCheckItem(FlatBufferBuilder builder,
      VectorOffset result_equip_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetCheckItem.AddResultEquipItems(builder, result_equip_itemsOffset);
    return ResGetCheckItem.EndResGetCheckItem(builder);
  }

  public static void StartResGetCheckItem(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(0, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetCheckItem> EndResGetCheckItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetCheckItem>(o);
  }
};

public struct ReqSkillItemUse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSkillItemUse GetRootAsReqSkillItemUse(ByteBuffer _bb) { return GetRootAsReqSkillItemUse(_bb, new ReqSkillItemUse()); }
  public static ReqSkillItemUse GetRootAsReqSkillItemUse(ByteBuffer _bb, ReqSkillItemUse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSkillItemUse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SkillTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqSkillItemUse> CreateReqSkillItemUse(FlatBufferBuilder builder,
      uint skill_tid = 0) {
    builder.StartObject(1);
    ReqSkillItemUse.AddSkillTid(builder, skill_tid);
    return ReqSkillItemUse.EndReqSkillItemUse(builder);
  }

  public static void StartReqSkillItemUse(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSkillTid(FlatBufferBuilder builder, uint skillTid) { builder.AddUint(0, skillTid, 0); }
  public static Offset<ReqSkillItemUse> EndReqSkillItemUse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSkillItemUse>(o);
  }
};

public struct ResSkillItemUse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSkillItemUse GetRootAsResSkillItemUse(ByteBuffer _bb) { return GetRootAsResSkillItemUse(_bb, new ResSkillItemUse()); }
  public static ResSkillItemUse GetRootAsResSkillItemUse(ByteBuffer _bb, ResSkillItemUse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSkillItemUse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SkillTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResSkillItemUse> CreateResSkillItemUse(FlatBufferBuilder builder,
      uint skill_tid = 0,
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResSkillItemUse.AddResultStackItems(builder, result_stack_itemsOffset);
    ResSkillItemUse.AddSkillTid(builder, skill_tid);
    return ResSkillItemUse.EndResSkillItemUse(builder);
  }

  public static void StartResSkillItemUse(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddSkillTid(FlatBufferBuilder builder, uint skillTid) { builder.AddUint(0, skillTid, 0); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(1, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResSkillItemUse> EndResSkillItemUse(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSkillItemUse>(o);
  }
};

public struct ReqRecoveryItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRecoveryItemInfo GetRootAsReqRecoveryItemInfo(ByteBuffer _bb) { return GetRootAsReqRecoveryItemInfo(_bb, new ReqRecoveryItemInfo()); }
  public static ReqRecoveryItemInfo GetRootAsReqRecoveryItemInfo(ByteBuffer _bb, ReqRecoveryItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRecoveryItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte RecoveryType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ReqRecoveryItemInfo> CreateReqRecoveryItemInfo(FlatBufferBuilder builder,
      byte recovery_type = 0) {
    builder.StartObject(1);
    ReqRecoveryItemInfo.AddRecoveryType(builder, recovery_type);
    return ReqRecoveryItemInfo.EndReqRecoveryItemInfo(builder);
  }

  public static void StartReqRecoveryItemInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRecoveryType(FlatBufferBuilder builder, byte recoveryType) { builder.AddByte(0, recoveryType, 0); }
  public static Offset<ReqRecoveryItemInfo> EndReqRecoveryItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRecoveryItemInfo>(o);
  }
};

public struct ResRecoveryItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRecoveryItemInfo GetRootAsResRecoveryItemInfo(ByteBuffer _bb) { return GetRootAsResRecoveryItemInfo(_bb, new ResRecoveryItemInfo()); }
  public static ResRecoveryItemInfo GetRootAsResRecoveryItemInfo(ByteBuffer _bb, ResRecoveryItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRecoveryItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public RecoveryItemInfo? RecoveryItemInfos(int j) { int o = __p.__offset(4); return o != 0 ? (RecoveryItemInfo?)(new RecoveryItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RecoveryItemInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRecoveryItemInfo> CreateResRecoveryItemInfo(FlatBufferBuilder builder,
      VectorOffset recovery_item_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRecoveryItemInfo.AddRecoveryItemInfos(builder, recovery_item_infosOffset);
    return ResRecoveryItemInfo.EndResRecoveryItemInfo(builder);
  }

  public static void StartResRecoveryItemInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRecoveryItemInfos(FlatBufferBuilder builder, VectorOffset recoveryItemInfosOffset) { builder.AddOffset(0, recoveryItemInfosOffset.Value, 0); }
  public static VectorOffset CreateRecoveryItemInfosVector(FlatBufferBuilder builder, Offset<RecoveryItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRecoveryItemInfosVectorBlock(FlatBufferBuilder builder, Offset<RecoveryItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRecoveryItemInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRecoveryItemInfo> EndResRecoveryItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRecoveryItemInfo>(o);
  }
};

public struct ReqRecoveryItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRecoveryItem GetRootAsReqRecoveryItem(ByteBuffer _bb) { return GetRootAsReqRecoveryItem(_bb, new ReqRecoveryItem()); }
  public static ReqRecoveryItem GetRootAsReqRecoveryItem(ByteBuffer _bb, ReqRecoveryItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRecoveryItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint UseItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte RecoveryType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint RecoveryTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqRecoveryItem> CreateReqRecoveryItem(FlatBufferBuilder builder,
      uint use_item_tid = 0,
      byte recovery_type = 0,
      uint recovery_tid = 0) {
    builder.StartObject(3);
    ReqRecoveryItem.AddRecoveryTid(builder, recovery_tid);
    ReqRecoveryItem.AddUseItemTid(builder, use_item_tid);
    ReqRecoveryItem.AddRecoveryType(builder, recovery_type);
    return ReqRecoveryItem.EndReqRecoveryItem(builder);
  }

  public static void StartReqRecoveryItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(0, useItemTid, 0); }
  public static void AddRecoveryType(FlatBufferBuilder builder, byte recoveryType) { builder.AddByte(1, recoveryType, 0); }
  public static void AddRecoveryTid(FlatBufferBuilder builder, uint recoveryTid) { builder.AddUint(2, recoveryTid, 0); }
  public static Offset<ReqRecoveryItem> EndReqRecoveryItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRecoveryItem>(o);
  }
};

public struct ResRecoveryItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRecoveryItem GetRootAsResRecoveryItem(ByteBuffer _bb) { return GetRootAsResRecoveryItem(_bb, new ResRecoveryItem()); }
  public static ResRecoveryItem GetRootAsResRecoveryItem(ByteBuffer _bb, ResRecoveryItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRecoveryItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Result { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetPetInfo? GetPets(int j) { int o = __p.__offset(8); return o != 0 ? (GetPetInfo?)(new GetPetInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetPetsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetChangeInfo? GetChanges(int j) { int o = __p.__offset(10); return o != 0 ? (GetChangeInfo?)(new GetChangeInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetChangesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(14); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(16); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? ResultPets(int j) { int o = __p.__offset(18); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(20); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? ResultPetsGachaKeeps(int j) { int o = __p.__offset(22); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsGachaKeepsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ResultChangesGachaKeeps(int j) { int o = __p.__offset(24); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesGachaKeepsLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRecoveryItem> CreateResRecoveryItem(FlatBufferBuilder builder,
      byte result = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset get_petsOffset = default(VectorOffset),
      VectorOffset get_changesOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_petsOffset = default(VectorOffset),
      VectorOffset result_changesOffset = default(VectorOffset),
      VectorOffset result_pets_gacha_keepsOffset = default(VectorOffset),
      VectorOffset result_changes_gacha_keepsOffset = default(VectorOffset)) {
    builder.StartObject(11);
    ResRecoveryItem.AddResultChangesGachaKeeps(builder, result_changes_gacha_keepsOffset);
    ResRecoveryItem.AddResultPetsGachaKeeps(builder, result_pets_gacha_keepsOffset);
    ResRecoveryItem.AddResultChanges(builder, result_changesOffset);
    ResRecoveryItem.AddResultPets(builder, result_petsOffset);
    ResRecoveryItem.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResRecoveryItem.AddResultStackItems(builder, result_stack_itemsOffset);
    ResRecoveryItem.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResRecoveryItem.AddGetChanges(builder, get_changesOffset);
    ResRecoveryItem.AddGetPets(builder, get_petsOffset);
    ResRecoveryItem.AddGetItems(builder, get_itemsOffset);
    ResRecoveryItem.AddResult(builder, result);
    return ResRecoveryItem.EndResRecoveryItem(builder);
  }

  public static void StartResRecoveryItem(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddResult(FlatBufferBuilder builder, byte result) { builder.AddByte(0, result, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetPets(FlatBufferBuilder builder, VectorOffset getPetsOffset) { builder.AddOffset(2, getPetsOffset.Value, 0); }
  public static VectorOffset CreateGetPetsVector(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetPetsVectorBlock(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetChanges(FlatBufferBuilder builder, VectorOffset getChangesOffset) { builder.AddOffset(3, getChangesOffset.Value, 0); }
  public static VectorOffset CreateGetChangesVector(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetChangesVectorBlock(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(4, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(5, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(6, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(7, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(8, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPetsGachaKeeps(FlatBufferBuilder builder, VectorOffset resultPetsGachaKeepsOffset) { builder.AddOffset(9, resultPetsGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsGachaKeepsVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChangesGachaKeeps(FlatBufferBuilder builder, VectorOffset resultChangesGachaKeepsOffset) { builder.AddOffset(10, resultChangesGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultChangesGachaKeepsVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRecoveryItem> EndResRecoveryItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRecoveryItem>(o);
  }
};

public struct ReqGetItemSmeltInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetItemSmeltInfo GetRootAsReqGetItemSmeltInfo(ByteBuffer _bb) { return GetRootAsReqGetItemSmeltInfo(_bb, new ReqGetItemSmeltInfo()); }
  public static ReqGetItemSmeltInfo GetRootAsReqGetItemSmeltInfo(ByteBuffer _bb, ReqGetItemSmeltInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetItemSmeltInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetItemSmeltInfo(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetItemSmeltInfo> EndReqGetItemSmeltInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetItemSmeltInfo>(o);
  }
};

public struct ResGetItemSmeltInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetItemSmeltInfo GetRootAsResGetItemSmeltInfo(ByteBuffer _bb) { return GetRootAsResGetItemSmeltInfo(_bb, new ResGetItemSmeltInfo()); }
  public static ResGetItemSmeltInfo GetRootAsResGetItemSmeltInfo(ByteBuffer _bb, ResGetItemSmeltInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetItemSmeltInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SmeltItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SmeltItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Options(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptionsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptionsBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetOptionsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public uint[] GetOptionsArray() { return __p.__vector_as_array<uint>(8); }

  public static Offset<ResGetItemSmeltInfo> CreateResGetItemSmeltInfo(FlatBufferBuilder builder,
      ulong smelt_item_id = 0,
      uint smelt_item_tid = 0,
      VectorOffset optionsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResGetItemSmeltInfo.AddSmeltItemId(builder, smelt_item_id);
    ResGetItemSmeltInfo.AddOptions(builder, optionsOffset);
    ResGetItemSmeltInfo.AddSmeltItemTid(builder, smelt_item_tid);
    return ResGetItemSmeltInfo.EndResGetItemSmeltInfo(builder);
  }

  public static void StartResGetItemSmeltInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddSmeltItemId(FlatBufferBuilder builder, ulong smeltItemId) { builder.AddUlong(0, smeltItemId, 0); }
  public static void AddSmeltItemTid(FlatBufferBuilder builder, uint smeltItemTid) { builder.AddUint(1, smeltItemTid, 0); }
  public static void AddOptions(FlatBufferBuilder builder, VectorOffset optionsOffset) { builder.AddOffset(2, optionsOffset.Value, 0); }
  public static VectorOffset CreateOptionsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptionsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetItemSmeltInfo> EndResGetItemSmeltInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetItemSmeltInfo>(o);
  }
};

public struct ReqItemSmeltStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemSmeltStart GetRootAsReqItemSmeltStart(ByteBuffer _bb) { return GetRootAsReqItemSmeltStart(_bb, new ReqItemSmeltStart()); }
  public static ReqItemSmeltStart GetRootAsReqItemSmeltStart(ByteBuffer _bb, ReqItemSmeltStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemSmeltStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SmeltItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SmeltItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemSmeltStart> CreateReqItemSmeltStart(FlatBufferBuilder builder,
      ulong smelt_item_id = 0,
      uint smelt_item_tid = 0,
      uint use_item_tid = 0) {
    builder.StartObject(3);
    ReqItemSmeltStart.AddSmeltItemId(builder, smelt_item_id);
    ReqItemSmeltStart.AddUseItemTid(builder, use_item_tid);
    ReqItemSmeltStart.AddSmeltItemTid(builder, smelt_item_tid);
    return ReqItemSmeltStart.EndReqItemSmeltStart(builder);
  }

  public static void StartReqItemSmeltStart(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddSmeltItemId(FlatBufferBuilder builder, ulong smeltItemId) { builder.AddUlong(0, smeltItemId, 0); }
  public static void AddSmeltItemTid(FlatBufferBuilder builder, uint smeltItemTid) { builder.AddUint(1, smeltItemTid, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(2, useItemTid, 0); }
  public static Offset<ReqItemSmeltStart> EndReqItemSmeltStart(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemSmeltStart>(o);
  }
};

public struct ResItemSmeltStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemSmeltStart GetRootAsResItemSmeltStart(ByteBuffer _bb) { return GetRootAsResItemSmeltStart(_bb, new ResItemSmeltStart()); }
  public static ResItemSmeltStart GetRootAsResItemSmeltStart(ByteBuffer _bb, ResItemSmeltStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemSmeltStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Options(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int OptionsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOptionsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetOptionsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetOptionsArray() { return __p.__vector_as_array<uint>(4); }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemSmeltStart> CreateResItemSmeltStart(FlatBufferBuilder builder,
      VectorOffset optionsOffset = default(VectorOffset),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(2);
    ResItemSmeltStart.AddRemainItems(builder, remain_itemsOffset);
    ResItemSmeltStart.AddOptions(builder, optionsOffset);
    return ResItemSmeltStart.EndResItemSmeltStart(builder);
  }

  public static void StartResItemSmeltStart(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddOptions(FlatBufferBuilder builder, VectorOffset optionsOffset) { builder.AddOffset(0, optionsOffset.Value, 0); }
  public static VectorOffset CreateOptionsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateOptionsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static Offset<ResItemSmeltStart> EndResItemSmeltStart(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemSmeltStart>(o);
  }
};

public struct ReqItemSmeltEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemSmeltEnd GetRootAsReqItemSmeltEnd(ByteBuffer _bb) { return GetRootAsReqItemSmeltEnd(_bb, new ReqItemSmeltEnd()); }
  public static ReqItemSmeltEnd GetRootAsReqItemSmeltEnd(ByteBuffer _bb, ReqItemSmeltEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemSmeltEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SmeltItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SmeltItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemSmeltEnd> CreateReqItemSmeltEnd(FlatBufferBuilder builder,
      ulong smelt_item_id = 0,
      uint smelt_item_tid = 0) {
    builder.StartObject(2);
    ReqItemSmeltEnd.AddSmeltItemId(builder, smelt_item_id);
    ReqItemSmeltEnd.AddSmeltItemTid(builder, smelt_item_tid);
    return ReqItemSmeltEnd.EndReqItemSmeltEnd(builder);
  }

  public static void StartReqItemSmeltEnd(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddSmeltItemId(FlatBufferBuilder builder, ulong smeltItemId) { builder.AddUlong(0, smeltItemId, 0); }
  public static void AddSmeltItemTid(FlatBufferBuilder builder, uint smeltItemTid) { builder.AddUint(1, smeltItemTid, 0); }
  public static Offset<ReqItemSmeltEnd> EndReqItemSmeltEnd(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemSmeltEnd>(o);
  }
};

public struct ResItemSmeltEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemSmeltEnd GetRootAsResItemSmeltEnd(ByteBuffer _bb) { return GetRootAsResItemSmeltEnd(_bb, new ResItemSmeltEnd()); }
  public static ResItemSmeltEnd GetRootAsResItemSmeltEnd(ByteBuffer _bb, ResItemSmeltEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemSmeltEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? RemainItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemSmeltEnd> CreateResItemSmeltEnd(FlatBufferBuilder builder,
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(1);
    ResItemSmeltEnd.AddRemainItems(builder, remain_itemsOffset);
    return ResItemSmeltEnd.EndResItemSmeltEnd(builder);
  }

  public static void StartResItemSmeltEnd(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(0, remainItemsOffset.Value, 0); }
  public static Offset<ResItemSmeltEnd> EndResItemSmeltEnd(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemSmeltEnd>(o);
  }
};

public struct ReqItemSmeltCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemSmeltCancel GetRootAsReqItemSmeltCancel(ByteBuffer _bb) { return GetRootAsReqItemSmeltCancel(_bb, new ReqItemSmeltCancel()); }
  public static ReqItemSmeltCancel GetRootAsReqItemSmeltCancel(ByteBuffer _bb, ReqItemSmeltCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemSmeltCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqItemSmeltCancel(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqItemSmeltCancel> EndReqItemSmeltCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemSmeltCancel>(o);
  }
};

public struct ResItemSmeltCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemSmeltCancel GetRootAsResItemSmeltCancel(ByteBuffer _bb) { return GetRootAsResItemSmeltCancel(_bb, new ResItemSmeltCancel()); }
  public static ResItemSmeltCancel GetRootAsResItemSmeltCancel(ByteBuffer _bb, ResItemSmeltCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemSmeltCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResItemSmeltCancel(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResItemSmeltCancel> EndResItemSmeltCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemSmeltCancel>(o);
  }
};

public struct ReqItemShopGacha : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemShopGacha GetRootAsReqItemShopGacha(ByteBuffer _bb) { return GetRootAsReqItemShopGacha(_bb, new ReqItemShopGacha()); }
  public static ReqItemShopGacha GetRootAsReqItemShopGacha(ByteBuffer _bb, ReqItemShopGacha obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemShopGacha __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ShopGachaItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqItemShopGacha> CreateReqItemShopGacha(FlatBufferBuilder builder,
      uint shop_gacha_item_tid = 0) {
    builder.StartObject(1);
    ReqItemShopGacha.AddShopGachaItemTid(builder, shop_gacha_item_tid);
    return ReqItemShopGacha.EndReqItemShopGacha(builder);
  }

  public static void StartReqItemShopGacha(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddShopGachaItemTid(FlatBufferBuilder builder, uint shopGachaItemTid) { builder.AddUint(0, shopGachaItemTid, 0); }
  public static Offset<ReqItemShopGacha> EndReqItemShopGacha(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemShopGacha>(o);
  }
};

public struct ResItemShopGacha : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemShopGacha GetRootAsResItemShopGacha(ByteBuffer _bb) { return GetRootAsResItemShopGacha(_bb, new ResItemShopGacha()); }
  public static ResItemShopGacha GetRootAsResItemShopGacha(ByteBuffer _bb, ResItemShopGacha obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemShopGacha __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? GetItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResItemShopGacha> CreateResItemShopGacha(FlatBufferBuilder builder,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(2);
    ResItemShopGacha.AddRemainItems(builder, remain_itemsOffset);
    ResItemShopGacha.AddGetItems(builder, get_itemsOffset);
    return ResItemShopGacha.EndResItemShopGacha(builder);
  }

  public static void StartResItemShopGacha(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(0, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static Offset<ResItemShopGacha> EndResItemShopGacha(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemShopGacha>(o);
  }
};

public struct ReqMakeArtifactItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMakeArtifactItem GetRootAsReqMakeArtifactItem(ByteBuffer _bb) { return GetRootAsReqMakeArtifactItem(_bb, new ReqMakeArtifactItem()); }
  public static ReqMakeArtifactItem GetRootAsReqMakeArtifactItem(ByteBuffer _bb, ReqMakeArtifactItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMakeArtifactItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ArtifactTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemTid(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int UseItemTidLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUseItemTidBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetUseItemTidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetUseItemTidArray() { return __p.__vector_as_array<uint>(6); }
  public uint ProtectItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MaterialItem? MaterialItems(int j) { int o = __p.__offset(10); return o != 0 ? (MaterialItem?)(new MaterialItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MaterialItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqMakeArtifactItem> CreateReqMakeArtifactItem(FlatBufferBuilder builder,
      uint artifact_tid = 0,
      VectorOffset use_item_tidOffset = default(VectorOffset),
      uint protect_item_tid = 0,
      VectorOffset material_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqMakeArtifactItem.AddMaterialItems(builder, material_itemsOffset);
    ReqMakeArtifactItem.AddProtectItemTid(builder, protect_item_tid);
    ReqMakeArtifactItem.AddUseItemTid(builder, use_item_tidOffset);
    ReqMakeArtifactItem.AddArtifactTid(builder, artifact_tid);
    return ReqMakeArtifactItem.EndReqMakeArtifactItem(builder);
  }

  public static void StartReqMakeArtifactItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddArtifactTid(FlatBufferBuilder builder, uint artifactTid) { builder.AddUint(0, artifactTid, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, VectorOffset useItemTidOffset) { builder.AddOffset(1, useItemTidOffset.Value, 0); }
  public static VectorOffset CreateUseItemTidVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateUseItemTidVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUseItemTidVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddProtectItemTid(FlatBufferBuilder builder, uint protectItemTid) { builder.AddUint(2, protectItemTid, 0); }
  public static void AddMaterialItems(FlatBufferBuilder builder, VectorOffset materialItemsOffset) { builder.AddOffset(3, materialItemsOffset.Value, 0); }
  public static VectorOffset CreateMaterialItemsVector(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMaterialItemsVectorBlock(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaterialItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqMakeArtifactItem> EndReqMakeArtifactItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMakeArtifactItem>(o);
  }
};

public struct ResMakeArtifactItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMakeArtifactItem GetRootAsResMakeArtifactItem(ByteBuffer _bb) { return GetRootAsResMakeArtifactItem(_bb, new ResMakeArtifactItem()); }
  public static ResMakeArtifactItem GetRootAsResMakeArtifactItem(ByteBuffer _bb, ResMakeArtifactItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMakeArtifactItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool ArtifactResult { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong DeleteArtifactId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ArtifactInfo? ResultArtifactInfo { get { int o = __p.__offset(8); return o != 0 ? (ArtifactInfo?)(new ArtifactInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? ResultPets(int j) { int o = __p.__offset(14); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResMakeArtifactItem> CreateResMakeArtifactItem(FlatBufferBuilder builder,
      bool artifact_result = false,
      ulong delete_artifact_id = 0,
      Offset<ArtifactInfo> result_artifact_infoOffset = default(Offset<ArtifactInfo>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_petsOffset = default(VectorOffset)) {
    builder.StartObject(6);
    ResMakeArtifactItem.AddDeleteArtifactId(builder, delete_artifact_id);
    ResMakeArtifactItem.AddResultPets(builder, result_petsOffset);
    ResMakeArtifactItem.AddResultStackItems(builder, result_stack_itemsOffset);
    ResMakeArtifactItem.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResMakeArtifactItem.AddResultArtifactInfo(builder, result_artifact_infoOffset);
    ResMakeArtifactItem.AddArtifactResult(builder, artifact_result);
    return ResMakeArtifactItem.EndResMakeArtifactItem(builder);
  }

  public static void StartResMakeArtifactItem(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddArtifactResult(FlatBufferBuilder builder, bool artifactResult) { builder.AddBool(0, artifactResult, false); }
  public static void AddDeleteArtifactId(FlatBufferBuilder builder, ulong deleteArtifactId) { builder.AddUlong(1, deleteArtifactId, 0); }
  public static void AddResultArtifactInfo(FlatBufferBuilder builder, Offset<ArtifactInfo> resultArtifactInfoOffset) { builder.AddOffset(2, resultArtifactInfoOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(3, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(4, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(5, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResMakeArtifactItem> EndResMakeArtifactItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMakeArtifactItem>(o);
  }
};

public struct ReqGemItemEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGemItemEquip GetRootAsReqGemItemEquip(ByteBuffer _bb) { return GetRootAsReqGemItemEquip(_bb, new ReqGemItemEquip()); }
  public static ReqGemItemEquip GetRootAsReqGemItemEquip(ByteBuffer _bb, ReqGemItemEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGemItemEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong EquipItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint EquipItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GemItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte SocketIdx { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<ReqGemItemEquip> CreateReqGemItemEquip(FlatBufferBuilder builder,
      ulong equip_item_id = 0,
      uint equip_item_tid = 0,
      uint gem_item_tid = 0,
      byte socket_idx = 0) {
    builder.StartObject(4);
    ReqGemItemEquip.AddEquipItemId(builder, equip_item_id);
    ReqGemItemEquip.AddGemItemTid(builder, gem_item_tid);
    ReqGemItemEquip.AddEquipItemTid(builder, equip_item_tid);
    ReqGemItemEquip.AddSocketIdx(builder, socket_idx);
    return ReqGemItemEquip.EndReqGemItemEquip(builder);
  }

  public static void StartReqGemItemEquip(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddEquipItemId(FlatBufferBuilder builder, ulong equipItemId) { builder.AddUlong(0, equipItemId, 0); }
  public static void AddEquipItemTid(FlatBufferBuilder builder, uint equipItemTid) { builder.AddUint(1, equipItemTid, 0); }
  public static void AddGemItemTid(FlatBufferBuilder builder, uint gemItemTid) { builder.AddUint(2, gemItemTid, 0); }
  public static void AddSocketIdx(FlatBufferBuilder builder, byte socketIdx) { builder.AddByte(3, socketIdx, 0); }
  public static Offset<ReqGemItemEquip> EndReqGemItemEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGemItemEquip>(o);
  }
};

public struct ResGemItemEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGemItemEquip GetRootAsResGemItemEquip(ByteBuffer _bb) { return GetRootAsResGemItemEquip(_bb, new ResGemItemEquip()); }
  public static ResGemItemEquip GetRootAsResGemItemEquip(ByteBuffer _bb, ResGemItemEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGemItemEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGemItemEquip> CreateResGemItemEquip(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGemItemEquip.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResGemItemEquip.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResGemItemEquip.EndResGemItemEquip(builder);
  }

  public static void StartResGemItemEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(1, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGemItemEquip> EndResGemItemEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGemItemEquip>(o);
  }
};

public struct ReqGemItemUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGemItemUnEquip GetRootAsReqGemItemUnEquip(ByteBuffer _bb) { return GetRootAsReqGemItemUnEquip(_bb, new ReqGemItemUnEquip()); }
  public static ReqGemItemUnEquip GetRootAsReqGemItemUnEquip(ByteBuffer _bb, ReqGemItemUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGemItemUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong EquipItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint EquipItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte SocketIdxs(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int SocketIdxsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSocketIdxsBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetSocketIdxsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSocketIdxsArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ReqGemItemUnEquip> CreateReqGemItemUnEquip(FlatBufferBuilder builder,
      ulong equip_item_id = 0,
      uint equip_item_tid = 0,
      VectorOffset socket_idxsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ReqGemItemUnEquip.AddEquipItemId(builder, equip_item_id);
    ReqGemItemUnEquip.AddSocketIdxs(builder, socket_idxsOffset);
    ReqGemItemUnEquip.AddEquipItemTid(builder, equip_item_tid);
    return ReqGemItemUnEquip.EndReqGemItemUnEquip(builder);
  }

  public static void StartReqGemItemUnEquip(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddEquipItemId(FlatBufferBuilder builder, ulong equipItemId) { builder.AddUlong(0, equipItemId, 0); }
  public static void AddEquipItemTid(FlatBufferBuilder builder, uint equipItemTid) { builder.AddUint(1, equipItemTid, 0); }
  public static void AddSocketIdxs(FlatBufferBuilder builder, VectorOffset socketIdxsOffset) { builder.AddOffset(2, socketIdxsOffset.Value, 0); }
  public static VectorOffset CreateSocketIdxsVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSocketIdxsVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartSocketIdxsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ReqGemItemUnEquip> EndReqGemItemUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGemItemUnEquip>(o);
  }
};

public struct ResGemItemUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGemItemUnEquip GetRootAsResGemItemUnEquip(ByteBuffer _bb) { return GetRootAsResGemItemUnEquip(_bb, new ResGemItemUnEquip()); }
  public static ResGemItemUnEquip GetRootAsResGemItemUnEquip(ByteBuffer _bb, ResGemItemUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGemItemUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGemItemUnEquip> CreateResGemItemUnEquip(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGemItemUnEquip.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResGemItemUnEquip.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResGemItemUnEquip.EndResGemItemUnEquip(builder);
  }

  public static void StartResGemItemUnEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(1, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGemItemUnEquip> EndResGemItemUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGemItemUnEquip>(o);
  }
};

public struct ReqArtifactEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqArtifactEquip GetRootAsReqArtifactEquip(ByteBuffer _bb) { return GetRootAsReqArtifactEquip(_bb, new ReqArtifactEquip()); }
  public static ReqArtifactEquip GetRootAsReqArtifactEquip(ByteBuffer _bb, ReqArtifactEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqArtifactEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ArtifactType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong EquipArtifactId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqArtifactEquip> CreateReqArtifactEquip(FlatBufferBuilder builder,
      uint artifact_type = 0,
      ulong equip_artifact_id = 0) {
    builder.StartObject(2);
    ReqArtifactEquip.AddEquipArtifactId(builder, equip_artifact_id);
    ReqArtifactEquip.AddArtifactType(builder, artifact_type);
    return ReqArtifactEquip.EndReqArtifactEquip(builder);
  }

  public static void StartReqArtifactEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddArtifactType(FlatBufferBuilder builder, uint artifactType) { builder.AddUint(0, artifactType, 0); }
  public static void AddEquipArtifactId(FlatBufferBuilder builder, ulong equipArtifactId) { builder.AddUlong(1, equipArtifactId, 0); }
  public static Offset<ReqArtifactEquip> EndReqArtifactEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqArtifactEquip>(o);
  }
};

public struct ResArtifactEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResArtifactEquip GetRootAsResArtifactEquip(ByteBuffer _bb) { return GetRootAsResArtifactEquip(_bb, new ResArtifactEquip()); }
  public static ResArtifactEquip GetRootAsResArtifactEquip(ByteBuffer _bb, ResArtifactEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResArtifactEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResArtifactEquip(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResArtifactEquip> EndResArtifactEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResArtifactEquip>(o);
  }
};

public struct ReqArtifactUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqArtifactUnEquip GetRootAsReqArtifactUnEquip(ByteBuffer _bb) { return GetRootAsReqArtifactUnEquip(_bb, new ReqArtifactUnEquip()); }
  public static ReqArtifactUnEquip GetRootAsReqArtifactUnEquip(ByteBuffer _bb, ReqArtifactUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqArtifactUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ArtifactType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqArtifactUnEquip> CreateReqArtifactUnEquip(FlatBufferBuilder builder,
      uint artifact_type = 0) {
    builder.StartObject(1);
    ReqArtifactUnEquip.AddArtifactType(builder, artifact_type);
    return ReqArtifactUnEquip.EndReqArtifactUnEquip(builder);
  }

  public static void StartReqArtifactUnEquip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddArtifactType(FlatBufferBuilder builder, uint artifactType) { builder.AddUint(0, artifactType, 0); }
  public static Offset<ReqArtifactUnEquip> EndReqArtifactUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqArtifactUnEquip>(o);
  }
};

public struct ResArtifactUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResArtifactUnEquip GetRootAsResArtifactUnEquip(ByteBuffer _bb) { return GetRootAsResArtifactUnEquip(_bb, new ResArtifactUnEquip()); }
  public static ResArtifactUnEquip GetRootAsResArtifactUnEquip(ByteBuffer _bb, ResArtifactUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResArtifactUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResArtifactUnEquip(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResArtifactUnEquip> EndResArtifactUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResArtifactUnEquip>(o);
  }
};

public struct ReqMakeCookItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMakeCookItem GetRootAsReqMakeCookItem(ByteBuffer _bb) { return GetRootAsReqMakeCookItem(_bb, new ReqMakeCookItem()); }
  public static ReqMakeCookItem GetRootAsReqMakeCookItem(ByteBuffer _bb, ReqMakeCookItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMakeCookItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MakeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint MakeItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MaterialItem? MakeMaterialItems(int j) { int o = __p.__offset(10); return o != 0 ? (MaterialItem?)(new MaterialItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MakeMaterialItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqMakeCookItem> CreateReqMakeCookItem(FlatBufferBuilder builder,
      uint make_tid = 0,
      uint use_item_tid = 0,
      uint make_item_cnt = 0,
      VectorOffset make_material_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqMakeCookItem.AddMakeMaterialItems(builder, make_material_itemsOffset);
    ReqMakeCookItem.AddMakeItemCnt(builder, make_item_cnt);
    ReqMakeCookItem.AddUseItemTid(builder, use_item_tid);
    ReqMakeCookItem.AddMakeTid(builder, make_tid);
    return ReqMakeCookItem.EndReqMakeCookItem(builder);
  }

  public static void StartReqMakeCookItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMakeTid(FlatBufferBuilder builder, uint makeTid) { builder.AddUint(0, makeTid, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(1, useItemTid, 0); }
  public static void AddMakeItemCnt(FlatBufferBuilder builder, uint makeItemCnt) { builder.AddUint(2, makeItemCnt, 0); }
  public static void AddMakeMaterialItems(FlatBufferBuilder builder, VectorOffset makeMaterialItemsOffset) { builder.AddOffset(3, makeMaterialItemsOffset.Value, 0); }
  public static VectorOffset CreateMakeMaterialItemsVector(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMakeMaterialItemsVectorBlock(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMakeMaterialItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqMakeCookItem> EndReqMakeCookItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMakeCookItem>(o);
  }
};

public struct ResMakeCookItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMakeCookItem GetRootAsResMakeCookItem(ByteBuffer _bb) { return GetRootAsResMakeCookItem(_bb, new ResMakeCookItem()); }
  public static ResMakeCookItem GetRootAsResMakeCookItem(ByteBuffer _bb, ResMakeCookItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMakeCookItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultCookingMakeInfo? ResultMake(int j) { int o = __p.__offset(4); return o != 0 ? (ResultCookingMakeInfo?)(new ResultCookingMakeInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultMakeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public CookHistory? CookHistory { get { int o = __p.__offset(10); return o != 0 ? (CookHistory?)(new CookHistory()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResMakeCookItem> CreateResMakeCookItem(FlatBufferBuilder builder,
      VectorOffset result_makeOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      Offset<CookHistory> cook_historyOffset = default(Offset<CookHistory>)) {
    builder.StartObject(4);
    ResMakeCookItem.AddCookHistory(builder, cook_historyOffset);
    ResMakeCookItem.AddResultStackItems(builder, result_stack_itemsOffset);
    ResMakeCookItem.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResMakeCookItem.AddResultMake(builder, result_makeOffset);
    return ResMakeCookItem.EndResMakeCookItem(builder);
  }

  public static void StartResMakeCookItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddResultMake(FlatBufferBuilder builder, VectorOffset resultMakeOffset) { builder.AddOffset(0, resultMakeOffset.Value, 0); }
  public static VectorOffset CreateResultMakeVector(FlatBufferBuilder builder, Offset<ResultCookingMakeInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultMakeVectorBlock(FlatBufferBuilder builder, Offset<ResultCookingMakeInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultMakeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(1, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(2, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCookHistory(FlatBufferBuilder builder, Offset<CookHistory> cookHistoryOffset) { builder.AddOffset(3, cookHistoryOffset.Value, 0); }
  public static Offset<ResMakeCookItem> EndResMakeCookItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMakeCookItem>(o);
  }
};

public struct ReqMakeCookItemNoRecipe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMakeCookItemNoRecipe GetRootAsReqMakeCookItemNoRecipe(ByteBuffer _bb) { return GetRootAsReqMakeCookItemNoRecipe(_bb, new ReqMakeCookItemNoRecipe()); }
  public static ReqMakeCookItemNoRecipe GetRootAsReqMakeCookItemNoRecipe(ByteBuffer _bb, ReqMakeCookItemNoRecipe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMakeCookItemNoRecipe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MaterialItem? MakeMaterialItems(int j) { int o = __p.__offset(4); return o != 0 ? (MaterialItem?)(new MaterialItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MakeMaterialItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqMakeCookItemNoRecipe> CreateReqMakeCookItemNoRecipe(FlatBufferBuilder builder,
      VectorOffset make_material_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqMakeCookItemNoRecipe.AddMakeMaterialItems(builder, make_material_itemsOffset);
    return ReqMakeCookItemNoRecipe.EndReqMakeCookItemNoRecipe(builder);
  }

  public static void StartReqMakeCookItemNoRecipe(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMakeMaterialItems(FlatBufferBuilder builder, VectorOffset makeMaterialItemsOffset) { builder.AddOffset(0, makeMaterialItemsOffset.Value, 0); }
  public static VectorOffset CreateMakeMaterialItemsVector(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMakeMaterialItemsVectorBlock(FlatBufferBuilder builder, Offset<MaterialItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMakeMaterialItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqMakeCookItemNoRecipe> EndReqMakeCookItemNoRecipe(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMakeCookItemNoRecipe>(o);
  }
};

public struct ResMakeCookItemNoRecipe : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMakeCookItemNoRecipe GetRootAsResMakeCookItemNoRecipe(ByteBuffer _bb) { return GetRootAsResMakeCookItemNoRecipe(_bb, new ResMakeCookItemNoRecipe()); }
  public static ResMakeCookItemNoRecipe GetRootAsResMakeCookItemNoRecipe(ByteBuffer _bb, ResMakeCookItemNoRecipe obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMakeCookItemNoRecipe __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResMakeCookItemNoRecipe> CreateResMakeCookItemNoRecipe(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResMakeCookItemNoRecipe.AddResultStackItems(builder, result_stack_itemsOffset);
    ResMakeCookItemNoRecipe.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResMakeCookItemNoRecipe.EndResMakeCookItemNoRecipe(builder);
  }

  public static void StartResMakeCookItemNoRecipe(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(1, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResMakeCookItemNoRecipe> EndResMakeCookItemNoRecipe(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMakeCookItemNoRecipe>(o);
  }
};

public struct ReqGetMailRefreshTime : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetMailRefreshTime GetRootAsReqGetMailRefreshTime(ByteBuffer _bb) { return GetRootAsReqGetMailRefreshTime(_bb, new ReqGetMailRefreshTime()); }
  public static ReqGetMailRefreshTime GetRootAsReqGetMailRefreshTime(ByteBuffer _bb, ReqGetMailRefreshTime obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetMailRefreshTime __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetMailRefreshTime(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetMailRefreshTime> EndReqGetMailRefreshTime(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetMailRefreshTime>(o);
  }
};

public struct ResGetMailRefreshTime : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetMailRefreshTime GetRootAsResGetMailRefreshTime(ByteBuffer _bb) { return GetRootAsResGetMailRefreshTime(_bb, new ResGetMailRefreshTime()); }
  public static ResGetMailRefreshTime GetRootAsResGetMailRefreshTime(ByteBuffer _bb, ResGetMailRefreshTime obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetMailRefreshTime __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MailRefreshDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CashMailRefreshDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong MessageRefreshDt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ExchangeMessageRefreshDt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGetMailRefreshTime> CreateResGetMailRefreshTime(FlatBufferBuilder builder,
      ulong mail_refresh_dt = 0,
      ulong cash_mail_refresh_dt = 0,
      ulong message_refresh_dt = 0,
      ulong exchange_message_refresh_dt = 0) {
    builder.StartObject(4);
    ResGetMailRefreshTime.AddExchangeMessageRefreshDt(builder, exchange_message_refresh_dt);
    ResGetMailRefreshTime.AddMessageRefreshDt(builder, message_refresh_dt);
    ResGetMailRefreshTime.AddCashMailRefreshDt(builder, cash_mail_refresh_dt);
    ResGetMailRefreshTime.AddMailRefreshDt(builder, mail_refresh_dt);
    return ResGetMailRefreshTime.EndResGetMailRefreshTime(builder);
  }

  public static void StartResGetMailRefreshTime(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMailRefreshDt(FlatBufferBuilder builder, ulong mailRefreshDt) { builder.AddUlong(0, mailRefreshDt, 0); }
  public static void AddCashMailRefreshDt(FlatBufferBuilder builder, ulong cashMailRefreshDt) { builder.AddUlong(1, cashMailRefreshDt, 0); }
  public static void AddMessageRefreshDt(FlatBufferBuilder builder, ulong messageRefreshDt) { builder.AddUlong(2, messageRefreshDt, 0); }
  public static void AddExchangeMessageRefreshDt(FlatBufferBuilder builder, ulong exchangeMessageRefreshDt) { builder.AddUlong(3, exchangeMessageRefreshDt, 0); }
  public static Offset<ResGetMailRefreshTime> EndResGetMailRefreshTime(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetMailRefreshTime>(o);
  }
};

public struct ReqGetMailList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetMailList GetRootAsReqGetMailList(ByteBuffer _bb) { return GetRootAsReqGetMailList(_bb, new ReqGetMailList()); }
  public static ReqGetMailList GetRootAsReqGetMailList(ByteBuffer _bb, ReqGetMailList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetMailList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetMailList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetMailList> EndReqGetMailList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetMailList>(o);
  }
};

public struct ResGetMailList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetMailList GetRootAsResGetMailList(ByteBuffer _bb) { return GetRootAsResGetMailList(_bb, new ResGetMailList()); }
  public static ResGetMailList GetRootAsResGetMailList(ByteBuffer _bb, ResGetMailList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetMailList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MailRefreshDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public MailInfo? MailInfoList(int j) { int o = __p.__offset(6); return o != 0 ? (MailInfo?)(new MailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MailInfoListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public MailInfo? AccountMailInfoList(int j) { int o = __p.__offset(8); return o != 0 ? (MailInfo?)(new MailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AccountMailInfoListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetMailList> CreateResGetMailList(FlatBufferBuilder builder,
      ulong mail_refresh_dt = 0,
      VectorOffset mail_info_listOffset = default(VectorOffset),
      VectorOffset account_mail_info_listOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResGetMailList.AddMailRefreshDt(builder, mail_refresh_dt);
    ResGetMailList.AddAccountMailInfoList(builder, account_mail_info_listOffset);
    ResGetMailList.AddMailInfoList(builder, mail_info_listOffset);
    return ResGetMailList.EndResGetMailList(builder);
  }

  public static void StartResGetMailList(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMailRefreshDt(FlatBufferBuilder builder, ulong mailRefreshDt) { builder.AddUlong(0, mailRefreshDt, 0); }
  public static void AddMailInfoList(FlatBufferBuilder builder, VectorOffset mailInfoListOffset) { builder.AddOffset(1, mailInfoListOffset.Value, 0); }
  public static VectorOffset CreateMailInfoListVector(FlatBufferBuilder builder, Offset<MailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMailInfoListVectorBlock(FlatBufferBuilder builder, Offset<MailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMailInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAccountMailInfoList(FlatBufferBuilder builder, VectorOffset accountMailInfoListOffset) { builder.AddOffset(2, accountMailInfoListOffset.Value, 0); }
  public static VectorOffset CreateAccountMailInfoListVector(FlatBufferBuilder builder, Offset<MailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAccountMailInfoListVectorBlock(FlatBufferBuilder builder, Offset<MailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAccountMailInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetMailList> EndResGetMailList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetMailList>(o);
  }
};

public struct ReqTakeMailItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTakeMailItem GetRootAsReqTakeMailItem(ByteBuffer _bb) { return GetRootAsReqTakeMailItem(_bb, new ReqTakeMailItem()); }
  public static ReqTakeMailItem GetRootAsReqTakeMailItem(ByteBuffer _bb, ReqTakeMailItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTakeMailItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public uint MailKind { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public TakeMailInfo? TakeMailInfos(int j) { int o = __p.__offset(8); return o != 0 ? (TakeMailInfo?)(new TakeMailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TakeMailInfosLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqTakeMailItem> CreateReqTakeMailItem(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      uint mail_kind = 0,
      VectorOffset take_mail_infosOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ReqTakeMailItem.AddTakeMailInfos(builder, take_mail_infosOffset);
    ReqTakeMailItem.AddMailKind(builder, mail_kind);
    ReqTakeMailItem.AddMarketType(builder, market_type);
    return ReqTakeMailItem.EndReqTakeMailItem(builder);
  }

  public static void StartReqTakeMailItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddMailKind(FlatBufferBuilder builder, uint mailKind) { builder.AddUint(1, mailKind, 0); }
  public static void AddTakeMailInfos(FlatBufferBuilder builder, VectorOffset takeMailInfosOffset) { builder.AddOffset(2, takeMailInfosOffset.Value, 0); }
  public static VectorOffset CreateTakeMailInfosVector(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTakeMailInfosVectorBlock(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTakeMailInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqTakeMailItem> EndReqTakeMailItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTakeMailItem>(o);
  }
};

public struct ResTakeMailItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTakeMailItem GetRootAsResTakeMailItem(ByteBuffer _bb) { return GetRootAsResTakeMailItem(_bb, new ResTakeMailItem()); }
  public static ResTakeMailItem GetRootAsResTakeMailItem(ByteBuffer _bb, ResTakeMailItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTakeMailItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TakeMailInfo? TakeMailInfos(int j) { int o = __p.__offset(4); return o != 0 ? (TakeMailInfo?)(new TakeMailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TakeMailInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int ResultCashCoinGainCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResTakeMailItem> CreateResTakeMailItem(FlatBufferBuilder builder,
      VectorOffset take_mail_infosOffset = default(VectorOffset),
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>),
      int result_cash_coin_gain_cnt = 0,
      int result_cash_coin_balance = 0) {
    builder.StartObject(5);
    ResTakeMailItem.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResTakeMailItem.AddResultCashCoinGainCnt(builder, result_cash_coin_gain_cnt);
    ResTakeMailItem.AddRemainItems(builder, remain_itemsOffset);
    ResTakeMailItem.AddGetItems(builder, get_itemsOffset);
    ResTakeMailItem.AddTakeMailInfos(builder, take_mail_infosOffset);
    return ResTakeMailItem.EndResTakeMailItem(builder);
  }

  public static void StartResTakeMailItem(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddTakeMailInfos(FlatBufferBuilder builder, VectorOffset takeMailInfosOffset) { builder.AddOffset(0, takeMailInfosOffset.Value, 0); }
  public static VectorOffset CreateTakeMailInfosVector(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTakeMailInfosVectorBlock(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTakeMailInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(2, remainItemsOffset.Value, 0); }
  public static void AddResultCashCoinGainCnt(FlatBufferBuilder builder, int resultCashCoinGainCnt) { builder.AddInt(3, resultCashCoinGainCnt, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(4, resultCashCoinBalance, 0); }
  public static Offset<ResTakeMailItem> EndResTakeMailItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTakeMailItem>(o);
  }
};

public struct ReqGetMessageList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetMessageList GetRootAsReqGetMessageList(ByteBuffer _bb) { return GetRootAsReqGetMessageList(_bb, new ReqGetMessageList()); }
  public static ReqGetMessageList GetRootAsReqGetMessageList(ByteBuffer _bb, ReqGetMessageList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetMessageList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetMessageList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetMessageList> EndReqGetMessageList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetMessageList>(o);
  }
};

public struct ResGetMessageList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetMessageList GetRootAsResGetMessageList(ByteBuffer _bb) { return GetRootAsResGetMessageList(_bb, new ResGetMessageList()); }
  public static ResGetMessageList GetRootAsResGetMessageList(ByteBuffer _bb, ResGetMessageList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetMessageList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MessageRefreshDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public MessageInfo? MessageInfoList(int j) { int o = __p.__offset(6); return o != 0 ? (MessageInfo?)(new MessageInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MessageInfoListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetMessageList> CreateResGetMessageList(FlatBufferBuilder builder,
      ulong message_refresh_dt = 0,
      VectorOffset message_info_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGetMessageList.AddMessageRefreshDt(builder, message_refresh_dt);
    ResGetMessageList.AddMessageInfoList(builder, message_info_listOffset);
    return ResGetMessageList.EndResGetMessageList(builder);
  }

  public static void StartResGetMessageList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMessageRefreshDt(FlatBufferBuilder builder, ulong messageRefreshDt) { builder.AddUlong(0, messageRefreshDt, 0); }
  public static void AddMessageInfoList(FlatBufferBuilder builder, VectorOffset messageInfoListOffset) { builder.AddOffset(1, messageInfoListOffset.Value, 0); }
  public static VectorOffset CreateMessageInfoListVector(FlatBufferBuilder builder, Offset<MessageInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMessageInfoListVectorBlock(FlatBufferBuilder builder, Offset<MessageInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMessageInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetMessageList> EndResGetMessageList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetMessageList>(o);
  }
};

public struct ReqReadMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqReadMessage GetRootAsReqReadMessage(ByteBuffer _bb) { return GetRootAsReqReadMessage(_bb, new ReqReadMessage()); }
  public static ReqReadMessage GetRootAsReqReadMessage(ByteBuffer _bb, ReqReadMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqReadMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ReadMessageIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqReadMessage> CreateReqReadMessage(FlatBufferBuilder builder,
      ulong read_message_idx = 0) {
    builder.StartObject(1);
    ReqReadMessage.AddReadMessageIdx(builder, read_message_idx);
    return ReqReadMessage.EndReqReadMessage(builder);
  }

  public static void StartReqReadMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddReadMessageIdx(FlatBufferBuilder builder, ulong readMessageIdx) { builder.AddUlong(0, readMessageIdx, 0); }
  public static Offset<ReqReadMessage> EndReqReadMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqReadMessage>(o);
  }
};

public struct ResReadMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResReadMessage GetRootAsResReadMessage(ByteBuffer _bb) { return GetRootAsResReadMessage(_bb, new ResReadMessage()); }
  public static ResReadMessage GetRootAsResReadMessage(ByteBuffer _bb, ResReadMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResReadMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ReadMessageIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResReadMessage> CreateResReadMessage(FlatBufferBuilder builder,
      ulong read_message_idx = 0) {
    builder.StartObject(1);
    ResReadMessage.AddReadMessageIdx(builder, read_message_idx);
    return ResReadMessage.EndResReadMessage(builder);
  }

  public static void StartResReadMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddReadMessageIdx(FlatBufferBuilder builder, ulong readMessageIdx) { builder.AddUlong(0, readMessageIdx, 0); }
  public static Offset<ResReadMessage> EndResReadMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResReadMessage>(o);
  }
};

public struct ReqSendMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSendMessage GetRootAsReqSendMessage(ByteBuffer _bb) { return GetRootAsReqSendMessage(_bb, new ReqSendMessage()); }
  public static ReqSendMessage GetRootAsReqSendMessage(ByteBuffer _bb, ReqSendMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSendMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Type { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string TargetNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetTargetNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTargetNickArray() { return __p.__vector_as_array<byte>(6); }
  public string Title { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(8); }
  public string Message { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<ReqSendMessage> CreateReqSendMessage(FlatBufferBuilder builder,
      ushort type = 0,
      StringOffset target_nickOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(4);
    ReqSendMessage.AddMessage(builder, messageOffset);
    ReqSendMessage.AddTitle(builder, titleOffset);
    ReqSendMessage.AddTargetNick(builder, target_nickOffset);
    ReqSendMessage.AddType(builder, type);
    return ReqSendMessage.EndReqSendMessage(builder);
  }

  public static void StartReqSendMessage(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddType(FlatBufferBuilder builder, ushort type) { builder.AddUshort(0, type, 0); }
  public static void AddTargetNick(FlatBufferBuilder builder, StringOffset targetNickOffset) { builder.AddOffset(1, targetNickOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(2, titleOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(3, messageOffset.Value, 0); }
  public static Offset<ReqSendMessage> EndReqSendMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSendMessage>(o);
  }
};

public struct ResSendMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSendMessage GetRootAsResSendMessage(ByteBuffer _bb) { return GetRootAsResSendMessage(_bb, new ResSendMessage()); }
  public static ResSendMessage GetRootAsResSendMessage(ByteBuffer _bb, ResSendMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSendMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort NormalMsgSendCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort GuildMsgSendCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResSendMessage> CreateResSendMessage(FlatBufferBuilder builder,
      ushort normal_msg_send_cnt = 0,
      ushort guild_msg_send_cnt = 0,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResSendMessage.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResSendMessage.AddGuildMsgSendCnt(builder, guild_msg_send_cnt);
    ResSendMessage.AddNormalMsgSendCnt(builder, normal_msg_send_cnt);
    return ResSendMessage.EndResSendMessage(builder);
  }

  public static void StartResSendMessage(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddNormalMsgSendCnt(FlatBufferBuilder builder, ushort normalMsgSendCnt) { builder.AddUshort(0, normalMsgSendCnt, 0); }
  public static void AddGuildMsgSendCnt(FlatBufferBuilder builder, ushort guildMsgSendCnt) { builder.AddUshort(1, guildMsgSendCnt, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResSendMessage> EndResSendMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSendMessage>(o);
  }
};

public struct ReqDelMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqDelMessage GetRootAsReqDelMessage(ByteBuffer _bb) { return GetRootAsReqDelMessage(_bb, new ReqDelMessage()); }
  public static ReqDelMessage GetRootAsReqDelMessage(ByteBuffer _bb, ReqDelMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqDelMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DelMessageIdx(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int DelMessageIdxLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDelMessageIdxBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDelMessageIdxBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetDelMessageIdxArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqDelMessage> CreateReqDelMessage(FlatBufferBuilder builder,
      VectorOffset del_message_idxOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqDelMessage.AddDelMessageIdx(builder, del_message_idxOffset);
    return ReqDelMessage.EndReqDelMessage(builder);
  }

  public static void StartReqDelMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelMessageIdx(FlatBufferBuilder builder, VectorOffset delMessageIdxOffset) { builder.AddOffset(0, delMessageIdxOffset.Value, 0); }
  public static VectorOffset CreateDelMessageIdxVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDelMessageIdxVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartDelMessageIdxVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqDelMessage> EndReqDelMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqDelMessage>(o);
  }
};

public struct ResDelMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResDelMessage GetRootAsResDelMessage(ByteBuffer _bb) { return GetRootAsResDelMessage(_bb, new ResDelMessage()); }
  public static ResDelMessage GetRootAsResDelMessage(ByteBuffer _bb, ResDelMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResDelMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DelMessageIdx(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int DelMessageIdxLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDelMessageIdxBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDelMessageIdxBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetDelMessageIdxArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ResDelMessage> CreateResDelMessage(FlatBufferBuilder builder,
      VectorOffset del_message_idxOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResDelMessage.AddDelMessageIdx(builder, del_message_idxOffset);
    return ResDelMessage.EndResDelMessage(builder);
  }

  public static void StartResDelMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelMessageIdx(FlatBufferBuilder builder, VectorOffset delMessageIdxOffset) { builder.AddOffset(0, delMessageIdxOffset.Value, 0); }
  public static VectorOffset CreateDelMessageIdxVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDelMessageIdxVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartDelMessageIdxVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ResDelMessage> EndResDelMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResDelMessage>(o);
  }
};

public struct ReqGetExchangeMessageList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetExchangeMessageList GetRootAsReqGetExchangeMessageList(ByteBuffer _bb) { return GetRootAsReqGetExchangeMessageList(_bb, new ReqGetExchangeMessageList()); }
  public static ReqGetExchangeMessageList GetRootAsReqGetExchangeMessageList(ByteBuffer _bb, ReqGetExchangeMessageList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetExchangeMessageList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetExchangeMessageList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetExchangeMessageList> EndReqGetExchangeMessageList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetExchangeMessageList>(o);
  }
};

public struct ResGetExchangeMessageList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetExchangeMessageList GetRootAsResGetExchangeMessageList(ByteBuffer _bb) { return GetRootAsResGetExchangeMessageList(_bb, new ResGetExchangeMessageList()); }
  public static ResGetExchangeMessageList GetRootAsResGetExchangeMessageList(ByteBuffer _bb, ResGetExchangeMessageList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetExchangeMessageList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MessageRefreshDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public MessageInfo? MessageInfoList(int j) { int o = __p.__offset(6); return o != 0 ? (MessageInfo?)(new MessageInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MessageInfoListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetExchangeMessageList> CreateResGetExchangeMessageList(FlatBufferBuilder builder,
      ulong message_refresh_dt = 0,
      VectorOffset message_info_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGetExchangeMessageList.AddMessageRefreshDt(builder, message_refresh_dt);
    ResGetExchangeMessageList.AddMessageInfoList(builder, message_info_listOffset);
    return ResGetExchangeMessageList.EndResGetExchangeMessageList(builder);
  }

  public static void StartResGetExchangeMessageList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMessageRefreshDt(FlatBufferBuilder builder, ulong messageRefreshDt) { builder.AddUlong(0, messageRefreshDt, 0); }
  public static void AddMessageInfoList(FlatBufferBuilder builder, VectorOffset messageInfoListOffset) { builder.AddOffset(1, messageInfoListOffset.Value, 0); }
  public static VectorOffset CreateMessageInfoListVector(FlatBufferBuilder builder, Offset<MessageInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMessageInfoListVectorBlock(FlatBufferBuilder builder, Offset<MessageInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMessageInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetExchangeMessageList> EndResGetExchangeMessageList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetExchangeMessageList>(o);
  }
};

public struct ReqReadExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqReadExchangeMessage GetRootAsReqReadExchangeMessage(ByteBuffer _bb) { return GetRootAsReqReadExchangeMessage(_bb, new ReqReadExchangeMessage()); }
  public static ReqReadExchangeMessage GetRootAsReqReadExchangeMessage(ByteBuffer _bb, ReqReadExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqReadExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ReadMessageIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqReadExchangeMessage> CreateReqReadExchangeMessage(FlatBufferBuilder builder,
      ulong read_message_idx = 0) {
    builder.StartObject(1);
    ReqReadExchangeMessage.AddReadMessageIdx(builder, read_message_idx);
    return ReqReadExchangeMessage.EndReqReadExchangeMessage(builder);
  }

  public static void StartReqReadExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddReadMessageIdx(FlatBufferBuilder builder, ulong readMessageIdx) { builder.AddUlong(0, readMessageIdx, 0); }
  public static Offset<ReqReadExchangeMessage> EndReqReadExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqReadExchangeMessage>(o);
  }
};

public struct ResReadExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResReadExchangeMessage GetRootAsResReadExchangeMessage(ByteBuffer _bb) { return GetRootAsResReadExchangeMessage(_bb, new ResReadExchangeMessage()); }
  public static ResReadExchangeMessage GetRootAsResReadExchangeMessage(ByteBuffer _bb, ResReadExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResReadExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ReadMessageIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResReadExchangeMessage> CreateResReadExchangeMessage(FlatBufferBuilder builder,
      ulong read_message_idx = 0) {
    builder.StartObject(1);
    ResReadExchangeMessage.AddReadMessageIdx(builder, read_message_idx);
    return ResReadExchangeMessage.EndResReadExchangeMessage(builder);
  }

  public static void StartResReadExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddReadMessageIdx(FlatBufferBuilder builder, ulong readMessageIdx) { builder.AddUlong(0, readMessageIdx, 0); }
  public static Offset<ResReadExchangeMessage> EndResReadExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResReadExchangeMessage>(o);
  }
};

public struct ReqSendExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSendExchangeMessage GetRootAsReqSendExchangeMessage(ByteBuffer _bb) { return GetRootAsReqSendExchangeMessage(_bb, new ReqSendExchangeMessage()); }
  public static ReqSendExchangeMessage GetRootAsReqSendExchangeMessage(ByteBuffer _bb, ReqSendExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSendExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TargetUserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Title { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(6); }
  public string Message { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ReqSendExchangeMessage> CreateReqSendExchangeMessage(FlatBufferBuilder builder,
      ulong target_user_id = 0,
      StringOffset titleOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartObject(3);
    ReqSendExchangeMessage.AddTargetUserId(builder, target_user_id);
    ReqSendExchangeMessage.AddMessage(builder, messageOffset);
    ReqSendExchangeMessage.AddTitle(builder, titleOffset);
    return ReqSendExchangeMessage.EndReqSendExchangeMessage(builder);
  }

  public static void StartReqSendExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTargetUserId(FlatBufferBuilder builder, ulong targetUserId) { builder.AddUlong(0, targetUserId, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(1, titleOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(2, messageOffset.Value, 0); }
  public static Offset<ReqSendExchangeMessage> EndReqSendExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSendExchangeMessage>(o);
  }
};

public struct ResSendExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSendExchangeMessage GetRootAsResSendExchangeMessage(ByteBuffer _bb) { return GetRootAsResSendExchangeMessage(_bb, new ResSendExchangeMessage()); }
  public static ResSendExchangeMessage GetRootAsResSendExchangeMessage(ByteBuffer _bb, ResSendExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSendExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort NormalMsgSendCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResSendExchangeMessage> CreateResSendExchangeMessage(FlatBufferBuilder builder,
      ushort normal_msg_send_cnt = 0,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResSendExchangeMessage.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResSendExchangeMessage.AddNormalMsgSendCnt(builder, normal_msg_send_cnt);
    return ResSendExchangeMessage.EndResSendExchangeMessage(builder);
  }

  public static void StartResSendExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddNormalMsgSendCnt(FlatBufferBuilder builder, ushort normalMsgSendCnt) { builder.AddUshort(0, normalMsgSendCnt, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(1, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResSendExchangeMessage> EndResSendExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSendExchangeMessage>(o);
  }
};

public struct ReqDelExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqDelExchangeMessage GetRootAsReqDelExchangeMessage(ByteBuffer _bb) { return GetRootAsReqDelExchangeMessage(_bb, new ReqDelExchangeMessage()); }
  public static ReqDelExchangeMessage GetRootAsReqDelExchangeMessage(ByteBuffer _bb, ReqDelExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqDelExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DelMessageIdx(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int DelMessageIdxLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDelMessageIdxBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDelMessageIdxBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetDelMessageIdxArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqDelExchangeMessage> CreateReqDelExchangeMessage(FlatBufferBuilder builder,
      VectorOffset del_message_idxOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqDelExchangeMessage.AddDelMessageIdx(builder, del_message_idxOffset);
    return ReqDelExchangeMessage.EndReqDelExchangeMessage(builder);
  }

  public static void StartReqDelExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelMessageIdx(FlatBufferBuilder builder, VectorOffset delMessageIdxOffset) { builder.AddOffset(0, delMessageIdxOffset.Value, 0); }
  public static VectorOffset CreateDelMessageIdxVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDelMessageIdxVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartDelMessageIdxVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqDelExchangeMessage> EndReqDelExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqDelExchangeMessage>(o);
  }
};

public struct ResDelExchangeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResDelExchangeMessage GetRootAsResDelExchangeMessage(ByteBuffer _bb) { return GetRootAsResDelExchangeMessage(_bb, new ResDelExchangeMessage()); }
  public static ResDelExchangeMessage GetRootAsResDelExchangeMessage(ByteBuffer _bb, ResDelExchangeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResDelExchangeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DelMessageIdx(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int DelMessageIdxLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDelMessageIdxBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDelMessageIdxBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetDelMessageIdxArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ResDelExchangeMessage> CreateResDelExchangeMessage(FlatBufferBuilder builder,
      VectorOffset del_message_idxOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResDelExchangeMessage.AddDelMessageIdx(builder, del_message_idxOffset);
    return ResDelExchangeMessage.EndResDelExchangeMessage(builder);
  }

  public static void StartResDelExchangeMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDelMessageIdx(FlatBufferBuilder builder, VectorOffset delMessageIdxOffset) { builder.AddOffset(0, delMessageIdxOffset.Value, 0); }
  public static VectorOffset CreateDelMessageIdxVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDelMessageIdxVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartDelMessageIdxVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ResDelExchangeMessage> EndResDelExchangeMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResDelExchangeMessage>(o);
  }
};

public struct ReqGetCashMailList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetCashMailList GetRootAsReqGetCashMailList(ByteBuffer _bb) { return GetRootAsReqGetCashMailList(_bb, new ReqGetCashMailList()); }
  public static ReqGetCashMailList GetRootAsReqGetCashMailList(ByteBuffer _bb, ReqGetCashMailList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetCashMailList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetCashMailList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetCashMailList> EndReqGetCashMailList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetCashMailList>(o);
  }
};

public struct ResGetCashMailList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetCashMailList GetRootAsResGetCashMailList(ByteBuffer _bb) { return GetRootAsResGetCashMailList(_bb, new ResGetCashMailList()); }
  public static ResGetCashMailList GetRootAsResGetCashMailList(ByteBuffer _bb, ResGetCashMailList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetCashMailList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong MailRefreshDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public CashMailInfo? MailInfoList(int j) { int o = __p.__offset(6); return o != 0 ? (CashMailInfo?)(new CashMailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MailInfoListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetCashMailList> CreateResGetCashMailList(FlatBufferBuilder builder,
      ulong mail_refresh_dt = 0,
      VectorOffset mail_info_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGetCashMailList.AddMailRefreshDt(builder, mail_refresh_dt);
    ResGetCashMailList.AddMailInfoList(builder, mail_info_listOffset);
    return ResGetCashMailList.EndResGetCashMailList(builder);
  }

  public static void StartResGetCashMailList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMailRefreshDt(FlatBufferBuilder builder, ulong mailRefreshDt) { builder.AddUlong(0, mailRefreshDt, 0); }
  public static void AddMailInfoList(FlatBufferBuilder builder, VectorOffset mailInfoListOffset) { builder.AddOffset(1, mailInfoListOffset.Value, 0); }
  public static VectorOffset CreateMailInfoListVector(FlatBufferBuilder builder, Offset<CashMailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMailInfoListVectorBlock(FlatBufferBuilder builder, Offset<CashMailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMailInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetCashMailList> EndResGetCashMailList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetCashMailList>(o);
  }
};

public struct ReqTakeCashMailItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTakeCashMailItem GetRootAsReqTakeCashMailItem(ByteBuffer _bb) { return GetRootAsReqTakeCashMailItem(_bb, new ReqTakeCashMailItem()); }
  public static ReqTakeCashMailItem GetRootAsReqTakeCashMailItem(ByteBuffer _bb, ReqTakeCashMailItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTakeCashMailItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TakeMailInfo? TakeMailInfos(int j) { int o = __p.__offset(4); return o != 0 ? (TakeMailInfo?)(new TakeMailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TakeMailInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public E_MarketType MarketType { get { int o = __p.__offset(6); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }

  public static Offset<ReqTakeCashMailItem> CreateReqTakeCashMailItem(FlatBufferBuilder builder,
      VectorOffset take_mail_infosOffset = default(VectorOffset),
      E_MarketType market_type = E_MarketType.None) {
    builder.StartObject(2);
    ReqTakeCashMailItem.AddTakeMailInfos(builder, take_mail_infosOffset);
    ReqTakeCashMailItem.AddMarketType(builder, market_type);
    return ReqTakeCashMailItem.EndReqTakeCashMailItem(builder);
  }

  public static void StartReqTakeCashMailItem(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTakeMailInfos(FlatBufferBuilder builder, VectorOffset takeMailInfosOffset) { builder.AddOffset(0, takeMailInfosOffset.Value, 0); }
  public static VectorOffset CreateTakeMailInfosVector(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTakeMailInfosVectorBlock(FlatBufferBuilder builder, Offset<TakeMailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTakeMailInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(1, (byte)marketType, 0); }
  public static Offset<ReqTakeCashMailItem> EndReqTakeCashMailItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTakeCashMailItem>(o);
  }
};

public struct ResTakeCashMailItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTakeCashMailItem GetRootAsResTakeCashMailItem(ByteBuffer _bb) { return GetRootAsResTakeCashMailItem(_bb, new ResTakeCashMailItem()); }
  public static ResTakeCashMailItem GetRootAsResTakeCashMailItem(ByteBuffer _bb, ResTakeCashMailItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTakeCashMailItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TakeMailIdxs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int TakeMailIdxsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTakeMailIdxsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetTakeMailIdxsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetTakeMailIdxsArray() { return __p.__vector_as_array<ulong>(4); }
  public ItemInfo? GetItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int ResultCashCoinGainCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResTakeCashMailItem> CreateResTakeCashMailItem(FlatBufferBuilder builder,
      VectorOffset take_mail_idxsOffset = default(VectorOffset),
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>),
      int result_cash_coin_gain_cnt = 0,
      int result_cash_coin_balance = 0) {
    builder.StartObject(5);
    ResTakeCashMailItem.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResTakeCashMailItem.AddResultCashCoinGainCnt(builder, result_cash_coin_gain_cnt);
    ResTakeCashMailItem.AddRemainItems(builder, remain_itemsOffset);
    ResTakeCashMailItem.AddGetItems(builder, get_itemsOffset);
    ResTakeCashMailItem.AddTakeMailIdxs(builder, take_mail_idxsOffset);
    return ResTakeCashMailItem.EndResTakeCashMailItem(builder);
  }

  public static void StartResTakeCashMailItem(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddTakeMailIdxs(FlatBufferBuilder builder, VectorOffset takeMailIdxsOffset) { builder.AddOffset(0, takeMailIdxsOffset.Value, 0); }
  public static VectorOffset CreateTakeMailIdxsVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTakeMailIdxsVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartTakeMailIdxsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(2, remainItemsOffset.Value, 0); }
  public static void AddResultCashCoinGainCnt(FlatBufferBuilder builder, int resultCashCoinGainCnt) { builder.AddInt(3, resultCashCoinGainCnt, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(4, resultCashCoinBalance, 0); }
  public static Offset<ResTakeCashMailItem> EndResTakeCashMailItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTakeCashMailItem>(o);
  }
};

public struct ReqMarkEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMarkEnchant GetRootAsReqMarkEnchant(ByteBuffer _bb) { return GetRootAsReqMarkEnchant(_bb, new ReqMarkEnchant()); }
  public static ReqMarkEnchant GetRootAsReqMarkEnchant(ByteBuffer _bb, ReqMarkEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMarkEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MarkTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsProtectEnchant { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqMarkEnchant> CreateReqMarkEnchant(FlatBufferBuilder builder,
      uint mark_tid = 0,
      bool is_protect_enchant = false) {
    builder.StartObject(2);
    ReqMarkEnchant.AddMarkTid(builder, mark_tid);
    ReqMarkEnchant.AddIsProtectEnchant(builder, is_protect_enchant);
    return ReqMarkEnchant.EndReqMarkEnchant(builder);
  }

  public static void StartReqMarkEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMarkTid(FlatBufferBuilder builder, uint markTid) { builder.AddUint(0, markTid, 0); }
  public static void AddIsProtectEnchant(FlatBufferBuilder builder, bool isProtectEnchant) { builder.AddBool(1, isProtectEnchant, false); }
  public static Offset<ReqMarkEnchant> EndReqMarkEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMarkEnchant>(o);
  }
};

public struct ResMarkEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMarkEnchant GetRootAsResMarkEnchant(ByteBuffer _bb) { return GetRootAsResMarkEnchant(_bb, new ResMarkEnchant()); }
  public static ResMarkEnchant GetRootAsResMarkEnchant(ByteBuffer _bb, ResMarkEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMarkEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsSuccess { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Mark? Mark { get { int o = __p.__offset(6); return o != 0 ? (Mark?)(new Mark()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResMarkEnchant> CreateResMarkEnchant(FlatBufferBuilder builder,
      bool is_success = false,
      Offset<Mark> markOffset = default(Offset<Mark>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResMarkEnchant.AddResultStackItems(builder, result_stack_itemsOffset);
    ResMarkEnchant.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResMarkEnchant.AddMark(builder, markOffset);
    ResMarkEnchant.AddIsSuccess(builder, is_success);
    return ResMarkEnchant.EndResMarkEnchant(builder);
  }

  public static void StartResMarkEnchant(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(0, isSuccess, false); }
  public static void AddMark(FlatBufferBuilder builder, Offset<Mark> markOffset) { builder.AddOffset(1, markOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResMarkEnchant> EndResMarkEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMarkEnchant>(o);
  }
};

public struct ReqGetCharacterOptionList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetCharacterOptionList GetRootAsReqGetCharacterOptionList(ByteBuffer _bb) { return GetRootAsReqGetCharacterOptionList(_bb, new ReqGetCharacterOptionList()); }
  public static ReqGetCharacterOptionList GetRootAsReqGetCharacterOptionList(ByteBuffer _bb, ReqGetCharacterOptionList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetCharacterOptionList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetCharacterOptionList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetCharacterOptionList> EndReqGetCharacterOptionList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetCharacterOptionList>(o);
  }
};

public struct ResGetCharacterOptionList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetCharacterOptionList GetRootAsResGetCharacterOptionList(ByteBuffer _bb) { return GetRootAsResGetCharacterOptionList(_bb, new ResGetCharacterOptionList()); }
  public static ResGetCharacterOptionList GetRootAsResGetCharacterOptionList(ByteBuffer _bb, ResGetCharacterOptionList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetCharacterOptionList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharacterOption? OptionList(int j) { int o = __p.__offset(4); return o != 0 ? (CharacterOption?)(new CharacterOption()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OptionListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetCharacterOptionList> CreateResGetCharacterOptionList(FlatBufferBuilder builder,
      VectorOffset option_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetCharacterOptionList.AddOptionList(builder, option_listOffset);
    return ResGetCharacterOptionList.EndResGetCharacterOptionList(builder);
  }

  public static void StartResGetCharacterOptionList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOptionList(FlatBufferBuilder builder, VectorOffset optionListOffset) { builder.AddOffset(0, optionListOffset.Value, 0); }
  public static VectorOffset CreateOptionListVector(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOptionListVectorBlock(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetCharacterOptionList> EndResGetCharacterOptionList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetCharacterOptionList>(o);
  }
};

public struct ReqSetAccountOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSetAccountOption GetRootAsReqSetAccountOption(ByteBuffer _bb) { return GetRootAsReqSetAccountOption(_bb, new ReqSetAccountOption()); }
  public static ReqSetAccountOption GetRootAsReqSetAccountOption(ByteBuffer _bb, ReqSetAccountOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSetAccountOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_AccountOptionType Key { get { int o = __p.__offset(4); return o != 0 ? (E_AccountOptionType)__p.bb.Get(o + __p.bb_pos) : E_AccountOptionType.ItemDropCharacterNickNone; } }
  public bool OnOff { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqSetAccountOption> CreateReqSetAccountOption(FlatBufferBuilder builder,
      E_AccountOptionType key = E_AccountOptionType.ItemDropCharacterNickNone,
      bool on_off = false) {
    builder.StartObject(2);
    ReqSetAccountOption.AddOnOff(builder, on_off);
    ReqSetAccountOption.AddKey(builder, key);
    return ReqSetAccountOption.EndReqSetAccountOption(builder);
  }

  public static void StartReqSetAccountOption(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddKey(FlatBufferBuilder builder, E_AccountOptionType key) { builder.AddByte(0, (byte)key, 0); }
  public static void AddOnOff(FlatBufferBuilder builder, bool onOff) { builder.AddBool(1, onOff, false); }
  public static Offset<ReqSetAccountOption> EndReqSetAccountOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSetAccountOption>(o);
  }
};

public struct ResSetAccountOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSetAccountOption GetRootAsResSetAccountOption(ByteBuffer _bb) { return GetRootAsResSetAccountOption(_bb, new ResSetAccountOption()); }
  public static ResSetAccountOption GetRootAsResSetAccountOption(ByteBuffer _bb, ResSetAccountOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSetAccountOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long OptionBit { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<ResSetAccountOption> CreateResSetAccountOption(FlatBufferBuilder builder,
      long option_bit = 0) {
    builder.StartObject(1);
    ResSetAccountOption.AddOptionBit(builder, option_bit);
    return ResSetAccountOption.EndResSetAccountOption(builder);
  }

  public static void StartResSetAccountOption(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOptionBit(FlatBufferBuilder builder, long optionBit) { builder.AddLong(0, optionBit, 0); }
  public static Offset<ResSetAccountOption> EndResSetAccountOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSetAccountOption>(o);
  }
};

public struct ReqPetCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetCompose GetRootAsReqPetCompose(ByteBuffer _bb) { return GetRootAsReqPetCompose(_bb, new ReqPetCompose()); }
  public static ReqPetCompose GetRootAsReqPetCompose(ByteBuffer _bb, ReqPetCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PetComposeTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ComposeCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseGoldItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public PetComposeMaterial? PetMaterials(int j) { int o = __p.__offset(10); return o != 0 ? (PetComposeMaterial?)(new PetComposeMaterial()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetMaterialsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqPetCompose> CreateReqPetCompose(FlatBufferBuilder builder,
      uint pet_compose_tid = 0,
      uint compose_cnt = 0,
      ulong use_gold_item_id = 0,
      VectorOffset pet_materialsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ReqPetCompose.AddUseGoldItemId(builder, use_gold_item_id);
    ReqPetCompose.AddPetMaterials(builder, pet_materialsOffset);
    ReqPetCompose.AddComposeCnt(builder, compose_cnt);
    ReqPetCompose.AddPetComposeTid(builder, pet_compose_tid);
    return ReqPetCompose.EndReqPetCompose(builder);
  }

  public static void StartReqPetCompose(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddPetComposeTid(FlatBufferBuilder builder, uint petComposeTid) { builder.AddUint(0, petComposeTid, 0); }
  public static void AddComposeCnt(FlatBufferBuilder builder, uint composeCnt) { builder.AddUint(1, composeCnt, 0); }
  public static void AddUseGoldItemId(FlatBufferBuilder builder, ulong useGoldItemId) { builder.AddUlong(2, useGoldItemId, 0); }
  public static void AddPetMaterials(FlatBufferBuilder builder, VectorOffset petMaterialsOffset) { builder.AddOffset(3, petMaterialsOffset.Value, 0); }
  public static VectorOffset CreatePetMaterialsVector(FlatBufferBuilder builder, Offset<PetComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetMaterialsVectorBlock(FlatBufferBuilder builder, Offset<PetComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqPetCompose> EndReqPetCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetCompose>(o);
  }
};

public struct ResPetCompose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetCompose GetRootAsResPetCompose(ByteBuffer _bb) { return GetRootAsResPetCompose(_bb, new ResPetCompose()); }
  public static ResPetCompose GetRootAsResPetCompose(ByteBuffer _bb, ResPetCompose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetCompose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultPetCompose? ResultCompose(int j) { int o = __p.__offset(4); return o != 0 ? (ResultPetCompose?)(new ResultPetCompose()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultComposeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetComposeMaterial? MaterialPets(int j) { int o = __p.__offset(6); return o != 0 ? (PetComposeMaterial?)(new PetComposeMaterial()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MaterialPetsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? ResultPets(int j) { int o = __p.__offset(10); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? ResultPetsGachaKeeps(int j) { int o = __p.__offset(12); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsGachaKeepsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPetCompose> CreateResPetCompose(FlatBufferBuilder builder,
      VectorOffset result_composeOffset = default(VectorOffset),
      VectorOffset material_petsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_petsOffset = default(VectorOffset),
      VectorOffset result_pets_gacha_keepsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    ResPetCompose.AddResultPetsGachaKeeps(builder, result_pets_gacha_keepsOffset);
    ResPetCompose.AddResultPets(builder, result_petsOffset);
    ResPetCompose.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResPetCompose.AddMaterialPets(builder, material_petsOffset);
    ResPetCompose.AddResultCompose(builder, result_composeOffset);
    return ResPetCompose.EndResPetCompose(builder);
  }

  public static void StartResPetCompose(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddResultCompose(FlatBufferBuilder builder, VectorOffset resultComposeOffset) { builder.AddOffset(0, resultComposeOffset.Value, 0); }
  public static VectorOffset CreateResultComposeVector(FlatBufferBuilder builder, Offset<ResultPetCompose>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultComposeVectorBlock(FlatBufferBuilder builder, Offset<ResultPetCompose>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultComposeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaterialPets(FlatBufferBuilder builder, VectorOffset materialPetsOffset) { builder.AddOffset(1, materialPetsOffset.Value, 0); }
  public static VectorOffset CreateMaterialPetsVector(FlatBufferBuilder builder, Offset<PetComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMaterialPetsVectorBlock(FlatBufferBuilder builder, Offset<PetComposeMaterial>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaterialPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(3, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPetsGachaKeeps(FlatBufferBuilder builder, VectorOffset resultPetsGachaKeepsOffset) { builder.AddOffset(4, resultPetsGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsGachaKeepsVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPetCompose> EndResPetCompose(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetCompose>(o);
  }
};

public struct ReqPetEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetEquip GetRootAsReqPetEquip(ByteBuffer _bb) { return GetRootAsReqPetEquip(_bb, new ReqPetEquip()); }
  public static ReqPetEquip GetRootAsReqPetEquip(ByteBuffer _bb, ReqPetEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong UseItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqPetEquip> CreateReqPetEquip(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0,
      ulong use_item_id = 0) {
    builder.StartObject(3);
    ReqPetEquip.AddUseItemId(builder, use_item_id);
    ReqPetEquip.AddPetId(builder, pet_id);
    ReqPetEquip.AddPetTid(builder, pet_tid);
    return ReqPetEquip.EndReqPetEquip(builder);
  }

  public static void StartReqPetEquip(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(2, useItemId, 0); }
  public static Offset<ReqPetEquip> EndReqPetEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetEquip>(o);
  }
};

public struct ResPetEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetEquip GetRootAsResPetEquip(ByteBuffer _bb) { return GetRootAsResPetEquip(_bb, new ResPetEquip()); }
  public static ResPetEquip GetRootAsResPetEquip(ByteBuffer _bb, ResPetEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MainPetTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong MainPetExpireSec { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPetEquip> CreateResPetEquip(FlatBufferBuilder builder,
      uint main_pet_tid = 0,
      ulong main_pet_expire_sec = 0,
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResPetEquip.AddMainPetExpireSec(builder, main_pet_expire_sec);
    ResPetEquip.AddResultStackItems(builder, result_stack_itemsOffset);
    ResPetEquip.AddMainPetTid(builder, main_pet_tid);
    return ResPetEquip.EndResPetEquip(builder);
  }

  public static void StartResPetEquip(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMainPetTid(FlatBufferBuilder builder, uint mainPetTid) { builder.AddUint(0, mainPetTid, 0); }
  public static void AddMainPetExpireSec(FlatBufferBuilder builder, ulong mainPetExpireSec) { builder.AddUlong(1, mainPetExpireSec, 0); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(2, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPetEquip> EndResPetEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetEquip>(o);
  }
};

public struct ReqPetUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetUnequip GetRootAsReqPetUnequip(ByteBuffer _bb) { return GetRootAsReqPetUnequip(_bb, new ReqPetUnequip()); }
  public static ReqPetUnequip GetRootAsReqPetUnequip(ByteBuffer _bb, ReqPetUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqPetUnequip(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqPetUnequip> EndReqPetUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetUnequip>(o);
  }
};

public struct ResPetUnequip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetUnequip GetRootAsResPetUnequip(ByteBuffer _bb) { return GetRootAsResPetUnequip(_bb, new ResPetUnequip()); }
  public static ResPetUnequip GetRootAsResPetUnequip(ByteBuffer _bb, ResPetUnequip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetUnequip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint MainPet { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong MainPetExpireSec { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResPetUnequip> CreateResPetUnequip(FlatBufferBuilder builder,
      uint main_pet = 0,
      ulong main_pet_expire_sec = 0) {
    builder.StartObject(2);
    ResPetUnequip.AddMainPetExpireSec(builder, main_pet_expire_sec);
    ResPetUnequip.AddMainPet(builder, main_pet);
    return ResPetUnequip.EndResPetUnequip(builder);
  }

  public static void StartResPetUnequip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMainPet(FlatBufferBuilder builder, uint mainPet) { builder.AddUint(0, mainPet, 0); }
  public static void AddMainPetExpireSec(FlatBufferBuilder builder, ulong mainPetExpireSec) { builder.AddUlong(1, mainPetExpireSec, 0); }
  public static Offset<ResPetUnequip> EndResPetUnequip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetUnequip>(o);
  }
};

public struct ReqPetEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetEnchant GetRootAsReqPetEnchant(ByteBuffer _bb) { return GetRootAsReqPetEnchant(_bb, new ReqPetEnchant()); }
  public static ReqPetEnchant GetRootAsReqPetEnchant(ByteBuffer _bb, ReqPetEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetEnchant> CreateReqPetEnchant(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0) {
    builder.StartObject(2);
    ReqPetEnchant.AddPetId(builder, pet_id);
    ReqPetEnchant.AddPetTid(builder, pet_tid);
    return ReqPetEnchant.EndReqPetEnchant(builder);
  }

  public static void StartReqPetEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static Offset<ReqPetEnchant> EndReqPetEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetEnchant>(o);
  }
};

public struct ResPetEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetEnchant GetRootAsResPetEnchant(ByteBuffer _bb) { return GetRootAsResPetEnchant(_bb, new ResPetEnchant()); }
  public static ResPetEnchant GetRootAsResPetEnchant(ByteBuffer _bb, ResPetEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AddAbilityAcid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Pet? ResultPet { get { int o = __p.__offset(6); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPetEnchant> CreateResPetEnchant(FlatBufferBuilder builder,
      uint add_ability_acid = 0,
      Offset<Pet> result_petOffset = default(Offset<Pet>)) {
    builder.StartObject(2);
    ResPetEnchant.AddResultPet(builder, result_petOffset);
    ResPetEnchant.AddAddAbilityAcid(builder, add_ability_acid);
    return ResPetEnchant.EndResPetEnchant(builder);
  }

  public static void StartResPetEnchant(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAddAbilityAcid(FlatBufferBuilder builder, uint addAbilityAcid) { builder.AddUint(0, addAbilityAcid, 0); }
  public static void AddResultPet(FlatBufferBuilder builder, Offset<Pet> resultPetOffset) { builder.AddOffset(1, resultPetOffset.Value, 0); }
  public static Offset<ResPetEnchant> EndResPetEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetEnchant>(o);
  }
};

public struct ReqPetRetryGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetRetryGachaKeep GetRootAsReqPetRetryGachaKeep(ByteBuffer _bb) { return GetRootAsReqPetRetryGachaKeep(_bb, new ReqPetRetryGachaKeep()); }
  public static ReqPetRetryGachaKeep GetRootAsReqPetRetryGachaKeep(ByteBuffer _bb, ReqPetRetryGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetRetryGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong KeepPetId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KeepPetTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetRetryGachaKeep> CreateReqPetRetryGachaKeep(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong keep_pet_id = 0,
      uint keep_pet_tid = 0) {
    builder.StartObject(3);
    ReqPetRetryGachaKeep.AddKeepPetId(builder, keep_pet_id);
    ReqPetRetryGachaKeep.AddKeepPetTid(builder, keep_pet_tid);
    ReqPetRetryGachaKeep.AddMarketType(builder, market_type);
    return ReqPetRetryGachaKeep.EndReqPetRetryGachaKeep(builder);
  }

  public static void StartReqPetRetryGachaKeep(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddKeepPetId(FlatBufferBuilder builder, ulong keepPetId) { builder.AddUlong(1, keepPetId, 0); }
  public static void AddKeepPetTid(FlatBufferBuilder builder, uint keepPetTid) { builder.AddUint(2, keepPetTid, 0); }
  public static Offset<ReqPetRetryGachaKeep> EndReqPetRetryGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetRetryGachaKeep>(o);
  }
};

public struct ResPetRetryGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetRetryGachaKeep GetRootAsResPetRetryGachaKeep(ByteBuffer _bb) { return GetRootAsResPetRetryGachaKeep(_bb, new ResPetRetryGachaKeep()); }
  public static ResPetRetryGachaKeep GetRootAsResPetRetryGachaKeep(ByteBuffer _bb, ResPetRetryGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetRetryGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? ResultPetsGachaKeeps(int j) { int o = __p.__offset(6); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsGachaKeepsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResPetRetryGachaKeep> CreateResPetRetryGachaKeep(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_pets_gacha_keepsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(3);
    ResPetRetryGachaKeep.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResPetRetryGachaKeep.AddResultPetsGachaKeeps(builder, result_pets_gacha_keepsOffset);
    ResPetRetryGachaKeep.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResPetRetryGachaKeep.EndResPetRetryGachaKeep(builder);
  }

  public static void StartResPetRetryGachaKeep(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPetsGachaKeeps(FlatBufferBuilder builder, VectorOffset resultPetsGachaKeepsOffset) { builder.AddOffset(1, resultPetsGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsGachaKeepsVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(2, resultCashCoinBalance, 0); }
  public static Offset<ResPetRetryGachaKeep> EndResPetRetryGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetRetryGachaKeep>(o);
  }
};

public struct ReqPetTakeGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetTakeGachaKeep GetRootAsReqPetTakeGachaKeep(ByteBuffer _bb) { return GetRootAsReqPetTakeGachaKeep(_bb, new ReqPetTakeGachaKeep()); }
  public static ReqPetTakeGachaKeep GetRootAsReqPetTakeGachaKeep(ByteBuffer _bb, ReqPetTakeGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetTakeGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong KeepPetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint KeepPetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetTakeGachaKeep> CreateReqPetTakeGachaKeep(FlatBufferBuilder builder,
      ulong keep_pet_id = 0,
      uint keep_pet_tid = 0) {
    builder.StartObject(2);
    ReqPetTakeGachaKeep.AddKeepPetId(builder, keep_pet_id);
    ReqPetTakeGachaKeep.AddKeepPetTid(builder, keep_pet_tid);
    return ReqPetTakeGachaKeep.EndReqPetTakeGachaKeep(builder);
  }

  public static void StartReqPetTakeGachaKeep(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddKeepPetId(FlatBufferBuilder builder, ulong keepPetId) { builder.AddUlong(0, keepPetId, 0); }
  public static void AddKeepPetTid(FlatBufferBuilder builder, uint keepPetTid) { builder.AddUint(1, keepPetTid, 0); }
  public static Offset<ReqPetTakeGachaKeep> EndReqPetTakeGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetTakeGachaKeep>(o);
  }
};

public struct ResPetTakeGachaKeep : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetTakeGachaKeep GetRootAsResPetTakeGachaKeep(ByteBuffer _bb) { return GetRootAsResPetTakeGachaKeep(_bb, new ResPetTakeGachaKeep()); }
  public static ResPetTakeGachaKeep GetRootAsResPetTakeGachaKeep(ByteBuffer _bb, ResPetTakeGachaKeep obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetTakeGachaKeep __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Pet? ResultPets(int j) { int o = __p.__offset(4); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPetTakeGachaKeep> CreateResPetTakeGachaKeep(FlatBufferBuilder builder,
      VectorOffset result_petsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResPetTakeGachaKeep.AddResultPets(builder, result_petsOffset);
    return ResPetTakeGachaKeep.EndResPetTakeGachaKeep(builder);
  }

  public static void StartResPetTakeGachaKeep(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(0, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPetTakeGachaKeep> EndResPetTakeGachaKeep(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetTakeGachaKeep>(o);
  }
};

public struct ReqPetGrowth : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetGrowth GetRootAsReqPetGrowth(ByteBuffer _bb) { return GetRootAsReqPetGrowth(_bb, new ReqPetGrowth()); }
  public static ReqPetGrowth GetRootAsReqPetGrowth(ByteBuffer _bb, ReqPetGrowth obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetGrowth __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetGrowth> CreateReqPetGrowth(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0) {
    builder.StartObject(2);
    ReqPetGrowth.AddPetId(builder, pet_id);
    ReqPetGrowth.AddPetTid(builder, pet_tid);
    return ReqPetGrowth.EndReqPetGrowth(builder);
  }

  public static void StartReqPetGrowth(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static Offset<ReqPetGrowth> EndReqPetGrowth(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetGrowth>(o);
  }
};

public struct ResPetGrowth : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetGrowth GetRootAsResPetGrowth(ByteBuffer _bb) { return GetRootAsResPetGrowth(_bb, new ResPetGrowth()); }
  public static ResPetGrowth GetRootAsResPetGrowth(ByteBuffer _bb, ResPetGrowth obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetGrowth __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Pet? PetInfo { get { int o = __p.__offset(4); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? RemainAccountStacks(int j) { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainAccountStacksLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool IsSuccess { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ResPetGrowth> CreateResPetGrowth(FlatBufferBuilder builder,
      Offset<Pet> pet_infoOffset = default(Offset<Pet>),
      VectorOffset remain_account_stacksOffset = default(VectorOffset),
      bool is_success = false) {
    builder.StartObject(3);
    ResPetGrowth.AddRemainAccountStacks(builder, remain_account_stacksOffset);
    ResPetGrowth.AddPetInfo(builder, pet_infoOffset);
    ResPetGrowth.AddIsSuccess(builder, is_success);
    return ResPetGrowth.EndResPetGrowth(builder);
  }

  public static void StartResPetGrowth(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPetInfo(FlatBufferBuilder builder, Offset<Pet> petInfoOffset) { builder.AddOffset(0, petInfoOffset.Value, 0); }
  public static void AddRemainAccountStacks(FlatBufferBuilder builder, VectorOffset remainAccountStacksOffset) { builder.AddOffset(1, remainAccountStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainAccountStacksVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainAccountStacksVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainAccountStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(2, isSuccess, false); }
  public static Offset<ResPetGrowth> EndResPetGrowth(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetGrowth>(o);
  }
};

public struct ReqPetExtraction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetExtraction GetRootAsReqPetExtraction(ByteBuffer _bb) { return GetRootAsReqPetExtraction(_bb, new ReqPetExtraction()); }
  public static ReqPetExtraction GetRootAsReqPetExtraction(ByteBuffer _bb, ReqPetExtraction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetExtraction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint PetTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetExtraction> CreateReqPetExtraction(FlatBufferBuilder builder,
      ulong pet_id = 0,
      uint pet_tid = 0) {
    builder.StartObject(2);
    ReqPetExtraction.AddPetId(builder, pet_id);
    ReqPetExtraction.AddPetTid(builder, pet_tid);
    return ReqPetExtraction.EndReqPetExtraction(builder);
  }

  public static void StartReqPetExtraction(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetId(FlatBufferBuilder builder, ulong petId) { builder.AddUlong(0, petId, 0); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(1, petTid, 0); }
  public static Offset<ReqPetExtraction> EndReqPetExtraction(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetExtraction>(o);
  }
};

public struct ResPetExtraction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetExtraction GetRootAsResPetExtraction(ByteBuffer _bb) { return GetRootAsResPetExtraction(_bb, new ResPetExtraction()); }
  public static ResPetExtraction GetRootAsResPetExtraction(ByteBuffer _bb, ResPetExtraction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetExtraction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? GetItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPetExtraction> CreateResPetExtraction(FlatBufferBuilder builder,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(2);
    ResPetExtraction.AddRemainItems(builder, remain_itemsOffset);
    ResPetExtraction.AddGetItems(builder, get_itemsOffset);
    return ResPetExtraction.EndResPetExtraction(builder);
  }

  public static void StartResPetExtraction(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(0, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static Offset<ResPetExtraction> EndResPetExtraction(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetExtraction>(o);
  }
};

public struct ReqTakePetAdvInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTakePetAdvInfo GetRootAsReqTakePetAdvInfo(ByteBuffer _bb) { return GetRootAsReqTakePetAdvInfo(_bb, new ReqTakePetAdvInfo()); }
  public static ReqTakePetAdvInfo GetRootAsReqTakePetAdvInfo(ByteBuffer _bb, ReqTakePetAdvInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTakePetAdvInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqTakePetAdvInfo(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqTakePetAdvInfo> EndReqTakePetAdvInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTakePetAdvInfo>(o);
  }
};

public struct ResTakePetAdvInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTakePetAdvInfo GetRootAsResTakePetAdvInfo(ByteBuffer _bb) { return GetRootAsResTakePetAdvInfo(_bb, new ResTakePetAdvInfo()); }
  public static ResTakePetAdvInfo GetRootAsResTakePetAdvInfo(ByteBuffer _bb, ResTakePetAdvInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTakePetAdvInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PetAdv? AdvInfos(int j) { int o = __p.__offset(4); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AdvInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResTakePetAdvInfo> CreateResTakePetAdvInfo(FlatBufferBuilder builder,
      VectorOffset adv_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResTakePetAdvInfo.AddAdvInfos(builder, adv_infosOffset);
    return ResTakePetAdvInfo.EndResTakePetAdvInfo(builder);
  }

  public static void StartResTakePetAdvInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAdvInfos(FlatBufferBuilder builder, VectorOffset advInfosOffset) { builder.AddOffset(0, advInfosOffset.Value, 0); }
  public static VectorOffset CreateAdvInfosVector(FlatBufferBuilder builder, Offset<PetAdv>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAdvInfosVectorBlock(FlatBufferBuilder builder, Offset<PetAdv>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAdvInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResTakePetAdvInfo> EndResTakePetAdvInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTakePetAdvInfo>(o);
  }
};

public struct ReqPetAdvStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetAdvStart GetRootAsReqPetAdvStart(ByteBuffer _bb) { return GetRootAsReqPetAdvStart(_bb, new ReqPetAdvStart()); }
  public static ReqPetAdvStart GetRootAsReqPetAdvStart(ByteBuffer _bb, ReqPetAdvStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetAdvStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AdvId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong PetIdList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int PetIdListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPetIdListBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetPetIdListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetPetIdListArray() { return __p.__vector_as_array<ulong>(6); }

  public static Offset<ReqPetAdvStart> CreateReqPetAdvStart(FlatBufferBuilder builder,
      ulong adv_id = 0,
      VectorOffset pet_id_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqPetAdvStart.AddAdvId(builder, adv_id);
    ReqPetAdvStart.AddPetIdList(builder, pet_id_listOffset);
    return ReqPetAdvStart.EndReqPetAdvStart(builder);
  }

  public static void StartReqPetAdvStart(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(0, advId, 0); }
  public static void AddPetIdList(FlatBufferBuilder builder, VectorOffset petIdListOffset) { builder.AddOffset(1, petIdListOffset.Value, 0); }
  public static VectorOffset CreatePetIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePetIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartPetIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqPetAdvStart> EndReqPetAdvStart(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetAdvStart>(o);
  }
};

public struct ResPetAdvStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetAdvStart GetRootAsResPetAdvStart(ByteBuffer _bb) { return GetRootAsResPetAdvStart(_bb, new ResPetAdvStart()); }
  public static ResPetAdvStart GetRootAsResPetAdvStart(ByteBuffer _bb, ResPetAdvStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetAdvStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PetAdv? AdvInfo { get { int o = __p.__offset(4); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Pet? PetList(int j) { int o = __p.__offset(6); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPetAdvStart> CreateResPetAdvStart(FlatBufferBuilder builder,
      Offset<PetAdv> adv_infoOffset = default(Offset<PetAdv>),
      VectorOffset pet_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResPetAdvStart.AddPetList(builder, pet_listOffset);
    ResPetAdvStart.AddAdvInfo(builder, adv_infoOffset);
    return ResPetAdvStart.EndResPetAdvStart(builder);
  }

  public static void StartResPetAdvStart(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAdvInfo(FlatBufferBuilder builder, Offset<PetAdv> advInfoOffset) { builder.AddOffset(0, advInfoOffset.Value, 0); }
  public static void AddPetList(FlatBufferBuilder builder, VectorOffset petListOffset) { builder.AddOffset(1, petListOffset.Value, 0); }
  public static VectorOffset CreatePetListVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetListVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPetAdvStart> EndResPetAdvStart(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetAdvStart>(o);
  }
};

public struct ReqPetAdvReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetAdvReward GetRootAsReqPetAdvReward(ByteBuffer _bb) { return GetRootAsReqPetAdvReward(_bb, new ReqPetAdvReward()); }
  public static ReqPetAdvReward GetRootAsReqPetAdvReward(ByteBuffer _bb, ReqPetAdvReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetAdvReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AdvId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqPetAdvReward> CreateReqPetAdvReward(FlatBufferBuilder builder,
      ulong adv_id = 0) {
    builder.StartObject(1);
    ReqPetAdvReward.AddAdvId(builder, adv_id);
    return ReqPetAdvReward.EndReqPetAdvReward(builder);
  }

  public static void StartReqPetAdvReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(0, advId, 0); }
  public static Offset<ReqPetAdvReward> EndReqPetAdvReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetAdvReward>(o);
  }
};

public struct ResPetAdvReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetAdvReward GetRootAsResPetAdvReward(ByteBuffer _bb) { return GetRootAsResPetAdvReward(_bb, new ResPetAdvReward()); }
  public static ResPetAdvReward GetRootAsResPetAdvReward(ByteBuffer _bb, ResPetAdvReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetAdvReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PetAdv? AdvInfo { get { int o = __p.__offset(4); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Pet? PetList(int j) { int o = __p.__offset(6); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(10); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPetAdvReward> CreateResPetAdvReward(FlatBufferBuilder builder,
      Offset<PetAdv> adv_infoOffset = default(Offset<PetAdv>),
      VectorOffset pet_listOffset = default(VectorOffset),
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(4);
    ResPetAdvReward.AddRemainItems(builder, remain_itemsOffset);
    ResPetAdvReward.AddGetItems(builder, get_itemsOffset);
    ResPetAdvReward.AddPetList(builder, pet_listOffset);
    ResPetAdvReward.AddAdvInfo(builder, adv_infoOffset);
    return ResPetAdvReward.EndResPetAdvReward(builder);
  }

  public static void StartResPetAdvReward(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddAdvInfo(FlatBufferBuilder builder, Offset<PetAdv> advInfoOffset) { builder.AddOffset(0, advInfoOffset.Value, 0); }
  public static void AddPetList(FlatBufferBuilder builder, VectorOffset petListOffset) { builder.AddOffset(1, petListOffset.Value, 0); }
  public static VectorOffset CreatePetListVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetListVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(3, remainItemsOffset.Value, 0); }
  public static Offset<ResPetAdvReward> EndResPetAdvReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetAdvReward>(o);
  }
};

public struct ReqPetAdvCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetAdvCancel GetRootAsReqPetAdvCancel(ByteBuffer _bb) { return GetRootAsReqPetAdvCancel(_bb, new ReqPetAdvCancel()); }
  public static ReqPetAdvCancel GetRootAsReqPetAdvCancel(ByteBuffer _bb, ReqPetAdvCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetAdvCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AdvId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqPetAdvCancel> CreateReqPetAdvCancel(FlatBufferBuilder builder,
      ulong adv_id = 0) {
    builder.StartObject(1);
    ReqPetAdvCancel.AddAdvId(builder, adv_id);
    return ReqPetAdvCancel.EndReqPetAdvCancel(builder);
  }

  public static void StartReqPetAdvCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(0, advId, 0); }
  public static Offset<ReqPetAdvCancel> EndReqPetAdvCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetAdvCancel>(o);
  }
};

public struct ResPetAdvCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetAdvCancel GetRootAsResPetAdvCancel(ByteBuffer _bb) { return GetRootAsResPetAdvCancel(_bb, new ResPetAdvCancel()); }
  public static ResPetAdvCancel GetRootAsResPetAdvCancel(ByteBuffer _bb, ResPetAdvCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetAdvCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PetAdv? AdvInfo { get { int o = __p.__offset(4); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Pet? PetList(int j) { int o = __p.__offset(6); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResPetAdvCancel> CreateResPetAdvCancel(FlatBufferBuilder builder,
      Offset<PetAdv> adv_infoOffset = default(Offset<PetAdv>),
      VectorOffset pet_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResPetAdvCancel.AddPetList(builder, pet_listOffset);
    ResPetAdvCancel.AddAdvInfo(builder, adv_infoOffset);
    return ResPetAdvCancel.EndResPetAdvCancel(builder);
  }

  public static void StartResPetAdvCancel(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAdvInfo(FlatBufferBuilder builder, Offset<PetAdv> advInfoOffset) { builder.AddOffset(0, advInfoOffset.Value, 0); }
  public static void AddPetList(FlatBufferBuilder builder, VectorOffset petListOffset) { builder.AddOffset(1, petListOffset.Value, 0); }
  public static VectorOffset CreatePetListVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetListVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResPetAdvCancel> EndResPetAdvCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetAdvCancel>(o);
  }
};

public struct ReqPetAdvReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPetAdvReset GetRootAsReqPetAdvReset(ByteBuffer _bb) { return GetRootAsReqPetAdvReset(_bb, new ReqPetAdvReset()); }
  public static ReqPetAdvReset GetRootAsReqPetAdvReset(ByteBuffer _bb, ReqPetAdvReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPetAdvReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong AdvId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPetAdvReset> CreateReqPetAdvReset(FlatBufferBuilder builder,
      ulong adv_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(2);
    ReqPetAdvReset.AddAdvId(builder, adv_id);
    ReqPetAdvReset.AddUseItemTid(builder, use_item_tid);
    return ReqPetAdvReset.EndReqPetAdvReset(builder);
  }

  public static void StartReqPetAdvReset(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAdvId(FlatBufferBuilder builder, ulong advId) { builder.AddUlong(0, advId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(1, useItemTid, 0); }
  public static Offset<ReqPetAdvReset> EndReqPetAdvReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPetAdvReset>(o);
  }
};

public struct ResPetAdvReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPetAdvReset GetRootAsResPetAdvReset(ByteBuffer _bb) { return GetRootAsResPetAdvReset(_bb, new ResPetAdvReset()); }
  public static ResPetAdvReset GetRootAsResPetAdvReset(ByteBuffer _bb, ResPetAdvReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPetAdvReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PetAdv? AdvInfo { get { int o = __p.__offset(4); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultAccountStackItem { get { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPetAdvReset> CreateResPetAdvReset(FlatBufferBuilder builder,
      Offset<PetAdv> adv_infoOffset = default(Offset<PetAdv>),
      Offset<ItemStack> result_account_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(2);
    ResPetAdvReset.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResPetAdvReset.AddAdvInfo(builder, adv_infoOffset);
    return ResPetAdvReset.EndResPetAdvReset(builder);
  }

  public static void StartResPetAdvReset(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAdvInfo(FlatBufferBuilder builder, Offset<PetAdv> advInfoOffset) { builder.AddOffset(0, advInfoOffset.Value, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultAccountStackItemOffset) { builder.AddOffset(1, resultAccountStackItemOffset.Value, 0); }
  public static Offset<ResPetAdvReset> EndResPetAdvReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPetAdvReset>(o);
  }
};

public struct ReqTutorialLog : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTutorialLog GetRootAsReqTutorialLog(ByteBuffer _bb) { return GetRootAsReqTutorialLog(_bb, new ReqTutorialLog()); }
  public static ReqTutorialLog GetRootAsReqTutorialLog(ByteBuffer _bb, ReqTutorialLog obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTutorialLog __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Step { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTutorialLog> CreateReqTutorialLog(FlatBufferBuilder builder,
      uint step = 0) {
    builder.StartObject(1);
    ReqTutorialLog.AddStep(builder, step);
    return ReqTutorialLog.EndReqTutorialLog(builder);
  }

  public static void StartReqTutorialLog(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddStep(FlatBufferBuilder builder, uint step) { builder.AddUint(0, step, 0); }
  public static Offset<ReqTutorialLog> EndReqTutorialLog(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTutorialLog>(o);
  }
};

public struct ResTutorialLog : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTutorialLog GetRootAsResTutorialLog(ByteBuffer _bb) { return GetRootAsResTutorialLog(_bb, new ResTutorialLog()); }
  public static ResTutorialLog GetRootAsResTutorialLog(ByteBuffer _bb, ResTutorialLog obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTutorialLog __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResTutorialLog(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResTutorialLog> EndResTutorialLog(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTutorialLog>(o);
  }
};

public struct ReqQuestAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqQuestAccept GetRootAsReqQuestAccept(ByteBuffer _bb) { return GetRootAsReqQuestAccept(_bb, new ReqQuestAccept()); }
  public static ReqQuestAccept GetRootAsReqQuestAccept(ByteBuffer _bb, ReqQuestAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqQuestAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint QuestTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqQuestAccept> CreateReqQuestAccept(FlatBufferBuilder builder,
      uint quest_tid = 0) {
    builder.StartObject(1);
    ReqQuestAccept.AddQuestTid(builder, quest_tid);
    return ReqQuestAccept.EndReqQuestAccept(builder);
  }

  public static void StartReqQuestAccept(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(0, questTid, 0); }
  public static Offset<ReqQuestAccept> EndReqQuestAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqQuestAccept>(o);
  }
};

public struct ResQuestAccept : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResQuestAccept GetRootAsResQuestAccept(ByteBuffer _bb) { return GetRootAsResQuestAccept(_bb, new ResQuestAccept()); }
  public static ResQuestAccept GetRootAsResQuestAccept(ByteBuffer _bb, ResQuestAccept obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResQuestAccept __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Quest? AddQuest { get { int o = __p.__offset(4); return o != 0 ? (Quest?)(new Quest()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResQuestAccept> CreateResQuestAccept(FlatBufferBuilder builder,
      Offset<Quest> add_questOffset = default(Offset<Quest>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResQuestAccept.AddResultStackItems(builder, result_stack_itemsOffset);
    ResQuestAccept.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResQuestAccept.AddAddQuest(builder, add_questOffset);
    return ResQuestAccept.EndResQuestAccept(builder);
  }

  public static void StartResQuestAccept(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAddQuest(FlatBufferBuilder builder, Offset<Quest> addQuestOffset) { builder.AddOffset(0, addQuestOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(1, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(2, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResQuestAccept> EndResQuestAccept(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResQuestAccept>(o);
  }
};

public struct ReqQuestCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqQuestCancel GetRootAsReqQuestCancel(ByteBuffer _bb) { return GetRootAsReqQuestCancel(_bb, new ReqQuestCancel()); }
  public static ReqQuestCancel GetRootAsReqQuestCancel(ByteBuffer _bb, ReqQuestCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqQuestCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqQuestCancel> CreateReqQuestCancel(FlatBufferBuilder builder,
      ulong quest_id = 0,
      uint quest_tid = 0) {
    builder.StartObject(2);
    ReqQuestCancel.AddQuestId(builder, quest_id);
    ReqQuestCancel.AddQuestTid(builder, quest_tid);
    return ReqQuestCancel.EndReqQuestCancel(builder);
  }

  public static void StartReqQuestCancel(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static Offset<ReqQuestCancel> EndReqQuestCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqQuestCancel>(o);
  }
};

public struct ResQuestCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResQuestCancel GetRootAsResQuestCancel(ByteBuffer _bb) { return GetRootAsResQuestCancel(_bb, new ResQuestCancel()); }
  public static ResQuestCancel GetRootAsResQuestCancel(ByteBuffer _bb, ResQuestCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResQuestCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResQuestCancel> CreateResQuestCancel(FlatBufferBuilder builder,
      ulong quest_id = 0) {
    builder.StartObject(1);
    ResQuestCancel.AddQuestId(builder, quest_id);
    return ResQuestCancel.EndResQuestCancel(builder);
  }

  public static void StartResQuestCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static Offset<ResQuestCancel> EndResQuestCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResQuestCancel>(o);
  }
};

public struct ReqQuestReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqQuestReward GetRootAsReqQuestReward(ByteBuffer _bb) { return GetRootAsReqQuestReward(_bb, new ReqQuestReward()); }
  public static ReqQuestReward GetRootAsReqQuestReward(ByteBuffer _bb, ReqQuestReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqQuestReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QuestId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint QuestTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RewardSelectIdx { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqQuestReward> CreateReqQuestReward(FlatBufferBuilder builder,
      ulong quest_id = 0,
      uint quest_tid = 0,
      uint reward_select_idx = 0) {
    builder.StartObject(3);
    ReqQuestReward.AddQuestId(builder, quest_id);
    ReqQuestReward.AddRewardSelectIdx(builder, reward_select_idx);
    ReqQuestReward.AddQuestTid(builder, quest_tid);
    return ReqQuestReward.EndReqQuestReward(builder);
  }

  public static void StartReqQuestReward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddQuestId(FlatBufferBuilder builder, ulong questId) { builder.AddUlong(0, questId, 0); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(1, questTid, 0); }
  public static void AddRewardSelectIdx(FlatBufferBuilder builder, uint rewardSelectIdx) { builder.AddUint(2, rewardSelectIdx, 0); }
  public static Offset<ReqQuestReward> EndReqQuestReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqQuestReward>(o);
  }
};

public struct ResQuestReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResQuestReward GetRootAsResQuestReward(ByteBuffer _bb) { return GetRootAsResQuestReward(_bb, new ResQuestReward()); }
  public static ResQuestReward GetRootAsResQuestReward(ByteBuffer _bb, ResQuestReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResQuestReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GetExp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ulong RemainExp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(10); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Quest? NextQuest { get { int o = __p.__offset(12); return o != 0 ? (Quest?)(new Quest()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Buff? RemainRewardBuff { get { int o = __p.__offset(14); return o != 0 ? (Buff?)(new Buff()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public uint RewardSelectIdx { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RandomRewardItemTid { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RandomRewardItemCnt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public TempleStage? TempleStage { get { int o = __p.__offset(22); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResQuestReward> CreateResQuestReward(FlatBufferBuilder builder,
      ulong get_exp = 0,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      ulong remain_exp = 0,
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>),
      Offset<Quest> next_questOffset = default(Offset<Quest>),
      Offset<Buff> remain_reward_buffOffset = default(Offset<Buff>),
      uint reward_select_idx = 0,
      uint random_reward_item_tid = 0,
      uint random_reward_item_cnt = 0,
      Offset<TempleStage> temple_stageOffset = default(Offset<TempleStage>)) {
    builder.StartObject(10);
    ResQuestReward.AddRemainExp(builder, remain_exp);
    ResQuestReward.AddGetExp(builder, get_exp);
    ResQuestReward.AddTempleStage(builder, temple_stageOffset);
    ResQuestReward.AddRandomRewardItemCnt(builder, random_reward_item_cnt);
    ResQuestReward.AddRandomRewardItemTid(builder, random_reward_item_tid);
    ResQuestReward.AddRewardSelectIdx(builder, reward_select_idx);
    ResQuestReward.AddRemainRewardBuff(builder, remain_reward_buffOffset);
    ResQuestReward.AddNextQuest(builder, next_questOffset);
    ResQuestReward.AddRemainItems(builder, remain_itemsOffset);
    ResQuestReward.AddGetItems(builder, get_itemsOffset);
    return ResQuestReward.EndResQuestReward(builder);
  }

  public static void StartResQuestReward(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddGetExp(FlatBufferBuilder builder, ulong getExp) { builder.AddUlong(0, getExp, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static void AddRemainExp(FlatBufferBuilder builder, ulong remainExp) { builder.AddUlong(2, remainExp, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(3, remainItemsOffset.Value, 0); }
  public static void AddNextQuest(FlatBufferBuilder builder, Offset<Quest> nextQuestOffset) { builder.AddOffset(4, nextQuestOffset.Value, 0); }
  public static void AddRemainRewardBuff(FlatBufferBuilder builder, Offset<Buff> remainRewardBuffOffset) { builder.AddOffset(5, remainRewardBuffOffset.Value, 0); }
  public static void AddRewardSelectIdx(FlatBufferBuilder builder, uint rewardSelectIdx) { builder.AddUint(6, rewardSelectIdx, 0); }
  public static void AddRandomRewardItemTid(FlatBufferBuilder builder, uint randomRewardItemTid) { builder.AddUint(7, randomRewardItemTid, 0); }
  public static void AddRandomRewardItemCnt(FlatBufferBuilder builder, uint randomRewardItemCnt) { builder.AddUint(8, randomRewardItemCnt, 0); }
  public static void AddTempleStage(FlatBufferBuilder builder, Offset<TempleStage> templeStageOffset) { builder.AddOffset(9, templeStageOffset.Value, 0); }
  public static Offset<ResQuestReward> EndResQuestReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResQuestReward>(o);
  }
};

public struct ReqQuestEventReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqQuestEventReward GetRootAsReqQuestEventReward(ByteBuffer _bb) { return GetRootAsReqQuestEventReward(_bb, new ReqQuestEventReward()); }
  public static ReqQuestEventReward GetRootAsReqQuestEventReward(ByteBuffer _bb, ReqQuestEventReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqQuestEventReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint QuestTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqQuestEventReward> CreateReqQuestEventReward(FlatBufferBuilder builder,
      uint quest_tid = 0) {
    builder.StartObject(1);
    ReqQuestEventReward.AddQuestTid(builder, quest_tid);
    return ReqQuestEventReward.EndReqQuestEventReward(builder);
  }

  public static void StartReqQuestEventReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddQuestTid(FlatBufferBuilder builder, uint questTid) { builder.AddUint(0, questTid, 0); }
  public static Offset<ReqQuestEventReward> EndReqQuestEventReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqQuestEventReward>(o);
  }
};

public struct ResQuestEventReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResQuestEventReward GetRootAsResQuestEventReward(ByteBuffer _bb) { return GetRootAsResQuestEventReward(_bb, new ResQuestEventReward()); }
  public static ResQuestEventReward GetRootAsResQuestEventReward(ByteBuffer _bb, ResQuestEventReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResQuestEventReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemInfo? GetItems { get { int o = __p.__offset(4); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public QuestEvent? ClearQuest { get { int o = __p.__offset(8); return o != 0 ? (QuestEvent?)(new QuestEvent()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResQuestEventReward> CreateResQuestEventReward(FlatBufferBuilder builder,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>),
      Offset<QuestEvent> clear_questOffset = default(Offset<QuestEvent>)) {
    builder.StartObject(3);
    ResQuestEventReward.AddClearQuest(builder, clear_questOffset);
    ResQuestEventReward.AddRemainItems(builder, remain_itemsOffset);
    ResQuestEventReward.AddGetItems(builder, get_itemsOffset);
    return ResQuestEventReward.EndResQuestEventReward(builder);
  }

  public static void StartResQuestEventReward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(0, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(1, remainItemsOffset.Value, 0); }
  public static void AddClearQuest(FlatBufferBuilder builder, Offset<QuestEvent> clearQuestOffset) { builder.AddOffset(2, clearQuestOffset.Value, 0); }
  public static Offset<ResQuestEventReward> EndResQuestEventReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResQuestEventReward>(o);
  }
};

public struct BroadcastQuestUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastQuestUpdate GetRootAsBroadcastQuestUpdate(ByteBuffer _bb) { return GetRootAsBroadcastQuestUpdate(_bb, new BroadcastQuestUpdate()); }
  public static BroadcastQuestUpdate GetRootAsBroadcastQuestUpdate(ByteBuffer _bb, BroadcastQuestUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastQuestUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Quest? UpdatedQuests(int j) { int o = __p.__offset(4); return o != 0 ? (Quest?)(new Quest()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UpdatedQuestsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastQuestUpdate> CreateBroadcastQuestUpdate(FlatBufferBuilder builder,
      VectorOffset updated_questsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    BroadcastQuestUpdate.AddUpdatedQuests(builder, updated_questsOffset);
    return BroadcastQuestUpdate.EndBroadcastQuestUpdate(builder);
  }

  public static void StartBroadcastQuestUpdate(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUpdatedQuests(FlatBufferBuilder builder, VectorOffset updatedQuestsOffset) { builder.AddOffset(0, updatedQuestsOffset.Value, 0); }
  public static VectorOffset CreateUpdatedQuestsVector(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUpdatedQuestsVectorBlock(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUpdatedQuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastQuestUpdate> EndBroadcastQuestUpdate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastQuestUpdate>(o);
  }
};

public struct BroadcastQuestEventUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BroadcastQuestEventUpdate GetRootAsBroadcastQuestEventUpdate(ByteBuffer _bb) { return GetRootAsBroadcastQuestEventUpdate(_bb, new BroadcastQuestEventUpdate()); }
  public static BroadcastQuestEventUpdate GetRootAsBroadcastQuestEventUpdate(ByteBuffer _bb, BroadcastQuestEventUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BroadcastQuestEventUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public QuestEvent? UpdatedQuests(int j) { int o = __p.__offset(4); return o != 0 ? (QuestEvent?)(new QuestEvent()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UpdatedQuestsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<BroadcastQuestEventUpdate> CreateBroadcastQuestEventUpdate(FlatBufferBuilder builder,
      VectorOffset updated_questsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    BroadcastQuestEventUpdate.AddUpdatedQuests(builder, updated_questsOffset);
    return BroadcastQuestEventUpdate.EndBroadcastQuestEventUpdate(builder);
  }

  public static void StartBroadcastQuestEventUpdate(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUpdatedQuests(FlatBufferBuilder builder, VectorOffset updatedQuestsOffset) { builder.AddOffset(0, updatedQuestsOffset.Value, 0); }
  public static VectorOffset CreateUpdatedQuestsVector(FlatBufferBuilder builder, Offset<QuestEvent>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUpdatedQuestsVectorBlock(FlatBufferBuilder builder, Offset<QuestEvent>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUpdatedQuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BroadcastQuestEventUpdate> EndBroadcastQuestEventUpdate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BroadcastQuestEventUpdate>(o);
  }
};

public struct ReqGetExpRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetExpRankList GetRootAsReqGetExpRankList(ByteBuffer _bb) { return GetRootAsReqGetExpRankList(_bb, new ReqGetExpRankList()); }
  public static ReqGetExpRankList GetRootAsReqGetExpRankList(ByteBuffer _bb, ReqGetExpRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetExpRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CharType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGetExpRankList> CreateReqGetExpRankList(FlatBufferBuilder builder,
      uint char_type = 0) {
    builder.StartObject(1);
    ReqGetExpRankList.AddCharType(builder, char_type);
    return ReqGetExpRankList.EndReqGetExpRankList(builder);
  }

  public static void StartReqGetExpRankList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCharType(FlatBufferBuilder builder, uint charType) { builder.AddUint(0, charType, 0); }
  public static Offset<ReqGetExpRankList> EndReqGetExpRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetExpRankList>(o);
  }
};

public struct ResGetExpRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetExpRankList GetRootAsResGetExpRankList(ByteBuffer _bb) { return GetRootAsResGetExpRankList(_bb, new ResGetExpRankList()); }
  public static ResGetExpRankList GetRootAsResGetExpRankList(ByteBuffer _bb, ResGetExpRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetExpRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CharType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public RankInfo? Ranks(int j) { int o = __p.__offset(6); return o != 0 ? (RankInfo?)(new RankInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RanksLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetExpRankList> CreateResGetExpRankList(FlatBufferBuilder builder,
      uint char_type = 0,
      VectorOffset ranksOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResGetExpRankList.AddRanks(builder, ranksOffset);
    ResGetExpRankList.AddCharType(builder, char_type);
    return ResGetExpRankList.EndResGetExpRankList(builder);
  }

  public static void StartResGetExpRankList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharType(FlatBufferBuilder builder, uint charType) { builder.AddUint(0, charType, 0); }
  public static void AddRanks(FlatBufferBuilder builder, VectorOffset ranksOffset) { builder.AddOffset(1, ranksOffset.Value, 0); }
  public static VectorOffset CreateRanksVector(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRanksVectorBlock(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRanksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetExpRankList> EndResGetExpRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetExpRankList>(o);
  }
};

public struct ReqGetPkRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetPkRankList GetRootAsReqGetPkRankList(ByteBuffer _bb) { return GetRootAsReqGetPkRankList(_bb, new ReqGetPkRankList()); }
  public static ReqGetPkRankList GetRootAsReqGetPkRankList(ByteBuffer _bb, ReqGetPkRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetPkRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetPkRankList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetPkRankList> EndReqGetPkRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetPkRankList>(o);
  }
};

public struct ResGetPkRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetPkRankList GetRootAsResGetPkRankList(ByteBuffer _bb) { return GetRootAsResGetPkRankList(_bb, new ResGetPkRankList()); }
  public static ResGetPkRankList GetRootAsResGetPkRankList(ByteBuffer _bb, ResGetPkRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetPkRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public RankInfo? Ranks(int j) { int o = __p.__offset(4); return o != 0 ? (RankInfo?)(new RankInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RanksLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetPkRankList> CreateResGetPkRankList(FlatBufferBuilder builder,
      VectorOffset ranksOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetPkRankList.AddRanks(builder, ranksOffset);
    return ResGetPkRankList.EndResGetPkRankList(builder);
  }

  public static void StartResGetPkRankList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRanks(FlatBufferBuilder builder, VectorOffset ranksOffset) { builder.AddOffset(0, ranksOffset.Value, 0); }
  public static VectorOffset CreateRanksVector(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRanksVectorBlock(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRanksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetPkRankList> EndResGetPkRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetPkRankList>(o);
  }
};

public struct ReqGetColosseumRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetColosseumRankList GetRootAsReqGetColosseumRankList(ByteBuffer _bb) { return GetRootAsReqGetColosseumRankList(_bb, new ReqGetColosseumRankList()); }
  public static ReqGetColosseumRankList GetRootAsReqGetColosseumRankList(ByteBuffer _bb, ReqGetColosseumRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetColosseumRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetColosseumRankList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetColosseumRankList> EndReqGetColosseumRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetColosseumRankList>(o);
  }
};

public struct ResGetColosseumRankList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetColosseumRankList GetRootAsResGetColosseumRankList(ByteBuffer _bb) { return GetRootAsResGetColosseumRankList(_bb, new ResGetColosseumRankList()); }
  public static ResGetColosseumRankList GetRootAsResGetColosseumRankList(ByteBuffer _bb, ResGetColosseumRankList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetColosseumRankList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public RankInfo? Ranks(int j) { int o = __p.__offset(4); return o != 0 ? (RankInfo?)(new RankInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RanksLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetColosseumRankList> CreateResGetColosseumRankList(FlatBufferBuilder builder,
      VectorOffset ranksOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetColosseumRankList.AddRanks(builder, ranksOffset);
    return ResGetColosseumRankList.EndResGetColosseumRankList(builder);
  }

  public static void StartResGetColosseumRankList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRanks(FlatBufferBuilder builder, VectorOffset ranksOffset) { builder.AddOffset(0, ranksOffset.Value, 0); }
  public static VectorOffset CreateRanksVector(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRanksVectorBlock(FlatBufferBuilder builder, Offset<RankInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRanksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetColosseumRankList> EndResGetColosseumRankList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetColosseumRankList>(o);
  }
};

public struct ReqRuneEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRuneEquip GetRootAsReqRuneEquip(ByteBuffer _bb) { return GetRootAsReqRuneEquip(_bb, new ReqRuneEquip()); }
  public static ReqRuneEquip GetRootAsReqRuneEquip(ByteBuffer _bb, ReqRuneEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRuneEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PetTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong RuneItemIdList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int RuneItemIdListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRuneItemIdListBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetRuneItemIdListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetRuneItemIdListArray() { return __p.__vector_as_array<ulong>(6); }

  public static Offset<ReqRuneEquip> CreateReqRuneEquip(FlatBufferBuilder builder,
      uint pet_tid = 0,
      VectorOffset rune_item_id_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqRuneEquip.AddRuneItemIdList(builder, rune_item_id_listOffset);
    ReqRuneEquip.AddPetTid(builder, pet_tid);
    return ReqRuneEquip.EndReqRuneEquip(builder);
  }

  public static void StartReqRuneEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(0, petTid, 0); }
  public static void AddRuneItemIdList(FlatBufferBuilder builder, VectorOffset runeItemIdListOffset) { builder.AddOffset(1, runeItemIdListOffset.Value, 0); }
  public static VectorOffset CreateRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqRuneEquip> EndReqRuneEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRuneEquip>(o);
  }
};

public struct ResRuneEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRuneEquip GetRootAsResRuneEquip(ByteBuffer _bb) { return GetRootAsResRuneEquip(_bb, new ResRuneEquip()); }
  public static ResRuneEquip GetRootAsResRuneEquip(ByteBuffer _bb, ResRuneEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRuneEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Rune? EquipRuneList(int j) { int o = __p.__offset(4); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipRuneListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRuneEquip> CreateResRuneEquip(FlatBufferBuilder builder,
      VectorOffset equip_rune_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRuneEquip.AddEquipRuneList(builder, equip_rune_listOffset);
    return ResRuneEquip.EndResRuneEquip(builder);
  }

  public static void StartResRuneEquip(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddEquipRuneList(FlatBufferBuilder builder, VectorOffset equipRuneListOffset) { builder.AddOffset(0, equipRuneListOffset.Value, 0); }
  public static VectorOffset CreateEquipRuneListVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipRuneListVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipRuneListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRuneEquip> EndResRuneEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRuneEquip>(o);
  }
};

public struct ReqRuneDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRuneDelete GetRootAsReqRuneDelete(ByteBuffer _bb) { return GetRootAsReqRuneDelete(_bb, new ReqRuneDelete()); }
  public static ReqRuneDelete GetRootAsReqRuneDelete(ByteBuffer _bb, ReqRuneDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRuneDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneItemIdList(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int RuneItemIdListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRuneItemIdListBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetRuneItemIdListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetRuneItemIdListArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqRuneDelete> CreateReqRuneDelete(FlatBufferBuilder builder,
      VectorOffset rune_item_id_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqRuneDelete.AddRuneItemIdList(builder, rune_item_id_listOffset);
    return ReqRuneDelete.EndReqRuneDelete(builder);
  }

  public static void StartReqRuneDelete(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRuneItemIdList(FlatBufferBuilder builder, VectorOffset runeItemIdListOffset) { builder.AddOffset(0, runeItemIdListOffset.Value, 0); }
  public static VectorOffset CreateRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqRuneDelete> EndReqRuneDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRuneDelete>(o);
  }
};

public struct ResRuneDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRuneDelete GetRootAsResRuneDelete(ByteBuffer _bb) { return GetRootAsResRuneDelete(_bb, new ResRuneDelete()); }
  public static ResRuneDelete GetRootAsResRuneDelete(ByteBuffer _bb, ResRuneDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRuneDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneItemIdList(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int RuneItemIdListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRuneItemIdListBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetRuneItemIdListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetRuneItemIdListArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ResRuneDelete> CreateResRuneDelete(FlatBufferBuilder builder,
      VectorOffset rune_item_id_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRuneDelete.AddRuneItemIdList(builder, rune_item_id_listOffset);
    return ResRuneDelete.EndResRuneDelete(builder);
  }

  public static void StartResRuneDelete(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRuneItemIdList(FlatBufferBuilder builder, VectorOffset runeItemIdListOffset) { builder.AddOffset(0, runeItemIdListOffset.Value, 0); }
  public static VectorOffset CreateRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ResRuneDelete> EndResRuneDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRuneDelete>(o);
  }
};

public struct ReqRuneUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRuneUnEquip GetRootAsReqRuneUnEquip(ByteBuffer _bb) { return GetRootAsReqRuneUnEquip(_bb, new ReqRuneUnEquip()); }
  public static ReqRuneUnEquip GetRootAsReqRuneUnEquip(ByteBuffer _bb, ReqRuneUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRuneUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PetTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong RuneItemIdList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int RuneItemIdListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRuneItemIdListBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetRuneItemIdListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public ulong[] GetRuneItemIdListArray() { return __p.__vector_as_array<ulong>(6); }

  public static Offset<ReqRuneUnEquip> CreateReqRuneUnEquip(FlatBufferBuilder builder,
      uint pet_tid = 0,
      VectorOffset rune_item_id_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqRuneUnEquip.AddRuneItemIdList(builder, rune_item_id_listOffset);
    ReqRuneUnEquip.AddPetTid(builder, pet_tid);
    return ReqRuneUnEquip.EndReqRuneUnEquip(builder);
  }

  public static void StartReqRuneUnEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPetTid(FlatBufferBuilder builder, uint petTid) { builder.AddUint(0, petTid, 0); }
  public static void AddRuneItemIdList(FlatBufferBuilder builder, VectorOffset runeItemIdListOffset) { builder.AddOffset(1, runeItemIdListOffset.Value, 0); }
  public static VectorOffset CreateRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqRuneUnEquip> EndReqRuneUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRuneUnEquip>(o);
  }
};

public struct ResRuneUnEquip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRuneUnEquip GetRootAsResRuneUnEquip(ByteBuffer _bb) { return GetRootAsResRuneUnEquip(_bb, new ResRuneUnEquip()); }
  public static ResRuneUnEquip GetRootAsResRuneUnEquip(ByteBuffer _bb, ResRuneUnEquip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRuneUnEquip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Rune? UnequipRuneList(int j) { int o = __p.__offset(4); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UnequipRuneListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? RemainAccountStack { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRuneUnEquip> CreateResRuneUnEquip(FlatBufferBuilder builder,
      VectorOffset unequip_rune_listOffset = default(VectorOffset),
      Offset<AccountItemStack> remain_account_stackOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(2);
    ResRuneUnEquip.AddRemainAccountStack(builder, remain_account_stackOffset);
    ResRuneUnEquip.AddUnequipRuneList(builder, unequip_rune_listOffset);
    return ResRuneUnEquip.EndResRuneUnEquip(builder);
  }

  public static void StartResRuneUnEquip(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddUnequipRuneList(FlatBufferBuilder builder, VectorOffset unequipRuneListOffset) { builder.AddOffset(0, unequipRuneListOffset.Value, 0); }
  public static VectorOffset CreateUnequipRuneListVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUnequipRuneListVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUnequipRuneListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainAccountStack(FlatBufferBuilder builder, Offset<AccountItemStack> remainAccountStackOffset) { builder.AddOffset(1, remainAccountStackOffset.Value, 0); }
  public static Offset<ResRuneUnEquip> EndResRuneUnEquip(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRuneUnEquip>(o);
  }
};

public struct ReqRuneSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRuneSell GetRootAsReqRuneSell(ByteBuffer _bb) { return GetRootAsReqRuneSell(_bb, new ReqRuneSell()); }
  public static ReqRuneSell GetRootAsReqRuneSell(ByteBuffer _bb, ReqRuneSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRuneSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneItemIdList(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int RuneItemIdListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRuneItemIdListBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetRuneItemIdListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetRuneItemIdListArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqRuneSell> CreateReqRuneSell(FlatBufferBuilder builder,
      VectorOffset rune_item_id_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqRuneSell.AddRuneItemIdList(builder, rune_item_id_listOffset);
    return ReqRuneSell.EndReqRuneSell(builder);
  }

  public static void StartReqRuneSell(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRuneItemIdList(FlatBufferBuilder builder, VectorOffset runeItemIdListOffset) { builder.AddOffset(0, runeItemIdListOffset.Value, 0); }
  public static VectorOffset CreateRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqRuneSell> EndReqRuneSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRuneSell>(o);
  }
};

public struct ResRuneSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRuneSell GetRootAsResRuneSell(ByteBuffer _bb) { return GetRootAsResRuneSell(_bb, new ResRuneSell()); }
  public static ResRuneSell GetRootAsResRuneSell(ByteBuffer _bb, ResRuneSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRuneSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DeleteRuneItemIdList(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int DeleteRuneItemIdListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeleteRuneItemIdListBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDeleteRuneItemIdListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetDeleteRuneItemIdListArray() { return __p.__vector_as_array<ulong>(4); }
  public AccountItemStack? GetAccountStack { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? RemainAccountStack { get { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRuneSell> CreateResRuneSell(FlatBufferBuilder builder,
      VectorOffset delete_rune_item_id_listOffset = default(VectorOffset),
      Offset<AccountItemStack> get_account_stackOffset = default(Offset<AccountItemStack>),
      Offset<AccountItemStack> remain_account_stackOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(3);
    ResRuneSell.AddRemainAccountStack(builder, remain_account_stackOffset);
    ResRuneSell.AddGetAccountStack(builder, get_account_stackOffset);
    ResRuneSell.AddDeleteRuneItemIdList(builder, delete_rune_item_id_listOffset);
    return ResRuneSell.EndResRuneSell(builder);
  }

  public static void StartResRuneSell(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddDeleteRuneItemIdList(FlatBufferBuilder builder, VectorOffset deleteRuneItemIdListOffset) { builder.AddOffset(0, deleteRuneItemIdListOffset.Value, 0); }
  public static VectorOffset CreateDeleteRuneItemIdListVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDeleteRuneItemIdListVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartDeleteRuneItemIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddGetAccountStack(FlatBufferBuilder builder, Offset<AccountItemStack> getAccountStackOffset) { builder.AddOffset(1, getAccountStackOffset.Value, 0); }
  public static void AddRemainAccountStack(FlatBufferBuilder builder, Offset<AccountItemStack> remainAccountStackOffset) { builder.AddOffset(2, remainAccountStackOffset.Value, 0); }
  public static Offset<ResRuneSell> EndResRuneSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRuneSell>(o);
  }
};

public struct ReqRuneEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRuneEnchant GetRootAsReqRuneEnchant(ByteBuffer _bb) { return GetRootAsReqRuneEnchant(_bb, new ReqRuneEnchant()); }
  public static ReqRuneEnchant GetRootAsReqRuneEnchant(ByteBuffer _bb, ReqRuneEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRuneEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqRuneEnchant> CreateReqRuneEnchant(FlatBufferBuilder builder,
      ulong rune_item_id = 0) {
    builder.StartObject(1);
    ReqRuneEnchant.AddRuneItemId(builder, rune_item_id);
    return ReqRuneEnchant.EndReqRuneEnchant(builder);
  }

  public static void StartReqRuneEnchant(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRuneItemId(FlatBufferBuilder builder, ulong runeItemId) { builder.AddUlong(0, runeItemId, 0); }
  public static Offset<ReqRuneEnchant> EndReqRuneEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRuneEnchant>(o);
  }
};

public struct ResRuneEnchant : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRuneEnchant GetRootAsResRuneEnchant(ByteBuffer _bb) { return GetRootAsResRuneEnchant(_bb, new ResRuneEnchant()); }
  public static ResRuneEnchant GetRootAsResRuneEnchant(ByteBuffer _bb, ResRuneEnchant obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRuneEnchant __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsSuccess { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Rune? EnchantRune { get { int o = __p.__offset(6); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? RemainAccountStack { get { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRuneEnchant> CreateResRuneEnchant(FlatBufferBuilder builder,
      bool is_success = false,
      Offset<Rune> enchant_runeOffset = default(Offset<Rune>),
      Offset<AccountItemStack> remain_account_stackOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(3);
    ResRuneEnchant.AddRemainAccountStack(builder, remain_account_stackOffset);
    ResRuneEnchant.AddEnchantRune(builder, enchant_runeOffset);
    ResRuneEnchant.AddIsSuccess(builder, is_success);
    return ResRuneEnchant.EndResRuneEnchant(builder);
  }

  public static void StartResRuneEnchant(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(0, isSuccess, false); }
  public static void AddEnchantRune(FlatBufferBuilder builder, Offset<Rune> enchantRuneOffset) { builder.AddOffset(1, enchantRuneOffset.Value, 0); }
  public static void AddRemainAccountStack(FlatBufferBuilder builder, Offset<AccountItemStack> remainAccountStackOffset) { builder.AddOffset(2, remainAccountStackOffset.Value, 0); }
  public static Offset<ResRuneEnchant> EndResRuneEnchant(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRuneEnchant>(o);
  }
};

public struct ReqGetItemBuyLimitList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetItemBuyLimitList GetRootAsReqGetItemBuyLimitList(ByteBuffer _bb) { return GetRootAsReqGetItemBuyLimitList(_bb, new ReqGetItemBuyLimitList()); }
  public static ReqGetItemBuyLimitList GetRootAsReqGetItemBuyLimitList(ByteBuffer _bb, ReqGetItemBuyLimitList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetItemBuyLimitList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetItemBuyLimitList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetItemBuyLimitList> EndReqGetItemBuyLimitList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetItemBuyLimitList>(o);
  }
};

public struct ResGetItemBuyLimitList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetItemBuyLimitList GetRootAsResGetItemBuyLimitList(ByteBuffer _bb) { return GetRootAsResGetItemBuyLimitList(_bb, new ResGetItemBuyLimitList()); }
  public static ResGetItemBuyLimitList GetRootAsResGetItemBuyLimitList(ByteBuffer _bb, ResGetItemBuyLimitList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetItemBuyLimitList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public BuyLimitInfo? BuyLimits(int j) { int o = __p.__offset(4); return o != 0 ? (BuyLimitInfo?)(new BuyLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BuyLimitsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetItemBuyLimitList> CreateResGetItemBuyLimitList(FlatBufferBuilder builder,
      VectorOffset buy_limitsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetItemBuyLimitList.AddBuyLimits(builder, buy_limitsOffset);
    return ResGetItemBuyLimitList.EndResGetItemBuyLimitList(builder);
  }

  public static void StartResGetItemBuyLimitList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBuyLimits(FlatBufferBuilder builder, VectorOffset buyLimitsOffset) { builder.AddOffset(0, buyLimitsOffset.Value, 0); }
  public static VectorOffset CreateBuyLimitsVector(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBuyLimitsVectorBlock(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuyLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetItemBuyLimitList> EndResGetItemBuyLimitList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetItemBuyLimitList>(o);
  }
};

public struct ReqSpecialShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSpecialShopBuy GetRootAsReqSpecialShopBuy(ByteBuffer _bb) { return GetRootAsReqSpecialShopBuy(_bb, new ReqSpecialShopBuy()); }
  public static ReqSpecialShopBuy GetRootAsReqSpecialShopBuy(ByteBuffer _bb, ReqSpecialShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSpecialShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public BuyItem? BuyItems(int j) { int o = __p.__offset(6); return o != 0 ? (BuyItem?)(new BuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BuyItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqSpecialShopBuy> CreateReqSpecialShopBuy(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      VectorOffset buy_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqSpecialShopBuy.AddBuyItems(builder, buy_itemsOffset);
    ReqSpecialShopBuy.AddMarketType(builder, market_type);
    return ReqSpecialShopBuy.EndReqSpecialShopBuy(builder);
  }

  public static void StartReqSpecialShopBuy(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddBuyItems(FlatBufferBuilder builder, VectorOffset buyItemsOffset) { builder.AddOffset(1, buyItemsOffset.Value, 0); }
  public static VectorOffset CreateBuyItemsVector(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqSpecialShopBuy> EndReqSpecialShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSpecialShopBuy>(o);
  }
};

public struct ResSpecialShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSpecialShopBuy GetRootAsResSpecialShopBuy(ByteBuffer _bb) { return GetRootAsResSpecialShopBuy(_bb, new ResSpecialShopBuy()); }
  public static ResSpecialShopBuy GetRootAsResSpecialShopBuy(ByteBuffer _bb, ResSpecialShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSpecialShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultBuyItem? ResultBuyItems(int j) { int o = __p.__offset(4); return o != 0 ? (ResultBuyItem?)(new ResultBuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? ResultGetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetPetInfo? ResultGetPets(int j) { int o = __p.__offset(8); return o != 0 ? (GetPetInfo?)(new GetPetInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetPetsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetChangeInfo? ResultGetChanges(int j) { int o = __p.__offset(10); return o != 0 ? (GetChangeInfo?)(new GetChangeInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetChangesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public BuyLimitInfo? ResultBuyLimits(int j) { int o = __p.__offset(12); return o != 0 ? (BuyLimitInfo?)(new BuyLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyLimitsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(14); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(16); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Rune? ResultRuneItems(int j) { int o = __p.__offset(18); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultRuneItemsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(20); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? ResultPets(int j) { int o = __p.__offset(22); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(24); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? ResultPetsGachaKeeps(int j) { int o = __p.__offset(26); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsGachaKeepsLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ResultChangesGachaKeeps(int j) { int o = __p.__offset(28); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesGachaKeepsLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResSpecialShopBuy> CreateResSpecialShopBuy(FlatBufferBuilder builder,
      VectorOffset result_buy_itemsOffset = default(VectorOffset),
      VectorOffset result_get_itemsOffset = default(VectorOffset),
      VectorOffset result_get_petsOffset = default(VectorOffset),
      VectorOffset result_get_changesOffset = default(VectorOffset),
      VectorOffset result_buy_limitsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_rune_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_petsOffset = default(VectorOffset),
      VectorOffset result_changesOffset = default(VectorOffset),
      VectorOffset result_pets_gacha_keepsOffset = default(VectorOffset),
      VectorOffset result_changes_gacha_keepsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(14);
    ResSpecialShopBuy.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResSpecialShopBuy.AddResultChangesGachaKeeps(builder, result_changes_gacha_keepsOffset);
    ResSpecialShopBuy.AddResultPetsGachaKeeps(builder, result_pets_gacha_keepsOffset);
    ResSpecialShopBuy.AddResultChanges(builder, result_changesOffset);
    ResSpecialShopBuy.AddResultPets(builder, result_petsOffset);
    ResSpecialShopBuy.AddResultStackItems(builder, result_stack_itemsOffset);
    ResSpecialShopBuy.AddResultRuneItems(builder, result_rune_itemsOffset);
    ResSpecialShopBuy.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResSpecialShopBuy.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResSpecialShopBuy.AddResultBuyLimits(builder, result_buy_limitsOffset);
    ResSpecialShopBuy.AddResultGetChanges(builder, result_get_changesOffset);
    ResSpecialShopBuy.AddResultGetPets(builder, result_get_petsOffset);
    ResSpecialShopBuy.AddResultGetItems(builder, result_get_itemsOffset);
    ResSpecialShopBuy.AddResultBuyItems(builder, result_buy_itemsOffset);
    return ResSpecialShopBuy.EndResSpecialShopBuy(builder);
  }

  public static void StartResSpecialShopBuy(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddResultBuyItems(FlatBufferBuilder builder, VectorOffset resultBuyItemsOffset) { builder.AddOffset(0, resultBuyItemsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyItemsVector(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetItems(FlatBufferBuilder builder, VectorOffset resultGetItemsOffset) { builder.AddOffset(1, resultGetItemsOffset.Value, 0); }
  public static VectorOffset CreateResultGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetPets(FlatBufferBuilder builder, VectorOffset resultGetPetsOffset) { builder.AddOffset(2, resultGetPetsOffset.Value, 0); }
  public static VectorOffset CreateResultGetPetsVector(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetPetsVectorBlock(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetChanges(FlatBufferBuilder builder, VectorOffset resultGetChangesOffset) { builder.AddOffset(3, resultGetChangesOffset.Value, 0); }
  public static VectorOffset CreateResultGetChangesVector(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetChangesVectorBlock(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultBuyLimits(FlatBufferBuilder builder, VectorOffset resultBuyLimitsOffset) { builder.AddOffset(4, resultBuyLimitsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyLimitsVector(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyLimitsVectorBlock(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(5, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(6, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultRuneItems(FlatBufferBuilder builder, VectorOffset resultRuneItemsOffset) { builder.AddOffset(7, resultRuneItemsOffset.Value, 0); }
  public static VectorOffset CreateResultRuneItemsVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultRuneItemsVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultRuneItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(8, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(9, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(10, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPetsGachaKeeps(FlatBufferBuilder builder, VectorOffset resultPetsGachaKeepsOffset) { builder.AddOffset(11, resultPetsGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsGachaKeepsVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChangesGachaKeeps(FlatBufferBuilder builder, VectorOffset resultChangesGachaKeepsOffset) { builder.AddOffset(12, resultChangesGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateResultChangesGachaKeepsVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(13, resultCashCoinBalance, 0); }
  public static Offset<ResSpecialShopBuy> EndResSpecialShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSpecialShopBuy>(o);
  }
};

public struct ReqMileageShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMileageShopBuy GetRootAsReqMileageShopBuy(ByteBuffer _bb) { return GetRootAsReqMileageShopBuy(_bb, new ReqMileageShopBuy()); }
  public static ReqMileageShopBuy GetRootAsReqMileageShopBuy(ByteBuffer _bb, ReqMileageShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMileageShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public BuyItem? BuyItems(int j) { int o = __p.__offset(4); return o != 0 ? (BuyItem?)(new BuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BuyItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqMileageShopBuy> CreateReqMileageShopBuy(FlatBufferBuilder builder,
      VectorOffset buy_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqMileageShopBuy.AddBuyItems(builder, buy_itemsOffset);
    return ReqMileageShopBuy.EndReqMileageShopBuy(builder);
  }

  public static void StartReqMileageShopBuy(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBuyItems(FlatBufferBuilder builder, VectorOffset buyItemsOffset) { builder.AddOffset(0, buyItemsOffset.Value, 0); }
  public static VectorOffset CreateBuyItemsVector(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqMileageShopBuy> EndReqMileageShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMileageShopBuy>(o);
  }
};

public struct ResMileageShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMileageShopBuy GetRootAsResMileageShopBuy(ByteBuffer _bb) { return GetRootAsResMileageShopBuy(_bb, new ResMileageShopBuy()); }
  public static ResMileageShopBuy GetRootAsResMileageShopBuy(ByteBuffer _bb, ResMileageShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMileageShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultBuyItem? ResultBuyItems(int j) { int o = __p.__offset(4); return o != 0 ? (ResultBuyItem?)(new ResultBuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? ResultGetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetPetInfo? ResultGetPets(int j) { int o = __p.__offset(8); return o != 0 ? (GetPetInfo?)(new GetPetInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetPetsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetChangeInfo? ResultGetChanges(int j) { int o = __p.__offset(10); return o != 0 ? (GetChangeInfo?)(new GetChangeInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetChangesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public BuyLimitInfo? ResultBuyLimits(int j) { int o = __p.__offset(12); return o != 0 ? (BuyLimitInfo?)(new BuyLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyLimitsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(14); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(16); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Rune? ResultRuneItems(int j) { int o = __p.__offset(18); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultRuneItemsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(20); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? ResultPets(int j) { int o = __p.__offset(22); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultPetsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Change? ResultChanges(int j) { int o = __p.__offset(24); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultChangesLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResMileageShopBuy> CreateResMileageShopBuy(FlatBufferBuilder builder,
      VectorOffset result_buy_itemsOffset = default(VectorOffset),
      VectorOffset result_get_itemsOffset = default(VectorOffset),
      VectorOffset result_get_petsOffset = default(VectorOffset),
      VectorOffset result_get_changesOffset = default(VectorOffset),
      VectorOffset result_buy_limitsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_rune_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_petsOffset = default(VectorOffset),
      VectorOffset result_changesOffset = default(VectorOffset)) {
    builder.StartObject(11);
    ResMileageShopBuy.AddResultChanges(builder, result_changesOffset);
    ResMileageShopBuy.AddResultPets(builder, result_petsOffset);
    ResMileageShopBuy.AddResultStackItems(builder, result_stack_itemsOffset);
    ResMileageShopBuy.AddResultRuneItems(builder, result_rune_itemsOffset);
    ResMileageShopBuy.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResMileageShopBuy.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResMileageShopBuy.AddResultBuyLimits(builder, result_buy_limitsOffset);
    ResMileageShopBuy.AddResultGetChanges(builder, result_get_changesOffset);
    ResMileageShopBuy.AddResultGetPets(builder, result_get_petsOffset);
    ResMileageShopBuy.AddResultGetItems(builder, result_get_itemsOffset);
    ResMileageShopBuy.AddResultBuyItems(builder, result_buy_itemsOffset);
    return ResMileageShopBuy.EndResMileageShopBuy(builder);
  }

  public static void StartResMileageShopBuy(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddResultBuyItems(FlatBufferBuilder builder, VectorOffset resultBuyItemsOffset) { builder.AddOffset(0, resultBuyItemsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyItemsVector(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetItems(FlatBufferBuilder builder, VectorOffset resultGetItemsOffset) { builder.AddOffset(1, resultGetItemsOffset.Value, 0); }
  public static VectorOffset CreateResultGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetPets(FlatBufferBuilder builder, VectorOffset resultGetPetsOffset) { builder.AddOffset(2, resultGetPetsOffset.Value, 0); }
  public static VectorOffset CreateResultGetPetsVector(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetPetsVectorBlock(FlatBufferBuilder builder, Offset<GetPetInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetChanges(FlatBufferBuilder builder, VectorOffset resultGetChangesOffset) { builder.AddOffset(3, resultGetChangesOffset.Value, 0); }
  public static VectorOffset CreateResultGetChangesVector(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetChangesVectorBlock(FlatBufferBuilder builder, Offset<GetChangeInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultBuyLimits(FlatBufferBuilder builder, VectorOffset resultBuyLimitsOffset) { builder.AddOffset(4, resultBuyLimitsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyLimitsVector(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyLimitsVectorBlock(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(5, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(6, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultRuneItems(FlatBufferBuilder builder, VectorOffset resultRuneItemsOffset) { builder.AddOffset(7, resultRuneItemsOffset.Value, 0); }
  public static VectorOffset CreateResultRuneItemsVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultRuneItemsVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultRuneItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(8, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultPets(FlatBufferBuilder builder, VectorOffset resultPetsOffset) { builder.AddOffset(9, resultPetsOffset.Value, 0); }
  public static VectorOffset CreateResultPetsVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultPetsVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultPetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultChanges(FlatBufferBuilder builder, VectorOffset resultChangesOffset) { builder.AddOffset(10, resultChangesOffset.Value, 0); }
  public static VectorOffset CreateResultChangesVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultChangesVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultChangesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResMileageShopBuy> EndResMileageShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMileageShopBuy>(o);
  }
};

public struct ReqNormalShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqNormalShopBuy GetRootAsReqNormalShopBuy(ByteBuffer _bb) { return GetRootAsReqNormalShopBuy(_bb, new ReqNormalShopBuy()); }
  public static ReqNormalShopBuy GetRootAsReqNormalShopBuy(ByteBuffer _bb, ReqNormalShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqNormalShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsAutoBuyPotion { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public BuyItem? BuyItems(int j) { int o = __p.__offset(6); return o != 0 ? (BuyItem?)(new BuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BuyItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqNormalShopBuy> CreateReqNormalShopBuy(FlatBufferBuilder builder,
      bool is_auto_buy_potion = false,
      VectorOffset buy_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqNormalShopBuy.AddBuyItems(builder, buy_itemsOffset);
    ReqNormalShopBuy.AddIsAutoBuyPotion(builder, is_auto_buy_potion);
    return ReqNormalShopBuy.EndReqNormalShopBuy(builder);
  }

  public static void StartReqNormalShopBuy(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIsAutoBuyPotion(FlatBufferBuilder builder, bool isAutoBuyPotion) { builder.AddBool(0, isAutoBuyPotion, false); }
  public static void AddBuyItems(FlatBufferBuilder builder, VectorOffset buyItemsOffset) { builder.AddOffset(1, buyItemsOffset.Value, 0); }
  public static VectorOffset CreateBuyItemsVector(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<BuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqNormalShopBuy> EndReqNormalShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqNormalShopBuy>(o);
  }
};

public struct ResNormalShopBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResNormalShopBuy GetRootAsResNormalShopBuy(ByteBuffer _bb) { return GetRootAsResNormalShopBuy(_bb, new ResNormalShopBuy()); }
  public static ResNormalShopBuy GetRootAsResNormalShopBuy(ByteBuffer _bb, ResNormalShopBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResNormalShopBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResultBuyItem? ResultBuyItems(int j) { int o = __p.__offset(4); return o != 0 ? (ResultBuyItem?)(new ResultBuyItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? ResultGetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultGetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public BuyLimitInfo? ResultBuyLimits(int j) { int o = __p.__offset(8); return o != 0 ? (BuyLimitInfo?)(new BuyLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultBuyLimitsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? ResultEquipItems(int j) { int o = __p.__offset(12); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultEquipItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Rune? ResultRuneItems(int j) { int o = __p.__offset(14); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultRuneItemsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(16); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResNormalShopBuy> CreateResNormalShopBuy(FlatBufferBuilder builder,
      VectorOffset result_buy_itemsOffset = default(VectorOffset),
      VectorOffset result_get_itemsOffset = default(VectorOffset),
      VectorOffset result_buy_limitsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_equip_itemsOffset = default(VectorOffset),
      VectorOffset result_rune_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(7);
    ResNormalShopBuy.AddResultStackItems(builder, result_stack_itemsOffset);
    ResNormalShopBuy.AddResultRuneItems(builder, result_rune_itemsOffset);
    ResNormalShopBuy.AddResultEquipItems(builder, result_equip_itemsOffset);
    ResNormalShopBuy.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResNormalShopBuy.AddResultBuyLimits(builder, result_buy_limitsOffset);
    ResNormalShopBuy.AddResultGetItems(builder, result_get_itemsOffset);
    ResNormalShopBuy.AddResultBuyItems(builder, result_buy_itemsOffset);
    return ResNormalShopBuy.EndResNormalShopBuy(builder);
  }

  public static void StartResNormalShopBuy(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddResultBuyItems(FlatBufferBuilder builder, VectorOffset resultBuyItemsOffset) { builder.AddOffset(0, resultBuyItemsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyItemsVector(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<ResultBuyItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultGetItems(FlatBufferBuilder builder, VectorOffset resultGetItemsOffset) { builder.AddOffset(1, resultGetItemsOffset.Value, 0); }
  public static VectorOffset CreateResultGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultBuyLimits(FlatBufferBuilder builder, VectorOffset resultBuyLimitsOffset) { builder.AddOffset(2, resultBuyLimitsOffset.Value, 0); }
  public static VectorOffset CreateResultBuyLimitsVector(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultBuyLimitsVectorBlock(FlatBufferBuilder builder, Offset<BuyLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultBuyLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(3, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultEquipItems(FlatBufferBuilder builder, VectorOffset resultEquipItemsOffset) { builder.AddOffset(4, resultEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateResultEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultRuneItems(FlatBufferBuilder builder, VectorOffset resultRuneItemsOffset) { builder.AddOffset(5, resultRuneItemsOffset.Value, 0); }
  public static VectorOffset CreateResultRuneItemsVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultRuneItemsVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultRuneItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(6, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResNormalShopBuy> EndResNormalShopBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResNormalShopBuy>(o);
  }
};

public struct ReqItemSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqItemSell GetRootAsReqItemSell(ByteBuffer _bb) { return GetRootAsReqItemSell(_bb, new ReqItemSell()); }
  public static ReqItemSell GetRootAsReqItemSell(ByteBuffer _bb, ReqItemSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqItemSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SellItem? SellItemInfos(int j) { int o = __p.__offset(4); return o != 0 ? (SellItem?)(new SellItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SellItemInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqItemSell> CreateReqItemSell(FlatBufferBuilder builder,
      VectorOffset sell_item_infosOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqItemSell.AddSellItemInfos(builder, sell_item_infosOffset);
    return ReqItemSell.EndReqItemSell(builder);
  }

  public static void StartReqItemSell(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSellItemInfos(FlatBufferBuilder builder, VectorOffset sellItemInfosOffset) { builder.AddOffset(0, sellItemInfosOffset.Value, 0); }
  public static VectorOffset CreateSellItemInfosVector(FlatBufferBuilder builder, Offset<SellItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSellItemInfosVectorBlock(FlatBufferBuilder builder, Offset<SellItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSellItemInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqItemSell> EndReqItemSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqItemSell>(o);
  }
};

public struct ResItemSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResItemSell GetRootAsResItemSell(ByteBuffer _bb) { return GetRootAsResItemSell(_bb, new ResItemSell()); }
  public static ResItemSell GetRootAsResItemSell(ByteBuffer _bb, ResItemSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResItemSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public DelItemInfo? SellItemInfos(int j) { int o = __p.__offset(4); return o != 0 ? (DelItemInfo?)(new DelItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SellItemInfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GetItemInfo? SellItemCost { get { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResItemSell> CreateResItemSell(FlatBufferBuilder builder,
      VectorOffset sell_item_infosOffset = default(VectorOffset),
      Offset<GetItemInfo> sell_item_costOffset = default(Offset<GetItemInfo>),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResItemSell.AddResultStackItems(builder, result_stack_itemsOffset);
    ResItemSell.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResItemSell.AddSellItemCost(builder, sell_item_costOffset);
    ResItemSell.AddSellItemInfos(builder, sell_item_infosOffset);
    return ResItemSell.EndResItemSell(builder);
  }

  public static void StartResItemSell(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddSellItemInfos(FlatBufferBuilder builder, VectorOffset sellItemInfosOffset) { builder.AddOffset(0, sellItemInfosOffset.Value, 0); }
  public static VectorOffset CreateSellItemInfosVector(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSellItemInfosVectorBlock(FlatBufferBuilder builder, Offset<DelItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSellItemInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSellItemCost(FlatBufferBuilder builder, Offset<GetItemInfo> sellItemCostOffset) { builder.AddOffset(1, sellItemCostOffset.Value, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResItemSell> EndResItemSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResItemSell>(o);
  }
};

public struct ReqGetCashCoinBalance : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetCashCoinBalance GetRootAsReqGetCashCoinBalance(ByteBuffer _bb) { return GetRootAsReqGetCashCoinBalance(_bb, new ReqGetCashCoinBalance()); }
  public static ReqGetCashCoinBalance GetRootAsReqGetCashCoinBalance(ByteBuffer _bb, ReqGetCashCoinBalance obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetCashCoinBalance __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }

  public static Offset<ReqGetCashCoinBalance> CreateReqGetCashCoinBalance(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None) {
    builder.StartObject(1);
    ReqGetCashCoinBalance.AddMarketType(builder, market_type);
    return ReqGetCashCoinBalance.EndReqGetCashCoinBalance(builder);
  }

  public static void StartReqGetCashCoinBalance(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static Offset<ReqGetCashCoinBalance> EndReqGetCashCoinBalance(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetCashCoinBalance>(o);
  }
};

public struct ResGetCashCoinBalance : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetCashCoinBalance GetRootAsResGetCashCoinBalance(ByteBuffer _bb) { return GetRootAsResGetCashCoinBalance(_bb, new ResGetCashCoinBalance()); }
  public static ResGetCashCoinBalance GetRootAsResGetCashCoinBalance(ByteBuffer _bb, ResGetCashCoinBalance obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetCashCoinBalance __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int CashCoinBalance { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResGetCashCoinBalance> CreateResGetCashCoinBalance(FlatBufferBuilder builder,
      int cash_coin_balance = 0) {
    builder.StartObject(1);
    ResGetCashCoinBalance.AddCashCoinBalance(builder, cash_coin_balance);
    return ResGetCashCoinBalance.EndResGetCashCoinBalance(builder);
  }

  public static void StartResGetCashCoinBalance(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCashCoinBalance(FlatBufferBuilder builder, int cashCoinBalance) { builder.AddInt(0, cashCoinBalance, 0); }
  public static Offset<ResGetCashCoinBalance> EndResGetCashCoinBalance(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetCashCoinBalance>(o);
  }
};

public struct ReqMmoChannelList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMmoChannelList GetRootAsReqMmoChannelList(ByteBuffer _bb) { return GetRootAsReqMmoChannelList(_bb, new ReqMmoChannelList()); }
  public static ReqMmoChannelList GetRootAsReqMmoChannelList(ByteBuffer _bb, ReqMmoChannelList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMmoChannelList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqMmoChannelList> CreateReqMmoChannelList(FlatBufferBuilder builder,
      uint stage_tid = 0) {
    builder.StartObject(1);
    ReqMmoChannelList.AddStageTid(builder, stage_tid);
    return ReqMmoChannelList.EndReqMmoChannelList(builder);
  }

  public static void StartReqMmoChannelList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static Offset<ReqMmoChannelList> EndReqMmoChannelList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMmoChannelList>(o);
  }
};

public struct ResMmoChannelList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMmoChannelList GetRootAsResMmoChannelList(ByteBuffer _bb) { return GetRootAsResMmoChannelList(_bb, new ResMmoChannelList()); }
  public static ResMmoChannelList GetRootAsResMmoChannelList(ByteBuffer _bb, ResMmoChannelList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMmoChannelList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MmoChannel? ServerList(int j) { int o = __p.__offset(6); return o != 0 ? (MmoChannel?)(new MmoChannel()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ServerListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ushort MaxJoinUser { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResMmoChannelList> CreateResMmoChannelList(FlatBufferBuilder builder,
      uint stage_tid = 0,
      VectorOffset server_listOffset = default(VectorOffset),
      ushort max_join_user = 0) {
    builder.StartObject(3);
    ResMmoChannelList.AddServerList(builder, server_listOffset);
    ResMmoChannelList.AddStageTid(builder, stage_tid);
    ResMmoChannelList.AddMaxJoinUser(builder, max_join_user);
    return ResMmoChannelList.EndResMmoChannelList(builder);
  }

  public static void StartResMmoChannelList(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddServerList(FlatBufferBuilder builder, VectorOffset serverListOffset) { builder.AddOffset(1, serverListOffset.Value, 0); }
  public static VectorOffset CreateServerListVector(FlatBufferBuilder builder, Offset<MmoChannel>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateServerListVectorBlock(FlatBufferBuilder builder, Offset<MmoChannel>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartServerListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaxJoinUser(FlatBufferBuilder builder, ushort maxJoinUser) { builder.AddUshort(2, maxJoinUser, 0); }
  public static Offset<ResMmoChannelList> EndResMmoChannelList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMmoChannelList>(o);
  }
};

public struct ReqFieldBossKillerGuildAll : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqFieldBossKillerGuildAll GetRootAsReqFieldBossKillerGuildAll(ByteBuffer _bb) { return GetRootAsReqFieldBossKillerGuildAll(_bb, new ReqFieldBossKillerGuildAll()); }
  public static ReqFieldBossKillerGuildAll GetRootAsReqFieldBossKillerGuildAll(ByteBuffer _bb, ReqFieldBossKillerGuildAll obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqFieldBossKillerGuildAll __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqFieldBossKillerGuildAll(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqFieldBossKillerGuildAll> EndReqFieldBossKillerGuildAll(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqFieldBossKillerGuildAll>(o);
  }
};

public struct ResFieldBossKillerGuildAll : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResFieldBossKillerGuildAll GetRootAsResFieldBossKillerGuildAll(ByteBuffer _bb) { return GetRootAsResFieldBossKillerGuildAll(_bb, new ResFieldBossKillerGuildAll()); }
  public static ResFieldBossKillerGuildAll GetRootAsResFieldBossKillerGuildAll(ByteBuffer _bb, ResFieldBossKillerGuildAll obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResFieldBossKillerGuildAll __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public BossKillerInfo? Info(int j) { int o = __p.__offset(4); return o != 0 ? (BossKillerInfo?)(new BossKillerInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResFieldBossKillerGuildAll> CreateResFieldBossKillerGuildAll(FlatBufferBuilder builder,
      VectorOffset infoOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResFieldBossKillerGuildAll.AddInfo(builder, infoOffset);
    return ResFieldBossKillerGuildAll.EndResFieldBossKillerGuildAll(builder);
  }

  public static void StartResFieldBossKillerGuildAll(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfo(FlatBufferBuilder builder, VectorOffset infoOffset) { builder.AddOffset(0, infoOffset.Value, 0); }
  public static VectorOffset CreateInfoVector(FlatBufferBuilder builder, Offset<BossKillerInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInfoVectorBlock(FlatBufferBuilder builder, Offset<BossKillerInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResFieldBossKillerGuildAll> EndResFieldBossKillerGuildAll(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResFieldBossKillerGuildAll>(o);
  }
};

public struct ReqMmoStageEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqMmoStageEnter GetRootAsReqMmoStageEnter(ByteBuffer _bb) { return GetRootAsReqMmoStageEnter(_bb, new ReqMmoStageEnter()); }
  public static ReqMmoStageEnter GetRootAsReqMmoStageEnter(ByteBuffer _bb, ReqMmoStageEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqMmoStageEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort ChannelId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqMmoStageEnter> CreateReqMmoStageEnter(FlatBufferBuilder builder,
      ushort channel_id = 0) {
    builder.StartObject(1);
    ReqMmoStageEnter.AddChannelId(builder, channel_id);
    return ReqMmoStageEnter.EndReqMmoStageEnter(builder);
  }

  public static void StartReqMmoStageEnter(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(0, channelId, 0); }
  public static Offset<ReqMmoStageEnter> EndReqMmoStageEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqMmoStageEnter>(o);
  }
};

public struct ResMmoStageEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResMmoStageEnter GetRootAsResMmoStageEnter(ByteBuffer _bb) { return GetRootAsResMmoStageEnter(_bb, new ResMmoStageEnter()); }
  public static ResMmoStageEnter GetRootAsResMmoStageEnter(ByteBuffer _bb, ResMmoStageEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResMmoStageEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string JoinAddr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ResMmoStageEnter> CreateResMmoStageEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort channel_id = 0,
      StringOffset join_addrOffset = default(StringOffset)) {
    builder.StartObject(3);
    ResMmoStageEnter.AddJoinAddr(builder, join_addrOffset);
    ResMmoStageEnter.AddStageTid(builder, stage_tid);
    ResMmoStageEnter.AddChannelId(builder, channel_id);
    return ResMmoStageEnter.EndResMmoStageEnter(builder);
  }

  public static void StartResMmoStageEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(1, channelId, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(2, joinAddrOffset.Value, 0); }
  public static Offset<ResMmoStageEnter> EndResMmoStageEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResMmoStageEnter>(o);
  }
};

public struct ReqPortalEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPortalEnter GetRootAsReqPortalEnter(ByteBuffer _bb) { return GetRootAsReqPortalEnter(_bb, new ReqPortalEnter()); }
  public static ReqPortalEnter GetRootAsReqPortalEnter(ByteBuffer _bb, ReqPortalEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPortalEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PortalTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsChaosChannel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UseItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqPortalEnter> CreateReqPortalEnter(FlatBufferBuilder builder,
      uint portal_tid = 0,
      byte is_chaos_channel = 0,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(4);
    ReqPortalEnter.AddUseItemId(builder, use_item_id);
    ReqPortalEnter.AddUseItemTid(builder, use_item_tid);
    ReqPortalEnter.AddPortalTid(builder, portal_tid);
    ReqPortalEnter.AddIsChaosChannel(builder, is_chaos_channel);
    return ReqPortalEnter.EndReqPortalEnter(builder);
  }

  public static void StartReqPortalEnter(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddPortalTid(FlatBufferBuilder builder, uint portalTid) { builder.AddUint(0, portalTid, 0); }
  public static void AddIsChaosChannel(FlatBufferBuilder builder, byte isChaosChannel) { builder.AddByte(1, isChaosChannel, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(2, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(3, useItemTid, 0); }
  public static Offset<ReqPortalEnter> EndReqPortalEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPortalEnter>(o);
  }
};

public struct ResPortalEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPortalEnter GetRootAsResPortalEnter(ByteBuffer _bb) { return GetRootAsResPortalEnter(_bb, new ResPortalEnter()); }
  public static ResPortalEnter GetRootAsResPortalEnter(ByteBuffer _bb, ResPortalEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPortalEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string JoinAddr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ResPortalEnter> CreateResPortalEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort channel_id = 0,
      StringOffset join_addrOffset = default(StringOffset)) {
    builder.StartObject(3);
    ResPortalEnter.AddJoinAddr(builder, join_addrOffset);
    ResPortalEnter.AddStageTid(builder, stage_tid);
    ResPortalEnter.AddChannelId(builder, channel_id);
    return ResPortalEnter.EndResPortalEnter(builder);
  }

  public static void StartResPortalEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(1, channelId, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(2, joinAddrOffset.Value, 0); }
  public static Offset<ResPortalEnter> EndResPortalEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPortalEnter>(o);
  }
};

public struct ReqChannelChangeEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChannelChangeEnter GetRootAsReqChannelChangeEnter(ByteBuffer _bb) { return GetRootAsReqChannelChangeEnter(_bb, new ReqChannelChangeEnter()); }
  public static ReqChannelChangeEnter GetRootAsReqChannelChangeEnter(ByteBuffer _bb, ReqChannelChangeEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChannelChangeEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort ChangeChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqChannelChangeEnter> CreateReqChannelChangeEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort change_channel_id = 0) {
    builder.StartObject(2);
    ReqChannelChangeEnter.AddStageTid(builder, stage_tid);
    ReqChannelChangeEnter.AddChangeChannelId(builder, change_channel_id);
    return ReqChannelChangeEnter.EndReqChannelChangeEnter(builder);
  }

  public static void StartReqChannelChangeEnter(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChangeChannelId(FlatBufferBuilder builder, ushort changeChannelId) { builder.AddUshort(1, changeChannelId, 0); }
  public static Offset<ReqChannelChangeEnter> EndReqChannelChangeEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChannelChangeEnter>(o);
  }
};

public struct ResChannelChangeEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChannelChangeEnter GetRootAsResChannelChangeEnter(ByteBuffer _bb) { return GetRootAsResChannelChangeEnter(_bb, new ResChannelChangeEnter()); }
  public static ResChannelChangeEnter GetRootAsResChannelChangeEnter(ByteBuffer _bb, ResChannelChangeEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChannelChangeEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort ChannelId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string JoinAddr { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ResChannelChangeEnter> CreateResChannelChangeEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      ushort channel_id = 0,
      StringOffset join_addrOffset = default(StringOffset)) {
    builder.StartObject(3);
    ResChannelChangeEnter.AddJoinAddr(builder, join_addrOffset);
    ResChannelChangeEnter.AddStageTid(builder, stage_tid);
    ResChannelChangeEnter.AddChannelId(builder, channel_id);
    return ResChannelChangeEnter.EndResChannelChangeEnter(builder);
  }

  public static void StartResChannelChangeEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(1, channelId, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(2, joinAddrOffset.Value, 0); }
  public static Offset<ResChannelChangeEnter> EndResChannelChangeEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChannelChangeEnter>(o);
  }
};

public struct ReqTempleItemOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTempleItemOpen GetRootAsReqTempleItemOpen(ByteBuffer _bb) { return GetRootAsReqTempleItemOpen(_bb, new ReqTempleItemOpen()); }
  public static ReqTempleItemOpen GetRootAsReqTempleItemOpen(ByteBuffer _bb, ReqTempleItemOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTempleItemOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint UseItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTempleItemOpen> CreateReqTempleItemOpen(FlatBufferBuilder builder,
      uint use_item_tid = 0) {
    builder.StartObject(1);
    ReqTempleItemOpen.AddUseItemTid(builder, use_item_tid);
    return ReqTempleItemOpen.EndReqTempleItemOpen(builder);
  }

  public static void StartReqTempleItemOpen(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(0, useItemTid, 0); }
  public static Offset<ReqTempleItemOpen> EndReqTempleItemOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTempleItemOpen>(o);
  }
};

public struct ResTempleItemOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTempleItemOpen GetRootAsResTempleItemOpen(ByteBuffer _bb) { return GetRootAsResTempleItemOpen(_bb, new ResTempleItemOpen()); }
  public static ResTempleItemOpen GetRootAsResTempleItemOpen(ByteBuffer _bb, ResTempleItemOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTempleItemOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TempleStage? TempleStage { get { int o = __p.__offset(4); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTempleItemOpen> CreateResTempleItemOpen(FlatBufferBuilder builder,
      Offset<TempleStage> temple_stageOffset = default(Offset<TempleStage>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(2);
    ResTempleItemOpen.AddResultStackItem(builder, result_stack_itemOffset);
    ResTempleItemOpen.AddTempleStage(builder, temple_stageOffset);
    return ResTempleItemOpen.EndResTempleItemOpen(builder);
  }

  public static void StartResTempleItemOpen(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTempleStage(FlatBufferBuilder builder, Offset<TempleStage> templeStageOffset) { builder.AddOffset(0, templeStageOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(1, resultStackItemOffset.Value, 0); }
  public static Offset<ResTempleItemOpen> EndResTempleItemOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTempleItemOpen>(o);
  }
};

public struct ReqTempleGimmickOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTempleGimmickOpen GetRootAsReqTempleGimmickOpen(ByteBuffer _bb) { return GetRootAsReqTempleGimmickOpen(_bb, new ReqTempleGimmickOpen()); }
  public static ReqTempleGimmickOpen GetRootAsReqTempleGimmickOpen(ByteBuffer _bb, ReqTempleGimmickOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTempleGimmickOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ObjectTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint StageTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTempleGimmickOpen> CreateReqTempleGimmickOpen(FlatBufferBuilder builder,
      uint object_tid = 0,
      uint stage_tid = 0) {
    builder.StartObject(2);
    ReqTempleGimmickOpen.AddStageTid(builder, stage_tid);
    ReqTempleGimmickOpen.AddObjectTid(builder, object_tid);
    return ReqTempleGimmickOpen.EndReqTempleGimmickOpen(builder);
  }

  public static void StartReqTempleGimmickOpen(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddObjectTid(FlatBufferBuilder builder, uint objectTid) { builder.AddUint(0, objectTid, 0); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(1, stageTid, 0); }
  public static Offset<ReqTempleGimmickOpen> EndReqTempleGimmickOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTempleGimmickOpen>(o);
  }
};

public struct ResTempleGimmickOpen : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTempleGimmickOpen GetRootAsResTempleGimmickOpen(ByteBuffer _bb) { return GetRootAsResTempleGimmickOpen(_bb, new ResTempleGimmickOpen()); }
  public static ResTempleGimmickOpen GetRootAsResTempleGimmickOpen(ByteBuffer _bb, ResTempleGimmickOpen obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTempleGimmickOpen __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TempleStage? TempleStage { get { int o = __p.__offset(4); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTempleGimmickOpen> CreateResTempleGimmickOpen(FlatBufferBuilder builder,
      Offset<TempleStage> temple_stageOffset = default(Offset<TempleStage>)) {
    builder.StartObject(1);
    ResTempleGimmickOpen.AddTempleStage(builder, temple_stageOffset);
    return ResTempleGimmickOpen.EndResTempleGimmickOpen(builder);
  }

  public static void StartResTempleGimmickOpen(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTempleStage(FlatBufferBuilder builder, Offset<TempleStage> templeStageOffset) { builder.AddOffset(0, templeStageOffset.Value, 0); }
  public static Offset<ResTempleGimmickOpen> EndResTempleGimmickOpen(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTempleGimmickOpen>(o);
  }
};

public struct ReqTempleGachaItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTempleGachaItem GetRootAsReqTempleGachaItem(ByteBuffer _bb) { return GetRootAsReqTempleGachaItem(_bb, new ReqTempleGachaItem()); }
  public static ReqTempleGachaItem GetRootAsReqTempleGachaItem(ByteBuffer _bb, ReqTempleGachaItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTempleGachaItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TempleStageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint GachaArrayIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTempleGachaItem> CreateReqTempleGachaItem(FlatBufferBuilder builder,
      uint temple_stage_tid = 0,
      uint gacha_array_index = 0) {
    builder.StartObject(2);
    ReqTempleGachaItem.AddGachaArrayIndex(builder, gacha_array_index);
    ReqTempleGachaItem.AddTempleStageTid(builder, temple_stage_tid);
    return ReqTempleGachaItem.EndReqTempleGachaItem(builder);
  }

  public static void StartReqTempleGachaItem(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTempleStageTid(FlatBufferBuilder builder, uint templeStageTid) { builder.AddUint(0, templeStageTid, 0); }
  public static void AddGachaArrayIndex(FlatBufferBuilder builder, uint gachaArrayIndex) { builder.AddUint(1, gachaArrayIndex, 0); }
  public static Offset<ReqTempleGachaItem> EndReqTempleGachaItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTempleGachaItem>(o);
  }
};

public struct ResTempleGachaItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTempleGachaItem GetRootAsResTempleGachaItem(ByteBuffer _bb) { return GetRootAsResTempleGachaItem(_bb, new ResTempleGachaItem()); }
  public static ResTempleGachaItem GetRootAsResTempleGachaItem(ByteBuffer _bb, ResTempleGachaItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTempleGachaItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TempleStage? TempleStage { get { int o = __p.__offset(4); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTempleGachaItem> CreateResTempleGachaItem(FlatBufferBuilder builder,
      Offset<TempleStage> temple_stageOffset = default(Offset<TempleStage>),
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(3);
    ResTempleGachaItem.AddRemainItems(builder, remain_itemsOffset);
    ResTempleGachaItem.AddGetItems(builder, get_itemsOffset);
    ResTempleGachaItem.AddTempleStage(builder, temple_stageOffset);
    return ResTempleGachaItem.EndResTempleGachaItem(builder);
  }

  public static void StartResTempleGachaItem(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTempleStage(FlatBufferBuilder builder, Offset<TempleStage> templeStageOffset) { builder.AddOffset(0, templeStageOffset.Value, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(2, remainItemsOffset.Value, 0); }
  public static Offset<ResTempleGachaItem> EndResTempleGachaItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTempleGachaItem>(o);
  }
};

public struct ReqTempleClearReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTempleClearReward GetRootAsReqTempleClearReward(ByteBuffer _bb) { return GetRootAsReqTempleClearReward(_bb, new ReqTempleClearReward()); }
  public static ReqTempleClearReward GetRootAsReqTempleClearReward(ByteBuffer _bb, ReqTempleClearReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTempleClearReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TempleStageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTempleClearReward> CreateReqTempleClearReward(FlatBufferBuilder builder,
      uint temple_stage_tid = 0) {
    builder.StartObject(1);
    ReqTempleClearReward.AddTempleStageTid(builder, temple_stage_tid);
    return ReqTempleClearReward.EndReqTempleClearReward(builder);
  }

  public static void StartReqTempleClearReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTempleStageTid(FlatBufferBuilder builder, uint templeStageTid) { builder.AddUint(0, templeStageTid, 0); }
  public static Offset<ReqTempleClearReward> EndReqTempleClearReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTempleClearReward>(o);
  }
};

public struct ResTempleClearReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTempleClearReward GetRootAsResTempleClearReward(ByteBuffer _bb) { return GetRootAsResTempleClearReward(_bb, new ResTempleClearReward()); }
  public static ResTempleClearReward GetRootAsResTempleClearReward(ByteBuffer _bb, ResTempleClearReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTempleClearReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TempleStage? TempleStage { get { int o = __p.__offset(4); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTempleClearReward> CreateResTempleClearReward(FlatBufferBuilder builder,
      Offset<TempleStage> temple_stageOffset = default(Offset<TempleStage>),
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(3);
    ResTempleClearReward.AddRemainItems(builder, remain_itemsOffset);
    ResTempleClearReward.AddGetItems(builder, get_itemsOffset);
    ResTempleClearReward.AddTempleStage(builder, temple_stageOffset);
    return ResTempleClearReward.EndResTempleClearReward(builder);
  }

  public static void StartResTempleClearReward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTempleStage(FlatBufferBuilder builder, Offset<TempleStage> templeStageOffset) { builder.AddOffset(0, templeStageOffset.Value, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(2, remainItemsOffset.Value, 0); }
  public static Offset<ResTempleClearReward> EndResTempleClearReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTempleClearReward>(o);
  }
};

public struct ReqInfinityDungeonGetOpenInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInfinityDungeonGetOpenInfo GetRootAsReqInfinityDungeonGetOpenInfo(ByteBuffer _bb) { return GetRootAsReqInfinityDungeonGetOpenInfo(_bb, new ReqInfinityDungeonGetOpenInfo()); }
  public static ReqInfinityDungeonGetOpenInfo GetRootAsReqInfinityDungeonGetOpenInfo(ByteBuffer _bb, ReqInfinityDungeonGetOpenInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInfinityDungeonGetOpenInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqInfinityDungeonGetOpenInfo(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqInfinityDungeonGetOpenInfo> EndReqInfinityDungeonGetOpenInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInfinityDungeonGetOpenInfo>(o);
  }
};

public struct ResInfinityDungeonGetOpenInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInfinityDungeonGetOpenInfo GetRootAsResInfinityDungeonGetOpenInfo(ByteBuffer _bb) { return GetRootAsResInfinityDungeonGetOpenInfo(_bb, new ResInfinityDungeonGetOpenInfo()); }
  public static ResInfinityDungeonGetOpenInfo GetRootAsResInfinityDungeonGetOpenInfo(ByteBuffer _bb, ResInfinityDungeonGetOpenInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInfinityDungeonGetOpenInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityDungeonSeq { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonGroupTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong InfinityDungeonStart { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong InfinityDungeonEnd { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResInfinityDungeonGetOpenInfo> CreateResInfinityDungeonGetOpenInfo(FlatBufferBuilder builder,
      uint infinity_dungeon_seq = 0,
      uint infinity_dungeon_group_tid = 0,
      ulong infinity_dungeon_start = 0,
      ulong infinity_dungeon_end = 0) {
    builder.StartObject(4);
    ResInfinityDungeonGetOpenInfo.AddInfinityDungeonEnd(builder, infinity_dungeon_end);
    ResInfinityDungeonGetOpenInfo.AddInfinityDungeonStart(builder, infinity_dungeon_start);
    ResInfinityDungeonGetOpenInfo.AddInfinityDungeonGroupTid(builder, infinity_dungeon_group_tid);
    ResInfinityDungeonGetOpenInfo.AddInfinityDungeonSeq(builder, infinity_dungeon_seq);
    return ResInfinityDungeonGetOpenInfo.EndResInfinityDungeonGetOpenInfo(builder);
  }

  public static void StartResInfinityDungeonGetOpenInfo(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddInfinityDungeonSeq(FlatBufferBuilder builder, uint infinityDungeonSeq) { builder.AddUint(0, infinityDungeonSeq, 0); }
  public static void AddInfinityDungeonGroupTid(FlatBufferBuilder builder, uint infinityDungeonGroupTid) { builder.AddUint(1, infinityDungeonGroupTid, 0); }
  public static void AddInfinityDungeonStart(FlatBufferBuilder builder, ulong infinityDungeonStart) { builder.AddUlong(2, infinityDungeonStart, 0); }
  public static void AddInfinityDungeonEnd(FlatBufferBuilder builder, ulong infinityDungeonEnd) { builder.AddUlong(3, infinityDungeonEnd, 0); }
  public static Offset<ResInfinityDungeonGetOpenInfo> EndResInfinityDungeonGetOpenInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInfinityDungeonGetOpenInfo>(o);
  }
};

public struct ReqInfinityDungeonClearReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInfinityDungeonClearReward GetRootAsReqInfinityDungeonClearReward(ByteBuffer _bb) { return GetRootAsReqInfinityDungeonClearReward(_bb, new ReqInfinityDungeonClearReward()); }
  public static ReqInfinityDungeonClearReward GetRootAsReqInfinityDungeonClearReward(ByteBuffer _bb, ReqInfinityDungeonClearReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInfinityDungeonClearReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityDungeonTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqInfinityDungeonClearReward> CreateReqInfinityDungeonClearReward(FlatBufferBuilder builder,
      uint infinity_dungeon_tid = 0) {
    builder.StartObject(1);
    ReqInfinityDungeonClearReward.AddInfinityDungeonTid(builder, infinity_dungeon_tid);
    return ReqInfinityDungeonClearReward.EndReqInfinityDungeonClearReward(builder);
  }

  public static void StartReqInfinityDungeonClearReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfinityDungeonTid(FlatBufferBuilder builder, uint infinityDungeonTid) { builder.AddUint(0, infinityDungeonTid, 0); }
  public static Offset<ReqInfinityDungeonClearReward> EndReqInfinityDungeonClearReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInfinityDungeonClearReward>(o);
  }
};

public struct ResInfinityDungeonClearReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInfinityDungeonClearReward GetRootAsResInfinityDungeonClearReward(ByteBuffer _bb) { return GetRootAsResInfinityDungeonClearReward(_bb, new ResInfinityDungeonClearReward()); }
  public static ResInfinityDungeonClearReward GetRootAsResInfinityDungeonClearReward(ByteBuffer _bb, ResInfinityDungeonClearReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInfinityDungeonClearReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityDungeonSeq { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonLastTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonRewardStageTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(12); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(14); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResInfinityDungeonClearReward> CreateResInfinityDungeonClearReward(FlatBufferBuilder builder,
      uint infinity_dungeon_seq = 0,
      uint infinity_dungeon_tid = 0,
      uint infinity_dungeon_last_tid = 0,
      uint infinity_dungeon_reward_stage_tid = 0,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(6);
    ResInfinityDungeonClearReward.AddRemainItems(builder, remain_itemsOffset);
    ResInfinityDungeonClearReward.AddGetItems(builder, get_itemsOffset);
    ResInfinityDungeonClearReward.AddInfinityDungeonRewardStageTid(builder, infinity_dungeon_reward_stage_tid);
    ResInfinityDungeonClearReward.AddInfinityDungeonLastTid(builder, infinity_dungeon_last_tid);
    ResInfinityDungeonClearReward.AddInfinityDungeonTid(builder, infinity_dungeon_tid);
    ResInfinityDungeonClearReward.AddInfinityDungeonSeq(builder, infinity_dungeon_seq);
    return ResInfinityDungeonClearReward.EndResInfinityDungeonClearReward(builder);
  }

  public static void StartResInfinityDungeonClearReward(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddInfinityDungeonSeq(FlatBufferBuilder builder, uint infinityDungeonSeq) { builder.AddUint(0, infinityDungeonSeq, 0); }
  public static void AddInfinityDungeonTid(FlatBufferBuilder builder, uint infinityDungeonTid) { builder.AddUint(1, infinityDungeonTid, 0); }
  public static void AddInfinityDungeonLastTid(FlatBufferBuilder builder, uint infinityDungeonLastTid) { builder.AddUint(2, infinityDungeonLastTid, 0); }
  public static void AddInfinityDungeonRewardStageTid(FlatBufferBuilder builder, uint infinityDungeonRewardStageTid) { builder.AddUint(3, infinityDungeonRewardStageTid, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(4, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(5, remainItemsOffset.Value, 0); }
  public static Offset<ResInfinityDungeonClearReward> EndResInfinityDungeonClearReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInfinityDungeonClearReward>(o);
  }
};

public struct ReqInfinityDungeonDailyReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInfinityDungeonDailyReward GetRootAsReqInfinityDungeonDailyReward(ByteBuffer _bb) { return GetRootAsReqInfinityDungeonDailyReward(_bb, new ReqInfinityDungeonDailyReward()); }
  public static ReqInfinityDungeonDailyReward GetRootAsReqInfinityDungeonDailyReward(ByteBuffer _bb, ReqInfinityDungeonDailyReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInfinityDungeonDailyReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqInfinityDungeonDailyReward(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqInfinityDungeonDailyReward> EndReqInfinityDungeonDailyReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInfinityDungeonDailyReward>(o);
  }
};

public struct ResInfinityDungeonDailyReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInfinityDungeonDailyReward GetRootAsResInfinityDungeonDailyReward(ByteBuffer _bb) { return GetRootAsResInfinityDungeonDailyReward(_bb, new ResInfinityDungeonDailyReward()); }
  public static ResInfinityDungeonDailyReward GetRootAsResInfinityDungeonDailyReward(ByteBuffer _bb, ResInfinityDungeonDailyReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInfinityDungeonDailyReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityDungeonRewardStageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong InfinityDungeonRewardDt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(10); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResInfinityDungeonDailyReward> CreateResInfinityDungeonDailyReward(FlatBufferBuilder builder,
      uint infinity_dungeon_reward_stage_tid = 0,
      ulong infinity_dungeon_reward_dt = 0,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(4);
    ResInfinityDungeonDailyReward.AddInfinityDungeonRewardDt(builder, infinity_dungeon_reward_dt);
    ResInfinityDungeonDailyReward.AddRemainItems(builder, remain_itemsOffset);
    ResInfinityDungeonDailyReward.AddGetItems(builder, get_itemsOffset);
    ResInfinityDungeonDailyReward.AddInfinityDungeonRewardStageTid(builder, infinity_dungeon_reward_stage_tid);
    return ResInfinityDungeonDailyReward.EndResInfinityDungeonDailyReward(builder);
  }

  public static void StartResInfinityDungeonDailyReward(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddInfinityDungeonRewardStageTid(FlatBufferBuilder builder, uint infinityDungeonRewardStageTid) { builder.AddUint(0, infinityDungeonRewardStageTid, 0); }
  public static void AddInfinityDungeonRewardDt(FlatBufferBuilder builder, ulong infinityDungeonRewardDt) { builder.AddUlong(1, infinityDungeonRewardDt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(3, remainItemsOffset.Value, 0); }
  public static Offset<ResInfinityDungeonDailyReward> EndResInfinityDungeonDailyReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInfinityDungeonDailyReward>(o);
  }
};

public struct ReqInfinityDungeonReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInfinityDungeonReset GetRootAsReqInfinityDungeonReset(ByteBuffer _bb) { return GetRootAsReqInfinityDungeonReset(_bb, new ReqInfinityDungeonReset()); }
  public static ReqInfinityDungeonReset GetRootAsReqInfinityDungeonReset(ByteBuffer _bb, ReqInfinityDungeonReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInfinityDungeonReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }

  public static Offset<ReqInfinityDungeonReset> CreateReqInfinityDungeonReset(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None) {
    builder.StartObject(1);
    ReqInfinityDungeonReset.AddMarketType(builder, market_type);
    return ReqInfinityDungeonReset.EndReqInfinityDungeonReset(builder);
  }

  public static void StartReqInfinityDungeonReset(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static Offset<ReqInfinityDungeonReset> EndReqInfinityDungeonReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInfinityDungeonReset>(o);
  }
};

public struct ResInfinityDungeonReset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInfinityDungeonReset GetRootAsResInfinityDungeonReset(ByteBuffer _bb) { return GetRootAsResInfinityDungeonReset(_bb, new ResInfinityDungeonReset()); }
  public static ResInfinityDungeonReset GetRootAsResInfinityDungeonReset(ByteBuffer _bb, ResInfinityDungeonReset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInfinityDungeonReset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResInfinityDungeonReset> CreateResInfinityDungeonReset(FlatBufferBuilder builder,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(2);
    ResInfinityDungeonReset.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResInfinityDungeonReset.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    return ResInfinityDungeonReset.EndResInfinityDungeonReset(builder);
  }

  public static void StartResInfinityDungeonReset(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(0, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(1, resultCashCoinBalance, 0); }
  public static Offset<ResInfinityDungeonReset> EndResInfinityDungeonReset(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInfinityDungeonReset>(o);
  }
};

public struct ReqGetInfinityDungeonSelectBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetInfinityDungeonSelectBuffList GetRootAsReqGetInfinityDungeonSelectBuffList(ByteBuffer _bb) { return GetRootAsReqGetInfinityDungeonSelectBuffList(_bb, new ReqGetInfinityDungeonSelectBuffList()); }
  public static ReqGetInfinityDungeonSelectBuffList GetRootAsReqGetInfinityDungeonSelectBuffList(ByteBuffer _bb, ReqGetInfinityDungeonSelectBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetInfinityDungeonSelectBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetInfinityDungeonSelectBuffList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetInfinityDungeonSelectBuffList> EndReqGetInfinityDungeonSelectBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetInfinityDungeonSelectBuffList>(o);
  }
};

public struct ResGetInfinityDungeonSelectBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetInfinityDungeonSelectBuffList GetRootAsResGetInfinityDungeonSelectBuffList(ByteBuffer _bb) { return GetRootAsResGetInfinityDungeonSelectBuffList(_bb, new ResGetInfinityDungeonSelectBuffList()); }
  public static ResGetInfinityDungeonSelectBuffList GetRootAsResGetInfinityDungeonSelectBuffList(ByteBuffer _bb, ResGetInfinityDungeonSelectBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetInfinityDungeonSelectBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityBuffTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int InfinityBuffTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInfinityBuffTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetInfinityBuffTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetInfinityBuffTidsArray() { return __p.__vector_as_array<uint>(4); }

  public static Offset<ResGetInfinityDungeonSelectBuffList> CreateResGetInfinityDungeonSelectBuffList(FlatBufferBuilder builder,
      VectorOffset infinity_buff_tidsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetInfinityDungeonSelectBuffList.AddInfinityBuffTids(builder, infinity_buff_tidsOffset);
    return ResGetInfinityDungeonSelectBuffList.EndResGetInfinityDungeonSelectBuffList(builder);
  }

  public static void StartResGetInfinityDungeonSelectBuffList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfinityBuffTids(FlatBufferBuilder builder, VectorOffset infinityBuffTidsOffset) { builder.AddOffset(0, infinityBuffTidsOffset.Value, 0); }
  public static VectorOffset CreateInfinityBuffTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInfinityBuffTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfinityBuffTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetInfinityDungeonSelectBuffList> EndResGetInfinityDungeonSelectBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetInfinityDungeonSelectBuffList>(o);
  }
};

public struct ReqInfinityDungeonSelectBuff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInfinityDungeonSelectBuff GetRootAsReqInfinityDungeonSelectBuff(ByteBuffer _bb) { return GetRootAsReqInfinityDungeonSelectBuff(_bb, new ReqInfinityDungeonSelectBuff()); }
  public static ReqInfinityDungeonSelectBuff GetRootAsReqInfinityDungeonSelectBuff(ByteBuffer _bb, ReqInfinityDungeonSelectBuff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInfinityDungeonSelectBuff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityBuffTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqInfinityDungeonSelectBuff> CreateReqInfinityDungeonSelectBuff(FlatBufferBuilder builder,
      uint infinity_buff_tid = 0) {
    builder.StartObject(1);
    ReqInfinityDungeonSelectBuff.AddInfinityBuffTid(builder, infinity_buff_tid);
    return ReqInfinityDungeonSelectBuff.EndReqInfinityDungeonSelectBuff(builder);
  }

  public static void StartReqInfinityDungeonSelectBuff(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfinityBuffTid(FlatBufferBuilder builder, uint infinityBuffTid) { builder.AddUint(0, infinityBuffTid, 0); }
  public static Offset<ReqInfinityDungeonSelectBuff> EndReqInfinityDungeonSelectBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInfinityDungeonSelectBuff>(o);
  }
};

public struct ResInfinityDungeonSelectBuff : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInfinityDungeonSelectBuff GetRootAsResInfinityDungeonSelectBuff(ByteBuffer _bb) { return GetRootAsResInfinityDungeonSelectBuff(_bb, new ResInfinityDungeonSelectBuff()); }
  public static ResInfinityDungeonSelectBuff GetRootAsResInfinityDungeonSelectBuff(ByteBuffer _bb, ResInfinityDungeonSelectBuff obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInfinityDungeonSelectBuff __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityBuffTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResInfinityDungeonSelectBuff> CreateResInfinityDungeonSelectBuff(FlatBufferBuilder builder,
      uint infinity_buff_tid = 0) {
    builder.StartObject(1);
    ResInfinityDungeonSelectBuff.AddInfinityBuffTid(builder, infinity_buff_tid);
    return ResInfinityDungeonSelectBuff.EndResInfinityDungeonSelectBuff(builder);
  }

  public static void StartResInfinityDungeonSelectBuff(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfinityBuffTid(FlatBufferBuilder builder, uint infinityBuffTid) { builder.AddUint(0, infinityBuffTid, 0); }
  public static Offset<ResInfinityDungeonSelectBuff> EndResInfinityDungeonSelectBuff(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInfinityDungeonSelectBuff>(o);
  }
};

public struct ReqGetInfinityDungeonBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetInfinityDungeonBuffList GetRootAsReqGetInfinityDungeonBuffList(ByteBuffer _bb) { return GetRootAsReqGetInfinityDungeonBuffList(_bb, new ReqGetInfinityDungeonBuffList()); }
  public static ReqGetInfinityDungeonBuffList GetRootAsReqGetInfinityDungeonBuffList(ByteBuffer _bb, ReqGetInfinityDungeonBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetInfinityDungeonBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetInfinityDungeonBuffList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetInfinityDungeonBuffList> EndReqGetInfinityDungeonBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetInfinityDungeonBuffList>(o);
  }
};

public struct ResGetInfinityDungeonBuffList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetInfinityDungeonBuffList GetRootAsResGetInfinityDungeonBuffList(ByteBuffer _bb) { return GetRootAsResGetInfinityDungeonBuffList(_bb, new ResGetInfinityDungeonBuffList()); }
  public static ResGetInfinityDungeonBuffList GetRootAsResGetInfinityDungeonBuffList(ByteBuffer _bb, ResGetInfinityDungeonBuffList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetInfinityDungeonBuffList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InfinityBuffTids(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int InfinityBuffTidsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInfinityBuffTidsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetInfinityBuffTidsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetInfinityBuffTidsArray() { return __p.__vector_as_array<uint>(4); }

  public static Offset<ResGetInfinityDungeonBuffList> CreateResGetInfinityDungeonBuffList(FlatBufferBuilder builder,
      VectorOffset infinity_buff_tidsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetInfinityDungeonBuffList.AddInfinityBuffTids(builder, infinity_buff_tidsOffset);
    return ResGetInfinityDungeonBuffList.EndResGetInfinityDungeonBuffList(builder);
  }

  public static void StartResGetInfinityDungeonBuffList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfinityBuffTids(FlatBufferBuilder builder, VectorOffset infinityBuffTidsOffset) { builder.AddOffset(0, infinityBuffTidsOffset.Value, 0); }
  public static VectorOffset CreateInfinityBuffTidsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInfinityBuffTidsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfinityBuffTidsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetInfinityDungeonBuffList> EndResGetInfinityDungeonBuffList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetInfinityDungeonBuffList>(o);
  }
};

public struct ReqScenarioDungeonReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqScenarioDungeonReward GetRootAsReqScenarioDungeonReward(ByteBuffer _bb) { return GetRootAsReqScenarioDungeonReward(_bb, new ReqScenarioDungeonReward()); }
  public static ReqScenarioDungeonReward GetRootAsReqScenarioDungeonReward(ByteBuffer _bb, ReqScenarioDungeonReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqScenarioDungeonReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqScenarioDungeonReward> CreateReqScenarioDungeonReward(FlatBufferBuilder builder,
      uint stage_tid = 0) {
    builder.StartObject(1);
    ReqScenarioDungeonReward.AddStageTid(builder, stage_tid);
    return ReqScenarioDungeonReward.EndReqScenarioDungeonReward(builder);
  }

  public static void StartReqScenarioDungeonReward(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static Offset<ReqScenarioDungeonReward> EndReqScenarioDungeonReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqScenarioDungeonReward>(o);
  }
};

public struct ResScenarioDungeonReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResScenarioDungeonReward GetRootAsResScenarioDungeonReward(ByteBuffer _bb) { return GetRootAsResScenarioDungeonReward(_bb, new ResScenarioDungeonReward()); }
  public static ResScenarioDungeonReward GetRootAsResScenarioDungeonReward(ByteBuffer _bb, ResScenarioDungeonReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResScenarioDungeonReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ScenarioDungeonStageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ScenarioDungeonPlayCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemInfo? GetItems { get { int o = __p.__offset(8); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemInfo? RemainItems { get { int o = __p.__offset(10); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResScenarioDungeonReward> CreateResScenarioDungeonReward(FlatBufferBuilder builder,
      uint scenario_dungeon_stage_tid = 0,
      uint scenario_dungeon_play_cnt = 0,
      Offset<ItemInfo> get_itemsOffset = default(Offset<ItemInfo>),
      Offset<ItemInfo> remain_itemsOffset = default(Offset<ItemInfo>)) {
    builder.StartObject(4);
    ResScenarioDungeonReward.AddRemainItems(builder, remain_itemsOffset);
    ResScenarioDungeonReward.AddGetItems(builder, get_itemsOffset);
    ResScenarioDungeonReward.AddScenarioDungeonPlayCnt(builder, scenario_dungeon_play_cnt);
    ResScenarioDungeonReward.AddScenarioDungeonStageTid(builder, scenario_dungeon_stage_tid);
    return ResScenarioDungeonReward.EndResScenarioDungeonReward(builder);
  }

  public static void StartResScenarioDungeonReward(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddScenarioDungeonStageTid(FlatBufferBuilder builder, uint scenarioDungeonStageTid) { builder.AddUint(0, scenarioDungeonStageTid, 0); }
  public static void AddScenarioDungeonPlayCnt(FlatBufferBuilder builder, uint scenarioDungeonPlayCnt) { builder.AddUint(1, scenarioDungeonPlayCnt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, Offset<ItemInfo> getItemsOffset) { builder.AddOffset(2, getItemsOffset.Value, 0); }
  public static void AddRemainItems(FlatBufferBuilder builder, Offset<ItemInfo> remainItemsOffset) { builder.AddOffset(3, remainItemsOffset.Value, 0); }
  public static Offset<ResScenarioDungeonReward> EndResScenarioDungeonReward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResScenarioDungeonReward>(o);
  }
};

public struct ReqGetSelfGodLandInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetSelfGodLandInfo GetRootAsReqGetSelfGodLandInfo(ByteBuffer _bb) { return GetRootAsReqGetSelfGodLandInfo(_bb, new ReqGetSelfGodLandInfo()); }
  public static ReqGetSelfGodLandInfo GetRootAsReqGetSelfGodLandInfo(ByteBuffer _bb, ReqGetSelfGodLandInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetSelfGodLandInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetSelfGodLandInfo(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetSelfGodLandInfo> EndReqGetSelfGodLandInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetSelfGodLandInfo>(o);
  }
};

public struct ResGetSelfGodLandInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetSelfGodLandInfo GetRootAsResGetSelfGodLandInfo(ByteBuffer _bb) { return GetRootAsResGetSelfGodLandInfo(_bb, new ResGetSelfGodLandInfo()); }
  public static ResGetSelfGodLandInfo GetRootAsResGetSelfGodLandInfo(ByteBuffer _bb, ResGetSelfGodLandInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetSelfGodLandInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsHave { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public GodLandSpotInfo? SpotInfo { get { int o = __p.__offset(6); return o != 0 ? (GodLandSpotInfo?)(new GodLandSpotInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGetSelfGodLandInfo> CreateResGetSelfGodLandInfo(FlatBufferBuilder builder,
      bool isHave = false,
      Offset<GodLandSpotInfo> spot_infoOffset = default(Offset<GodLandSpotInfo>)) {
    builder.StartObject(2);
    ResGetSelfGodLandInfo.AddSpotInfo(builder, spot_infoOffset);
    ResGetSelfGodLandInfo.AddIsHave(builder, isHave);
    return ResGetSelfGodLandInfo.EndResGetSelfGodLandInfo(builder);
  }

  public static void StartResGetSelfGodLandInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIsHave(FlatBufferBuilder builder, bool isHave) { builder.AddBool(0, isHave, false); }
  public static void AddSpotInfo(FlatBufferBuilder builder, Offset<GodLandSpotInfo> spotInfoOffset) { builder.AddOffset(1, spotInfoOffset.Value, 0); }
  public static Offset<ResGetSelfGodLandInfo> EndResGetSelfGodLandInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetSelfGodLandInfo>(o);
  }
};

public struct ReqGetGodLandInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGodLandInfo GetRootAsReqGetGodLandInfo(ByteBuffer _bb) { return GetRootAsReqGetGodLandInfo(_bb, new ReqGetGodLandInfo()); }
  public static ReqGetGodLandInfo GetRootAsReqGetGodLandInfo(ByteBuffer _bb, ReqGetGodLandInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGodLandInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SlotGroupId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGetGodLandInfo> CreateReqGetGodLandInfo(FlatBufferBuilder builder,
      uint slot_group_id = 0) {
    builder.StartObject(1);
    ReqGetGodLandInfo.AddSlotGroupId(builder, slot_group_id);
    return ReqGetGodLandInfo.EndReqGetGodLandInfo(builder);
  }

  public static void StartReqGetGodLandInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSlotGroupId(FlatBufferBuilder builder, uint slotGroupId) { builder.AddUint(0, slotGroupId, 0); }
  public static Offset<ReqGetGodLandInfo> EndReqGetGodLandInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGodLandInfo>(o);
  }
};

public struct ResGetGodLandInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGodLandInfo GetRootAsResGetGodLandInfo(ByteBuffer _bb) { return GetRootAsResGetGodLandInfo(_bb, new ResGetGodLandInfo()); }
  public static ResGetGodLandInfo GetRootAsResGetGodLandInfo(ByteBuffer _bb, ResGetGodLandInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGodLandInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GodLandSpotInfo? SpotInfo(int j) { int o = __p.__offset(4); return o != 0 ? (GodLandSpotInfo?)(new GodLandSpotInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SpotInfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGodLandInfo> CreateResGetGodLandInfo(FlatBufferBuilder builder,
      VectorOffset spot_infoOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetGodLandInfo.AddSpotInfo(builder, spot_infoOffset);
    return ResGetGodLandInfo.EndResGetGodLandInfo(builder);
  }

  public static void StartResGetGodLandInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSpotInfo(FlatBufferBuilder builder, VectorOffset spotInfoOffset) { builder.AddOffset(0, spotInfoOffset.Value, 0); }
  public static VectorOffset CreateSpotInfoVector(FlatBufferBuilder builder, Offset<GodLandSpotInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSpotInfoVectorBlock(FlatBufferBuilder builder, Offset<GodLandSpotInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSpotInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGodLandInfo> EndResGetGodLandInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGodLandInfo>(o);
  }
};

public struct ReqGetMatchGodLandSpot : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetMatchGodLandSpot GetRootAsReqGetMatchGodLandSpot(ByteBuffer _bb) { return GetRootAsReqGetMatchGodLandSpot(_bb, new ReqGetMatchGodLandSpot()); }
  public static ReqGetMatchGodLandSpot GetRootAsReqGetMatchGodLandSpot(ByteBuffer _bb, ReqGetMatchGodLandSpot obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetMatchGodLandSpot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGetMatchGodLandSpot> CreateReqGetMatchGodLandSpot(FlatBufferBuilder builder,
      uint god_land_tid = 0) {
    builder.StartObject(1);
    ReqGetMatchGodLandSpot.AddGodLandTid(builder, god_land_tid);
    return ReqGetMatchGodLandSpot.EndReqGetMatchGodLandSpot(builder);
  }

  public static void StartReqGetMatchGodLandSpot(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static Offset<ReqGetMatchGodLandSpot> EndReqGetMatchGodLandSpot(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetMatchGodLandSpot>(o);
  }
};

public struct ResGetMatchGodLandSpot : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetMatchGodLandSpot GetRootAsResGetMatchGodLandSpot(ByteBuffer _bb) { return GetRootAsResGetMatchGodLandSpot(_bb, new ResGetMatchGodLandSpot()); }
  public static ResGetMatchGodLandSpot GetRootAsResGetMatchGodLandSpot(ByteBuffer _bb, ResGetMatchGodLandSpot obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetMatchGodLandSpot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGetMatchGodLandSpot(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGetMatchGodLandSpot> EndResGetMatchGodLandSpot(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetMatchGodLandSpot>(o);
  }
};

public struct ReqGetGodLandSpotGatheringItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGodLandSpotGatheringItem GetRootAsReqGetGodLandSpotGatheringItem(ByteBuffer _bb) { return GetRootAsReqGetGodLandSpotGatheringItem(_bb, new ReqGetGodLandSpotGatheringItem()); }
  public static ReqGetGodLandSpotGatheringItem GetRootAsReqGetGodLandSpotGatheringItem(ByteBuffer _bb, ReqGetGodLandSpotGatheringItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGodLandSpotGatheringItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGetGodLandSpotGatheringItem> CreateReqGetGodLandSpotGatheringItem(FlatBufferBuilder builder,
      uint god_land_tid = 0) {
    builder.StartObject(1);
    ReqGetGodLandSpotGatheringItem.AddGodLandTid(builder, god_land_tid);
    return ReqGetGodLandSpotGatheringItem.EndReqGetGodLandSpotGatheringItem(builder);
  }

  public static void StartReqGetGodLandSpotGatheringItem(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static Offset<ReqGetGodLandSpotGatheringItem> EndReqGetGodLandSpotGatheringItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGodLandSpotGatheringItem>(o);
  }
};

public struct ResGetGodLandSpotGatheringItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGodLandSpotGatheringItem GetRootAsResGetGodLandSpotGatheringItem(ByteBuffer _bb) { return GetRootAsResGetGodLandSpotGatheringItem(_bb, new ResGetGodLandSpotGatheringItem()); }
  public static ResGetGodLandSpotGatheringItem GetRootAsResGetGodLandSpotGatheringItem(ByteBuffer _bb, ResGetGodLandSpotGatheringItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGodLandSpotGatheringItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TimeCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public GetItemInfo? GetItems(int j) { int o = __p.__offset(6); return o != 0 ? (GetItemInfo?)(new GetItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGodLandSpotGatheringItem> CreateResGetGodLandSpotGatheringItem(FlatBufferBuilder builder,
      uint time_cnt = 0,
      VectorOffset get_itemsOffset = default(VectorOffset),
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      VectorOffset result_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResGetGodLandSpotGatheringItem.AddResultStackItems(builder, result_stack_itemsOffset);
    ResGetGodLandSpotGatheringItem.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResGetGodLandSpotGatheringItem.AddGetItems(builder, get_itemsOffset);
    ResGetGodLandSpotGatheringItem.AddTimeCnt(builder, time_cnt);
    return ResGetGodLandSpotGatheringItem.EndResGetGodLandSpotGatheringItem(builder);
  }

  public static void StartResGetGodLandSpotGatheringItem(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddTimeCnt(FlatBufferBuilder builder, uint timeCnt) { builder.AddUint(0, timeCnt, 0); }
  public static void AddGetItems(FlatBufferBuilder builder, VectorOffset getItemsOffset) { builder.AddOffset(1, getItemsOffset.Value, 0); }
  public static VectorOffset CreateGetItemsVector(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetItemsVectorBlock(FlatBufferBuilder builder, Offset<GetItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(2, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(3, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGodLandSpotGatheringItem> EndResGetGodLandSpotGatheringItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGodLandSpotGatheringItem>(o);
  }
};

public struct ReqGetGodLandFightRecode : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetGodLandFightRecode GetRootAsReqGetGodLandFightRecode(ByteBuffer _bb) { return GetRootAsReqGetGodLandFightRecode(_bb, new ReqGetGodLandFightRecode()); }
  public static ReqGetGodLandFightRecode GetRootAsReqGetGodLandFightRecode(ByteBuffer _bb, ReqGetGodLandFightRecode obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetGodLandFightRecode __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetGodLandFightRecode(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetGodLandFightRecode> EndReqGetGodLandFightRecode(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetGodLandFightRecode>(o);
  }
};

public struct ResGetGodLandFightRecode : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetGodLandFightRecode GetRootAsResGetGodLandFightRecode(ByteBuffer _bb) { return GetRootAsResGetGodLandFightRecode(_bb, new ResGetGodLandFightRecode()); }
  public static ResGetGodLandFightRecode GetRootAsResGetGodLandFightRecode(ByteBuffer _bb, ResGetGodLandFightRecode obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetGodLandFightRecode __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GodLandFightRecode? Recode(int j) { int o = __p.__offset(4); return o != 0 ? (GodLandFightRecode?)(new GodLandFightRecode()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RecodeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetGodLandFightRecode> CreateResGetGodLandFightRecode(FlatBufferBuilder builder,
      VectorOffset recodeOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetGodLandFightRecode.AddRecode(builder, recodeOffset);
    return ResGetGodLandFightRecode.EndResGetGodLandFightRecode(builder);
  }

  public static void StartResGetGodLandFightRecode(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRecode(FlatBufferBuilder builder, VectorOffset recodeOffset) { builder.AddOffset(0, recodeOffset.Value, 0); }
  public static VectorOffset CreateRecodeVector(FlatBufferBuilder builder, Offset<GodLandFightRecode>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRecodeVectorBlock(FlatBufferBuilder builder, Offset<GodLandFightRecode>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRecodeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetGodLandFightRecode> EndResGetGodLandFightRecode(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetGodLandFightRecode>(o);
  }
};

public struct ReqGodLandDiscard : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGodLandDiscard GetRootAsReqGodLandDiscard(ByteBuffer _bb) { return GetRootAsReqGodLandDiscard(_bb, new ReqGodLandDiscard()); }
  public static ReqGodLandDiscard GetRootAsReqGodLandDiscard(ByteBuffer _bb, ReqGodLandDiscard obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGodLandDiscard __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint GodLandTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SlotGroupId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGodLandDiscard> CreateReqGodLandDiscard(FlatBufferBuilder builder,
      uint god_land_tid = 0,
      uint slot_group_id = 0) {
    builder.StartObject(2);
    ReqGodLandDiscard.AddSlotGroupId(builder, slot_group_id);
    ReqGodLandDiscard.AddGodLandTid(builder, god_land_tid);
    return ReqGodLandDiscard.EndReqGodLandDiscard(builder);
  }

  public static void StartReqGodLandDiscard(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGodLandTid(FlatBufferBuilder builder, uint godLandTid) { builder.AddUint(0, godLandTid, 0); }
  public static void AddSlotGroupId(FlatBufferBuilder builder, uint slotGroupId) { builder.AddUint(1, slotGroupId, 0); }
  public static Offset<ReqGodLandDiscard> EndReqGodLandDiscard(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGodLandDiscard>(o);
  }
};

public struct ResGodLandDiscard : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGodLandDiscard GetRootAsResGodLandDiscard(ByteBuffer _bb) { return GetRootAsResGodLandDiscard(_bb, new ResGodLandDiscard()); }
  public static ResGodLandDiscard GetRootAsResGodLandDiscard(ByteBuffer _bb, ResGodLandDiscard obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGodLandDiscard __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResGodLandDiscard(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResGodLandDiscard> EndResGodLandDiscard(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGodLandDiscard>(o);
  }
};

public struct ReqGetServerBossInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetServerBossInfo GetRootAsReqGetServerBossInfo(ByteBuffer _bb) { return GetRootAsReqGetServerBossInfo(_bb, new ReqGetServerBossInfo()); }
  public static ReqGetServerBossInfo GetRootAsReqGetServerBossInfo(ByteBuffer _bb, ReqGetServerBossInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetServerBossInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqGetServerBossInfo> CreateReqGetServerBossInfo(FlatBufferBuilder builder,
      uint stage_tid = 0) {
    builder.StartObject(1);
    ReqGetServerBossInfo.AddStageTid(builder, stage_tid);
    return ReqGetServerBossInfo.EndReqGetServerBossInfo(builder);
  }

  public static void StartReqGetServerBossInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static Offset<ReqGetServerBossInfo> EndReqGetServerBossInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetServerBossInfo>(o);
  }
};

public struct ResGetServerBossInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetServerBossInfo GetRootAsResGetServerBossInfo(ByteBuffer _bb) { return GetRootAsResGetServerBossInfo(_bb, new ResGetServerBossInfo()); }
  public static ResGetServerBossInfo GetRootAsResGetServerBossInfo(ByteBuffer _bb, ResGetServerBossInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetServerBossInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ServerBossInfo? OpenBoss { get { int o = __p.__offset(4); return o != 0 ? (ServerBossInfo?)(new ServerBossInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResGetServerBossInfo> CreateResGetServerBossInfo(FlatBufferBuilder builder,
      Offset<ServerBossInfo> open_bossOffset = default(Offset<ServerBossInfo>)) {
    builder.StartObject(1);
    ResGetServerBossInfo.AddOpenBoss(builder, open_bossOffset);
    return ResGetServerBossInfo.EndResGetServerBossInfo(builder);
  }

  public static void StartResGetServerBossInfo(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOpenBoss(FlatBufferBuilder builder, Offset<ServerBossInfo> openBossOffset) { builder.AddOffset(0, openBossOffset.Value, 0); }
  public static Offset<ResGetServerBossInfo> EndResGetServerBossInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetServerBossInfo>(o);
  }
};

public struct ReqInterStageCampEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInterStageCampEnter GetRootAsReqInterStageCampEnter(ByteBuffer _bb) { return GetRootAsReqInterStageCampEnter(_bb, new ReqInterStageCampEnter()); }
  public static ReqInterStageCampEnter GetRootAsReqInterStageCampEnter(ByteBuffer _bb, ReqInterStageCampEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInterStageCampEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PortalTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqInterStageCampEnter> CreateReqInterStageCampEnter(FlatBufferBuilder builder,
      uint portal_tid = 0,
      uint use_item_tid = 0) {
    builder.StartObject(2);
    ReqInterStageCampEnter.AddUseItemTid(builder, use_item_tid);
    ReqInterStageCampEnter.AddPortalTid(builder, portal_tid);
    return ReqInterStageCampEnter.EndReqInterStageCampEnter(builder);
  }

  public static void StartReqInterStageCampEnter(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPortalTid(FlatBufferBuilder builder, uint portalTid) { builder.AddUint(0, portalTid, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(1, useItemTid, 0); }
  public static Offset<ReqInterStageCampEnter> EndReqInterStageCampEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInterStageCampEnter>(o);
  }
};

public struct ResInterStageCampEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInterStageCampEnter GetRootAsResInterStageCampEnter(ByteBuffer _bb) { return GetRootAsResInterStageCampEnter(_bb, new ResInterStageCampEnter()); }
  public static ResInterStageCampEnter GetRootAsResInterStageCampEnter(ByteBuffer _bb, ResInterStageCampEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInterStageCampEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string JoinAddr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(6); }
  public ushort ChannelId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResInterStageCampEnter> CreateResInterStageCampEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      StringOffset join_addrOffset = default(StringOffset),
      ushort channel_id = 0) {
    builder.StartObject(3);
    ResInterStageCampEnter.AddJoinAddr(builder, join_addrOffset);
    ResInterStageCampEnter.AddStageTid(builder, stage_tid);
    ResInterStageCampEnter.AddChannelId(builder, channel_id);
    return ResInterStageCampEnter.EndResInterStageCampEnter(builder);
  }

  public static void StartResInterStageCampEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(1, joinAddrOffset.Value, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(2, channelId, 0); }
  public static Offset<ResInterStageCampEnter> EndResInterStageCampEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInterStageCampEnter>(o);
  }
};

public struct ReqInterStageFieldEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInterStageFieldEnter GetRootAsReqInterStageFieldEnter(ByteBuffer _bb) { return GetRootAsReqInterStageFieldEnter(_bb, new ReqInterStageFieldEnter()); }
  public static ReqInterStageFieldEnter GetRootAsReqInterStageFieldEnter(ByteBuffer _bb, ReqInterStageFieldEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInterStageFieldEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PortalTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqInterStageFieldEnter> CreateReqInterStageFieldEnter(FlatBufferBuilder builder,
      uint portal_tid = 0) {
    builder.StartObject(1);
    ReqInterStageFieldEnter.AddPortalTid(builder, portal_tid);
    return ReqInterStageFieldEnter.EndReqInterStageFieldEnter(builder);
  }

  public static void StartReqInterStageFieldEnter(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPortalTid(FlatBufferBuilder builder, uint portalTid) { builder.AddUint(0, portalTid, 0); }
  public static Offset<ReqInterStageFieldEnter> EndReqInterStageFieldEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInterStageFieldEnter>(o);
  }
};

public struct ResInterStageFieldEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInterStageFieldEnter GetRootAsResInterStageFieldEnter(ByteBuffer _bb) { return GetRootAsResInterStageFieldEnter(_bb, new ResInterStageFieldEnter()); }
  public static ResInterStageFieldEnter GetRootAsResInterStageFieldEnter(ByteBuffer _bb, ResInterStageFieldEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInterStageFieldEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StageTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string JoinAddr { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJoinAddrBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetJoinAddrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetJoinAddrArray() { return __p.__vector_as_array<byte>(6); }
  public ushort ChannelId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResInterStageFieldEnter> CreateResInterStageFieldEnter(FlatBufferBuilder builder,
      uint stage_tid = 0,
      StringOffset join_addrOffset = default(StringOffset),
      ushort channel_id = 0) {
    builder.StartObject(3);
    ResInterStageFieldEnter.AddJoinAddr(builder, join_addrOffset);
    ResInterStageFieldEnter.AddStageTid(builder, stage_tid);
    ResInterStageFieldEnter.AddChannelId(builder, channel_id);
    return ResInterStageFieldEnter.EndResInterStageFieldEnter(builder);
  }

  public static void StartResInterStageFieldEnter(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddStageTid(FlatBufferBuilder builder, uint stageTid) { builder.AddUint(0, stageTid, 0); }
  public static void AddJoinAddr(FlatBufferBuilder builder, StringOffset joinAddrOffset) { builder.AddOffset(1, joinAddrOffset.Value, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, ushort channelId) { builder.AddUshort(2, channelId, 0); }
  public static Offset<ResInterStageFieldEnter> EndResInterStageFieldEnter(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInterStageFieldEnter>(o);
  }
};

public struct ReqStorageItemList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqStorageItemList GetRootAsReqStorageItemList(ByteBuffer _bb) { return GetRootAsReqStorageItemList(_bb, new ReqStorageItemList()); }
  public static ReqStorageItemList GetRootAsReqStorageItemList(ByteBuffer _bb, ReqStorageItemList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqStorageItemList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqStorageItemList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqStorageItemList> EndReqStorageItemList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqStorageItemList>(o);
  }
};

public struct ResStorageItemList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResStorageItemList GetRootAsResStorageItemList(ByteBuffer _bb) { return GetRootAsResStorageItemList(_bb, new ResStorageItemList()); }
  public static ResStorageItemList GetRootAsResStorageItemList(ByteBuffer _bb, ResStorageItemList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResStorageItemList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? EquipItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? StackItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResStorageItemList> CreateResStorageItemList(FlatBufferBuilder builder,
      VectorOffset equip_itemsOffset = default(VectorOffset),
      VectorOffset stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResStorageItemList.AddStackItems(builder, stack_itemsOffset);
    ResStorageItemList.AddEquipItems(builder, equip_itemsOffset);
    return ResStorageItemList.EndResStorageItemList(builder);
  }

  public static void StartResStorageItemList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddEquipItems(FlatBufferBuilder builder, VectorOffset equipItemsOffset) { builder.AddOffset(0, equipItemsOffset.Value, 0); }
  public static VectorOffset CreateEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStackItems(FlatBufferBuilder builder, VectorOffset stackItemsOffset) { builder.AddOffset(1, stackItemsOffset.Value, 0); }
  public static VectorOffset CreateStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResStorageItemList> EndResStorageItemList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResStorageItemList>(o);
  }
};

public struct ReqStorageItemPut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqStorageItemPut GetRootAsReqStorageItemPut(ByteBuffer _bb) { return GetRootAsReqStorageItemPut(_bb, new ReqStorageItemPut()); }
  public static ReqStorageItemPut GetRootAsReqStorageItemPut(ByteBuffer _bb, ReqStorageItemPut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqStorageItemPut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? PutEquipItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PutEquipItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? PutStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PutStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqStorageItemPut> CreateReqStorageItemPut(FlatBufferBuilder builder,
      VectorOffset put_equip_itemsOffset = default(VectorOffset),
      VectorOffset put_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqStorageItemPut.AddPutStackItems(builder, put_stack_itemsOffset);
    ReqStorageItemPut.AddPutEquipItems(builder, put_equip_itemsOffset);
    return ReqStorageItemPut.EndReqStorageItemPut(builder);
  }

  public static void StartReqStorageItemPut(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPutEquipItems(FlatBufferBuilder builder, VectorOffset putEquipItemsOffset) { builder.AddOffset(0, putEquipItemsOffset.Value, 0); }
  public static VectorOffset CreatePutEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePutEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPutEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPutStackItems(FlatBufferBuilder builder, VectorOffset putStackItemsOffset) { builder.AddOffset(1, putStackItemsOffset.Value, 0); }
  public static VectorOffset CreatePutStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePutStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPutStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqStorageItemPut> EndReqStorageItemPut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqStorageItemPut>(o);
  }
};

public struct ResStorageItemPut : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResStorageItemPut GetRootAsResStorageItemPut(ByteBuffer _bb) { return GetRootAsResStorageItemPut(_bb, new ResStorageItemPut()); }
  public static ResStorageItemPut GetRootAsResStorageItemPut(ByteBuffer _bb, ResStorageItemPut obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResStorageItemPut __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? EntrustEquips(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntrustEquipsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? EntrustStacks(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntrustStacksLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? RemainStorageStacks(int j) { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainStorageStacksLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? RemainStacks(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainStacksLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResStorageItemPut> CreateResStorageItemPut(FlatBufferBuilder builder,
      VectorOffset entrust_equipsOffset = default(VectorOffset),
      VectorOffset entrust_stacksOffset = default(VectorOffset),
      VectorOffset remain_storage_stacksOffset = default(VectorOffset),
      VectorOffset remain_stacksOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ResStorageItemPut.AddRemainStacks(builder, remain_stacksOffset);
    ResStorageItemPut.AddRemainStorageStacks(builder, remain_storage_stacksOffset);
    ResStorageItemPut.AddEntrustStacks(builder, entrust_stacksOffset);
    ResStorageItemPut.AddEntrustEquips(builder, entrust_equipsOffset);
    return ResStorageItemPut.EndResStorageItemPut(builder);
  }

  public static void StartResStorageItemPut(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddEntrustEquips(FlatBufferBuilder builder, VectorOffset entrustEquipsOffset) { builder.AddOffset(0, entrustEquipsOffset.Value, 0); }
  public static VectorOffset CreateEntrustEquipsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntrustEquipsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntrustEquipsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEntrustStacks(FlatBufferBuilder builder, VectorOffset entrustStacksOffset) { builder.AddOffset(1, entrustStacksOffset.Value, 0); }
  public static VectorOffset CreateEntrustStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntrustStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntrustStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainStorageStacks(FlatBufferBuilder builder, VectorOffset remainStorageStacksOffset) { builder.AddOffset(2, remainStorageStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainStorageStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainStorageStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainStorageStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainStacks(FlatBufferBuilder builder, VectorOffset remainStacksOffset) { builder.AddOffset(3, remainStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResStorageItemPut> EndResStorageItemPut(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResStorageItemPut>(o);
  }
};

public struct ReqStorageItemGet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqStorageItemGet GetRootAsReqStorageItemGet(ByteBuffer _bb) { return GetRootAsReqStorageItemGet(_bb, new ReqStorageItemGet()); }
  public static ReqStorageItemGet GetRootAsReqStorageItemGet(ByteBuffer _bb, ReqStorageItemGet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqStorageItemGet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? GetEquipItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetEquipItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? GetStackItems(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetStackItemsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqStorageItemGet> CreateReqStorageItemGet(FlatBufferBuilder builder,
      VectorOffset get_equip_itemsOffset = default(VectorOffset),
      VectorOffset get_stack_itemsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqStorageItemGet.AddGetStackItems(builder, get_stack_itemsOffset);
    ReqStorageItemGet.AddGetEquipItems(builder, get_equip_itemsOffset);
    return ReqStorageItemGet.EndReqStorageItemGet(builder);
  }

  public static void StartReqStorageItemGet(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGetEquipItems(FlatBufferBuilder builder, VectorOffset getEquipItemsOffset) { builder.AddOffset(0, getEquipItemsOffset.Value, 0); }
  public static VectorOffset CreateGetEquipItemsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetEquipItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetEquipItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetStackItems(FlatBufferBuilder builder, VectorOffset getStackItemsOffset) { builder.AddOffset(1, getStackItemsOffset.Value, 0); }
  public static VectorOffset CreateGetStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqStorageItemGet> EndReqStorageItemGet(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqStorageItemGet>(o);
  }
};

public struct ResStorageItemGet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResStorageItemGet GetRootAsResStorageItemGet(ByteBuffer _bb) { return GetRootAsResStorageItemGet(_bb, new ResStorageItemGet()); }
  public static ResStorageItemGet GetRootAsResStorageItemGet(ByteBuffer _bb, ResStorageItemGet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResStorageItemGet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemEquipment? GetEquips(int j) { int o = __p.__offset(4); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetEquipsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? GetStacks(int j) { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GetStacksLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? NewEquips(int j) { int o = __p.__offset(8); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int NewEquipsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? RemainStacks(int j) { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainStacksLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? RemainStorageStacks(int j) { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainStorageStacksLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? RemainAccountStacks(int j) { int o = __p.__offset(14); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RemainAccountStacksLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResStorageItemGet> CreateResStorageItemGet(FlatBufferBuilder builder,
      VectorOffset get_equipsOffset = default(VectorOffset),
      VectorOffset get_stacksOffset = default(VectorOffset),
      VectorOffset new_equipsOffset = default(VectorOffset),
      VectorOffset remain_stacksOffset = default(VectorOffset),
      VectorOffset remain_storage_stacksOffset = default(VectorOffset),
      VectorOffset remain_account_stacksOffset = default(VectorOffset)) {
    builder.StartObject(6);
    ResStorageItemGet.AddRemainAccountStacks(builder, remain_account_stacksOffset);
    ResStorageItemGet.AddRemainStorageStacks(builder, remain_storage_stacksOffset);
    ResStorageItemGet.AddRemainStacks(builder, remain_stacksOffset);
    ResStorageItemGet.AddNewEquips(builder, new_equipsOffset);
    ResStorageItemGet.AddGetStacks(builder, get_stacksOffset);
    ResStorageItemGet.AddGetEquips(builder, get_equipsOffset);
    return ResStorageItemGet.EndResStorageItemGet(builder);
  }

  public static void StartResStorageItemGet(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddGetEquips(FlatBufferBuilder builder, VectorOffset getEquipsOffset) { builder.AddOffset(0, getEquipsOffset.Value, 0); }
  public static VectorOffset CreateGetEquipsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetEquipsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetEquipsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGetStacks(FlatBufferBuilder builder, VectorOffset getStacksOffset) { builder.AddOffset(1, getStacksOffset.Value, 0); }
  public static VectorOffset CreateGetStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGetStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGetStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddNewEquips(FlatBufferBuilder builder, VectorOffset newEquipsOffset) { builder.AddOffset(2, newEquipsOffset.Value, 0); }
  public static VectorOffset CreateNewEquipsVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateNewEquipsVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartNewEquipsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainStacks(FlatBufferBuilder builder, VectorOffset remainStacksOffset) { builder.AddOffset(3, remainStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainStorageStacks(FlatBufferBuilder builder, VectorOffset remainStorageStacksOffset) { builder.AddOffset(4, remainStorageStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainStorageStacksVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainStorageStacksVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainStorageStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRemainAccountStacks(FlatBufferBuilder builder, VectorOffset remainAccountStacksOffset) { builder.AddOffset(5, remainAccountStacksOffset.Value, 0); }
  public static VectorOffset CreateRemainAccountStacksVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRemainAccountStacksVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRemainAccountStacksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResStorageItemGet> EndResStorageItemGet(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResStorageItemGet>(o);
  }
};

public struct ReqHackUser : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqHackUser GetRootAsReqHackUser(ByteBuffer _bb) { return GetRootAsReqHackUser(_bb, new ReqHackUser()); }
  public static ReqHackUser GetRootAsReqHackUser(ByteBuffer _bb, ReqHackUser obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqHackUser __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_HACK_CATEGORY Category { get { int o = __p.__offset(4); return o != 0 ? (E_HACK_CATEGORY)__p.bb.Get(o + __p.bb_pos) : E_HACK_CATEGORY.Speed; } }
  public string Value { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetValueBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetValueArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqHackUser> CreateReqHackUser(FlatBufferBuilder builder,
      E_HACK_CATEGORY category = E_HACK_CATEGORY.Speed,
      StringOffset valueOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqHackUser.AddValue(builder, valueOffset);
    ReqHackUser.AddCategory(builder, category);
    return ReqHackUser.EndReqHackUser(builder);
  }

  public static void StartReqHackUser(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCategory(FlatBufferBuilder builder, E_HACK_CATEGORY category) { builder.AddByte(0, (byte)category, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<ReqHackUser> EndReqHackUser(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqHackUser>(o);
  }
};

public struct ResHackUser : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResHackUser GetRootAsResHackUser(ByteBuffer _bb) { return GetRootAsResHackUser(_bb, new ResHackUser()); }
  public static ResHackUser GetRootAsResHackUser(ByteBuffer _bb, ResHackUser obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResHackUser __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResHackUser(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResHackUser> EndResHackUser(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResHackUser>(o);
  }
};

public struct ReqTradeSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeSell GetRootAsReqTradeSell(ByteBuffer _bb) { return GetRootAsReqTradeSell(_bb, new ReqTradeSell()); }
  public static ReqTradeSell GetRootAsReqTradeSell(ByteBuffer _bb, ReqTradeSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SellItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SellItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemTotalPrice { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string SellPassword { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSellPasswordBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetSellPasswordBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetSellPasswordArray() { return __p.__vector_as_array<byte>(12); }
  public uint BuyServerIdx { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string BuyCharNick { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuyCharNickBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetBuyCharNickBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetBuyCharNickArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<ReqTradeSell> CreateReqTradeSell(FlatBufferBuilder builder,
      ulong sell_item_id = 0,
      uint sell_item_tid = 0,
      uint sell_item_cnt = 0,
      uint sell_item_total_price = 0,
      StringOffset sell_passwordOffset = default(StringOffset),
      uint buy_server_idx = 0,
      StringOffset buy_char_nickOffset = default(StringOffset)) {
    builder.StartObject(7);
    ReqTradeSell.AddSellItemId(builder, sell_item_id);
    ReqTradeSell.AddBuyCharNick(builder, buy_char_nickOffset);
    ReqTradeSell.AddBuyServerIdx(builder, buy_server_idx);
    ReqTradeSell.AddSellPassword(builder, sell_passwordOffset);
    ReqTradeSell.AddSellItemTotalPrice(builder, sell_item_total_price);
    ReqTradeSell.AddSellItemCnt(builder, sell_item_cnt);
    ReqTradeSell.AddSellItemTid(builder, sell_item_tid);
    return ReqTradeSell.EndReqTradeSell(builder);
  }

  public static void StartReqTradeSell(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddSellItemId(FlatBufferBuilder builder, ulong sellItemId) { builder.AddUlong(0, sellItemId, 0); }
  public static void AddSellItemTid(FlatBufferBuilder builder, uint sellItemTid) { builder.AddUint(1, sellItemTid, 0); }
  public static void AddSellItemCnt(FlatBufferBuilder builder, uint sellItemCnt) { builder.AddUint(2, sellItemCnt, 0); }
  public static void AddSellItemTotalPrice(FlatBufferBuilder builder, uint sellItemTotalPrice) { builder.AddUint(3, sellItemTotalPrice, 0); }
  public static void AddSellPassword(FlatBufferBuilder builder, StringOffset sellPasswordOffset) { builder.AddOffset(4, sellPasswordOffset.Value, 0); }
  public static void AddBuyServerIdx(FlatBufferBuilder builder, uint buyServerIdx) { builder.AddUint(5, buyServerIdx, 0); }
  public static void AddBuyCharNick(FlatBufferBuilder builder, StringOffset buyCharNickOffset) { builder.AddOffset(6, buyCharNickOffset.Value, 0); }
  public static Offset<ReqTradeSell> EndReqTradeSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeSell>(o);
  }
};

public struct ResTradeSell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeSell GetRootAsResTradeSell(ByteBuffer _bb) { return GetRootAsResTradeSell(_bb, new ResTradeSell()); }
  public static ResTradeSell GetRootAsResTradeSell(ByteBuffer _bb, ResTradeSell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeSell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong SellItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint SellItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SellItemCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(10); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ulong BuyCharId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string BuyCharNick { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuyCharNickBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetBuyCharNickBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetBuyCharNickArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<ResTradeSell> CreateResTradeSell(FlatBufferBuilder builder,
      ulong sell_item_id = 0,
      uint sell_item_tid = 0,
      uint sell_item_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>),
      ulong buy_char_id = 0,
      StringOffset buy_char_nickOffset = default(StringOffset)) {
    builder.StartObject(7);
    ResTradeSell.AddBuyCharId(builder, buy_char_id);
    ResTradeSell.AddSellItemId(builder, sell_item_id);
    ResTradeSell.AddBuyCharNick(builder, buy_char_nickOffset);
    ResTradeSell.AddResultStackItem(builder, result_stack_itemOffset);
    ResTradeSell.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResTradeSell.AddSellItemCnt(builder, sell_item_cnt);
    ResTradeSell.AddSellItemTid(builder, sell_item_tid);
    return ResTradeSell.EndResTradeSell(builder);
  }

  public static void StartResTradeSell(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddSellItemId(FlatBufferBuilder builder, ulong sellItemId) { builder.AddUlong(0, sellItemId, 0); }
  public static void AddSellItemTid(FlatBufferBuilder builder, uint sellItemTid) { builder.AddUint(1, sellItemTid, 0); }
  public static void AddSellItemCnt(FlatBufferBuilder builder, uint sellItemCnt) { builder.AddUint(2, sellItemCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(3, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(4, resultStackItemOffset.Value, 0); }
  public static void AddBuyCharId(FlatBufferBuilder builder, ulong buyCharId) { builder.AddUlong(5, buyCharId, 0); }
  public static void AddBuyCharNick(FlatBufferBuilder builder, StringOffset buyCharNickOffset) { builder.AddOffset(6, buyCharNickOffset.Value, 0); }
  public static Offset<ResTradeSell> EndResTradeSell(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeSell>(o);
  }
};

public struct ReqTradeBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeBuy GetRootAsReqTradeBuy(ByteBuffer _bb) { return GetRootAsReqTradeBuy(_bb, new ReqTradeBuy()); }
  public static ReqTradeBuy GetRootAsReqTradeBuy(ByteBuffer _bb, ReqTradeBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TradeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong BuyItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint BuyItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string BuyItemPassword { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuyItemPasswordBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetBuyItemPasswordBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetBuyItemPasswordArray() { return __p.__vector_as_array<byte>(10); }
  public E_MarketType MarketType { get { int o = __p.__offset(12); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }

  public static Offset<ReqTradeBuy> CreateReqTradeBuy(FlatBufferBuilder builder,
      ulong trade_id = 0,
      ulong buy_item_id = 0,
      uint buy_item_tid = 0,
      StringOffset buy_item_passwordOffset = default(StringOffset),
      E_MarketType market_type = E_MarketType.None) {
    builder.StartObject(5);
    ReqTradeBuy.AddBuyItemId(builder, buy_item_id);
    ReqTradeBuy.AddTradeId(builder, trade_id);
    ReqTradeBuy.AddBuyItemPassword(builder, buy_item_passwordOffset);
    ReqTradeBuy.AddBuyItemTid(builder, buy_item_tid);
    ReqTradeBuy.AddMarketType(builder, market_type);
    return ReqTradeBuy.EndReqTradeBuy(builder);
  }

  public static void StartReqTradeBuy(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddTradeId(FlatBufferBuilder builder, ulong tradeId) { builder.AddUlong(0, tradeId, 0); }
  public static void AddBuyItemId(FlatBufferBuilder builder, ulong buyItemId) { builder.AddUlong(1, buyItemId, 0); }
  public static void AddBuyItemTid(FlatBufferBuilder builder, uint buyItemTid) { builder.AddUint(2, buyItemTid, 0); }
  public static void AddBuyItemPassword(FlatBufferBuilder builder, StringOffset buyItemPasswordOffset) { builder.AddOffset(3, buyItemPasswordOffset.Value, 0); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(4, (byte)marketType, 0); }
  public static Offset<ReqTradeBuy> EndReqTradeBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeBuy>(o);
  }
};

public struct ResTradeBuy : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeBuy GetRootAsResTradeBuy(ByteBuffer _bb) { return GetRootAsResTradeBuy(_bb, new ResTradeBuy()); }
  public static ResTradeBuy GetRootAsResTradeBuy(ByteBuffer _bb, ResTradeBuy obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeBuy __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint BuyItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint BuyItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemEquipment? ResultEquipItem { get { int o = __p.__offset(10); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(12); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResTradeBuy> CreateResTradeBuy(FlatBufferBuilder builder,
      uint buy_item_tid = 0,
      uint buy_item_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemEquipment> result_equip_itemOffset = default(Offset<ItemEquipment>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>),
      int result_cash_coin_balance = 0) {
    builder.StartObject(6);
    ResTradeBuy.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResTradeBuy.AddResultStackItem(builder, result_stack_itemOffset);
    ResTradeBuy.AddResultEquipItem(builder, result_equip_itemOffset);
    ResTradeBuy.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResTradeBuy.AddBuyItemCnt(builder, buy_item_cnt);
    ResTradeBuy.AddBuyItemTid(builder, buy_item_tid);
    return ResTradeBuy.EndResTradeBuy(builder);
  }

  public static void StartResTradeBuy(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddBuyItemTid(FlatBufferBuilder builder, uint buyItemTid) { builder.AddUint(0, buyItemTid, 0); }
  public static void AddBuyItemCnt(FlatBufferBuilder builder, uint buyItemCnt) { builder.AddUint(1, buyItemCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(2, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultEquipItem(FlatBufferBuilder builder, Offset<ItemEquipment> resultEquipItemOffset) { builder.AddOffset(3, resultEquipItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(4, resultStackItemOffset.Value, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(5, resultCashCoinBalance, 0); }
  public static Offset<ResTradeBuy> EndResTradeBuy(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeBuy>(o);
  }
};

public struct ReqTradeWithDraw : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeWithDraw GetRootAsReqTradeWithDraw(ByteBuffer _bb) { return GetRootAsReqTradeWithDraw(_bb, new ReqTradeWithDraw()); }
  public static ReqTradeWithDraw GetRootAsReqTradeWithDraw(ByteBuffer _bb, ReqTradeWithDraw obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeWithDraw __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TradeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WithdrawItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint WithdrawItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqTradeWithDraw> CreateReqTradeWithDraw(FlatBufferBuilder builder,
      ulong trade_id = 0,
      ulong withdraw_item_id = 0,
      uint withdraw_item_tid = 0) {
    builder.StartObject(3);
    ReqTradeWithDraw.AddWithdrawItemId(builder, withdraw_item_id);
    ReqTradeWithDraw.AddTradeId(builder, trade_id);
    ReqTradeWithDraw.AddWithdrawItemTid(builder, withdraw_item_tid);
    return ReqTradeWithDraw.EndReqTradeWithDraw(builder);
  }

  public static void StartReqTradeWithDraw(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTradeId(FlatBufferBuilder builder, ulong tradeId) { builder.AddUlong(0, tradeId, 0); }
  public static void AddWithdrawItemId(FlatBufferBuilder builder, ulong withdrawItemId) { builder.AddUlong(1, withdrawItemId, 0); }
  public static void AddWithdrawItemTid(FlatBufferBuilder builder, uint withdrawItemTid) { builder.AddUint(2, withdrawItemTid, 0); }
  public static Offset<ReqTradeWithDraw> EndReqTradeWithDraw(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeWithDraw>(o);
  }
};

public struct ResTradeWithDraw : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeWithDraw GetRootAsResTradeWithDraw(ByteBuffer _bb) { return GetRootAsResTradeWithDraw(_bb, new ResTradeWithDraw()); }
  public static ResTradeWithDraw GetRootAsResTradeWithDraw(ByteBuffer _bb, ResTradeWithDraw obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeWithDraw __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint WithdrawItemTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint WithdrawItemCnt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemEquipment? ResultEquipItem { get { int o = __p.__offset(8); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(10); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTradeWithDraw> CreateResTradeWithDraw(FlatBufferBuilder builder,
      uint withdraw_item_tid = 0,
      uint withdraw_item_cnt = 0,
      Offset<ItemEquipment> result_equip_itemOffset = default(Offset<ItemEquipment>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(4);
    ResTradeWithDraw.AddResultStackItem(builder, result_stack_itemOffset);
    ResTradeWithDraw.AddResultEquipItem(builder, result_equip_itemOffset);
    ResTradeWithDraw.AddWithdrawItemCnt(builder, withdraw_item_cnt);
    ResTradeWithDraw.AddWithdrawItemTid(builder, withdraw_item_tid);
    return ResTradeWithDraw.EndResTradeWithDraw(builder);
  }

  public static void StartResTradeWithDraw(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddWithdrawItemTid(FlatBufferBuilder builder, uint withdrawItemTid) { builder.AddUint(0, withdrawItemTid, 0); }
  public static void AddWithdrawItemCnt(FlatBufferBuilder builder, uint withdrawItemCnt) { builder.AddUint(1, withdrawItemCnt, 0); }
  public static void AddResultEquipItem(FlatBufferBuilder builder, Offset<ItemEquipment> resultEquipItemOffset) { builder.AddOffset(2, resultEquipItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(3, resultStackItemOffset.Value, 0); }
  public static Offset<ResTradeWithDraw> EndResTradeWithDraw(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeWithDraw>(o);
  }
};

public struct ReqTradeSellList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeSellList GetRootAsReqTradeSellList(ByteBuffer _bb) { return GetRootAsReqTradeSellList(_bb, new ReqTradeSellList()); }
  public static ReqTradeSellList GetRootAsReqTradeSellList(ByteBuffer _bb, ReqTradeSellList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeSellList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public E_TradeState State { get { int o = __p.__offset(6); return o != 0 ? (E_TradeState)__p.bb.Get(o + __p.bb_pos) : E_TradeState.Sell; } }

  public static Offset<ReqTradeSellList> CreateReqTradeSellList(FlatBufferBuilder builder,
      uint page_index = 0,
      E_TradeState state = E_TradeState.Sell) {
    builder.StartObject(2);
    ReqTradeSellList.AddPageIndex(builder, page_index);
    ReqTradeSellList.AddState(builder, state);
    return ReqTradeSellList.EndReqTradeSellList(builder);
  }

  public static void StartReqTradeSellList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddState(FlatBufferBuilder builder, E_TradeState state) { builder.AddByte(1, (byte)state, 0); }
  public static Offset<ReqTradeSellList> EndReqTradeSellList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeSellList>(o);
  }
};

public struct ResTradeSellList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeSellList GetRootAsResTradeSellList(ByteBuffer _bb) { return GetRootAsResTradeSellList(_bb, new ResTradeSellList()); }
  public static ResTradeSellList GetRootAsResTradeSellList(ByteBuffer _bb, ResTradeSellList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeSellList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PageIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsNextPage { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public TradeItem? SellItems(int j) { int o = __p.__offset(8); return o != 0 ? (TradeItem?)(new TradeItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SellItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResTradeSellList> CreateResTradeSellList(FlatBufferBuilder builder,
      uint page_index = 0,
      bool is_next_page = false,
      VectorOffset sell_itemsOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ResTradeSellList.AddSellItems(builder, sell_itemsOffset);
    ResTradeSellList.AddPageIndex(builder, page_index);
    ResTradeSellList.AddIsNextPage(builder, is_next_page);
    return ResTradeSellList.EndResTradeSellList(builder);
  }

  public static void StartResTradeSellList(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPageIndex(FlatBufferBuilder builder, uint pageIndex) { builder.AddUint(0, pageIndex, 0); }
  public static void AddIsNextPage(FlatBufferBuilder builder, bool isNextPage) { builder.AddBool(1, isNextPage, false); }
  public static void AddSellItems(FlatBufferBuilder builder, VectorOffset sellItemsOffset) { builder.AddOffset(2, sellItemsOffset.Value, 0); }
  public static VectorOffset CreateSellItemsVector(FlatBufferBuilder builder, Offset<TradeItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSellItemsVectorBlock(FlatBufferBuilder builder, Offset<TradeItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSellItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResTradeSellList> EndResTradeSellList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeSellList>(o);
  }
};

public struct ReqTradeBuyList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeBuyList GetRootAsReqTradeBuyList(ByteBuffer _bb) { return GetRootAsReqTradeBuyList(_bb, new ReqTradeBuyList()); }
  public static ReqTradeBuyList GetRootAsReqTradeBuyList(ByteBuffer _bb, ReqTradeBuyList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeBuyList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqTradeBuyList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqTradeBuyList> EndReqTradeBuyList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeBuyList>(o);
  }
};

public struct ResTradeBuyList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeBuyList GetRootAsResTradeBuyList(ByteBuffer _bb) { return GetRootAsResTradeBuyList(_bb, new ResTradeBuyList()); }
  public static ResTradeBuyList GetRootAsResTradeBuyList(ByteBuffer _bb, ResTradeBuyList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeBuyList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TradeItem? BuyItems(int j) { int o = __p.__offset(4); return o != 0 ? (TradeItem?)(new TradeItem()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BuyItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResTradeBuyList> CreateResTradeBuyList(FlatBufferBuilder builder,
      VectorOffset buy_itemsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResTradeBuyList.AddBuyItems(builder, buy_itemsOffset);
    return ResTradeBuyList.EndResTradeBuyList(builder);
  }

  public static void StartResTradeBuyList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBuyItems(FlatBufferBuilder builder, VectorOffset buyItemsOffset) { builder.AddOffset(0, buyItemsOffset.Value, 0); }
  public static VectorOffset CreateBuyItemsVector(FlatBufferBuilder builder, Offset<TradeItem>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBuyItemsVectorBlock(FlatBufferBuilder builder, Offset<TradeItem>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuyItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResTradeBuyList> EndResTradeBuyList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeBuyList>(o);
  }
};

public struct ReqTradeTakeMoney : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqTradeTakeMoney GetRootAsReqTradeTakeMoney(ByteBuffer _bb) { return GetRootAsReqTradeTakeMoney(_bb, new ReqTradeTakeMoney()); }
  public static ReqTradeTakeMoney GetRootAsReqTradeTakeMoney(ByteBuffer _bb, ReqTradeTakeMoney obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqTradeTakeMoney __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TradeIds(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(__p.__vector(o) + j * 8) : (ulong)0; }
  public int TradeIdsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTradeIdsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetTradeIdsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public ulong[] GetTradeIdsArray() { return __p.__vector_as_array<ulong>(4); }

  public static Offset<ReqTradeTakeMoney> CreateReqTradeTakeMoney(FlatBufferBuilder builder,
      VectorOffset trade_idsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqTradeTakeMoney.AddTradeIds(builder, trade_idsOffset);
    return ReqTradeTakeMoney.EndReqTradeTakeMoney(builder);
  }

  public static void StartReqTradeTakeMoney(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTradeIds(FlatBufferBuilder builder, VectorOffset tradeIdsOffset) { builder.AddOffset(0, tradeIdsOffset.Value, 0); }
  public static VectorOffset CreateTradeIdsVector(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddUlong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTradeIdsVectorBlock(FlatBufferBuilder builder, ulong[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartTradeIdsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<ReqTradeTakeMoney> EndReqTradeTakeMoney(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqTradeTakeMoney>(o);
  }
};

public struct ResTradeTakeMoney : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResTradeTakeMoney GetRootAsResTradeTakeMoney(ByteBuffer _bb) { return GetRootAsResTradeTakeMoney(_bb, new ResTradeTakeMoney()); }
  public static ResTradeTakeMoney GetRootAsResTradeTakeMoney(ByteBuffer _bb, ResTradeTakeMoney obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResTradeTakeMoney __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TotalPrice { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TotalTax { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(8); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResTradeTakeMoney> CreateResTradeTakeMoney(FlatBufferBuilder builder,
      uint total_price = 0,
      uint total_tax = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(3);
    ResTradeTakeMoney.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResTradeTakeMoney.AddTotalTax(builder, total_tax);
    ResTradeTakeMoney.AddTotalPrice(builder, total_price);
    return ResTradeTakeMoney.EndResTradeTakeMoney(builder);
  }

  public static void StartResTradeTakeMoney(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTotalPrice(FlatBufferBuilder builder, uint totalPrice) { builder.AddUint(0, totalPrice, 0); }
  public static void AddTotalTax(FlatBufferBuilder builder, uint totalTax) { builder.AddUint(1, totalTax, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(2, resultAccountStackItemOffset.Value, 0); }
  public static Offset<ResTradeTakeMoney> EndResTradeTakeMoney(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResTradeTakeMoney>(o);
  }
};

public struct ReqAccountLogin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAccountLogin GetRootAsReqAccountLogin(ByteBuffer _bb) { return GetRootAsReqAccountLogin(_bb, new ReqAccountLogin()); }
  public static ReqAccountLogin GetRootAsReqAccountLogin(ByteBuffer _bb, ReqAccountLogin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAccountLogin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string DeviceId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeviceIdBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetDeviceIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDeviceIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Version { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVersionBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetVersionBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetVersionArray() { return __p.__vector_as_array<byte>(6); }
  public uint Rkey { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string PfSessionToken { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(10); }
  public string Os { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(12); }
  public string Osv { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsvBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetOsvBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetOsvArray() { return __p.__vector_as_array<byte>(14); }
  public string Dm { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDmBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetDmBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDmArray() { return __p.__vector_as_array<byte>(16); }
  public string Lang { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetLangBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetLangArray() { return __p.__vector_as_array<byte>(18); }
  public string LangGame { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangGameBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetLangGameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetLangGameArray() { return __p.__vector_as_array<byte>(20); }
  public string V { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVBytes() { return __p.__vector_as_span(22); }
#else
  public ArraySegment<byte>? GetVBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetVArray() { return __p.__vector_as_array<byte>(22); }
  public string Sk { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSkBytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetSkBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetSkArray() { return __p.__vector_as_array<byte>(24); }
  public string Platform { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlatformBytes() { return __p.__vector_as_span(26); }
#else
  public ArraySegment<byte>? GetPlatformBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPlatformArray() { return __p.__vector_as_array<byte>(26); }
  public bool OsModulation { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Emulator { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint LoadingTime { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Region { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRegionBytes() { return __p.__vector_as_span(34); }
#else
  public ArraySegment<byte>? GetRegionBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetRegionArray() { return __p.__vector_as_array<byte>(34); }
  public string GpsAdid { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGpsAdidBytes() { return __p.__vector_as_span(36); }
#else
  public ArraySegment<byte>? GetGpsAdidBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetGpsAdidArray() { return __p.__vector_as_array<byte>(36); }
  public string Idfa { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdfaBytes() { return __p.__vector_as_span(38); }
#else
  public ArraySegment<byte>? GetIdfaBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetIdfaArray() { return __p.__vector_as_array<byte>(38); }
  public string Idfv { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdfvBytes() { return __p.__vector_as_span(40); }
#else
  public ArraySegment<byte>? GetIdfvBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetIdfvArray() { return __p.__vector_as_array<byte>(40); }
  public string AdjustId { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAdjustIdBytes() { return __p.__vector_as_span(42); }
#else
  public ArraySegment<byte>? GetAdjustIdBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetAdjustIdArray() { return __p.__vector_as_array<byte>(42); }

  public static Offset<ReqAccountLogin> CreateReqAccountLogin(FlatBufferBuilder builder,
      StringOffset device_idOffset = default(StringOffset),
      StringOffset versionOffset = default(StringOffset),
      uint rkey = 0,
      StringOffset pf_session_tokenOffset = default(StringOffset),
      StringOffset osOffset = default(StringOffset),
      StringOffset osvOffset = default(StringOffset),
      StringOffset dmOffset = default(StringOffset),
      StringOffset langOffset = default(StringOffset),
      StringOffset lang_gameOffset = default(StringOffset),
      StringOffset vOffset = default(StringOffset),
      StringOffset skOffset = default(StringOffset),
      StringOffset platformOffset = default(StringOffset),
      bool os_modulation = false,
      bool emulator = false,
      uint loading_time = 0,
      StringOffset regionOffset = default(StringOffset),
      StringOffset gps_adidOffset = default(StringOffset),
      StringOffset idfaOffset = default(StringOffset),
      StringOffset idfvOffset = default(StringOffset),
      StringOffset adjust_idOffset = default(StringOffset)) {
    builder.StartObject(20);
    ReqAccountLogin.AddAdjustId(builder, adjust_idOffset);
    ReqAccountLogin.AddIdfv(builder, idfvOffset);
    ReqAccountLogin.AddIdfa(builder, idfaOffset);
    ReqAccountLogin.AddGpsAdid(builder, gps_adidOffset);
    ReqAccountLogin.AddRegion(builder, regionOffset);
    ReqAccountLogin.AddLoadingTime(builder, loading_time);
    ReqAccountLogin.AddPlatform(builder, platformOffset);
    ReqAccountLogin.AddSk(builder, skOffset);
    ReqAccountLogin.AddV(builder, vOffset);
    ReqAccountLogin.AddLangGame(builder, lang_gameOffset);
    ReqAccountLogin.AddLang(builder, langOffset);
    ReqAccountLogin.AddDm(builder, dmOffset);
    ReqAccountLogin.AddOsv(builder, osvOffset);
    ReqAccountLogin.AddOs(builder, osOffset);
    ReqAccountLogin.AddPfSessionToken(builder, pf_session_tokenOffset);
    ReqAccountLogin.AddRkey(builder, rkey);
    ReqAccountLogin.AddVersion(builder, versionOffset);
    ReqAccountLogin.AddDeviceId(builder, device_idOffset);
    ReqAccountLogin.AddEmulator(builder, emulator);
    ReqAccountLogin.AddOsModulation(builder, os_modulation);
    return ReqAccountLogin.EndReqAccountLogin(builder);
  }

  public static void StartReqAccountLogin(FlatBufferBuilder builder) { builder.StartObject(20); }
  public static void AddDeviceId(FlatBufferBuilder builder, StringOffset deviceIdOffset) { builder.AddOffset(0, deviceIdOffset.Value, 0); }
  public static void AddVersion(FlatBufferBuilder builder, StringOffset versionOffset) { builder.AddOffset(1, versionOffset.Value, 0); }
  public static void AddRkey(FlatBufferBuilder builder, uint rkey) { builder.AddUint(2, rkey, 0); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(3, pfSessionTokenOffset.Value, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(4, osOffset.Value, 0); }
  public static void AddOsv(FlatBufferBuilder builder, StringOffset osvOffset) { builder.AddOffset(5, osvOffset.Value, 0); }
  public static void AddDm(FlatBufferBuilder builder, StringOffset dmOffset) { builder.AddOffset(6, dmOffset.Value, 0); }
  public static void AddLang(FlatBufferBuilder builder, StringOffset langOffset) { builder.AddOffset(7, langOffset.Value, 0); }
  public static void AddLangGame(FlatBufferBuilder builder, StringOffset langGameOffset) { builder.AddOffset(8, langGameOffset.Value, 0); }
  public static void AddV(FlatBufferBuilder builder, StringOffset vOffset) { builder.AddOffset(9, vOffset.Value, 0); }
  public static void AddSk(FlatBufferBuilder builder, StringOffset skOffset) { builder.AddOffset(10, skOffset.Value, 0); }
  public static void AddPlatform(FlatBufferBuilder builder, StringOffset platformOffset) { builder.AddOffset(11, platformOffset.Value, 0); }
  public static void AddOsModulation(FlatBufferBuilder builder, bool osModulation) { builder.AddBool(12, osModulation, false); }
  public static void AddEmulator(FlatBufferBuilder builder, bool emulator) { builder.AddBool(13, emulator, false); }
  public static void AddLoadingTime(FlatBufferBuilder builder, uint loadingTime) { builder.AddUint(14, loadingTime, 0); }
  public static void AddRegion(FlatBufferBuilder builder, StringOffset regionOffset) { builder.AddOffset(15, regionOffset.Value, 0); }
  public static void AddGpsAdid(FlatBufferBuilder builder, StringOffset gpsAdidOffset) { builder.AddOffset(16, gpsAdidOffset.Value, 0); }
  public static void AddIdfa(FlatBufferBuilder builder, StringOffset idfaOffset) { builder.AddOffset(17, idfaOffset.Value, 0); }
  public static void AddIdfv(FlatBufferBuilder builder, StringOffset idfvOffset) { builder.AddOffset(18, idfvOffset.Value, 0); }
  public static void AddAdjustId(FlatBufferBuilder builder, StringOffset adjustIdOffset) { builder.AddOffset(19, adjustIdOffset.Value, 0); }
  public static Offset<ReqAccountLogin> EndReqAccountLogin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAccountLogin>(o);
  }
};

public struct ResAccountLogin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAccountLogin GetRootAsResAccountLogin(ByteBuffer _bb) { return GetRootAsResAccountLogin(_bb, new ResAccountLogin()); }
  public static ResAccountLogin GetRootAsResAccountLogin(ByteBuffer _bb, ResAccountLogin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAccountLogin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Account? Account { get { int o = __p.__offset(4); return o != 0 ? (Account?)(new Account()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ulong Time { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint Rnd { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint StroageMaxCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CharacterMaxCnt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort AttendRewardSeq { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort AttendContinuityRewardSeq { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong AttendRewardDt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort NormalMsgSendCnt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort GuildMsgSendCnt { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong DailyQuestIssuedDt { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte DailyQuestFastClearCnt { get { int o = __p.__offset(26); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte DailyQuestFastClearMaxCnt { get { int o = __p.__offset(28); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte SpecialSkillMaxCnt { get { int o = __p.__offset(30); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong LoginEventDt { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharLvMax { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ColosseumRewardCnt { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ScenarioDungeonStageTid { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ScenarioDungeonPlayCnt { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonSeq { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonTid { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonLastTid { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint InfinityDungeonRewardStageTid { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong InfinityDungeonRewardDt { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ChangeQuestLv { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChangeQuestExp { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong ChangeQuestIssuedDt { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong RuneStageDropBitOption { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort RuneSellGradeOption { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RuneSellRuneGradeOption { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort ItemBreakGradeOption { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResAccountLogin> CreateResAccountLogin(FlatBufferBuilder builder,
      Offset<Account> accountOffset = default(Offset<Account>),
      ulong time = 0,
      uint rnd = 0,
      uint stroage_max_cnt = 0,
      uint character_max_cnt = 0,
      ushort attend_reward_seq = 0,
      ushort attend_continuity_reward_seq = 0,
      ulong attend_reward_dt = 0,
      ushort normal_msg_send_cnt = 0,
      ushort guild_msg_send_cnt = 0,
      ulong daily_quest_issued_dt = 0,
      byte daily_quest_fast_clear_cnt = 0,
      byte daily_quest_fast_clear_max_cnt = 0,
      byte special_skill_max_cnt = 0,
      ulong login_event_dt = 0,
      uint char_lv_max = 0,
      uint colosseum_reward_cnt = 0,
      uint scenario_dungeon_stage_tid = 0,
      uint scenario_dungeon_play_cnt = 0,
      uint infinity_dungeon_seq = 0,
      uint infinity_dungeon_tid = 0,
      uint infinity_dungeon_last_tid = 0,
      uint infinity_dungeon_reward_stage_tid = 0,
      ulong infinity_dungeon_reward_dt = 0,
      uint change_quest_lv = 0,
      uint change_quest_exp = 0,
      ulong change_quest_issued_dt = 0,
      ulong rune_stage_drop_bit_option = 0,
      ushort rune_sell_grade_option = 0,
      ushort rune_sell_rune_grade_option = 0,
      ushort item_break_grade_option = 0) {
    builder.StartObject(31);
    ResAccountLogin.AddRuneStageDropBitOption(builder, rune_stage_drop_bit_option);
    ResAccountLogin.AddChangeQuestIssuedDt(builder, change_quest_issued_dt);
    ResAccountLogin.AddInfinityDungeonRewardDt(builder, infinity_dungeon_reward_dt);
    ResAccountLogin.AddLoginEventDt(builder, login_event_dt);
    ResAccountLogin.AddDailyQuestIssuedDt(builder, daily_quest_issued_dt);
    ResAccountLogin.AddAttendRewardDt(builder, attend_reward_dt);
    ResAccountLogin.AddTime(builder, time);
    ResAccountLogin.AddChangeQuestExp(builder, change_quest_exp);
    ResAccountLogin.AddChangeQuestLv(builder, change_quest_lv);
    ResAccountLogin.AddInfinityDungeonRewardStageTid(builder, infinity_dungeon_reward_stage_tid);
    ResAccountLogin.AddInfinityDungeonLastTid(builder, infinity_dungeon_last_tid);
    ResAccountLogin.AddInfinityDungeonTid(builder, infinity_dungeon_tid);
    ResAccountLogin.AddInfinityDungeonSeq(builder, infinity_dungeon_seq);
    ResAccountLogin.AddScenarioDungeonPlayCnt(builder, scenario_dungeon_play_cnt);
    ResAccountLogin.AddScenarioDungeonStageTid(builder, scenario_dungeon_stage_tid);
    ResAccountLogin.AddColosseumRewardCnt(builder, colosseum_reward_cnt);
    ResAccountLogin.AddCharLvMax(builder, char_lv_max);
    ResAccountLogin.AddCharacterMaxCnt(builder, character_max_cnt);
    ResAccountLogin.AddStroageMaxCnt(builder, stroage_max_cnt);
    ResAccountLogin.AddRnd(builder, rnd);
    ResAccountLogin.AddAccount(builder, accountOffset);
    ResAccountLogin.AddItemBreakGradeOption(builder, item_break_grade_option);
    ResAccountLogin.AddRuneSellRuneGradeOption(builder, rune_sell_rune_grade_option);
    ResAccountLogin.AddRuneSellGradeOption(builder, rune_sell_grade_option);
    ResAccountLogin.AddGuildMsgSendCnt(builder, guild_msg_send_cnt);
    ResAccountLogin.AddNormalMsgSendCnt(builder, normal_msg_send_cnt);
    ResAccountLogin.AddAttendContinuityRewardSeq(builder, attend_continuity_reward_seq);
    ResAccountLogin.AddAttendRewardSeq(builder, attend_reward_seq);
    ResAccountLogin.AddSpecialSkillMaxCnt(builder, special_skill_max_cnt);
    ResAccountLogin.AddDailyQuestFastClearMaxCnt(builder, daily_quest_fast_clear_max_cnt);
    ResAccountLogin.AddDailyQuestFastClearCnt(builder, daily_quest_fast_clear_cnt);
    return ResAccountLogin.EndResAccountLogin(builder);
  }

  public static void StartResAccountLogin(FlatBufferBuilder builder) { builder.StartObject(31); }
  public static void AddAccount(FlatBufferBuilder builder, Offset<Account> accountOffset) { builder.AddOffset(0, accountOffset.Value, 0); }
  public static void AddTime(FlatBufferBuilder builder, ulong time) { builder.AddUlong(1, time, 0); }
  public static void AddRnd(FlatBufferBuilder builder, uint rnd) { builder.AddUint(2, rnd, 0); }
  public static void AddStroageMaxCnt(FlatBufferBuilder builder, uint stroageMaxCnt) { builder.AddUint(3, stroageMaxCnt, 0); }
  public static void AddCharacterMaxCnt(FlatBufferBuilder builder, uint characterMaxCnt) { builder.AddUint(4, characterMaxCnt, 0); }
  public static void AddAttendRewardSeq(FlatBufferBuilder builder, ushort attendRewardSeq) { builder.AddUshort(5, attendRewardSeq, 0); }
  public static void AddAttendContinuityRewardSeq(FlatBufferBuilder builder, ushort attendContinuityRewardSeq) { builder.AddUshort(6, attendContinuityRewardSeq, 0); }
  public static void AddAttendRewardDt(FlatBufferBuilder builder, ulong attendRewardDt) { builder.AddUlong(7, attendRewardDt, 0); }
  public static void AddNormalMsgSendCnt(FlatBufferBuilder builder, ushort normalMsgSendCnt) { builder.AddUshort(8, normalMsgSendCnt, 0); }
  public static void AddGuildMsgSendCnt(FlatBufferBuilder builder, ushort guildMsgSendCnt) { builder.AddUshort(9, guildMsgSendCnt, 0); }
  public static void AddDailyQuestIssuedDt(FlatBufferBuilder builder, ulong dailyQuestIssuedDt) { builder.AddUlong(10, dailyQuestIssuedDt, 0); }
  public static void AddDailyQuestFastClearCnt(FlatBufferBuilder builder, byte dailyQuestFastClearCnt) { builder.AddByte(11, dailyQuestFastClearCnt, 0); }
  public static void AddDailyQuestFastClearMaxCnt(FlatBufferBuilder builder, byte dailyQuestFastClearMaxCnt) { builder.AddByte(12, dailyQuestFastClearMaxCnt, 0); }
  public static void AddSpecialSkillMaxCnt(FlatBufferBuilder builder, byte specialSkillMaxCnt) { builder.AddByte(13, specialSkillMaxCnt, 0); }
  public static void AddLoginEventDt(FlatBufferBuilder builder, ulong loginEventDt) { builder.AddUlong(14, loginEventDt, 0); }
  public static void AddCharLvMax(FlatBufferBuilder builder, uint charLvMax) { builder.AddUint(15, charLvMax, 0); }
  public static void AddColosseumRewardCnt(FlatBufferBuilder builder, uint colosseumRewardCnt) { builder.AddUint(16, colosseumRewardCnt, 0); }
  public static void AddScenarioDungeonStageTid(FlatBufferBuilder builder, uint scenarioDungeonStageTid) { builder.AddUint(17, scenarioDungeonStageTid, 0); }
  public static void AddScenarioDungeonPlayCnt(FlatBufferBuilder builder, uint scenarioDungeonPlayCnt) { builder.AddUint(18, scenarioDungeonPlayCnt, 0); }
  public static void AddInfinityDungeonSeq(FlatBufferBuilder builder, uint infinityDungeonSeq) { builder.AddUint(19, infinityDungeonSeq, 0); }
  public static void AddInfinityDungeonTid(FlatBufferBuilder builder, uint infinityDungeonTid) { builder.AddUint(20, infinityDungeonTid, 0); }
  public static void AddInfinityDungeonLastTid(FlatBufferBuilder builder, uint infinityDungeonLastTid) { builder.AddUint(21, infinityDungeonLastTid, 0); }
  public static void AddInfinityDungeonRewardStageTid(FlatBufferBuilder builder, uint infinityDungeonRewardStageTid) { builder.AddUint(22, infinityDungeonRewardStageTid, 0); }
  public static void AddInfinityDungeonRewardDt(FlatBufferBuilder builder, ulong infinityDungeonRewardDt) { builder.AddUlong(23, infinityDungeonRewardDt, 0); }
  public static void AddChangeQuestLv(FlatBufferBuilder builder, uint changeQuestLv) { builder.AddUint(24, changeQuestLv, 0); }
  public static void AddChangeQuestExp(FlatBufferBuilder builder, uint changeQuestExp) { builder.AddUint(25, changeQuestExp, 0); }
  public static void AddChangeQuestIssuedDt(FlatBufferBuilder builder, ulong changeQuestIssuedDt) { builder.AddUlong(26, changeQuestIssuedDt, 0); }
  public static void AddRuneStageDropBitOption(FlatBufferBuilder builder, ulong runeStageDropBitOption) { builder.AddUlong(27, runeStageDropBitOption, 0); }
  public static void AddRuneSellGradeOption(FlatBufferBuilder builder, ushort runeSellGradeOption) { builder.AddUshort(28, runeSellGradeOption, 0); }
  public static void AddRuneSellRuneGradeOption(FlatBufferBuilder builder, ushort runeSellRuneGradeOption) { builder.AddUshort(29, runeSellRuneGradeOption, 0); }
  public static void AddItemBreakGradeOption(FlatBufferBuilder builder, ushort itemBreakGradeOption) { builder.AddUshort(30, itemBreakGradeOption, 0); }
  public static Offset<ResAccountLogin> EndResAccountLogin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAccountLogin>(o);
  }
};

public struct ReqAccountLeave : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAccountLeave GetRootAsReqAccountLeave(ByteBuffer _bb) { return GetRootAsReqAccountLeave(_bb, new ReqAccountLeave()); }
  public static ReqAccountLeave GetRootAsReqAccountLeave(ByteBuffer _bb, ReqAccountLeave obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAccountLeave __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Nid { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNidBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetNidBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNidArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqAccountLeave> CreateReqAccountLeave(FlatBufferBuilder builder,
      StringOffset nidOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqAccountLeave.AddNid(builder, nidOffset);
    return ReqAccountLeave.EndReqAccountLeave(builder);
  }

  public static void StartReqAccountLeave(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddNid(FlatBufferBuilder builder, StringOffset nidOffset) { builder.AddOffset(0, nidOffset.Value, 0); }
  public static Offset<ReqAccountLeave> EndReqAccountLeave(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAccountLeave>(o);
  }
};

public struct ResAccountLeave : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAccountLeave GetRootAsResAccountLeave(ByteBuffer _bb) { return GetRootAsResAccountLeave(_bb, new ResAccountLeave()); }
  public static ResAccountLeave GetRootAsResAccountLeave(ByteBuffer _bb, ResAccountLeave obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAccountLeave __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResAccountLeave(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResAccountLeave> EndResAccountLeave(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAccountLeave>(o);
  }
};

public struct ReqCharCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharCreate GetRootAsReqCharCreate(ByteBuffer _bb) { return GetRootAsReqCharCreate(_bb, new ReqCharCreate()); }
  public static ReqCharCreate GetRootAsReqCharCreate(ByteBuffer _bb, ReqCharCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CharTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Nickname { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNicknameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNicknameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqCharCreate> CreateReqCharCreate(FlatBufferBuilder builder,
      uint char_tid = 0,
      StringOffset nicknameOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqCharCreate.AddNickname(builder, nicknameOffset);
    ReqCharCreate.AddCharTid(builder, char_tid);
    return ReqCharCreate.EndReqCharCreate(builder);
  }

  public static void StartReqCharCreate(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(0, charTid, 0); }
  public static void AddNickname(FlatBufferBuilder builder, StringOffset nicknameOffset) { builder.AddOffset(1, nicknameOffset.Value, 0); }
  public static Offset<ReqCharCreate> EndReqCharCreate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharCreate>(o);
  }
};

public struct ResCharCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharCreate GetRootAsResCharCreate(ByteBuffer _bb) { return GetRootAsResCharCreate(_bb, new ResCharCreate()); }
  public static ResCharCreate GetRootAsResCharCreate(ByteBuffer _bb, ResCharCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResCharCreate> CreateResCharCreate(FlatBufferBuilder builder,
      ulong char_id = 0,
      uint char_tid = 0) {
    builder.StartObject(2);
    ResCharCreate.AddCharId(builder, char_id);
    ResCharCreate.AddCharTid(builder, char_tid);
    return ResCharCreate.EndResCharCreate(builder);
  }

  public static void StartResCharCreate(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(1, charTid, 0); }
  public static Offset<ResCharCreate> EndResCharCreate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharCreate>(o);
  }
};

public struct ReqCharDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharDelete GetRootAsReqCharDelete(ByteBuffer _bb) { return GetRootAsReqCharDelete(_bb, new ReqCharDelete()); }
  public static ReqCharDelete GetRootAsReqCharDelete(ByteBuffer _bb, ReqCharDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool IsForce { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ReqCharDelete> CreateReqCharDelete(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0,
      bool is_force = false) {
    builder.StartObject(3);
    ReqCharDelete.AddCharId(builder, char_id);
    ReqCharDelete.AddUserId(builder, user_id);
    ReqCharDelete.AddIsForce(builder, is_force);
    return ReqCharDelete.EndReqCharDelete(builder);
  }

  public static void StartReqCharDelete(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static void AddIsForce(FlatBufferBuilder builder, bool isForce) { builder.AddBool(2, isForce, false); }
  public static Offset<ReqCharDelete> EndReqCharDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharDelete>(o);
  }
};

public struct ResCharDelete : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharDelete GetRootAsResCharDelete(ByteBuffer _bb) { return GetRootAsResCharDelete(_bb, new ResCharDelete()); }
  public static ResCharDelete GetRootAsResCharDelete(ByteBuffer _bb, ResCharDelete obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharDelete __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong DeleteDt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResCharDelete> CreateResCharDelete(FlatBufferBuilder builder,
      ulong delete_dt = 0) {
    builder.StartObject(1);
    ResCharDelete.AddDeleteDt(builder, delete_dt);
    return ResCharDelete.EndResCharDelete(builder);
  }

  public static void StartResCharDelete(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDeleteDt(FlatBufferBuilder builder, ulong deleteDt) { builder.AddUlong(0, deleteDt, 0); }
  public static Offset<ResCharDelete> EndResCharDelete(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharDelete>(o);
  }
};

public struct ReqCharDeleteRollBack : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharDeleteRollBack GetRootAsReqCharDeleteRollBack(ByteBuffer _bb) { return GetRootAsReqCharDeleteRollBack(_bb, new ReqCharDeleteRollBack()); }
  public static ReqCharDeleteRollBack GetRootAsReqCharDeleteRollBack(ByteBuffer _bb, ReqCharDeleteRollBack obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharDeleteRollBack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong CharId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqCharDeleteRollBack> CreateReqCharDeleteRollBack(FlatBufferBuilder builder,
      ulong user_id = 0,
      ulong char_id = 0) {
    builder.StartObject(2);
    ReqCharDeleteRollBack.AddCharId(builder, char_id);
    ReqCharDeleteRollBack.AddUserId(builder, user_id);
    return ReqCharDeleteRollBack.EndReqCharDeleteRollBack(builder);
  }

  public static void StartReqCharDeleteRollBack(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(1, charId, 0); }
  public static Offset<ReqCharDeleteRollBack> EndReqCharDeleteRollBack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharDeleteRollBack>(o);
  }
};

public struct ResCharDeleteRollBack : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharDeleteRollBack GetRootAsResCharDeleteRollBack(ByteBuffer _bb) { return GetRootAsResCharDeleteRollBack(_bb, new ResCharDeleteRollBack()); }
  public static ResCharDeleteRollBack GetRootAsResCharDeleteRollBack(ByteBuffer _bb, ResCharDeleteRollBack obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharDeleteRollBack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResCharDeleteRollBack(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResCharDeleteRollBack> EndResCharDeleteRollBack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharDeleteRollBack>(o);
  }
};

public struct ReqCharList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharList GetRootAsReqCharList(ByteBuffer _bb) { return GetRootAsReqCharList(_bb, new ReqCharList()); }
  public static ReqCharList GetRootAsReqCharList(ByteBuffer _bb, ReqCharList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqCharList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqCharList> EndReqCharList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharList>(o);
  }
};

public struct ResCharList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharList GetRootAsResCharList(ByteBuffer _bb) { return GetRootAsResCharList(_bb, new ResCharList()); }
  public static ResCharList GetRootAsResCharList(ByteBuffer _bb, ResCharList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Character? Characters(int j) { int o = __p.__offset(4); return o != 0 ? (Character?)(new Character()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CharactersLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Attribute? Attribute { get { int o = __p.__offset(6); return o != 0 ? (Attribute?)(new Attribute()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResCharList> CreateResCharList(FlatBufferBuilder builder,
      VectorOffset charactersOffset = default(VectorOffset),
      Offset<Attribute> attributeOffset = default(Offset<Attribute>)) {
    builder.StartObject(2);
    ResCharList.AddAttribute(builder, attributeOffset);
    ResCharList.AddCharacters(builder, charactersOffset);
    return ResCharList.EndResCharList(builder);
  }

  public static void StartResCharList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharacters(FlatBufferBuilder builder, VectorOffset charactersOffset) { builder.AddOffset(0, charactersOffset.Value, 0); }
  public static VectorOffset CreateCharactersVector(FlatBufferBuilder builder, Offset<Character>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCharactersVectorBlock(FlatBufferBuilder builder, Offset<Character>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCharactersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttribute(FlatBufferBuilder builder, Offset<Attribute> attributeOffset) { builder.AddOffset(1, attributeOffset.Value, 0); }
  public static Offset<ResCharList> EndResCharList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharList>(o);
  }
};

public struct ReqGetAllCharInfoBundle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetAllCharInfoBundle GetRootAsReqGetAllCharInfoBundle(ByteBuffer _bb) { return GetRootAsReqGetAllCharInfoBundle(_bb, new ReqGetAllCharInfoBundle()); }
  public static ReqGetAllCharInfoBundle GetRootAsReqGetAllCharInfoBundle(ByteBuffer _bb, ReqGetAllCharInfoBundle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetAllCharInfoBundle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsFirstEnter { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public byte CharInfoReqNum(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int CharInfoReqNumLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharInfoReqNumBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharInfoReqNumBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharInfoReqNumArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqGetAllCharInfoBundle> CreateReqGetAllCharInfoBundle(FlatBufferBuilder builder,
      bool is_first_enter = false,
      VectorOffset char_info_req_numOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ReqGetAllCharInfoBundle.AddCharInfoReqNum(builder, char_info_req_numOffset);
    ReqGetAllCharInfoBundle.AddIsFirstEnter(builder, is_first_enter);
    return ReqGetAllCharInfoBundle.EndReqGetAllCharInfoBundle(builder);
  }

  public static void StartReqGetAllCharInfoBundle(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIsFirstEnter(FlatBufferBuilder builder, bool isFirstEnter) { builder.AddBool(0, isFirstEnter, false); }
  public static void AddCharInfoReqNum(FlatBufferBuilder builder, VectorOffset charInfoReqNumOffset) { builder.AddOffset(1, charInfoReqNumOffset.Value, 0); }
  public static VectorOffset CreateCharInfoReqNumVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCharInfoReqNumVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartCharInfoReqNumVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ReqGetAllCharInfoBundle> EndReqGetAllCharInfoBundle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetAllCharInfoBundle>(o);
  }
};

public struct ResGetAllCharInfoBundle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetAllCharInfoBundle GetRootAsResGetAllCharInfoBundle(ByteBuffer _bb) { return GetRootAsResGetAllCharInfoBundle(_bb, new ResGetAllCharInfoBundle()); }
  public static ResGetAllCharInfoBundle GetRootAsResGetAllCharInfoBundle(ByteBuffer _bb, ResGetAllCharInfoBundle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetAllCharInfoBundle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Rnd { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsFirstEnter { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Character? Character { get { int o = __p.__offset(8); return o != 0 ? (Character?)(new Character()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public CharBlock? BlockInfo(int j) { int o = __p.__offset(10); return o != 0 ? (CharBlock?)(new CharBlock()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BlockInfoLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public RestoreExp? RestoreExp(int j) { int o = __p.__offset(12); return o != 0 ? (RestoreExp?)(new RestoreExp()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RestoreExpLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GuildBuff? GuildBuffInfo(int j) { int o = __p.__offset(14); return o != 0 ? (GuildBuff?)(new GuildBuff()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildBuffInfoLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GuildAllianceSimpleInfo? GuildAllianceInfo(int j) { int o = __p.__offset(16); return o != 0 ? (GuildAllianceSimpleInfo?)(new GuildAllianceSimpleInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GuildAllianceInfoLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? StorageEquip(int j) { int o = __p.__offset(18); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StorageEquipLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? StorageStack(int j) { int o = __p.__offset(20); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StorageStackLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public AccountItemStack? AccountStack(int j) { int o = __p.__offset(22); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AccountStackLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemEquipment? EquipItem(int j) { int o = __p.__offset(24); return o != 0 ? (ItemEquipment?)(new ItemEquipment()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EquipItemLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ItemStack? StackItem(int j) { int o = __p.__offset(26); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StackItemLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Mark? MarkItem { get { int o = __p.__offset(28); return o != 0 ? (Mark?)(new Mark()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Change? ChangeItem(int j) { int o = __p.__offset(30); return o != 0 ? (Change?)(new Change()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeItemLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Pet? PetItem(int j) { int o = __p.__offset(32); return o != 0 ? (Pet?)(new Pet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetItemLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetGachaKeep? PetGachaKeeps(int j) { int o = __p.__offset(34); return o != 0 ? (PetGachaKeep?)(new PetGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetGachaKeepsLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeGachaKeep? ChangeGachaKeeps(int j) { int o = __p.__offset(36); return o != 0 ? (ChangeGachaKeep?)(new ChangeGachaKeep()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeGachaKeepsLength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
  public SkillBookInfo? SkillBook(int j) { int o = __p.__offset(38); return o != 0 ? (SkillBookInfo?)(new SkillBookInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillBookLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
  public PetAdv? PetAdventure(int j) { int o = __p.__offset(40); return o != 0 ? (PetAdv?)(new PetAdv()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetAdventureLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Rune? RuneItem(int j) { int o = __p.__offset(42); return o != 0 ? (Rune?)(new Rune()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RuneItemLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Collect? ChangeCollect(int j) { int o = __p.__offset(44); return o != 0 ? (Collect?)(new Collect()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeCollectLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Collect? ItemCollect(int j) { int o = __p.__offset(46); return o != 0 ? (Collect?)(new Collect()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ItemCollectLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Collect? PetCollect(int j) { int o = __p.__offset(48); return o != 0 ? (Collect?)(new Collect()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PetCollectLength { get { int o = __p.__offset(48); return o != 0 ? __p.__vector_len(o) : 0; } }
  public CharacterOption? Options(int j) { int o = __p.__offset(50); return o != 0 ? (CharacterOption?)(new CharacterOption()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OptionsLength { get { int o = __p.__offset(50); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Quest? Quests(int j) { int o = __p.__offset(52); return o != 0 ? (Quest?)(new Quest()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int QuestsLength { get { int o = __p.__offset(52); return o != 0 ? __p.__vector_len(o) : 0; } }
  public QuestDaily? QuestDailys(int j) { int o = __p.__offset(54); return o != 0 ? (QuestDaily?)(new QuestDaily()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int QuestDailysLength { get { int o = __p.__offset(54); return o != 0 ? __p.__vector_len(o) : 0; } }
  public MakeLimitInfo? MakeLimits(int j) { int o = __p.__offset(56); return o != 0 ? (MakeLimitInfo?)(new MakeLimitInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MakeLimitsLength { get { int o = __p.__offset(56); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FriendInfo? Friends(int j) { int o = __p.__offset(58); return o != 0 ? (FriendInfo?)(new FriendInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FriendsLength { get { int o = __p.__offset(58); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FriendRequestInfo? RequestFriends(int j) { int o = __p.__offset(60); return o != 0 ? (FriendRequestInfo?)(new FriendRequestInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RequestFriendsLength { get { int o = __p.__offset(60); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint ItemAcqHistory(int j) { int o = __p.__offset(62); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ItemAcqHistoryLength { get { int o = __p.__offset(62); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetItemAcqHistoryBytes() { return __p.__vector_as_span(62); }
#else
  public ArraySegment<byte>? GetItemAcqHistoryBytes() { return __p.__vector_as_arraysegment(62); }
#endif
  public uint[] GetItemAcqHistoryArray() { return __p.__vector_as_array<uint>(62); }
  public QuestEvent? QuestEvent(int j) { int o = __p.__offset(64); return o != 0 ? (QuestEvent?)(new QuestEvent()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int QuestEventLength { get { int o = __p.__offset(64); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ChangeQuest? ChangeQuest(int j) { int o = __p.__offset(66); return o != 0 ? (ChangeQuest?)(new ChangeQuest()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeQuestLength { get { int o = __p.__offset(66); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Attribute? Attribute { get { int o = __p.__offset(68); return o != 0 ? (Attribute?)(new Attribute()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ArtifactInfo? Artifact(int j) { int o = __p.__offset(70); return o != 0 ? (ArtifactInfo?)(new ArtifactInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ArtifactLength { get { int o = __p.__offset(70); return o != 0 ? __p.__vector_len(o) : 0; } }
  public CookHistory? CookHistorys(int j) { int o = __p.__offset(72); return o != 0 ? (CookHistory?)(new CookHistory()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CookHistorysLength { get { int o = __p.__offset(72); return o != 0 ? __p.__vector_len(o) : 0; } }
  public TempleStage? TempleStages(int j) { int o = __p.__offset(74); return o != 0 ? (TempleStage?)(new TempleStage()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TempleStagesLength { get { int o = __p.__offset(74); return o != 0 ? __p.__vector_len(o) : 0; } }
  public SkillUseOrder? SkillUseOrders(int j) { int o = __p.__offset(76); return o != 0 ? (SkillUseOrder?)(new SkillUseOrder()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillUseOrdersLength { get { int o = __p.__offset(76); return o != 0 ? __p.__vector_len(o) : 0; } }
  public GodLandProductFlag? GodLandProductFlag(int j) { int o = __p.__offset(78); return o != 0 ? (GodLandProductFlag?)(new GodLandProductFlag()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int GodLandProductFlagLength { get { int o = __p.__offset(78); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetAllCharInfoBundle> CreateResGetAllCharInfoBundle(FlatBufferBuilder builder,
      uint rnd = 0,
      bool is_first_enter = false,
      Offset<Character> characterOffset = default(Offset<Character>),
      VectorOffset block_infoOffset = default(VectorOffset),
      VectorOffset restore_expOffset = default(VectorOffset),
      VectorOffset guild_buff_infoOffset = default(VectorOffset),
      VectorOffset guild_alliance_infoOffset = default(VectorOffset),
      VectorOffset storage_equipOffset = default(VectorOffset),
      VectorOffset storage_stackOffset = default(VectorOffset),
      VectorOffset account_stackOffset = default(VectorOffset),
      VectorOffset equip_itemOffset = default(VectorOffset),
      VectorOffset stack_itemOffset = default(VectorOffset),
      Offset<Mark> mark_itemOffset = default(Offset<Mark>),
      VectorOffset change_itemOffset = default(VectorOffset),
      VectorOffset pet_itemOffset = default(VectorOffset),
      VectorOffset pet_gacha_keepsOffset = default(VectorOffset),
      VectorOffset change_gacha_keepsOffset = default(VectorOffset),
      VectorOffset skill_bookOffset = default(VectorOffset),
      VectorOffset pet_adventureOffset = default(VectorOffset),
      VectorOffset rune_itemOffset = default(VectorOffset),
      VectorOffset change_collectOffset = default(VectorOffset),
      VectorOffset item_collectOffset = default(VectorOffset),
      VectorOffset pet_collectOffset = default(VectorOffset),
      VectorOffset optionsOffset = default(VectorOffset),
      VectorOffset questsOffset = default(VectorOffset),
      VectorOffset quest_dailysOffset = default(VectorOffset),
      VectorOffset make_limitsOffset = default(VectorOffset),
      VectorOffset friendsOffset = default(VectorOffset),
      VectorOffset request_friendsOffset = default(VectorOffset),
      VectorOffset item_acq_historyOffset = default(VectorOffset),
      VectorOffset quest_eventOffset = default(VectorOffset),
      VectorOffset change_questOffset = default(VectorOffset),
      Offset<Attribute> attributeOffset = default(Offset<Attribute>),
      VectorOffset artifactOffset = default(VectorOffset),
      VectorOffset cook_historysOffset = default(VectorOffset),
      VectorOffset temple_stagesOffset = default(VectorOffset),
      VectorOffset skill_use_ordersOffset = default(VectorOffset),
      VectorOffset god_land_product_flagOffset = default(VectorOffset)) {
    builder.StartObject(38);
    ResGetAllCharInfoBundle.AddGodLandProductFlag(builder, god_land_product_flagOffset);
    ResGetAllCharInfoBundle.AddSkillUseOrders(builder, skill_use_ordersOffset);
    ResGetAllCharInfoBundle.AddTempleStages(builder, temple_stagesOffset);
    ResGetAllCharInfoBundle.AddCookHistorys(builder, cook_historysOffset);
    ResGetAllCharInfoBundle.AddArtifact(builder, artifactOffset);
    ResGetAllCharInfoBundle.AddAttribute(builder, attributeOffset);
    ResGetAllCharInfoBundle.AddChangeQuest(builder, change_questOffset);
    ResGetAllCharInfoBundle.AddQuestEvent(builder, quest_eventOffset);
    ResGetAllCharInfoBundle.AddItemAcqHistory(builder, item_acq_historyOffset);
    ResGetAllCharInfoBundle.AddRequestFriends(builder, request_friendsOffset);
    ResGetAllCharInfoBundle.AddFriends(builder, friendsOffset);
    ResGetAllCharInfoBundle.AddMakeLimits(builder, make_limitsOffset);
    ResGetAllCharInfoBundle.AddQuestDailys(builder, quest_dailysOffset);
    ResGetAllCharInfoBundle.AddQuests(builder, questsOffset);
    ResGetAllCharInfoBundle.AddOptions(builder, optionsOffset);
    ResGetAllCharInfoBundle.AddPetCollect(builder, pet_collectOffset);
    ResGetAllCharInfoBundle.AddItemCollect(builder, item_collectOffset);
    ResGetAllCharInfoBundle.AddChangeCollect(builder, change_collectOffset);
    ResGetAllCharInfoBundle.AddRuneItem(builder, rune_itemOffset);
    ResGetAllCharInfoBundle.AddPetAdventure(builder, pet_adventureOffset);
    ResGetAllCharInfoBundle.AddSkillBook(builder, skill_bookOffset);
    ResGetAllCharInfoBundle.AddChangeGachaKeeps(builder, change_gacha_keepsOffset);
    ResGetAllCharInfoBundle.AddPetGachaKeeps(builder, pet_gacha_keepsOffset);
    ResGetAllCharInfoBundle.AddPetItem(builder, pet_itemOffset);
    ResGetAllCharInfoBundle.AddChangeItem(builder, change_itemOffset);
    ResGetAllCharInfoBundle.AddMarkItem(builder, mark_itemOffset);
    ResGetAllCharInfoBundle.AddStackItem(builder, stack_itemOffset);
    ResGetAllCharInfoBundle.AddEquipItem(builder, equip_itemOffset);
    ResGetAllCharInfoBundle.AddAccountStack(builder, account_stackOffset);
    ResGetAllCharInfoBundle.AddStorageStack(builder, storage_stackOffset);
    ResGetAllCharInfoBundle.AddStorageEquip(builder, storage_equipOffset);
    ResGetAllCharInfoBundle.AddGuildAllianceInfo(builder, guild_alliance_infoOffset);
    ResGetAllCharInfoBundle.AddGuildBuffInfo(builder, guild_buff_infoOffset);
    ResGetAllCharInfoBundle.AddRestoreExp(builder, restore_expOffset);
    ResGetAllCharInfoBundle.AddBlockInfo(builder, block_infoOffset);
    ResGetAllCharInfoBundle.AddCharacter(builder, characterOffset);
    ResGetAllCharInfoBundle.AddRnd(builder, rnd);
    ResGetAllCharInfoBundle.AddIsFirstEnter(builder, is_first_enter);
    return ResGetAllCharInfoBundle.EndResGetAllCharInfoBundle(builder);
  }

  public static void StartResGetAllCharInfoBundle(FlatBufferBuilder builder) { builder.StartObject(38); }
  public static void AddRnd(FlatBufferBuilder builder, uint rnd) { builder.AddUint(0, rnd, 0); }
  public static void AddIsFirstEnter(FlatBufferBuilder builder, bool isFirstEnter) { builder.AddBool(1, isFirstEnter, false); }
  public static void AddCharacter(FlatBufferBuilder builder, Offset<Character> characterOffset) { builder.AddOffset(2, characterOffset.Value, 0); }
  public static void AddBlockInfo(FlatBufferBuilder builder, VectorOffset blockInfoOffset) { builder.AddOffset(3, blockInfoOffset.Value, 0); }
  public static VectorOffset CreateBlockInfoVector(FlatBufferBuilder builder, Offset<CharBlock>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBlockInfoVectorBlock(FlatBufferBuilder builder, Offset<CharBlock>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBlockInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRestoreExp(FlatBufferBuilder builder, VectorOffset restoreExpOffset) { builder.AddOffset(4, restoreExpOffset.Value, 0); }
  public static VectorOffset CreateRestoreExpVector(FlatBufferBuilder builder, Offset<RestoreExp>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRestoreExpVectorBlock(FlatBufferBuilder builder, Offset<RestoreExp>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRestoreExpVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGuildBuffInfo(FlatBufferBuilder builder, VectorOffset guildBuffInfoOffset) { builder.AddOffset(5, guildBuffInfoOffset.Value, 0); }
  public static VectorOffset CreateGuildBuffInfoVector(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildBuffInfoVectorBlock(FlatBufferBuilder builder, Offset<GuildBuff>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildBuffInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGuildAllianceInfo(FlatBufferBuilder builder, VectorOffset guildAllianceInfoOffset) { builder.AddOffset(6, guildAllianceInfoOffset.Value, 0); }
  public static VectorOffset CreateGuildAllianceInfoVector(FlatBufferBuilder builder, Offset<GuildAllianceSimpleInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGuildAllianceInfoVectorBlock(FlatBufferBuilder builder, Offset<GuildAllianceSimpleInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGuildAllianceInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStorageEquip(FlatBufferBuilder builder, VectorOffset storageEquipOffset) { builder.AddOffset(7, storageEquipOffset.Value, 0); }
  public static VectorOffset CreateStorageEquipVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStorageEquipVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStorageEquipVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStorageStack(FlatBufferBuilder builder, VectorOffset storageStackOffset) { builder.AddOffset(8, storageStackOffset.Value, 0); }
  public static VectorOffset CreateStorageStackVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStorageStackVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStorageStackVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAccountStack(FlatBufferBuilder builder, VectorOffset accountStackOffset) { builder.AddOffset(9, accountStackOffset.Value, 0); }
  public static VectorOffset CreateAccountStackVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAccountStackVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAccountStackVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquipItem(FlatBufferBuilder builder, VectorOffset equipItemOffset) { builder.AddOffset(10, equipItemOffset.Value, 0); }
  public static VectorOffset CreateEquipItemVector(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEquipItemVectorBlock(FlatBufferBuilder builder, Offset<ItemEquipment>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEquipItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStackItem(FlatBufferBuilder builder, VectorOffset stackItemOffset) { builder.AddOffset(11, stackItemOffset.Value, 0); }
  public static VectorOffset CreateStackItemVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStackItemVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStackItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMarkItem(FlatBufferBuilder builder, Offset<Mark> markItemOffset) { builder.AddOffset(12, markItemOffset.Value, 0); }
  public static void AddChangeItem(FlatBufferBuilder builder, VectorOffset changeItemOffset) { builder.AddOffset(13, changeItemOffset.Value, 0); }
  public static VectorOffset CreateChangeItemVector(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeItemVectorBlock(FlatBufferBuilder builder, Offset<Change>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetItem(FlatBufferBuilder builder, VectorOffset petItemOffset) { builder.AddOffset(14, petItemOffset.Value, 0); }
  public static VectorOffset CreatePetItemVector(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetItemVectorBlock(FlatBufferBuilder builder, Offset<Pet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetGachaKeeps(FlatBufferBuilder builder, VectorOffset petGachaKeepsOffset) { builder.AddOffset(15, petGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreatePetGachaKeepsVector(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<PetGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeGachaKeeps(FlatBufferBuilder builder, VectorOffset changeGachaKeepsOffset) { builder.AddOffset(16, changeGachaKeepsOffset.Value, 0); }
  public static VectorOffset CreateChangeGachaKeepsVector(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeGachaKeepsVectorBlock(FlatBufferBuilder builder, Offset<ChangeGachaKeep>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeGachaKeepsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSkillBook(FlatBufferBuilder builder, VectorOffset skillBookOffset) { builder.AddOffset(17, skillBookOffset.Value, 0); }
  public static VectorOffset CreateSkillBookVector(FlatBufferBuilder builder, Offset<SkillBookInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillBookVectorBlock(FlatBufferBuilder builder, Offset<SkillBookInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSkillBookVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetAdventure(FlatBufferBuilder builder, VectorOffset petAdventureOffset) { builder.AddOffset(18, petAdventureOffset.Value, 0); }
  public static VectorOffset CreatePetAdventureVector(FlatBufferBuilder builder, Offset<PetAdv>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetAdventureVectorBlock(FlatBufferBuilder builder, Offset<PetAdv>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetAdventureVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRuneItem(FlatBufferBuilder builder, VectorOffset runeItemOffset) { builder.AddOffset(19, runeItemOffset.Value, 0); }
  public static VectorOffset CreateRuneItemVector(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRuneItemVectorBlock(FlatBufferBuilder builder, Offset<Rune>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRuneItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeCollect(FlatBufferBuilder builder, VectorOffset changeCollectOffset) { builder.AddOffset(20, changeCollectOffset.Value, 0); }
  public static VectorOffset CreateChangeCollectVector(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeCollectVectorBlock(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeCollectVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemCollect(FlatBufferBuilder builder, VectorOffset itemCollectOffset) { builder.AddOffset(21, itemCollectOffset.Value, 0); }
  public static VectorOffset CreateItemCollectVector(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateItemCollectVectorBlock(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemCollectVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPetCollect(FlatBufferBuilder builder, VectorOffset petCollectOffset) { builder.AddOffset(22, petCollectOffset.Value, 0); }
  public static VectorOffset CreatePetCollectVector(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePetCollectVectorBlock(FlatBufferBuilder builder, Offset<Collect>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPetCollectVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOptions(FlatBufferBuilder builder, VectorOffset optionsOffset) { builder.AddOffset(23, optionsOffset.Value, 0); }
  public static VectorOffset CreateOptionsVector(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOptionsVectorBlock(FlatBufferBuilder builder, Offset<CharacterOption>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOptionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddQuests(FlatBufferBuilder builder, VectorOffset questsOffset) { builder.AddOffset(24, questsOffset.Value, 0); }
  public static VectorOffset CreateQuestsVector(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateQuestsVectorBlock(FlatBufferBuilder builder, Offset<Quest>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartQuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddQuestDailys(FlatBufferBuilder builder, VectorOffset questDailysOffset) { builder.AddOffset(25, questDailysOffset.Value, 0); }
  public static VectorOffset CreateQuestDailysVector(FlatBufferBuilder builder, Offset<QuestDaily>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateQuestDailysVectorBlock(FlatBufferBuilder builder, Offset<QuestDaily>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartQuestDailysVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMakeLimits(FlatBufferBuilder builder, VectorOffset makeLimitsOffset) { builder.AddOffset(26, makeLimitsOffset.Value, 0); }
  public static VectorOffset CreateMakeLimitsVector(FlatBufferBuilder builder, Offset<MakeLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMakeLimitsVectorBlock(FlatBufferBuilder builder, Offset<MakeLimitInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMakeLimitsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFriends(FlatBufferBuilder builder, VectorOffset friendsOffset) { builder.AddOffset(27, friendsOffset.Value, 0); }
  public static VectorOffset CreateFriendsVector(FlatBufferBuilder builder, Offset<FriendInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFriendsVectorBlock(FlatBufferBuilder builder, Offset<FriendInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFriendsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRequestFriends(FlatBufferBuilder builder, VectorOffset requestFriendsOffset) { builder.AddOffset(28, requestFriendsOffset.Value, 0); }
  public static VectorOffset CreateRequestFriendsVector(FlatBufferBuilder builder, Offset<FriendRequestInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRequestFriendsVectorBlock(FlatBufferBuilder builder, Offset<FriendRequestInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRequestFriendsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddItemAcqHistory(FlatBufferBuilder builder, VectorOffset itemAcqHistoryOffset) { builder.AddOffset(29, itemAcqHistoryOffset.Value, 0); }
  public static VectorOffset CreateItemAcqHistoryVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateItemAcqHistoryVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemAcqHistoryVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddQuestEvent(FlatBufferBuilder builder, VectorOffset questEventOffset) { builder.AddOffset(30, questEventOffset.Value, 0); }
  public static VectorOffset CreateQuestEventVector(FlatBufferBuilder builder, Offset<QuestEvent>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateQuestEventVectorBlock(FlatBufferBuilder builder, Offset<QuestEvent>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartQuestEventVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeQuest(FlatBufferBuilder builder, VectorOffset changeQuestOffset) { builder.AddOffset(31, changeQuestOffset.Value, 0); }
  public static VectorOffset CreateChangeQuestVector(FlatBufferBuilder builder, Offset<ChangeQuest>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeQuestVectorBlock(FlatBufferBuilder builder, Offset<ChangeQuest>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChangeQuestVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttribute(FlatBufferBuilder builder, Offset<Attribute> attributeOffset) { builder.AddOffset(32, attributeOffset.Value, 0); }
  public static void AddArtifact(FlatBufferBuilder builder, VectorOffset artifactOffset) { builder.AddOffset(33, artifactOffset.Value, 0); }
  public static VectorOffset CreateArtifactVector(FlatBufferBuilder builder, Offset<ArtifactInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateArtifactVectorBlock(FlatBufferBuilder builder, Offset<ArtifactInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartArtifactVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCookHistorys(FlatBufferBuilder builder, VectorOffset cookHistorysOffset) { builder.AddOffset(34, cookHistorysOffset.Value, 0); }
  public static VectorOffset CreateCookHistorysVector(FlatBufferBuilder builder, Offset<CookHistory>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCookHistorysVectorBlock(FlatBufferBuilder builder, Offset<CookHistory>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCookHistorysVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTempleStages(FlatBufferBuilder builder, VectorOffset templeStagesOffset) { builder.AddOffset(35, templeStagesOffset.Value, 0); }
  public static VectorOffset CreateTempleStagesVector(FlatBufferBuilder builder, Offset<TempleStage>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTempleStagesVectorBlock(FlatBufferBuilder builder, Offset<TempleStage>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTempleStagesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSkillUseOrders(FlatBufferBuilder builder, VectorOffset skillUseOrdersOffset) { builder.AddOffset(36, skillUseOrdersOffset.Value, 0); }
  public static VectorOffset CreateSkillUseOrdersVector(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillUseOrdersVectorBlock(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSkillUseOrdersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGodLandProductFlag(FlatBufferBuilder builder, VectorOffset godLandProductFlagOffset) { builder.AddOffset(37, godLandProductFlagOffset.Value, 0); }
  public static VectorOffset CreateGodLandProductFlagVector(FlatBufferBuilder builder, Offset<GodLandProductFlag>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateGodLandProductFlagVectorBlock(FlatBufferBuilder builder, Offset<GodLandProductFlag>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartGodLandProductFlagVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetAllCharInfoBundle> EndResGetAllCharInfoBundle(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetAllCharInfoBundle>(o);
  }
};

public struct ReqUseStatPoint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqUseStatPoint GetRootAsReqUseStatPoint(ByteBuffer _bb) { return GetRootAsReqUseStatPoint(_bb, new ReqUseStatPoint()); }
  public static ReqUseStatPoint GetRootAsReqUseStatPoint(ByteBuffer _bb, ReqUseStatPoint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqUseStatPoint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public UseStatPoint? Stats(int j) { int o = __p.__offset(4); return o != 0 ? (UseStatPoint?)(new UseStatPoint()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StatsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ulong UseItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqUseStatPoint> CreateReqUseStatPoint(FlatBufferBuilder builder,
      VectorOffset statsOffset = default(VectorOffset),
      ulong use_item_id = 0) {
    builder.StartObject(2);
    ReqUseStatPoint.AddUseItemId(builder, use_item_id);
    ReqUseStatPoint.AddStats(builder, statsOffset);
    return ReqUseStatPoint.EndReqUseStatPoint(builder);
  }

  public static void StartReqUseStatPoint(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddStats(FlatBufferBuilder builder, VectorOffset statsOffset) { builder.AddOffset(0, statsOffset.Value, 0); }
  public static VectorOffset CreateStatsVector(FlatBufferBuilder builder, Offset<UseStatPoint>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStatsVectorBlock(FlatBufferBuilder builder, Offset<UseStatPoint>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStatsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(1, useItemId, 0); }
  public static Offset<ReqUseStatPoint> EndReqUseStatPoint(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqUseStatPoint>(o);
  }
};

public struct ResUseStatPoint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResUseStatPoint GetRootAsResUseStatPoint(ByteBuffer _bb) { return GetRootAsResUseStatPoint(_bb, new ResUseStatPoint()); }
  public static ResUseStatPoint GetRootAsResUseStatPoint(ByteBuffer _bb, ResUseStatPoint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResUseStatPoint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public UseStatPoint? CurrCharStats(int j) { int o = __p.__offset(6); return o != 0 ? (UseStatPoint?)(new UseStatPoint()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CurrCharStatsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResUseStatPoint> CreateResUseStatPoint(FlatBufferBuilder builder,
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      VectorOffset curr_char_statsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResUseStatPoint.AddCurrCharStats(builder, curr_char_statsOffset);
    ResUseStatPoint.AddResultStackItems(builder, result_stack_itemsOffset);
    return ResUseStatPoint.EndResUseStatPoint(builder);
  }

  public static void StartResUseStatPoint(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(0, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCurrCharStats(FlatBufferBuilder builder, VectorOffset currCharStatsOffset) { builder.AddOffset(1, currCharStatsOffset.Value, 0); }
  public static VectorOffset CreateCurrCharStatsVector(FlatBufferBuilder builder, Offset<UseStatPoint>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCurrCharStatsVectorBlock(FlatBufferBuilder builder, Offset<UseStatPoint>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCurrCharStatsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResUseStatPoint> EndResUseStatPoint(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResUseStatPoint>(o);
  }
};

public struct ReqResetStatPoint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqResetStatPoint GetRootAsReqResetStatPoint(ByteBuffer _bb) { return GetRootAsReqResetStatPoint(_bb, new ReqResetStatPoint()); }
  public static ReqResetStatPoint GetRootAsReqResetStatPoint(ByteBuffer _bb, ReqResetStatPoint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqResetStatPoint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong ResetItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ResetItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqResetStatPoint> CreateReqResetStatPoint(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong reset_item_id = 0,
      uint reset_item_tid = 0) {
    builder.StartObject(3);
    ReqResetStatPoint.AddResetItemId(builder, reset_item_id);
    ReqResetStatPoint.AddResetItemTid(builder, reset_item_tid);
    ReqResetStatPoint.AddMarketType(builder, market_type);
    return ReqResetStatPoint.EndReqResetStatPoint(builder);
  }

  public static void StartReqResetStatPoint(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddResetItemId(FlatBufferBuilder builder, ulong resetItemId) { builder.AddUlong(1, resetItemId, 0); }
  public static void AddResetItemTid(FlatBufferBuilder builder, uint resetItemTid) { builder.AddUint(2, resetItemTid, 0); }
  public static Offset<ReqResetStatPoint> EndReqResetStatPoint(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqResetStatPoint>(o);
  }
};

public struct ResResetStatPoint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResResetStatPoint GetRootAsResResetStatPoint(ByteBuffer _bb) { return GetRootAsResResetStatPoint(_bb, new ResResetStatPoint()); }
  public static ResResetStatPoint GetRootAsResResetStatPoint(ByteBuffer _bb, ResResetStatPoint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResResetStatPoint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemStack? ResultStackItems(int j) { int o = __p.__offset(4); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultStackItemsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResResetStatPoint> CreateResResetStatPoint(FlatBufferBuilder builder,
      VectorOffset result_stack_itemsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(2);
    ResResetStatPoint.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResResetStatPoint.AddResultStackItems(builder, result_stack_itemsOffset);
    return ResResetStatPoint.EndResResetStatPoint(builder);
  }

  public static void StartResResetStatPoint(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResultStackItems(FlatBufferBuilder builder, VectorOffset resultStackItemsOffset) { builder.AddOffset(0, resultStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultStackItemsVector(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultStackItemsVectorBlock(FlatBufferBuilder builder, Offset<ItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(1, resultCashCoinBalance, 0); }
  public static Offset<ResResetStatPoint> EndResResetStatPoint(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResResetStatPoint>(o);
  }
};

public struct ReqRestoreExpList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRestoreExpList GetRootAsReqRestoreExpList(ByteBuffer _bb) { return GetRootAsReqRestoreExpList(_bb, new ReqRestoreExpList()); }
  public static ReqRestoreExpList GetRootAsReqRestoreExpList(ByteBuffer _bb, ReqRestoreExpList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRestoreExpList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqRestoreExpList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqRestoreExpList> EndReqRestoreExpList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRestoreExpList>(o);
  }
};

public struct ResRestoreExpList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRestoreExpList GetRootAsResRestoreExpList(ByteBuffer _bb) { return GetRootAsResRestoreExpList(_bb, new ResRestoreExpList()); }
  public static ResRestoreExpList GetRootAsResRestoreExpList(ByteBuffer _bb, ResRestoreExpList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRestoreExpList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public RestoreExp? RestoreExps(int j) { int o = __p.__offset(4); return o != 0 ? (RestoreExp?)(new RestoreExp()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RestoreExpsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResRestoreExpList> CreateResRestoreExpList(FlatBufferBuilder builder,
      VectorOffset restore_expsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResRestoreExpList.AddRestoreExps(builder, restore_expsOffset);
    return ResRestoreExpList.EndResRestoreExpList(builder);
  }

  public static void StartResRestoreExpList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRestoreExps(FlatBufferBuilder builder, VectorOffset restoreExpsOffset) { builder.AddOffset(0, restoreExpsOffset.Value, 0); }
  public static VectorOffset CreateRestoreExpsVector(FlatBufferBuilder builder, Offset<RestoreExp>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRestoreExpsVectorBlock(FlatBufferBuilder builder, Offset<RestoreExp>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRestoreExpsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResRestoreExpList> EndResRestoreExpList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRestoreExpList>(o);
  }
};

public struct ReqRestoreExp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRestoreExp GetRootAsReqRestoreExp(ByteBuffer _bb) { return GetRootAsReqRestoreExp(_bb, new ReqRestoreExp()); }
  public static ReqRestoreExp GetRootAsReqRestoreExp(ByteBuffer _bb, ReqRestoreExp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRestoreExp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong RestoreId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong UseItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqRestoreExp> CreateReqRestoreExp(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong restore_id = 0,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(4);
    ReqRestoreExp.AddUseItemId(builder, use_item_id);
    ReqRestoreExp.AddRestoreId(builder, restore_id);
    ReqRestoreExp.AddUseItemTid(builder, use_item_tid);
    ReqRestoreExp.AddMarketType(builder, market_type);
    return ReqRestoreExp.EndReqRestoreExp(builder);
  }

  public static void StartReqRestoreExp(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddRestoreId(FlatBufferBuilder builder, ulong restoreId) { builder.AddUlong(1, restoreId, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(2, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(3, useItemTid, 0); }
  public static Offset<ReqRestoreExp> EndReqRestoreExp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRestoreExp>(o);
  }
};

public struct ResRestoreExp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRestoreExp GetRootAsResRestoreExp(ByteBuffer _bb) { return GetRootAsResRestoreExp(_bb, new ResRestoreExp()); }
  public static ResRestoreExp GetRootAsResRestoreExp(ByteBuffer _bb, ResRestoreExp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRestoreExp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong GetExp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ResultExp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public byte ResultRestoreExpCnt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte ResultRestoreExpNotFreeCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public AccountItemStack? ResultAccountStackItems(int j) { int o = __p.__offset(12); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ResultAccountStackItemsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResRestoreExp> CreateResRestoreExp(FlatBufferBuilder builder,
      ulong get_exp = 0,
      ulong result_exp = 0,
      byte result_restore_exp_cnt = 0,
      byte result_restore_exp_not_free_cnt = 0,
      VectorOffset result_account_stack_itemsOffset = default(VectorOffset),
      int result_cash_coin_balance = 0) {
    builder.StartObject(6);
    ResRestoreExp.AddResultExp(builder, result_exp);
    ResRestoreExp.AddGetExp(builder, get_exp);
    ResRestoreExp.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResRestoreExp.AddResultAccountStackItems(builder, result_account_stack_itemsOffset);
    ResRestoreExp.AddResultRestoreExpNotFreeCnt(builder, result_restore_exp_not_free_cnt);
    ResRestoreExp.AddResultRestoreExpCnt(builder, result_restore_exp_cnt);
    return ResRestoreExp.EndResRestoreExp(builder);
  }

  public static void StartResRestoreExp(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddGetExp(FlatBufferBuilder builder, ulong getExp) { builder.AddUlong(0, getExp, 0); }
  public static void AddResultExp(FlatBufferBuilder builder, ulong resultExp) { builder.AddUlong(1, resultExp, 0); }
  public static void AddResultRestoreExpCnt(FlatBufferBuilder builder, byte resultRestoreExpCnt) { builder.AddByte(2, resultRestoreExpCnt, 0); }
  public static void AddResultRestoreExpNotFreeCnt(FlatBufferBuilder builder, byte resultRestoreExpNotFreeCnt) { builder.AddByte(3, resultRestoreExpNotFreeCnt, 0); }
  public static void AddResultAccountStackItems(FlatBufferBuilder builder, VectorOffset resultAccountStackItemsOffset) { builder.AddOffset(4, resultAccountStackItemsOffset.Value, 0); }
  public static VectorOffset CreateResultAccountStackItemsVector(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateResultAccountStackItemsVectorBlock(FlatBufferBuilder builder, Offset<AccountItemStack>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultAccountStackItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(5, resultCashCoinBalance, 0); }
  public static Offset<ResRestoreExp> EndResRestoreExp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRestoreExp>(o);
  }
};

public struct ReqCharacterSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharacterSlotExtend GetRootAsReqCharacterSlotExtend(ByteBuffer _bb) { return GetRootAsReqCharacterSlotExtend(_bb, new ReqCharacterSlotExtend()); }
  public static ReqCharacterSlotExtend GetRootAsReqCharacterSlotExtend(ByteBuffer _bb, ReqCharacterSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharacterSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UseItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqCharacterSlotExtend> CreateReqCharacterSlotExtend(FlatBufferBuilder builder,
      ulong use_item_id = 0) {
    builder.StartObject(1);
    ReqCharacterSlotExtend.AddUseItemId(builder, use_item_id);
    return ReqCharacterSlotExtend.EndReqCharacterSlotExtend(builder);
  }

  public static void StartReqCharacterSlotExtend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(0, useItemId, 0); }
  public static Offset<ReqCharacterSlotExtend> EndReqCharacterSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharacterSlotExtend>(o);
  }
};

public struct ResCharacterSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharacterSlotExtend GetRootAsResCharacterSlotExtend(ByteBuffer _bb) { return GetRootAsResCharacterSlotExtend(_bb, new ResCharacterSlotExtend()); }
  public static ResCharacterSlotExtend GetRootAsResCharacterSlotExtend(ByteBuffer _bb, ResCharacterSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharacterSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint CharacterMaxCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResCharacterSlotExtend> CreateResCharacterSlotExtend(FlatBufferBuilder builder,
      uint character_max_cnt = 0,
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(2);
    ResCharacterSlotExtend.AddResultStackItem(builder, result_stack_itemOffset);
    ResCharacterSlotExtend.AddCharacterMaxCnt(builder, character_max_cnt);
    return ResCharacterSlotExtend.EndResCharacterSlotExtend(builder);
  }

  public static void StartResCharacterSlotExtend(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharacterMaxCnt(FlatBufferBuilder builder, uint characterMaxCnt) { builder.AddUint(0, characterMaxCnt, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(1, resultStackItemOffset.Value, 0); }
  public static Offset<ResCharacterSlotExtend> EndResCharacterSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharacterSlotExtend>(o);
  }
};

public struct ReqRingSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqRingSlotExtend GetRootAsReqRingSlotExtend(ByteBuffer _bb) { return GetRootAsReqRingSlotExtend(_bb, new ReqRingSlotExtend()); }
  public static ReqRingSlotExtend GetRootAsReqRingSlotExtend(ByteBuffer _bb, ReqRingSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqRingSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UseItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqRingSlotExtend> CreateReqRingSlotExtend(FlatBufferBuilder builder,
      ulong use_item_id = 0) {
    builder.StartObject(1);
    ReqRingSlotExtend.AddUseItemId(builder, use_item_id);
    return ReqRingSlotExtend.EndReqRingSlotExtend(builder);
  }

  public static void StartReqRingSlotExtend(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(0, useItemId, 0); }
  public static Offset<ReqRingSlotExtend> EndReqRingSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqRingSlotExtend>(o);
  }
};

public struct ResRingSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResRingSlotExtend GetRootAsResRingSlotExtend(ByteBuffer _bb) { return GetRootAsResRingSlotExtend(_bb, new ResRingSlotExtend()); }
  public static ResRingSlotExtend GetRootAsResRingSlotExtend(ByteBuffer _bb, ResRingSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResRingSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint AddRingSlot { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(6); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResRingSlotExtend> CreateResRingSlotExtend(FlatBufferBuilder builder,
      uint add_ring_slot = 0,
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(2);
    ResRingSlotExtend.AddResultStackItem(builder, result_stack_itemOffset);
    ResRingSlotExtend.AddAddRingSlot(builder, add_ring_slot);
    return ResRingSlotExtend.EndResRingSlotExtend(builder);
  }

  public static void StartResRingSlotExtend(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAddRingSlot(FlatBufferBuilder builder, uint addRingSlot) { builder.AddUint(0, addRingSlot, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(1, resultStackItemOffset.Value, 0); }
  public static Offset<ResRingSlotExtend> EndResRingSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResRingSlotExtend>(o);
  }
};

public struct ReqInvenSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqInvenSlotExtend GetRootAsReqInvenSlotExtend(ByteBuffer _bb) { return GetRootAsReqInvenSlotExtend(_bb, new ReqInvenSlotExtend()); }
  public static ReqInvenSlotExtend GetRootAsReqInvenSlotExtend(ByteBuffer _bb, ReqInvenSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqInvenSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong UseItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqInvenSlotExtend> CreateReqInvenSlotExtend(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(3);
    ReqInvenSlotExtend.AddUseItemId(builder, use_item_id);
    ReqInvenSlotExtend.AddUseItemTid(builder, use_item_tid);
    ReqInvenSlotExtend.AddMarketType(builder, market_type);
    return ReqInvenSlotExtend.EndReqInvenSlotExtend(builder);
  }

  public static void StartReqInvenSlotExtend(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(1, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(2, useItemTid, 0); }
  public static Offset<ReqInvenSlotExtend> EndReqInvenSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqInvenSlotExtend>(o);
  }
};

public struct ResInvenSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResInvenSlotExtend GetRootAsResInvenSlotExtend(ByteBuffer _bb) { return GetRootAsResInvenSlotExtend(_bb, new ResInvenSlotExtend()); }
  public static ResInvenSlotExtend GetRootAsResInvenSlotExtend(ByteBuffer _bb, ResInvenSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResInvenSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint InvenMaxCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResInvenSlotExtend> CreateResInvenSlotExtend(FlatBufferBuilder builder,
      uint inven_max_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>),
      int result_cash_coin_balance = 0) {
    builder.StartObject(4);
    ResInvenSlotExtend.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResInvenSlotExtend.AddResultStackItem(builder, result_stack_itemOffset);
    ResInvenSlotExtend.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResInvenSlotExtend.AddInvenMaxCnt(builder, inven_max_cnt);
    return ResInvenSlotExtend.EndResInvenSlotExtend(builder);
  }

  public static void StartResInvenSlotExtend(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddInvenMaxCnt(FlatBufferBuilder builder, uint invenMaxCnt) { builder.AddUint(0, invenMaxCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(1, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(2, resultStackItemOffset.Value, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(3, resultCashCoinBalance, 0); }
  public static Offset<ResInvenSlotExtend> EndResInvenSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResInvenSlotExtend>(o);
  }
};

public struct ReqStorageSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqStorageSlotExtend GetRootAsReqStorageSlotExtend(ByteBuffer _bb) { return GetRootAsReqStorageSlotExtend(_bb, new ReqStorageSlotExtend()); }
  public static ReqStorageSlotExtend GetRootAsReqStorageSlotExtend(ByteBuffer _bb, ReqStorageSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqStorageSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public E_MarketType MarketType { get { int o = __p.__offset(4); return o != 0 ? (E_MarketType)__p.bb.Get(o + __p.bb_pos) : E_MarketType.None; } }
  public ulong UseItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqStorageSlotExtend> CreateReqStorageSlotExtend(FlatBufferBuilder builder,
      E_MarketType market_type = E_MarketType.None,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(3);
    ReqStorageSlotExtend.AddUseItemId(builder, use_item_id);
    ReqStorageSlotExtend.AddUseItemTid(builder, use_item_tid);
    ReqStorageSlotExtend.AddMarketType(builder, market_type);
    return ReqStorageSlotExtend.EndReqStorageSlotExtend(builder);
  }

  public static void StartReqStorageSlotExtend(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMarketType(FlatBufferBuilder builder, E_MarketType marketType) { builder.AddByte(0, (byte)marketType, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(1, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(2, useItemTid, 0); }
  public static Offset<ReqStorageSlotExtend> EndReqStorageSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqStorageSlotExtend>(o);
  }
};

public struct ResStorageSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResStorageSlotExtend GetRootAsResStorageSlotExtend(ByteBuffer _bb) { return GetRootAsResStorageSlotExtend(_bb, new ResStorageSlotExtend()); }
  public static ResStorageSlotExtend GetRootAsResStorageSlotExtend(ByteBuffer _bb, ResStorageSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResStorageSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint StorageMaxCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int ResultCashCoinBalance { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ResStorageSlotExtend> CreateResStorageSlotExtend(FlatBufferBuilder builder,
      uint storage_max_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>),
      int result_cash_coin_balance = 0) {
    builder.StartObject(4);
    ResStorageSlotExtend.AddResultCashCoinBalance(builder, result_cash_coin_balance);
    ResStorageSlotExtend.AddResultStackItem(builder, result_stack_itemOffset);
    ResStorageSlotExtend.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResStorageSlotExtend.AddStorageMaxCnt(builder, storage_max_cnt);
    return ResStorageSlotExtend.EndResStorageSlotExtend(builder);
  }

  public static void StartResStorageSlotExtend(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddStorageMaxCnt(FlatBufferBuilder builder, uint storageMaxCnt) { builder.AddUint(0, storageMaxCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(1, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(2, resultStackItemOffset.Value, 0); }
  public static void AddResultCashCoinBalance(FlatBufferBuilder builder, int resultCashCoinBalance) { builder.AddInt(3, resultCashCoinBalance, 0); }
  public static Offset<ResStorageSlotExtend> EndResStorageSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResStorageSlotExtend>(o);
  }
};

public struct ReqQuickSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqQuickSlotExtend GetRootAsReqQuickSlotExtend(ByteBuffer _bb) { return GetRootAsReqQuickSlotExtend(_bb, new ReqQuickSlotExtend()); }
  public static ReqQuickSlotExtend GetRootAsReqQuickSlotExtend(ByteBuffer _bb, ReqQuickSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqQuickSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UseItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint UseItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqQuickSlotExtend> CreateReqQuickSlotExtend(FlatBufferBuilder builder,
      ulong use_item_id = 0,
      uint use_item_tid = 0) {
    builder.StartObject(2);
    ReqQuickSlotExtend.AddUseItemId(builder, use_item_id);
    ReqQuickSlotExtend.AddUseItemTid(builder, use_item_tid);
    return ReqQuickSlotExtend.EndReqQuickSlotExtend(builder);
  }

  public static void StartReqQuickSlotExtend(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(0, useItemId, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(1, useItemTid, 0); }
  public static Offset<ReqQuickSlotExtend> EndReqQuickSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqQuickSlotExtend>(o);
  }
};

public struct ResQuickSlotExtend : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResQuickSlotExtend GetRootAsResQuickSlotExtend(ByteBuffer _bb) { return GetRootAsResQuickSlotExtend(_bb, new ResQuickSlotExtend()); }
  public static ResQuickSlotExtend GetRootAsResQuickSlotExtend(ByteBuffer _bb, ResQuickSlotExtend obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResQuickSlotExtend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint QuickSlotMaxCnt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ItemStack? ResultStackItem { get { int o = __p.__offset(8); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResQuickSlotExtend> CreateResQuickSlotExtend(FlatBufferBuilder builder,
      uint quick_slot_max_cnt = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>),
      Offset<ItemStack> result_stack_itemOffset = default(Offset<ItemStack>)) {
    builder.StartObject(3);
    ResQuickSlotExtend.AddResultStackItem(builder, result_stack_itemOffset);
    ResQuickSlotExtend.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    ResQuickSlotExtend.AddQuickSlotMaxCnt(builder, quick_slot_max_cnt);
    return ResQuickSlotExtend.EndResQuickSlotExtend(builder);
  }

  public static void StartResQuickSlotExtend(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddQuickSlotMaxCnt(FlatBufferBuilder builder, uint quickSlotMaxCnt) { builder.AddUint(0, quickSlotMaxCnt, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(1, resultAccountStackItemOffset.Value, 0); }
  public static void AddResultStackItem(FlatBufferBuilder builder, Offset<ItemStack> resultStackItemOffset) { builder.AddOffset(2, resultStackItemOffset.Value, 0); }
  public static Offset<ResQuickSlotExtend> EndResQuickSlotExtend(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResQuickSlotExtend>(o);
  }
};

public struct ReqCharBlockList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharBlockList GetRootAsReqCharBlockList(ByteBuffer _bb) { return GetRootAsReqCharBlockList(_bb, new ReqCharBlockList()); }
  public static ReqCharBlockList GetRootAsReqCharBlockList(ByteBuffer _bb, ReqCharBlockList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharBlockList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqCharBlockList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqCharBlockList> EndReqCharBlockList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharBlockList>(o);
  }
};

public struct ResCharBlockList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharBlockList GetRootAsResCharBlockList(ByteBuffer _bb) { return GetRootAsResCharBlockList(_bb, new ResCharBlockList()); }
  public static ResCharBlockList GetRootAsResCharBlockList(ByteBuffer _bb, ResCharBlockList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharBlockList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharBlock? BlockList(int j) { int o = __p.__offset(4); return o != 0 ? (CharBlock?)(new CharBlock()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BlockListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResCharBlockList> CreateResCharBlockList(FlatBufferBuilder builder,
      VectorOffset block_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResCharBlockList.AddBlockList(builder, block_listOffset);
    return ResCharBlockList.EndResCharBlockList(builder);
  }

  public static void StartResCharBlockList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBlockList(FlatBufferBuilder builder, VectorOffset blockListOffset) { builder.AddOffset(0, blockListOffset.Value, 0); }
  public static VectorOffset CreateBlockListVector(FlatBufferBuilder builder, Offset<CharBlock>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBlockListVectorBlock(FlatBufferBuilder builder, Offset<CharBlock>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBlockListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResCharBlockList> EndResCharBlockList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharBlockList>(o);
  }
};

public struct ReqCharBlockSet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharBlockSet GetRootAsReqCharBlockSet(ByteBuffer _bb) { return GetRootAsReqCharBlockSet(_bb, new ReqCharBlockSet()); }
  public static ReqCharBlockSet GetRootAsReqCharBlockSet(ByteBuffer _bb, ReqCharBlockSet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharBlockSet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string BlockCharNick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBlockCharNickBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetBlockCharNickBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetBlockCharNickArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqCharBlockSet> CreateReqCharBlockSet(FlatBufferBuilder builder,
      StringOffset block_char_nickOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqCharBlockSet.AddBlockCharNick(builder, block_char_nickOffset);
    return ReqCharBlockSet.EndReqCharBlockSet(builder);
  }

  public static void StartReqCharBlockSet(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBlockCharNick(FlatBufferBuilder builder, StringOffset blockCharNickOffset) { builder.AddOffset(0, blockCharNickOffset.Value, 0); }
  public static Offset<ReqCharBlockSet> EndReqCharBlockSet(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharBlockSet>(o);
  }
};

public struct ResCharBlockSet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharBlockSet GetRootAsResCharBlockSet(ByteBuffer _bb) { return GetRootAsResCharBlockSet(_bb, new ResCharBlockSet()); }
  public static ResCharBlockSet GetRootAsResCharBlockSet(ByteBuffer _bb, ResCharBlockSet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharBlockSet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharBlock? BlockChar { get { int o = __p.__offset(4); return o != 0 ? (CharBlock?)(new CharBlock()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResCharBlockSet> CreateResCharBlockSet(FlatBufferBuilder builder,
      Offset<CharBlock> block_charOffset = default(Offset<CharBlock>)) {
    builder.StartObject(1);
    ResCharBlockSet.AddBlockChar(builder, block_charOffset);
    return ResCharBlockSet.EndResCharBlockSet(builder);
  }

  public static void StartResCharBlockSet(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBlockChar(FlatBufferBuilder builder, Offset<CharBlock> blockCharOffset) { builder.AddOffset(0, blockCharOffset.Value, 0); }
  public static Offset<ResCharBlockSet> EndResCharBlockSet(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharBlockSet>(o);
  }
};

public struct ReqCharBlockDel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCharBlockDel GetRootAsReqCharBlockDel(ByteBuffer _bb) { return GetRootAsReqCharBlockDel(_bb, new ReqCharBlockDel()); }
  public static ReqCharBlockDel GetRootAsReqCharBlockDel(ByteBuffer _bb, ReqCharBlockDel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCharBlockDel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong BlockCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqCharBlockDel> CreateReqCharBlockDel(FlatBufferBuilder builder,
      ulong block_char_id = 0) {
    builder.StartObject(1);
    ReqCharBlockDel.AddBlockCharId(builder, block_char_id);
    return ReqCharBlockDel.EndReqCharBlockDel(builder);
  }

  public static void StartReqCharBlockDel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBlockCharId(FlatBufferBuilder builder, ulong blockCharId) { builder.AddUlong(0, blockCharId, 0); }
  public static Offset<ReqCharBlockDel> EndReqCharBlockDel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCharBlockDel>(o);
  }
};

public struct ResCharBlockDel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCharBlockDel GetRootAsResCharBlockDel(ByteBuffer _bb) { return GetRootAsResCharBlockDel(_bb, new ResCharBlockDel()); }
  public static ResCharBlockDel GetRootAsResCharBlockDel(ByteBuffer _bb, ResCharBlockDel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCharBlockDel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong BlockCharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResCharBlockDel> CreateResCharBlockDel(FlatBufferBuilder builder,
      ulong block_char_id = 0) {
    builder.StartObject(1);
    ResCharBlockDel.AddBlockCharId(builder, block_char_id);
    return ResCharBlockDel.EndResCharBlockDel(builder);
  }

  public static void StartResCharBlockDel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBlockCharId(FlatBufferBuilder builder, ulong blockCharId) { builder.AddUlong(0, blockCharId, 0); }
  public static Offset<ResCharBlockDel> EndResCharBlockDel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCharBlockDel>(o);
  }
};

public struct ReqGetPkLogList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetPkLogList GetRootAsReqGetPkLogList(ByteBuffer _bb) { return GetRootAsReqGetPkLogList(_bb, new ReqGetPkLogList()); }
  public static ReqGetPkLogList GetRootAsReqGetPkLogList(ByteBuffer _bb, ReqGetPkLogList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetPkLogList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqGetPkLogList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqGetPkLogList> EndReqGetPkLogList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetPkLogList>(o);
  }
};

public struct ResGetPkLogList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetPkLogList GetRootAsResGetPkLogList(ByteBuffer _bb) { return GetRootAsResGetPkLogList(_bb, new ResGetPkLogList()); }
  public static ResGetPkLogList GetRootAsResGetPkLogList(ByteBuffer _bb, ResGetPkLogList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetPkLogList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PkLog? PkLogs(int j) { int o = __p.__offset(4); return o != 0 ? (PkLog?)(new PkLog()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PkLogsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResGetPkLogList> CreateResGetPkLogList(FlatBufferBuilder builder,
      VectorOffset pk_logsOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResGetPkLogList.AddPkLogs(builder, pk_logsOffset);
    return ResGetPkLogList.EndResGetPkLogList(builder);
  }

  public static void StartResGetPkLogList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPkLogs(FlatBufferBuilder builder, VectorOffset pkLogsOffset) { builder.AddOffset(0, pkLogsOffset.Value, 0); }
  public static VectorOffset CreatePkLogsVector(FlatBufferBuilder builder, Offset<PkLog>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePkLogsVectorBlock(FlatBufferBuilder builder, Offset<PkLog>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPkLogsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResGetPkLogList> EndResGetPkLogList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetPkLogList>(o);
  }
};

public struct ReqPkSneer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqPkSneer GetRootAsReqPkSneer(ByteBuffer _bb) { return GetRootAsReqPkSneer(_bb, new ReqPkSneer()); }
  public static ReqPkSneer GetRootAsReqPkSneer(ByteBuffer _bb, ReqPkSneer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqPkSneer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PkId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong UseItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqPkSneer> CreateReqPkSneer(FlatBufferBuilder builder,
      ulong pk_id = 0,
      ulong use_item_id = 0) {
    builder.StartObject(2);
    ReqPkSneer.AddUseItemId(builder, use_item_id);
    ReqPkSneer.AddPkId(builder, pk_id);
    return ReqPkSneer.EndReqPkSneer(builder);
  }

  public static void StartReqPkSneer(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPkId(FlatBufferBuilder builder, ulong pkId) { builder.AddUlong(0, pkId, 0); }
  public static void AddUseItemId(FlatBufferBuilder builder, ulong useItemId) { builder.AddUlong(1, useItemId, 0); }
  public static Offset<ReqPkSneer> EndReqPkSneer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqPkSneer>(o);
  }
};

public struct ResPkSneer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResPkSneer GetRootAsResPkSneer(ByteBuffer _bb) { return GetRootAsResPkSneer(_bb, new ResPkSneer()); }
  public static ResPkSneer GetRootAsResPkSneer(ByteBuffer _bb, ResPkSneer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResPkSneer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PkId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public AccountItemStack? ResultAccountStackItem { get { int o = __p.__offset(6); return o != 0 ? (AccountItemStack?)(new AccountItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ResPkSneer> CreateResPkSneer(FlatBufferBuilder builder,
      ulong pk_id = 0,
      Offset<AccountItemStack> result_account_stack_itemOffset = default(Offset<AccountItemStack>)) {
    builder.StartObject(2);
    ResPkSneer.AddPkId(builder, pk_id);
    ResPkSneer.AddResultAccountStackItem(builder, result_account_stack_itemOffset);
    return ResPkSneer.EndResPkSneer(builder);
  }

  public static void StartResPkSneer(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPkId(FlatBufferBuilder builder, ulong pkId) { builder.AddUlong(0, pkId, 0); }
  public static void AddResultAccountStackItem(FlatBufferBuilder builder, Offset<AccountItemStack> resultAccountStackItemOffset) { builder.AddOffset(1, resultAccountStackItemOffset.Value, 0); }
  public static Offset<ResPkSneer> EndResPkSneer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResPkSneer>(o);
  }
};

public struct ReqChangeNick : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqChangeNick GetRootAsReqChangeNick(ByteBuffer _bb) { return GetRootAsReqChangeNick(_bb, new ReqChangeNick()); }
  public static ReqChangeNick GetRootAsReqChangeNick(ByteBuffer _bb, ReqChangeNick obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqChangeNick __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint ItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ChangeNick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeNickBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetChangeNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetChangeNickArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ReqChangeNick> CreateReqChangeNick(FlatBufferBuilder builder,
      ulong item_id = 0,
      uint item_tid = 0,
      StringOffset change_nickOffset = default(StringOffset)) {
    builder.StartObject(3);
    ReqChangeNick.AddItemId(builder, item_id);
    ReqChangeNick.AddChangeNick(builder, change_nickOffset);
    ReqChangeNick.AddItemTid(builder, item_tid);
    return ReqChangeNick.EndReqChangeNick(builder);
  }

  public static void StartReqChangeNick(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, ulong itemId) { builder.AddUlong(0, itemId, 0); }
  public static void AddItemTid(FlatBufferBuilder builder, uint itemTid) { builder.AddUint(1, itemTid, 0); }
  public static void AddChangeNick(FlatBufferBuilder builder, StringOffset changeNickOffset) { builder.AddOffset(2, changeNickOffset.Value, 0); }
  public static Offset<ReqChangeNick> EndReqChangeNick(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqChangeNick>(o);
  }
};

public struct ResChangeNick : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResChangeNick GetRootAsResChangeNick(ByteBuffer _bb) { return GetRootAsResChangeNick(_bb, new ResChangeNick()); }
  public static ResChangeNick GetRootAsResChangeNick(ByteBuffer _bb, ResChangeNick obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResChangeNick __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ItemStack? RemainStack { get { int o = __p.__offset(4); return o != 0 ? (ItemStack?)(new ItemStack()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public string ChangeNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetChangeNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetChangeNickArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ResChangeNick> CreateResChangeNick(FlatBufferBuilder builder,
      Offset<ItemStack> remain_stackOffset = default(Offset<ItemStack>),
      StringOffset change_nickOffset = default(StringOffset)) {
    builder.StartObject(2);
    ResChangeNick.AddChangeNick(builder, change_nickOffset);
    ResChangeNick.AddRemainStack(builder, remain_stackOffset);
    return ResChangeNick.EndResChangeNick(builder);
  }

  public static void StartResChangeNick(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddRemainStack(FlatBufferBuilder builder, Offset<ItemStack> remainStackOffset) { builder.AddOffset(0, remainStackOffset.Value, 0); }
  public static void AddChangeNick(FlatBufferBuilder builder, StringOffset changeNickOffset) { builder.AddOffset(1, changeNickOffset.Value, 0); }
  public static Offset<ResChangeNick> EndResChangeNick(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResChangeNick>(o);
  }
};

public struct ReqCombineChangeNick : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCombineChangeNick GetRootAsReqCombineChangeNick(ByteBuffer _bb) { return GetRootAsReqCombineChangeNick(_bb, new ReqCombineChangeNick()); }
  public static ReqCombineChangeNick GetRootAsReqCombineChangeNick(ByteBuffer _bb, ReqCombineChangeNick obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCombineChangeNick __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong CharId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string ChangeNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeNickBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetChangeNickBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetChangeNickArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ReqCombineChangeNick> CreateReqCombineChangeNick(FlatBufferBuilder builder,
      ulong char_id = 0,
      StringOffset change_nickOffset = default(StringOffset)) {
    builder.StartObject(2);
    ReqCombineChangeNick.AddCharId(builder, char_id);
    ReqCombineChangeNick.AddChangeNick(builder, change_nickOffset);
    return ReqCombineChangeNick.EndReqCombineChangeNick(builder);
  }

  public static void StartReqCombineChangeNick(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCharId(FlatBufferBuilder builder, ulong charId) { builder.AddUlong(0, charId, 0); }
  public static void AddChangeNick(FlatBufferBuilder builder, StringOffset changeNickOffset) { builder.AddOffset(1, changeNickOffset.Value, 0); }
  public static Offset<ReqCombineChangeNick> EndReqCombineChangeNick(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCombineChangeNick>(o);
  }
};

public struct ResCombineChangeNick : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCombineChangeNick GetRootAsResCombineChangeNick(ByteBuffer _bb) { return GetRootAsResCombineChangeNick(_bb, new ResCombineChangeNick()); }
  public static ResCombineChangeNick GetRootAsResCombineChangeNick(ByteBuffer _bb, ResCombineChangeNick obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCombineChangeNick __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ChangeNick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChangeNickBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetChangeNickBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetChangeNickArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ResCombineChangeNick> CreateResCombineChangeNick(FlatBufferBuilder builder,
      StringOffset change_nickOffset = default(StringOffset)) {
    builder.StartObject(1);
    ResCombineChangeNick.AddChangeNick(builder, change_nickOffset);
    return ResCombineChangeNick.EndResCombineChangeNick(builder);
  }

  public static void StartResCombineChangeNick(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChangeNick(FlatBufferBuilder builder, StringOffset changeNickOffset) { builder.AddOffset(0, changeNickOffset.Value, 0); }
  public static Offset<ResCombineChangeNick> EndResCombineChangeNick(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCombineChangeNick>(o);
  }
};

public struct ReqClassChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqClassChange GetRootAsReqClassChange(ByteBuffer _bb) { return GetRootAsReqClassChange(_bb, new ReqClassChange()); }
  public static ReqClassChange GetRootAsReqClassChange(ByteBuffer _bb, ReqClassChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqClassChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ChangeCharTid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint UseItemTid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqClassChange> CreateReqClassChange(FlatBufferBuilder builder,
      uint change_char_tid = 0,
      uint use_item_tid = 0) {
    builder.StartObject(2);
    ReqClassChange.AddUseItemTid(builder, use_item_tid);
    ReqClassChange.AddChangeCharTid(builder, change_char_tid);
    return ReqClassChange.EndReqClassChange(builder);
  }

  public static void StartReqClassChange(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddChangeCharTid(FlatBufferBuilder builder, uint changeCharTid) { builder.AddUint(0, changeCharTid, 0); }
  public static void AddUseItemTid(FlatBufferBuilder builder, uint useItemTid) { builder.AddUint(1, useItemTid, 0); }
  public static Offset<ReqClassChange> EndReqClassChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqClassChange>(o);
  }
};

public struct ResClassChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResClassChange GetRootAsResClassChange(ByteBuffer _bb) { return GetRootAsResClassChange(_bb, new ResClassChange()); }
  public static ResClassChange GetRootAsResClassChange(ByteBuffer _bb, ResClassChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResClassChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResClassChange(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResClassChange> EndResClassChange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResClassChange>(o);
  }
};

public struct ReqSetSkillUseOrder : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSetSkillUseOrder GetRootAsReqSetSkillUseOrder(ByteBuffer _bb) { return GetRootAsReqSetSkillUseOrder(_bb, new ReqSetSkillUseOrder()); }
  public static ReqSetSkillUseOrder GetRootAsReqSetSkillUseOrder(ByteBuffer _bb, ReqSetSkillUseOrder obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSetSkillUseOrder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SkillUseOrder? SkillUseOrders(int j) { int o = __p.__offset(4); return o != 0 ? (SkillUseOrder?)(new SkillUseOrder()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillUseOrdersLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ReqSetSkillUseOrder> CreateReqSetSkillUseOrder(FlatBufferBuilder builder,
      VectorOffset skill_use_ordersOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ReqSetSkillUseOrder.AddSkillUseOrders(builder, skill_use_ordersOffset);
    return ReqSetSkillUseOrder.EndReqSetSkillUseOrder(builder);
  }

  public static void StartReqSetSkillUseOrder(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSkillUseOrders(FlatBufferBuilder builder, VectorOffset skillUseOrdersOffset) { builder.AddOffset(0, skillUseOrdersOffset.Value, 0); }
  public static VectorOffset CreateSkillUseOrdersVector(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillUseOrdersVectorBlock(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSkillUseOrdersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ReqSetSkillUseOrder> EndReqSetSkillUseOrder(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSetSkillUseOrder>(o);
  }
};

public struct ResSetSkillUseOrder : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSetSkillUseOrder GetRootAsResSetSkillUseOrder(ByteBuffer _bb) { return GetRootAsResSetSkillUseOrder(_bb, new ResSetSkillUseOrder()); }
  public static ResSetSkillUseOrder GetRootAsResSetSkillUseOrder(ByteBuffer _bb, ResSetSkillUseOrder obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSetSkillUseOrder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SkillUseOrder? SkillUseOrders(int j) { int o = __p.__offset(4); return o != 0 ? (SkillUseOrder?)(new SkillUseOrder()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SkillUseOrdersLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResSetSkillUseOrder> CreateResSetSkillUseOrder(FlatBufferBuilder builder,
      VectorOffset skill_use_ordersOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResSetSkillUseOrder.AddSkillUseOrders(builder, skill_use_ordersOffset);
    return ResSetSkillUseOrder.EndResSetSkillUseOrder(builder);
  }

  public static void StartResSetSkillUseOrder(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSkillUseOrders(FlatBufferBuilder builder, VectorOffset skillUseOrdersOffset) { builder.AddOffset(0, skillUseOrdersOffset.Value, 0); }
  public static VectorOffset CreateSkillUseOrdersVector(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSkillUseOrdersVectorBlock(FlatBufferBuilder builder, Offset<SkillUseOrder>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartSkillUseOrdersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResSetSkillUseOrder> EndResSetSkillUseOrder(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSetSkillUseOrder>(o);
  }
};

public struct ReqSetRuneOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSetRuneOption GetRootAsReqSetRuneOption(ByteBuffer _bb) { return GetRootAsReqSetRuneOption(_bb, new ReqSetRuneOption()); }
  public static ReqSetRuneOption GetRootAsReqSetRuneOption(ByteBuffer _bb, ReqSetRuneOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSetRuneOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneStageDropBitOption { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort RuneSellGradeOption { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RuneSellRuneGradeOption { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqSetRuneOption> CreateReqSetRuneOption(FlatBufferBuilder builder,
      ulong rune_stage_drop_bit_option = 0,
      ushort rune_sell_grade_option = 0,
      ushort rune_sell_rune_grade_option = 0) {
    builder.StartObject(3);
    ReqSetRuneOption.AddRuneStageDropBitOption(builder, rune_stage_drop_bit_option);
    ReqSetRuneOption.AddRuneSellRuneGradeOption(builder, rune_sell_rune_grade_option);
    ReqSetRuneOption.AddRuneSellGradeOption(builder, rune_sell_grade_option);
    return ReqSetRuneOption.EndReqSetRuneOption(builder);
  }

  public static void StartReqSetRuneOption(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddRuneStageDropBitOption(FlatBufferBuilder builder, ulong runeStageDropBitOption) { builder.AddUlong(0, runeStageDropBitOption, 0); }
  public static void AddRuneSellGradeOption(FlatBufferBuilder builder, ushort runeSellGradeOption) { builder.AddUshort(1, runeSellGradeOption, 0); }
  public static void AddRuneSellRuneGradeOption(FlatBufferBuilder builder, ushort runeSellRuneGradeOption) { builder.AddUshort(2, runeSellRuneGradeOption, 0); }
  public static Offset<ReqSetRuneOption> EndReqSetRuneOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSetRuneOption>(o);
  }
};

public struct ResSetRuneOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSetRuneOption GetRootAsResSetRuneOption(ByteBuffer _bb) { return GetRootAsResSetRuneOption(_bb, new ResSetRuneOption()); }
  public static ResSetRuneOption GetRootAsResSetRuneOption(ByteBuffer _bb, ResSetRuneOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSetRuneOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong RuneStageDropBitOption { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ushort RuneSellGradeOption { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort RuneSellRuneGradeOption { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResSetRuneOption> CreateResSetRuneOption(FlatBufferBuilder builder,
      ulong rune_stage_drop_bit_option = 0,
      ushort rune_sell_grade_option = 0,
      ushort rune_sell_rune_grade_option = 0) {
    builder.StartObject(3);
    ResSetRuneOption.AddRuneStageDropBitOption(builder, rune_stage_drop_bit_option);
    ResSetRuneOption.AddRuneSellRuneGradeOption(builder, rune_sell_rune_grade_option);
    ResSetRuneOption.AddRuneSellGradeOption(builder, rune_sell_grade_option);
    return ResSetRuneOption.EndResSetRuneOption(builder);
  }

  public static void StartResSetRuneOption(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddRuneStageDropBitOption(FlatBufferBuilder builder, ulong runeStageDropBitOption) { builder.AddUlong(0, runeStageDropBitOption, 0); }
  public static void AddRuneSellGradeOption(FlatBufferBuilder builder, ushort runeSellGradeOption) { builder.AddUshort(1, runeSellGradeOption, 0); }
  public static void AddRuneSellRuneGradeOption(FlatBufferBuilder builder, ushort runeSellRuneGradeOption) { builder.AddUshort(2, runeSellRuneGradeOption, 0); }
  public static Offset<ResSetRuneOption> EndResSetRuneOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSetRuneOption>(o);
  }
};

public struct ReqSetItemOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqSetItemOption GetRootAsReqSetItemOption(ByteBuffer _bb) { return GetRootAsReqSetItemOption(_bb, new ReqSetItemOption()); }
  public static ReqSetItemOption GetRootAsReqSetItemOption(ByteBuffer _bb, ReqSetItemOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqSetItemOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort ItemBreakGradeOption { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ReqSetItemOption> CreateReqSetItemOption(FlatBufferBuilder builder,
      ushort item_break_grade_option = 0) {
    builder.StartObject(1);
    ReqSetItemOption.AddItemBreakGradeOption(builder, item_break_grade_option);
    return ReqSetItemOption.EndReqSetItemOption(builder);
  }

  public static void StartReqSetItemOption(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddItemBreakGradeOption(FlatBufferBuilder builder, ushort itemBreakGradeOption) { builder.AddUshort(0, itemBreakGradeOption, 0); }
  public static Offset<ReqSetItemOption> EndReqSetItemOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqSetItemOption>(o);
  }
};

public struct ResSetItemOption : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResSetItemOption GetRootAsResSetItemOption(ByteBuffer _bb) { return GetRootAsResSetItemOption(_bb, new ResSetItemOption()); }
  public static ResSetItemOption GetRootAsResSetItemOption(ByteBuffer _bb, ResSetItemOption obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResSetItemOption __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort ItemBreakGradeOption { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<ResSetItemOption> CreateResSetItemOption(FlatBufferBuilder builder,
      ushort item_break_grade_option = 0) {
    builder.StartObject(1);
    ResSetItemOption.AddItemBreakGradeOption(builder, item_break_grade_option);
    return ResSetItemOption.EndResSetItemOption(builder);
  }

  public static void StartResSetItemOption(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddItemBreakGradeOption(FlatBufferBuilder builder, ushort itemBreakGradeOption) { builder.AddUshort(0, itemBreakGradeOption, 0); }
  public static Offset<ResSetItemOption> EndResSetItemOption(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResSetItemOption>(o);
  }
};

public struct ConnectInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ConnectInfo GetRootAsConnectInfo(ByteBuffer _bb) { return GetRootAsConnectInfo(_bb, new ConnectInfo()); }
  public static ConnectInfo GetRootAsConnectInfo(ByteBuffer _bb, ConnectInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ConnectInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Url { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUrlBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetUrlBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUrlArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ConnectInfo> CreateConnectInfo(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset urlOffset = default(StringOffset)) {
    builder.StartObject(2);
    ConnectInfo.AddUrl(builder, urlOffset);
    ConnectInfo.AddName(builder, nameOffset);
    return ConnectInfo.EndConnectInfo(builder);
  }

  public static void StartConnectInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddUrl(FlatBufferBuilder builder, StringOffset urlOffset) { builder.AddOffset(1, urlOffset.Value, 0); }
  public static Offset<ConnectInfo> EndConnectInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ConnectInfo>(o);
  }
};

public struct ServerInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ServerInfo GetRootAsServerInfo(ByteBuffer _bb) { return GetRootAsServerInfo(_bb, new ServerInfo()); }
  public static ServerInfo GetRootAsServerInfo(ByteBuffer _bb, ServerInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ServerInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public E_ServerTrafficStatus TrafficStatus { get { int o = __p.__offset(8); return o != 0 ? (E_ServerTrafficStatus)__p.bb.Get(o + __p.bb_pos) : E_ServerTrafficStatus.None; } }
  public uint ViewSort { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte IsNew { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte IsCreateCharacter { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong ServerOpenDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint TsOffset { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ConnectInfo? ConnectInfo(int j) { int o = __p.__offset(20); return o != 0 ? (ConnectInfo?)(new ConnectInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConnectInfoLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ServerInfo> CreateServerInfo(FlatBufferBuilder builder,
      uint id = 0,
      StringOffset nameOffset = default(StringOffset),
      E_ServerTrafficStatus traffic_status = E_ServerTrafficStatus.None,
      uint view_sort = 0,
      byte is_new = 0,
      byte is_create_character = 0,
      ulong server_open_dt = 0,
      uint ts_offset = 0,
      VectorOffset connect_infoOffset = default(VectorOffset)) {
    builder.StartObject(9);
    ServerInfo.AddServerOpenDt(builder, server_open_dt);
    ServerInfo.AddConnectInfo(builder, connect_infoOffset);
    ServerInfo.AddTsOffset(builder, ts_offset);
    ServerInfo.AddViewSort(builder, view_sort);
    ServerInfo.AddName(builder, nameOffset);
    ServerInfo.AddId(builder, id);
    ServerInfo.AddIsCreateCharacter(builder, is_create_character);
    ServerInfo.AddIsNew(builder, is_new);
    ServerInfo.AddTrafficStatus(builder, traffic_status);
    return ServerInfo.EndServerInfo(builder);
  }

  public static void StartServerInfo(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddTrafficStatus(FlatBufferBuilder builder, E_ServerTrafficStatus trafficStatus) { builder.AddByte(2, (byte)trafficStatus, 0); }
  public static void AddViewSort(FlatBufferBuilder builder, uint viewSort) { builder.AddUint(3, viewSort, 0); }
  public static void AddIsNew(FlatBufferBuilder builder, byte isNew) { builder.AddByte(4, isNew, 0); }
  public static void AddIsCreateCharacter(FlatBufferBuilder builder, byte isCreateCharacter) { builder.AddByte(5, isCreateCharacter, 0); }
  public static void AddServerOpenDt(FlatBufferBuilder builder, ulong serverOpenDt) { builder.AddUlong(6, serverOpenDt, 0); }
  public static void AddTsOffset(FlatBufferBuilder builder, uint tsOffset) { builder.AddUint(7, tsOffset, 0); }
  public static void AddConnectInfo(FlatBufferBuilder builder, VectorOffset connectInfoOffset) { builder.AddOffset(8, connectInfoOffset.Value, 0); }
  public static VectorOffset CreateConnectInfoVector(FlatBufferBuilder builder, Offset<ConnectInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConnectInfoVectorBlock(FlatBufferBuilder builder, Offset<ConnectInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartConnectInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ServerInfo> EndServerInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerInfo>(o);
  }
};

public struct CharacterSlim : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CharacterSlim GetRootAsCharacterSlim(ByteBuffer _bb) { return GetRootAsCharacterSlim(_bb, new CharacterSlim()); }
  public static CharacterSlim GetRootAsCharacterSlim(ByteBuffer _bb, CharacterSlim obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CharacterSlim __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string CharName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCharNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetCharNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCharNameArray() { return __p.__vector_as_array<byte>(6); }
  public uint CharTid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint CharLevel { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CharacterSlim> CreateCharacterSlim(FlatBufferBuilder builder,
      uint server_idx = 0,
      StringOffset char_nameOffset = default(StringOffset),
      uint char_tid = 0,
      uint char_level = 0) {
    builder.StartObject(4);
    CharacterSlim.AddCharLevel(builder, char_level);
    CharacterSlim.AddCharTid(builder, char_tid);
    CharacterSlim.AddCharName(builder, char_nameOffset);
    CharacterSlim.AddServerIdx(builder, server_idx);
    return CharacterSlim.EndCharacterSlim(builder);
  }

  public static void StartCharacterSlim(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddServerIdx(FlatBufferBuilder builder, uint serverIdx) { builder.AddUint(0, serverIdx, 0); }
  public static void AddCharName(FlatBufferBuilder builder, StringOffset charNameOffset) { builder.AddOffset(1, charNameOffset.Value, 0); }
  public static void AddCharTid(FlatBufferBuilder builder, uint charTid) { builder.AddUint(2, charTid, 0); }
  public static void AddCharLevel(FlatBufferBuilder builder, uint charLevel) { builder.AddUint(3, charLevel, 0); }
  public static Offset<CharacterSlim> EndCharacterSlim(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CharacterSlim>(o);
  }
};

public struct ReqServerList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqServerList GetRootAsReqServerList(ByteBuffer _bb) { return GetRootAsReqServerList(_bb, new ReqServerList()); }
  public static ReqServerList GetRootAsReqServerList(ByteBuffer _bb, ReqServerList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqServerList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartReqServerList(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ReqServerList> EndReqServerList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqServerList>(o);
  }
};

public struct ResServerList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResServerList GetRootAsResServerList(ByteBuffer _bb) { return GetRootAsResServerList(_bb, new ResServerList()); }
  public static ResServerList GetRootAsResServerList(ByteBuffer _bb, ResServerList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResServerList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ServerTsMs { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ServerInfo? ServerList(int j) { int o = __p.__offset(6); return o != 0 ? (ServerInfo?)(new ServerInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ServerListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResServerList> CreateResServerList(FlatBufferBuilder builder,
      ulong server_ts_ms = 0,
      VectorOffset server_listOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResServerList.AddServerTsMs(builder, server_ts_ms);
    ResServerList.AddServerList(builder, server_listOffset);
    return ResServerList.EndResServerList(builder);
  }

  public static void StartResServerList(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddServerTsMs(FlatBufferBuilder builder, ulong serverTsMs) { builder.AddUlong(0, serverTsMs, 0); }
  public static void AddServerList(FlatBufferBuilder builder, VectorOffset serverListOffset) { builder.AddOffset(1, serverListOffset.Value, 0); }
  public static VectorOffset CreateServerListVector(FlatBufferBuilder builder, Offset<ServerInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateServerListVectorBlock(FlatBufferBuilder builder, Offset<ServerInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartServerListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResServerList> EndResServerList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResServerList>(o);
  }
};

public struct ReqGetAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqGetAccount GetRootAsReqGetAccount(ByteBuffer _bb) { return GetRootAsReqGetAccount(_bb, new ReqGetAccount()); }
  public static ReqGetAccount GetRootAsReqGetAccount(ByteBuffer _bb, ReqGetAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqGetAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PfSessionToken { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqGetAccount> CreateReqGetAccount(FlatBufferBuilder builder,
      StringOffset pf_session_tokenOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqGetAccount.AddPfSessionToken(builder, pf_session_tokenOffset);
    return ReqGetAccount.EndReqGetAccount(builder);
  }

  public static void StartReqGetAccount(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(0, pfSessionTokenOffset.Value, 0); }
  public static Offset<ReqGetAccount> EndReqGetAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqGetAccount>(o);
  }
};

public struct ResGetAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResGetAccount GetRootAsResGetAccount(ByteBuffer _bb) { return GetRootAsResGetAccount(_bb, new ResGetAccount()); }
  public static ResGetAccount GetRootAsResGetAccount(ByteBuffer _bb, ResGetAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResGetAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint LastLoginServerIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public long OptionBit { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string Nid { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNidBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetNidBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNidArray() { return __p.__vector_as_array<byte>(10); }
  public string Gnid { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGnidBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetGnidBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetGnidArray() { return __p.__vector_as_array<byte>(12); }
  public E_AccountStateType State { get { int o = __p.__offset(14); return o != 0 ? (E_AccountStateType)__p.bb.Get(o + __p.bb_pos) : E_AccountStateType.Active; } }
  public ulong LeaveEndDt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResGetAccount> CreateResGetAccount(FlatBufferBuilder builder,
      ulong user_id = 0,
      uint last_login_server_idx = 0,
      long option_bit = 0,
      StringOffset nidOffset = default(StringOffset),
      StringOffset gnidOffset = default(StringOffset),
      E_AccountStateType state = E_AccountStateType.Active,
      ulong leave_end_dt = 0) {
    builder.StartObject(7);
    ResGetAccount.AddLeaveEndDt(builder, leave_end_dt);
    ResGetAccount.AddOptionBit(builder, option_bit);
    ResGetAccount.AddUserId(builder, user_id);
    ResGetAccount.AddGnid(builder, gnidOffset);
    ResGetAccount.AddNid(builder, nidOffset);
    ResGetAccount.AddLastLoginServerIdx(builder, last_login_server_idx);
    ResGetAccount.AddState(builder, state);
    return ResGetAccount.EndResGetAccount(builder);
  }

  public static void StartResGetAccount(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddLastLoginServerIdx(FlatBufferBuilder builder, uint lastLoginServerIdx) { builder.AddUint(1, lastLoginServerIdx, 0); }
  public static void AddOptionBit(FlatBufferBuilder builder, long optionBit) { builder.AddLong(2, optionBit, 0); }
  public static void AddNid(FlatBufferBuilder builder, StringOffset nidOffset) { builder.AddOffset(3, nidOffset.Value, 0); }
  public static void AddGnid(FlatBufferBuilder builder, StringOffset gnidOffset) { builder.AddOffset(4, gnidOffset.Value, 0); }
  public static void AddState(FlatBufferBuilder builder, E_AccountStateType state) { builder.AddByte(5, (byte)state, 0); }
  public static void AddLeaveEndDt(FlatBufferBuilder builder, ulong leaveEndDt) { builder.AddUlong(6, leaveEndDt, 0); }
  public static Offset<ResGetAccount> EndResGetAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResGetAccount>(o);
  }
};

public struct ReqServerCharList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqServerCharList GetRootAsReqServerCharList(ByteBuffer _bb) { return GetRootAsReqServerCharList(_bb, new ReqServerCharList()); }
  public static ReqServerCharList GetRootAsReqServerCharList(ByteBuffer _bb, ReqServerCharList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqServerCharList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PfSessionToken { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqServerCharList> CreateReqServerCharList(FlatBufferBuilder builder,
      StringOffset pf_session_tokenOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqServerCharList.AddPfSessionToken(builder, pf_session_tokenOffset);
    return ReqServerCharList.EndReqServerCharList(builder);
  }

  public static void StartReqServerCharList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(0, pfSessionTokenOffset.Value, 0); }
  public static Offset<ReqServerCharList> EndReqServerCharList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqServerCharList>(o);
  }
};

public struct ResServerCharList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResServerCharList GetRootAsResServerCharList(ByteBuffer _bb) { return GetRootAsResServerCharList(_bb, new ResServerCharList()); }
  public static ResServerCharList GetRootAsResServerCharList(ByteBuffer _bb, ResServerCharList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResServerCharList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharacterSlim? CharList(int j) { int o = __p.__offset(4); return o != 0 ? (CharacterSlim?)(new CharacterSlim()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CharListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResServerCharList> CreateResServerCharList(FlatBufferBuilder builder,
      VectorOffset char_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ResServerCharList.AddCharList(builder, char_listOffset);
    return ResServerCharList.EndResServerCharList(builder);
  }

  public static void StartResServerCharList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCharList(FlatBufferBuilder builder, VectorOffset charListOffset) { builder.AddOffset(0, charListOffset.Value, 0); }
  public static VectorOffset CreateCharListVector(FlatBufferBuilder builder, Offset<CharacterSlim>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCharListVectorBlock(FlatBufferBuilder builder, Offset<CharacterSlim>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCharListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResServerCharList> EndResServerCharList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResServerCharList>(o);
  }
};

public struct ReqCreateAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqCreateAccount GetRootAsReqCreateAccount(ByteBuffer _bb) { return GetRootAsReqCreateAccount(_bb, new ReqCreateAccount()); }
  public static ReqCreateAccount GetRootAsReqCreateAccount(ByteBuffer _bb, ReqCreateAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqCreateAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PfSessionToken { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(4); }
  public string Os { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(6); }
  public string Osv { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsvBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetOsvBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOsvArray() { return __p.__vector_as_array<byte>(8); }
  public string Dm { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDmBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetDmBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDmArray() { return __p.__vector_as_array<byte>(10); }
  public string Lang { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetLangBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLangArray() { return __p.__vector_as_array<byte>(12); }
  public string LangGame { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangGameBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetLangGameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetLangGameArray() { return __p.__vector_as_array<byte>(14); }
  public string V { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetVBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetVArray() { return __p.__vector_as_array<byte>(16); }
  public string Rf { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRfBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetRfBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetRfArray() { return __p.__vector_as_array<byte>(18); }
  public string Sk { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSkBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetSkBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetSkArray() { return __p.__vector_as_array<byte>(20); }
  public string Platform { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlatformBytes() { return __p.__vector_as_span(22); }
#else
  public ArraySegment<byte>? GetPlatformBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetPlatformArray() { return __p.__vector_as_array<byte>(22); }
  public string Region { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRegionBytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetRegionBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetRegionArray() { return __p.__vector_as_array<byte>(24); }

  public static Offset<ReqCreateAccount> CreateReqCreateAccount(FlatBufferBuilder builder,
      StringOffset pf_session_tokenOffset = default(StringOffset),
      StringOffset osOffset = default(StringOffset),
      StringOffset osvOffset = default(StringOffset),
      StringOffset dmOffset = default(StringOffset),
      StringOffset langOffset = default(StringOffset),
      StringOffset lang_gameOffset = default(StringOffset),
      StringOffset vOffset = default(StringOffset),
      StringOffset rfOffset = default(StringOffset),
      StringOffset skOffset = default(StringOffset),
      StringOffset platformOffset = default(StringOffset),
      StringOffset regionOffset = default(StringOffset)) {
    builder.StartObject(11);
    ReqCreateAccount.AddRegion(builder, regionOffset);
    ReqCreateAccount.AddPlatform(builder, platformOffset);
    ReqCreateAccount.AddSk(builder, skOffset);
    ReqCreateAccount.AddRf(builder, rfOffset);
    ReqCreateAccount.AddV(builder, vOffset);
    ReqCreateAccount.AddLangGame(builder, lang_gameOffset);
    ReqCreateAccount.AddLang(builder, langOffset);
    ReqCreateAccount.AddDm(builder, dmOffset);
    ReqCreateAccount.AddOsv(builder, osvOffset);
    ReqCreateAccount.AddOs(builder, osOffset);
    ReqCreateAccount.AddPfSessionToken(builder, pf_session_tokenOffset);
    return ReqCreateAccount.EndReqCreateAccount(builder);
  }

  public static void StartReqCreateAccount(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(0, pfSessionTokenOffset.Value, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(1, osOffset.Value, 0); }
  public static void AddOsv(FlatBufferBuilder builder, StringOffset osvOffset) { builder.AddOffset(2, osvOffset.Value, 0); }
  public static void AddDm(FlatBufferBuilder builder, StringOffset dmOffset) { builder.AddOffset(3, dmOffset.Value, 0); }
  public static void AddLang(FlatBufferBuilder builder, StringOffset langOffset) { builder.AddOffset(4, langOffset.Value, 0); }
  public static void AddLangGame(FlatBufferBuilder builder, StringOffset langGameOffset) { builder.AddOffset(5, langGameOffset.Value, 0); }
  public static void AddV(FlatBufferBuilder builder, StringOffset vOffset) { builder.AddOffset(6, vOffset.Value, 0); }
  public static void AddRf(FlatBufferBuilder builder, StringOffset rfOffset) { builder.AddOffset(7, rfOffset.Value, 0); }
  public static void AddSk(FlatBufferBuilder builder, StringOffset skOffset) { builder.AddOffset(8, skOffset.Value, 0); }
  public static void AddPlatform(FlatBufferBuilder builder, StringOffset platformOffset) { builder.AddOffset(9, platformOffset.Value, 0); }
  public static void AddRegion(FlatBufferBuilder builder, StringOffset regionOffset) { builder.AddOffset(10, regionOffset.Value, 0); }
  public static Offset<ReqCreateAccount> EndReqCreateAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqCreateAccount>(o);
  }
};

public struct ResCreateAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResCreateAccount GetRootAsResCreateAccount(ByteBuffer _bb) { return GetRootAsResCreateAccount(_bb, new ResCreateAccount()); }
  public static ResCreateAccount GetRootAsResCreateAccount(ByteBuffer _bb, ResCreateAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResCreateAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Nid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNidBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNidArray() { return __p.__vector_as_array<byte>(6); }
  public string Gnid { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGnidBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetGnidBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetGnidArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ResCreateAccount> CreateResCreateAccount(FlatBufferBuilder builder,
      ulong user_id = 0,
      StringOffset nidOffset = default(StringOffset),
      StringOffset gnidOffset = default(StringOffset)) {
    builder.StartObject(3);
    ResCreateAccount.AddUserId(builder, user_id);
    ResCreateAccount.AddGnid(builder, gnidOffset);
    ResCreateAccount.AddNid(builder, nidOffset);
    return ResCreateAccount.EndResCreateAccount(builder);
  }

  public static void StartResCreateAccount(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddNid(FlatBufferBuilder builder, StringOffset nidOffset) { builder.AddOffset(1, nidOffset.Value, 0); }
  public static void AddGnid(FlatBufferBuilder builder, StringOffset gnidOffset) { builder.AddOffset(2, gnidOffset.Value, 0); }
  public static Offset<ResCreateAccount> EndResCreateAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResCreateAccount>(o);
  }
};

public struct ReqLoginAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqLoginAccount GetRootAsReqLoginAccount(ByteBuffer _bb) { return GetRootAsReqLoginAccount(_bb, new ReqLoginAccount()); }
  public static ReqLoginAccount GetRootAsReqLoginAccount(ByteBuffer _bb, ReqLoginAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqLoginAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint ProtocolVersion { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string PfSessionToken { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(8); }
  public string Os { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(10); }
  public string Osv { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsvBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetOsvBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetOsvArray() { return __p.__vector_as_array<byte>(12); }
  public string Dm { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDmBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetDmBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDmArray() { return __p.__vector_as_array<byte>(14); }
  public string Lang { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetLangBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetLangArray() { return __p.__vector_as_array<byte>(16); }
  public string LangGame { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLangGameBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetLangGameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetLangGameArray() { return __p.__vector_as_array<byte>(18); }
  public string V { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetVBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetVArray() { return __p.__vector_as_array<byte>(20); }
  public string Sk { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSkBytes() { return __p.__vector_as_span(22); }
#else
  public ArraySegment<byte>? GetSkBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetSkArray() { return __p.__vector_as_array<byte>(22); }
  public string Platform { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlatformBytes() { return __p.__vector_as_span(24); }
#else
  public ArraySegment<byte>? GetPlatformBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetPlatformArray() { return __p.__vector_as_array<byte>(24); }
  public bool OsModulation { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Emulator { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint LoadingTime { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ReqLoginAccount> CreateReqLoginAccount(FlatBufferBuilder builder,
      byte server_idx = 0,
      uint protocol_version = 0,
      StringOffset pf_session_tokenOffset = default(StringOffset),
      StringOffset osOffset = default(StringOffset),
      StringOffset osvOffset = default(StringOffset),
      StringOffset dmOffset = default(StringOffset),
      StringOffset langOffset = default(StringOffset),
      StringOffset lang_gameOffset = default(StringOffset),
      StringOffset vOffset = default(StringOffset),
      StringOffset skOffset = default(StringOffset),
      StringOffset platformOffset = default(StringOffset),
      bool os_modulation = false,
      bool emulator = false,
      uint loading_time = 0) {
    builder.StartObject(14);
    ReqLoginAccount.AddLoadingTime(builder, loading_time);
    ReqLoginAccount.AddPlatform(builder, platformOffset);
    ReqLoginAccount.AddSk(builder, skOffset);
    ReqLoginAccount.AddV(builder, vOffset);
    ReqLoginAccount.AddLangGame(builder, lang_gameOffset);
    ReqLoginAccount.AddLang(builder, langOffset);
    ReqLoginAccount.AddDm(builder, dmOffset);
    ReqLoginAccount.AddOsv(builder, osvOffset);
    ReqLoginAccount.AddOs(builder, osOffset);
    ReqLoginAccount.AddPfSessionToken(builder, pf_session_tokenOffset);
    ReqLoginAccount.AddProtocolVersion(builder, protocol_version);
    ReqLoginAccount.AddEmulator(builder, emulator);
    ReqLoginAccount.AddOsModulation(builder, os_modulation);
    ReqLoginAccount.AddServerIdx(builder, server_idx);
    return ReqLoginAccount.EndReqLoginAccount(builder);
  }

  public static void StartReqLoginAccount(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddServerIdx(FlatBufferBuilder builder, byte serverIdx) { builder.AddByte(0, serverIdx, 0); }
  public static void AddProtocolVersion(FlatBufferBuilder builder, uint protocolVersion) { builder.AddUint(1, protocolVersion, 0); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(2, pfSessionTokenOffset.Value, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(3, osOffset.Value, 0); }
  public static void AddOsv(FlatBufferBuilder builder, StringOffset osvOffset) { builder.AddOffset(4, osvOffset.Value, 0); }
  public static void AddDm(FlatBufferBuilder builder, StringOffset dmOffset) { builder.AddOffset(5, dmOffset.Value, 0); }
  public static void AddLang(FlatBufferBuilder builder, StringOffset langOffset) { builder.AddOffset(6, langOffset.Value, 0); }
  public static void AddLangGame(FlatBufferBuilder builder, StringOffset langGameOffset) { builder.AddOffset(7, langGameOffset.Value, 0); }
  public static void AddV(FlatBufferBuilder builder, StringOffset vOffset) { builder.AddOffset(8, vOffset.Value, 0); }
  public static void AddSk(FlatBufferBuilder builder, StringOffset skOffset) { builder.AddOffset(9, skOffset.Value, 0); }
  public static void AddPlatform(FlatBufferBuilder builder, StringOffset platformOffset) { builder.AddOffset(10, platformOffset.Value, 0); }
  public static void AddOsModulation(FlatBufferBuilder builder, bool osModulation) { builder.AddBool(11, osModulation, false); }
  public static void AddEmulator(FlatBufferBuilder builder, bool emulator) { builder.AddBool(12, emulator, false); }
  public static void AddLoadingTime(FlatBufferBuilder builder, uint loadingTime) { builder.AddUint(13, loadingTime, 0); }
  public static Offset<ReqLoginAccount> EndReqLoginAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqLoginAccount>(o);
  }
};

public struct ResLoginAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResLoginAccount GetRootAsResLoginAccount(ByteBuffer _bb) { return GetRootAsResLoginAccount(_bb, new ResLoginAccount()); }
  public static ResLoginAccount GetRootAsResLoginAccount(ByteBuffer _bb, ResLoginAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResLoginAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint LastLoginServerIdx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public long OptionBit { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public uint WaitQueueCnt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong BlockExpireDt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string BlockViewStr { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBlockViewStrBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetBlockViewStrBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetBlockViewStrArray() { return __p.__vector_as_array<byte>(14); }
  public ulong ServerTsMs { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ResLoginAccount> CreateResLoginAccount(FlatBufferBuilder builder,
      ulong user_id = 0,
      uint last_login_server_idx = 0,
      long option_bit = 0,
      uint wait_queue_cnt = 0,
      ulong block_expire_dt = 0,
      StringOffset block_view_strOffset = default(StringOffset),
      ulong server_ts_ms = 0) {
    builder.StartObject(7);
    ResLoginAccount.AddServerTsMs(builder, server_ts_ms);
    ResLoginAccount.AddBlockExpireDt(builder, block_expire_dt);
    ResLoginAccount.AddOptionBit(builder, option_bit);
    ResLoginAccount.AddUserId(builder, user_id);
    ResLoginAccount.AddBlockViewStr(builder, block_view_strOffset);
    ResLoginAccount.AddWaitQueueCnt(builder, wait_queue_cnt);
    ResLoginAccount.AddLastLoginServerIdx(builder, last_login_server_idx);
    return ResLoginAccount.EndResLoginAccount(builder);
  }

  public static void StartResLoginAccount(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(0, userId, 0); }
  public static void AddLastLoginServerIdx(FlatBufferBuilder builder, uint lastLoginServerIdx) { builder.AddUint(1, lastLoginServerIdx, 0); }
  public static void AddOptionBit(FlatBufferBuilder builder, long optionBit) { builder.AddLong(2, optionBit, 0); }
  public static void AddWaitQueueCnt(FlatBufferBuilder builder, uint waitQueueCnt) { builder.AddUint(3, waitQueueCnt, 0); }
  public static void AddBlockExpireDt(FlatBufferBuilder builder, ulong blockExpireDt) { builder.AddUlong(4, blockExpireDt, 0); }
  public static void AddBlockViewStr(FlatBufferBuilder builder, StringOffset blockViewStrOffset) { builder.AddOffset(5, blockViewStrOffset.Value, 0); }
  public static void AddServerTsMs(FlatBufferBuilder builder, ulong serverTsMs) { builder.AddUlong(6, serverTsMs, 0); }
  public static Offset<ResLoginAccount> EndResLoginAccount(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResLoginAccount>(o);
  }
};

public struct ReqLoginWaitUsers : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqLoginWaitUsers GetRootAsReqLoginWaitUsers(ByteBuffer _bb) { return GetRootAsReqLoginWaitUsers(_bb, new ReqLoginWaitUsers()); }
  public static ReqLoginWaitUsers GetRootAsReqLoginWaitUsers(ByteBuffer _bb, ReqLoginWaitUsers obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqLoginWaitUsers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ServerIdx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ulong UserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<ReqLoginWaitUsers> CreateReqLoginWaitUsers(FlatBufferBuilder builder,
      byte server_idx = 0,
      ulong user_id = 0) {
    builder.StartObject(2);
    ReqLoginWaitUsers.AddUserId(builder, user_id);
    ReqLoginWaitUsers.AddServerIdx(builder, server_idx);
    return ReqLoginWaitUsers.EndReqLoginWaitUsers(builder);
  }

  public static void StartReqLoginWaitUsers(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddServerIdx(FlatBufferBuilder builder, byte serverIdx) { builder.AddByte(0, serverIdx, 0); }
  public static void AddUserId(FlatBufferBuilder builder, ulong userId) { builder.AddUlong(1, userId, 0); }
  public static Offset<ReqLoginWaitUsers> EndReqLoginWaitUsers(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqLoginWaitUsers>(o);
  }
};

public struct ResLoginWaitUsers : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResLoginWaitUsers GetRootAsResLoginWaitUsers(ByteBuffer _bb) { return GetRootAsResLoginWaitUsers(_bb, new ResLoginWaitUsers()); }
  public static ResLoginWaitUsers GetRootAsResLoginWaitUsers(ByteBuffer _bb, ResLoginWaitUsers obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResLoginWaitUsers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint LoginWaitUsers { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool IsContinue { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public uint Rndkey { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<ResLoginWaitUsers> CreateResLoginWaitUsers(FlatBufferBuilder builder,
      uint login_wait_users = 0,
      bool is_continue = false,
      uint rndkey = 0) {
    builder.StartObject(3);
    ResLoginWaitUsers.AddRndkey(builder, rndkey);
    ResLoginWaitUsers.AddLoginWaitUsers(builder, login_wait_users);
    ResLoginWaitUsers.AddIsContinue(builder, is_continue);
    return ResLoginWaitUsers.EndResLoginWaitUsers(builder);
  }

  public static void StartResLoginWaitUsers(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddLoginWaitUsers(FlatBufferBuilder builder, uint loginWaitUsers) { builder.AddUint(0, loginWaitUsers, 0); }
  public static void AddIsContinue(FlatBufferBuilder builder, bool isContinue) { builder.AddBool(1, isContinue, false); }
  public static void AddRndkey(FlatBufferBuilder builder, uint rndkey) { builder.AddUint(2, rndkey, 0); }
  public static Offset<ResLoginWaitUsers> EndResLoginWaitUsers(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResLoginWaitUsers>(o);
  }
};

public struct ReqAccountLeaveCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReqAccountLeaveCancel GetRootAsReqAccountLeaveCancel(ByteBuffer _bb) { return GetRootAsReqAccountLeaveCancel(_bb, new ReqAccountLeaveCancel()); }
  public static ReqAccountLeaveCancel GetRootAsReqAccountLeaveCancel(ByteBuffer _bb, ReqAccountLeaveCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReqAccountLeaveCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PfSessionToken { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPfSessionTokenBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetPfSessionTokenBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPfSessionTokenArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ReqAccountLeaveCancel> CreateReqAccountLeaveCancel(FlatBufferBuilder builder,
      StringOffset pf_session_tokenOffset = default(StringOffset)) {
    builder.StartObject(1);
    ReqAccountLeaveCancel.AddPfSessionToken(builder, pf_session_tokenOffset);
    return ReqAccountLeaveCancel.EndReqAccountLeaveCancel(builder);
  }

  public static void StartReqAccountLeaveCancel(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPfSessionToken(FlatBufferBuilder builder, StringOffset pfSessionTokenOffset) { builder.AddOffset(0, pfSessionTokenOffset.Value, 0); }
  public static Offset<ReqAccountLeaveCancel> EndReqAccountLeaveCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReqAccountLeaveCancel>(o);
  }
};

public struct ResAccountLeaveCancel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAccountLeaveCancel GetRootAsResAccountLeaveCancel(ByteBuffer _bb) { return GetRootAsResAccountLeaveCancel(_bb, new ResAccountLeaveCancel()); }
  public static ResAccountLeaveCancel GetRootAsResAccountLeaveCancel(ByteBuffer _bb, ResAccountLeaveCancel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAccountLeaveCancel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResAccountLeaveCancel(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ResAccountLeaveCancel> EndResAccountLeaveCancel(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAccountLeaveCancel>(o);
  }
};


}
